{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4316b583-90ef-465e-9e76-4dc5267807a5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9cc74da4-2847-442d-ab96-7a11ccdd0f2b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19849a98-de18-4519-a84a-cc7325597b9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "086bb3d4-c55e-4f13-853a-f9c9f04b873c"
                }
              }
            ]
          },
          {
            "id": "8fa341ed-6467-4e83-a6c7-854ba418b0d0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd3dcd95-7d8f-45af-b8db-3365a71e2638",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2575229b-9f39-4ace-b4b4-dae84dad9705"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8c1e70d-304b-4575-92cd-63ecf39d70f9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "117be404-0ee7-49b7-9045-3b9b1bf74bfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45b57255-a84c-47ef-8fe3-fbc99a2561ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c70dd4b-7242-4b0f-b011-789fd92b07e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e65876b-0234-4cf6-87b7-5c5a51674ae2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f80a837b-43ac-4849-aecf-2cdd5b27b152",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb3d693d-4814-4bd4-a5b2-5dccaa930b0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "febfbfcb-1965-41ff-a5c2-d12823c4a29b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35f07c8a-7be1-4ed6-8540-64abcc599c65"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39feb4dd-5208-4d03-8a60-574b78b653dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a77e469f-a46b-456d-b15b-e1912bee5f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81460793-9556-448c-8648-b1a43edc61dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56df98ba-b83f-420e-ada7-fea8f8596bde"
            }
          }
        ]
      },
      {
        "id": "addd8d74-697a-4b95-964c-ed1f1e2a3c3f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9713bab7-7672-49dc-a231-01f3838dd7e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c36076bc-802c-47d1-9b10-0c25ee796c5f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9981f752-6821-4fb4-9405-eee77c50c396",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71fb406-352d-4265-a53c-f7dbb140eb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8597dd2b-2bc9-42bb-af79-90edb6d86c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fbdb8c-9dba-4111-9af5-64efb73d70b7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7869c254-fc9a-478d-b5bb-5bb6f4ed60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdf31f89-7dea-4760-a26c-d04c3f00c948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffea326-5d5f-48f1-9140-521ae1b333d4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2334ed7e-6a28-45cd-87c9-dcd9b6828b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85a3a0ff-a52e-41f4-b3c9-7cb72a8e5762"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc4dcd0a-960f-4e2b-bf72-1f60da0ee908",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "061a852b-a431-483d-930f-f7c3d4067c1f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250614c3-55f6-488a-b1b5-31a5276ebd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b14f1ba-a2cd-47a0-82a3-79900b46f310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5970bc6-90ec-4f03-bfee-6d10ae948099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed87ebef-589d-4938-89cd-f229756db96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a0c001-adce-4bbb-a8a2-2c9029dd2c00",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd56428-72b9-474c-925c-e42659225cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bf1863d-b2ab-4c5a-8533-2d58487aca76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebc6c00-2b6a-40c6-a749-3a25541143ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fd31f83b-0e40-4ba7-ade1-bc8c26e2b8ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e472ee5-4702-4646-a8e1-e310ad7e49e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2168f0c4-a71d-417f-b107-d931074ec57e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f59c4d-d37a-49f2-b1e7-9e22ac177c68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "78e14f3f-7fab-4350-b6fe-5eb85ec0c7e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6574470-734e-4236-b02e-233063f3fd91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "90d54ca0-8044-4441-aee7-465aad8c4c6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04bafe02-7686-4022-9bb6-7a9007cab7d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "905f2ef6-e834-478d-b22d-1485a43fd3aa"
            }
          }
        ]
      },
      {
        "id": "c9b0b31a-9ab4-4ddc-bdb2-4c56ab0b8c05",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "07bd5057-188c-4913-a859-7641077e6a6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f57eb5da-94b1-4080-93ac-f741fa1eaf8c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cbcca504-6347-4233-b964-0da7c567d4d8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e324cadd-385f-40ca-9a46-828cdd38f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4cb817-8f42-43dc-8a8d-e94f6b24353b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125cd40-f287-4e6b-9e5c-33c5c43791fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f294d2-b86e-4070-96b4-f73e7e9eda34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951f456a-cef7-45c2-bf40-0755aacd9da7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec2d0b-d0c9-4d0e-be9a-a16d31d890a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5c9d68-b2de-4996-821f-775e617ac441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0586129a-7646-4cb5-b0c6-b14cb46beebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78daa595-f7c4-4678-9d92-2d32a2d19a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11740acd-25c2-4e07-81ce-35cf74befe9a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fd3c44-cfe5-4d19-baa4-7ecc4373c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6f9e9a-533d-44b1-8022-ee1c8c2e4f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fc556c-eb0e-447c-8957-9573ab6e1e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "031df9ef-ab81-49fe-a793-9f0a95f4dcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951f207b-b5df-4cba-b162-c0fbf7b31708",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362534e1-0579-457a-8ed6-f04554ab9708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bfd6c2-f3e6-4f02-9026-9ec51579da20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457423ab-07fd-41e1-b6a3-62a879bdc49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a26fac43-5b8b-4d03-8014-b052ab034df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee20c677-b3a3-4ae3-9ced-76d7b0eee209",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb4ac5c-f17c-411d-9732-21acfe88202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30d2975-9103-4e21-8c10-640a6ab07e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b951b15-c3ca-4cff-a39b-308ca05bd906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e987dcdb-3d10-4a31-9412-c8b764b72be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59017130-ca0b-45f0-abdd-d5c774664fe2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f688acc-45f0-4877-b78c-a29611ff608f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5b72c0-ee6f-49fe-9127-691b3506bbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae7c38b-d6b8-419c-8274-e88dad0263e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa83b32-e4e9-442f-92ef-d445c06f4993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6165095d-80c1-4941-8682-5eb20be2f75d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e20da6e-f1a6-4801-811e-aa55c196c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a317a7-8ce9-48f8-9034-f571db8f4051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9661a23e-e1b2-4376-8b9f-aaa25a8d3711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5236b205-35a0-45f1-a848-1e8a2d4a77b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677d3e56-633c-49ce-bccb-ceb5a1412b1b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2325ad5a-2fce-4a49-b880-8970b8375ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd4f377-7122-4402-9266-0adc5c003f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84271a0f-b3e7-49a3-9ec8-f768c91c7d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc11e82f-41d3-4ed3-a3c1-f026cc9543c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6563539-469f-4ef1-ab44-650950872a5a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72c5f29-eea1-4516-a92d-c8cca54715cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0353e9b1-a99a-47fe-9db1-22cae4b5afb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f26a242-72dd-48fe-895e-4fe1fe30ae11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec034941-975c-4743-bac7-6285f6c77fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba60ea55-399d-4605-8303-7fa829009864",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfde477-99d4-4822-81e0-370bf4936bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93274bb-cf5c-4f6f-a4d3-48d2aca5bdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7983855f-64b2-4d4d-afac-d35151989840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e78497b-a668-48f3-bf8b-24f5ea053d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195dd27c-875b-4dd8-b77c-208675157a0a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6aabc2-93ed-498d-9ecd-c5e5bdfad393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2f7e16-620c-4196-ae06-d6c601683a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6885eebb-d6b5-49af-98e1-26b8dffffbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f2da699-02d2-4789-b164-61d21b3e8feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc0117b-cce4-4a58-8067-144506e4b3ec",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764e2202-b7a4-4c05-8bd7-9b856a4d322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5012b53f-6211-42dd-aeae-16a7b9e81941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091df55-5013-473a-b66a-938b5f0f2e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ba427d0-e6a5-4469-8f99-e98f06b66aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdfa7ae-8343-4588-aca0-0f1b7ddb60ff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78158c0b-2727-496c-93e2-65fc6e6b755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd401f4-59f3-4ee2-b4ae-e657da5f99d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccd3b77-82ed-46d2-9947-412746eccf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f618f3-0b1b-49f0-87e2-9b5bee545d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2463fc5d-0966-4ab4-9175-76f263304abe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48856e1-1512-4feb-a0cb-df62fb9011d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e907035-61bf-4b1a-a839-428fa00564ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6986623e-7de9-45b1-aacc-43566e9ef81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386bea8b-bf40-436b-b56c-a0bfa9562531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c53930-c7f2-43f3-847f-e23d872957ce",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4988772-cde6-458e-95a0-f32505b34fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e869e4e7-ff31-403b-b699-9869bb8fe28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c14ea9b-60c8-4353-82a1-b5988925118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc9b148e-4889-421b-a6cc-498bedca4827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4de8fc-8ba4-4979-85e8-914ab717a338",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d8836e-9210-4e58-ac75-87c2464b98e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e834146-aca0-4407-8d9f-c1f76d7871d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e96f9e0-93c6-49c2-89a1-56f5d67777b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "332a4dfc-fefd-4254-b288-9395a910620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e94dcfe-fc7f-4e61-b40a-4bdee35cd970",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7e6a3-f012-4f18-8d89-db88ea6a9a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d55754b-cc30-457f-9478-33d41349c16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c77c78-0f65-4cf3-b52f-f1ca26339fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4bd32a9-a939-4cf1-aa18-7923e4944826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb79f59-727f-4d8a-9124-f660f67726c2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48961ed1-81df-4ff8-b56c-97e3256e135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e565250d-e000-4a14-a672-86061235c805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dde411c-44d2-4d02-ae9d-03a788376d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04732b1-2cfa-4eae-9da0-7d08008aef8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135db345-b6d6-4bc5-a2f9-fb9dc4d67e74",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a85d00e-7584-4bb7-ac66-99ce5c0edcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70103904-e843-4baf-acc1-8e284c1268a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb04cc-6bda-4bf3-94d2-3741033d0adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "691ffc56-015a-4020-846a-c804d09b6a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b263f6b-fda1-48c4-a11c-c4c1eaf120b3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3e9af0-51a2-494d-b0e3-df98643e360e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870ed4d8-d1f1-4ef0-b4cd-1db4fa46c85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1075f3-c6ca-4d08-9f72-10a0faa8f764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cade548-b063-4f5c-9b3c-ee90aa600b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac76a69-faeb-4564-97df-f772c2d09488",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6a79b8-6c74-4a62-b236-135c3d8a57ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baebf7fc-6d27-4c6b-91cc-a8bb4ea68db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dfefaf-a12e-4a4c-9d52-6ff8ed328c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcabe1e-c312-4ccc-a569-57ed5949a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1146400e-8e92-4845-826b-8650d4a0337e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65319cc2-a1c3-4b0c-82dd-4cc28b649070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9392dc77-a428-4431-8953-1b6243058f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ee9a07-4d07-4550-9a53-abdd8f8c153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e69dfa48-631e-47d1-8d29-bde28e81b072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3561cb2-2a61-4101-9c58-68e49cf96c28",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad535833-002e-4cf3-bf8d-e71bfa9d13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a182b2-7bd7-4697-aa12-4f08e3996c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f83c8-c0d4-4d26-8867-ee51a9c065e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2650319-7224-40fb-a9c2-c649e9e9012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c7123-5acf-4186-9037-156eb3d746bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a5784-0cca-4eb3-9db6-d700d6376366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925fdde4-bf67-4b7a-aee5-63ce08f25e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee0b19b-4c54-413d-97c6-6264e70ace1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "36078edd-c179-424d-81fa-364c127f7838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da2962b-e098-45ef-a0f1-92bb3cca9a78",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4ea04a-913d-495d-a905-a99f9a5bdba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78a880d-b87d-4a36-ab45-6b13a602c92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616b1467-194b-4567-8ebe-0e196f6da326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f560071-baf7-4012-aade-3945143247b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e111b95-5814-4f2c-9cb4-4982e928e103",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2ca03-dd2c-49e1-b146-e302e3409e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3aa6b86-22da-47dc-8ffc-0e140958cfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a190dfbf-9851-4ebc-ae52-1366f9e1467e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e54b4cf-8698-4ae4-9e43-fcb2d8e4e2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee662ab7-57cd-462e-8876-73583d6bc19d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2cc249-bed2-4d35-b89c-bddf7c259379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84540e20-749d-40c2-8d2e-6597c666bcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff0342d-0a41-4e2d-9f9d-ee9c02744355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6440a8b-429b-4e1e-b216-017c5e8fbcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d48c73-47b8-419a-bb79-2bcfcdcdbbed",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1b5a3d-9a52-487b-aeee-a4f75ff2e671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654334b6-feb3-4a2e-bb57-e5ba394643da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beefe3f0-a813-493c-80db-a255348d3ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9083d2a-ae5a-4dcc-96f1-83e6fbdbe04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a780c412-d44b-406a-8ba5-a5881d2c95eb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682b286a-99b6-4dd6-877b-c959ec10393e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5885ac09-e95e-48ba-b8fa-1d41d2d1ffc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c48c56-9c06-4bc6-9df8-f73217f1ff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3cbd16-9f70-44e7-b94a-8e72e689f849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bb4fb0-6fd0-4114-81c9-1e72365bfb6f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31417d94-226b-48db-8e87-c3624da24cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf11cf9e-59fe-41f3-b1ff-0adc2a10343c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae8eaf-96c1-4f50-b7a7-cc5b32357315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e5888b-c15c-42c1-9b2a-804d9d83e079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71b8077-c3e1-48f7-b043-8b6f4497e003",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7836d5f-051e-4442-ae92-af6e25180634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d6b050-a474-4312-9c1c-f40bf20de418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205df4f8-0db7-4f32-bee2-9460610fd865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fba8b9a-8ee3-4511-9539-84467be3d3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac46080-654b-4942-b265-a7298d7243bb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1f7431-4600-4964-ab51-0bbe2f7828a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec624ea-6716-41e9-affc-0373908dcf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd9621b-bad6-4577-956d-0954dd291cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "587d0331-f42c-41f2-8071-66c111b0dcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed1f879-098b-4fae-91a9-d5295bac75a9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56393cff-887c-4871-ba69-944281a6c055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4126faf4-c516-4da1-8dbc-33896ce5105c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc563ab3-c27a-4c43-be86-fb37366b9cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be096f0-aff1-4007-b147-380d1527282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c80993-327d-49d9-be26-faf2958e5404",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3512b23-3351-4b99-b00f-cab7ef258a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b214c87-e278-4635-a4ff-b116d9956cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072855c0-d11b-43f1-a2ef-fcc17164a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28027063-a414-4016-85ed-da64c6fa86fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eec3439-5904-4ca0-aa7d-4e8c68268d1b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47dea5e-b99b-4338-ae7f-44779a8214ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c3d6dd-facd-40ca-b6fd-7c4c19b73ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b00ec-219e-475b-beb5-0a8ca68104b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "442da65d-8726-4b3c-88a1-11d5f0071f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627e3782-44cb-4745-8284-4c024151e1ca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4be8e23-5255-4da6-acdd-a64a0bfc69a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b41ed628-857f-494e-867b-98c7731a305d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d600560-6970-4bea-bd48-d5267b4389d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8d38d8-74d4-44fe-b649-774779f621c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ce5a2-6f94-474f-885b-a24a8019a67c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac0a1d-2405-4ff1-9483-94046d7414a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3355aff7-33f1-4d36-b232-feb467820182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f3057a-47fb-423f-8922-4d32bac26d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60ecbda6-cfbc-4ae9-bfc1-1b9e8c42bdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f60b943-5c01-4ad4-b016-f99084e1a89a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e565ee-4f4e-42ef-af64-7d0c724dff3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fad30d-8b39-4f67-8096-bf272bd27fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a0d23b-4943-48cf-a6c5-9d027fbc8d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c70f731a-4a4a-46fd-9c37-949140bfc4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a1156d-7d16-4239-8302-d6a266af09c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456af5eb-ecbb-4e7c-81cb-214553d46bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77677e0d-641c-4b23-b822-b23c26ac291b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8636ec3-9037-48bc-b89c-86e41b46c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af0b9e4-6fc4-4ce3-9d1e-4000b11c485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410cf021-e6d7-40d6-aab9-d66c9c960ea9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255e8fc3-4aac-4b7c-84e1-d5eb5f39a486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd123a67-64e1-4a76-b530-ace72571a07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06002dce-cb62-485b-86ed-71cd7d30979d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e1df7b-4928-4cdc-b2cf-021d7610daaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec792205-da53-4aaa-a290-98c6e6402c79",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14054762-e2b7-49a6-ab12-2e25177879fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d52d24-007a-4e10-a7dc-c89c4e3fd2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cb04df-f10c-401d-ab79-72a185f569fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7134f02-05df-4a41-9ff0-5e7b2394c017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc819e-67f7-4fee-985b-d3e9610302ab",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a502ae-0f89-422f-a714-2bcc7bd11ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f38079-cebf-43c3-898e-ee646a596a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd9195d-d3d9-4a65-9dde-b7d7ca82d678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b706b91c-6af5-477c-b83d-1a329354f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f57b8-41b4-4624-8cbb-a18aafa41740",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab7fbc4-6d6f-4e69-a991-8ae34a785fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54da3a2d-ac2b-43d3-9b42-3a971c017a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68edfc49-2a31-4af3-adbb-23421c0fe940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26c4bae0-ccb6-4986-8ed2-65988a10995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b039138-dc31-4cd8-a005-014dad24d93d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c88482-3811-419b-b896-8eae97605383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967596d4-b4bb-4612-bd07-fa10089675ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cecf5d-ce53-4f2a-93dd-8b199fefa855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4667aa58-10ac-4215-afd0-f2fa3c3fd915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8005e19d-34aa-456e-9165-5ced564cebee",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb39d0fc-4652-4f8c-81ed-aa5f5dcee014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b35fcb3-8299-467d-9364-d1ad6244255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051ed5a4-a4a6-4942-95b8-c64caf59fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df83117e-f795-4461-8eba-4e5b6e01abd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0074b219-5ccb-4fbd-a622-b20f5c4a584b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f88864-9726-473e-a52c-688673b75461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0706415-85fe-4704-8223-61426ac6f52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c4d926-541e-4334-ac39-2b4edc4ab02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "372c0b8c-89e6-43d7-b811-e01f65c5568c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdc7626-3be5-45e1-b2a5-ef289d28a4dc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77e2385-2098-4832-b8b7-fc4c24c4dd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602795db-d251-445c-a713-be8c8fe396a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acabddd4-e56f-43a8-b4f8-5de825b15d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a877ff8d-69af-407b-b5f7-15fd4597226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db91d5a3-229a-4c64-8ac0-9ca56152c74c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8580d934-e7d8-4cc2-a49f-e12c78e36022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3fa58a-f171-452f-8b02-9e4782439e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf89e7a4-486f-4db8-ae7d-890b5e84432b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "533a1147-f39a-4070-b7f2-3af5d8437279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed63b11-f113-48f7-b965-59ad2207524c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daea1064-7c50-4fbe-88ef-d9c1f3b2d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d78d99-33f8-47a9-b616-b3d0d09b33c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4760e33e-61a0-495a-9ac6-7d400b2938e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f947c01-c700-452a-ba5a-d584957c3b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5606ae-6f05-4cf6-9c7e-c09058f734e3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6591e0c-e3eb-4a63-a17f-7f306af35bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50491ab8-e2b1-478b-9820-716ab0f66ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1fd39a-7307-478f-b772-85815ca784e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "354a1bee-e6d2-4af6-9f28-fa5a78cd854d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844a4e2f-e6b5-4a3a-baee-724b0ea9b715",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cf3250-b50b-4b1b-a8af-133f4f483c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9bbd4f-96ad-42da-8ac6-d5cae48744f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8073ba-bb45-4da5-809d-bf44d7e38f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c222595-368d-4f00-88ee-bbc1e1ad44b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155e55b4-db74-4896-999d-520ddc19d293",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bea67c-7b92-4755-8d69-0d6d721ec149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b08e7e-8ccc-4646-8f33-747724631256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bbabdc-ffb5-4f7e-8e5e-43c79a7fc797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa14688a-90d5-4d56-98f7-35d71d121edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016d7528-e95b-4a5b-9f7b-48e4df53e9b7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0369822d-206e-4f17-aeca-90146befa9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe828a4-dad5-463d-87ef-9533ffa4ac8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffce3212-df9c-4a03-895b-cd87248a6ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4891a7b-82db-4a2d-886b-18f310845b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda1110f-8b69-48c4-875f-4dd3076f2c84",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ea633-d107-4646-9d55-1a0e44bde2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae1ef25-7f32-4994-be6c-2e6a9944eeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8628c10-49ae-45bd-aa18-d35e4eaf284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe340cb-f42f-45d5-b23f-ab71bb278555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c74b9f7-db6c-4b1a-b4dc-d8fb7bbe8130",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b977ac31-d2c4-4661-ad3a-67a213228889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4068c8ce-568d-4bd2-bb64-ab984b91c9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef6d95f-2011-4c00-9a1b-817df202e06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23f2cec-9938-464d-bbc6-9ef3df65e0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2167c52a-8b3e-4daf-a14c-17cff0baa9e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098687a7-3d5b-4197-91fa-6f03aa245c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dd91ab-dd2e-4d1a-984e-3eab248fd808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21575f6-206a-43da-ba91-77f48f0e80d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bb61bcea-2785-47b7-b0a8-1300081e869c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128812c1-3269-44b1-9865-caeaf4b3543e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf3ea67-d2a1-44b4-8766-7766f379b688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7052975b-ed25-45e5-8f45-4a2e39f69bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37ddc1d-c3dd-4bd6-a016-29697daed070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf771e5-1526-4f10-881f-276b772cc5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399d1f5-7bd3-41f5-a9b8-89ab7945637b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149f9ef2-d06f-4001-a9be-f71be01f26e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf0c46f-9e4d-4e18-b79d-ebeceb340d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef1be68-4dcd-4626-9f93-80524c797e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7173a681-ad9f-4d03-b3b8-c1c0b753228f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0279e76-0408-4e68-86fa-02470cc1e22d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e057cc96-5113-4c24-bdbe-bfa3bb50185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79163dee-91d6-40d4-a4ac-5c72077d75c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc8a67-6101-4b29-943d-1c3ebe606f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe80d4e7-3b3a-442d-adff-e9a4a119ac64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd06595-2809-48ca-81f7-a831c34b22f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f552c52d-4d7a-45e9-82ce-cb2b32bb0f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f9c2af-e921-4002-ad05-ad36f904d84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a94eef4-253b-4dbb-ab37-f939f02b24ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de02bdea-742d-4894-ae97-fdcca0e6d95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12164201-c225-4459-a8bd-69bd69359116",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd64762c-64d0-43e1-96a6-2f52759cc5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd22b76-d82e-40b3-a24e-1c8435f7b17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cff5cbe-2e7a-4130-b5ed-8cc2bada17c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "216f0380-dec9-4cb5-91c7-74c67d733baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da3d891-6cd8-443c-8216-af0b68d1051b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7bc446-2302-40c6-b083-89ba71905f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518e59e6-1122-4ef1-9365-359600e4071f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d96f9a2-e8a6-4319-9e5f-6fa624a9fc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0274d80-fd3e-489d-942b-4a2ba9229c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a647f428-c500-4d96-b6ed-5340fefedcd9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7780e8-6f08-46fb-8a44-1c72a45d8121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a616baf1-2aaa-4f75-98db-e011ddd5ebce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914dadc5-0950-4c8c-b8cc-864bf74d0e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "109b7366-f118-4e9c-9614-3c71ac6d65f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637956ca-2403-4647-9c11-ceb273db2d91",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66641925-db1d-4394-82d7-68c235a9a284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc27872a-aa92-4f0c-9567-651140bad347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2523c017-6b2f-4e68-bbc3-a166168ca8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f761d5-1fcf-4bcf-b467-f78b7fa35610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a91e388-1c7e-44f8-a17c-c56f240e9ec6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a4620-73d8-4164-b035-d564b66c39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4497abdf-c689-4071-8576-81a5263e198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014267f2-75e0-48df-888a-32df10864885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc5e0e1-986b-4572-9c5b-7ab7c58fd826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017eeae9-a2b1-4687-94c0-80c5bec4a73a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3862542-6e31-447a-9d50-7ea61b189fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9685aa5-8e43-4161-97e3-0b5185fee9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bc3377-c8a0-452a-8bf1-04d414126d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2faadf-7ab8-4da9-b80c-28041117c4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f377d6-b02f-4c6c-928d-a2624b1fbf06",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ce7460-af01-4c01-8bd4-b3967e1961fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c7dfe7-3de6-44ce-bc65-763f67c8522e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d0dbb9-00dc-493f-9967-35ae6adb2fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7315a5-07d0-4b8c-821b-d7e9839580fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb4c6bc-ff3f-4a4c-97c2-26eb1408dcad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364f542e-1242-4df6-b94c-ef2a975bd5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89415e87-0b4c-4f63-aaee-f4a924a44dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9072e8-6c0f-48e3-a404-32706a2f38b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad28486-4707-4e2b-8c81-95a8504f8520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a1e8b1-b95f-452e-96be-0e88622116d7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f484da37-c4ba-4643-89a7-698a8e2f31e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9c4cea-aa92-4096-9f9a-c0ca3b877503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462e3efe-16e4-4f6c-8233-f796b0e025f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5362b76-5fc4-4366-937d-aa50cd4fabb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bedbe9d-2a89-4d95-8c0f-7bfb4cacc92c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe72d48-c6bd-4d1e-b6b7-f99a13755763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e936aab-6ec9-4001-b11b-144a2f1e7784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214da37d-5eea-4e88-8ea6-ab319753223f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d013f2-12b8-4c6b-9cb3-4b9ad97d0b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48066046-575f-4073-b056-273b7e2cb7d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed1006e-2acd-4e7b-90d4-555a200aad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba9224a-a0e0-4c46-b613-5a29b36d76b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d3e283-ab77-4c0f-a615-bc353b0d2c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef1192d-55cb-4095-a661-d897799c9bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27c8c2f-963c-4c86-a3ce-e87a635454df",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468e5110-4ae8-4183-a708-59dec00f760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa1f582-1eb0-42d0-ab88-df52145ce99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372806e6-c2ef-4956-8684-243adafeb903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ac1330-b9cc-423d-9bfd-50adbc7d6ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5077f3d1-4bd6-4fd3-a0aa-a6fb318cf22f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d87ddfb-646c-427c-bfb9-7ce0e5270a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183d34d4-46e1-429a-8119-2199c8314c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b147cc7-638b-42a3-8736-e9f63bdf097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51f494c1-1499-430a-9074-ffa8a7db131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74c54ca-1d47-49c5-9284-77e27f5962ca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ed365c-5863-4344-94cd-15ef4609ee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138dcfe2-238b-4316-ab14-90856c8da3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1080db-3a4b-4632-82f9-b32633bfcfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cc3aa8-7484-416c-83a3-4ec30df6815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd721754-5356-4038-b561-ae80a2356ea6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025dd8c5-75e8-4240-9c43-6ef317532571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4616e20-4a68-4842-9843-d37a4b40a177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9858874-a65b-46f3-96d0-0bf13c369a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54086940-b21e-4251-949e-88ae7d727fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e57fc13-bbdb-4b32-88ba-314b635ea233",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438af4a6-993c-4184-951a-1ef3e1ab940a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8758af88-e8b7-4748-a152-1897d0842714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6535ef-ed20-4666-b2f6-d437561408a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dfb2b7-0da6-42ef-84b8-764df0630c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfb9365-a8b6-4cc5-a599-78c5e990fc09",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a0a18c-395c-4108-bab2-aad098b7bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60d46bd-6688-4e23-a655-d405c1272d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90642744-e030-4d2f-beb6-cc4f0e11e6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9900cad9-187a-4c6e-8812-83aa81bf3892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baae5d6-3b52-40fa-bbc9-ac5db2494ba5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8794dd-9b69-4e3e-ae26-a5ebd8bf656f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a78ec1a-1fe4-4a4e-a0c4-d184aa9a5ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee896e-6b28-4e93-b839-901d8aece300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4b8d83-2307-4a1d-b8e8-9f654f9d8e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21748ff-de99-4575-8a8f-f312d5e5447e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfee8c1-edb6-4f65-89c9-9754860c19d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba82aa8-80d5-42f4-8f89-5430145e1032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139d2db0-33f9-4d57-8412-550b9748b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a37d9e2-9ae1-4945-91b7-a3d75b029358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de107218-0d33-4767-bf7d-37b118574ef0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9759b5f4-4c70-4146-8bef-71243a98a9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05560fe-8c46-4831-89e7-ff4b5bd2137a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b794fc3-402c-47fe-b830-5437ae1df972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7163879-b99c-4b80-8d8b-2ad1f941c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4c65b1-bddc-4920-b419-f24db62e0767",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374f3e09-68c6-43cc-bfe3-080166020d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d152c084-8ea1-487e-a110-103afb3a2fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f9cf85-022e-454f-a704-e6de91c01266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b87c45-b27a-4d2e-bb5b-f5387bc71c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abb068c-6a0d-4d21-8e46-3f7197f2b4cc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87102408-64f5-450a-8e82-b984e2648bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac42a9c-bf2d-4a30-871e-7e533f04cdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c34dcc-4680-4404-b2f7-d6a478d10cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99340fe6-4d8d-445f-8989-f5e02d716c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94efe29-8832-42fa-938d-b92ba65f920b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766ce484-9deb-4a1d-a37a-0b12965b5579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e3baa2-0a1c-4b8d-a8cc-d14a5f8a5922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4cccf8-ee85-4365-b3a1-9b8e8ab1fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af30bd8-a91d-4469-b2d2-1eb8e313937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251f28c0-9e2f-4f3a-9f83-664c30508136",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851395d0-9616-45c9-96ef-55f239f77396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10b7b83-d5ba-4262-a7e4-e4d334b83c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c43e869-d64a-4eb3-974b-04e86fa8505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4edaa0bb-656f-4074-b16d-7673ba129107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8981d678-d5db-4cc8-a30f-6da79a64ea54",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ef2d9e-72e2-4d52-97ac-32c00d483bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba4f90c-6489-415b-9ef1-d0058522726e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794c8d61-7191-4aca-9457-11f73a9e1e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20ac8fe2-0573-4d68-90a7-b97d823a594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe1a34c-bdc6-4bdb-a6e1-ca2930c46658",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e551bf-cca7-491a-b614-06ebfe631f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c117b845-9fdf-4f92-8d2a-0d1bddab5d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ad9901-718c-45dd-82a5-dd0a4a42fd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea75d8c8-3c12-4e8c-99c1-fff9fe1619b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9d81e7-8a35-4893-9d14-6ebadc03cb92",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44962ebf-c419-4014-920b-c44cebefa8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bf4b64-faf0-4bf3-8fea-f9e7196c2310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea5699-150d-41d1-b166-ee9dda5bf58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e89aafd-0401-433d-9a55-524f607194a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc890b7-87c5-4848-8230-d4c3edf5d399",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8013f1-1c59-4ef6-a619-5ef453448d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9f596a-7a60-47e4-80ab-a406c022bb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de6e132-cf33-423b-92f6-6d4bc4fe83d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b190f37c-4561-49e5-a0a7-0d50928be829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e48056-f25f-4bc7-92bb-cd32dcb1dab2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f46449-9967-44be-a64a-5bd81f2f6404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abdc70e-69e3-4003-beaf-d779830ac5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb604cb-f223-49b5-86c1-89362f7fd864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b10f69fe-5d07-4913-88fd-a6e793f58132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b96d1b-179a-45ea-ab23-24a058653396",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872e8c55-1a99-4095-bbbf-4e7dab98fb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81426747-8743-4027-aaba-f606b5b8fa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9319b-4aa4-4ed9-89ab-4d1847d96a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e9aa15-beb3-44f7-aa4a-99021450ef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5ed692-d5d3-4efa-b2fb-8e83df87cbf3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c329e8c1-762c-40fa-b40c-f8abb0d48901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a7384f-f872-4921-94ff-14dd54a13bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5c2746-ab52-4f03-a9fa-2274aad4d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e14af75d-662b-4c6e-b10b-8ec6536641b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2184a814-f1b2-456a-8b2d-ba72a41c7325",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ae1b14-1c96-42d6-aee5-9ce27e9a21a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9358e18a-ef70-42c6-9da0-4acd55f5814c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fc0e27-ae3b-4227-9b6d-26126339fe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bca73ad3-0784-41c9-a35a-2c0c73119f0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13594e35-5a07-4efd-8cb5-153c2214bb11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63309faa-0560-4a2d-968b-4fafe51ba3a8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0057f51f-5b21-417a-a8f7-2f5bf5200e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5613bcb5-676a-4483-9498-337ea2b393fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741c58cc-6510-49de-a033-04af40fe4ef5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "044b09aa-dc05-4420-9a95-cae5ca52d9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fb18ff-2d56-4188-9e4c-3775dee457ce",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb2cd5a-eeeb-4403-95f0-5ddf7a656c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a64a730-37f0-4eb6-ab60-363792d3b265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc908ac-b505-4b72-bc5b-edbe8857bc25",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb4a2007-b72b-4733-816a-c572118084d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0364435-3a3f-48cc-bf66-3f1adf87c791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50cf74f0-9b71-4067-85fd-03b9708d6649"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "718db7aa-97ec-4f3b-9d3d-6c34c02be109",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5fb1265-0d8a-49a0-9242-326e09b58f77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ebdf6eb-c590-4b6b-a30f-a4669053a5a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "287dd8e0-dc1a-4b82-8208-0304a7d901cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b04996c4-6345-4a29-8dc5-51e9dc3a7189",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93cbfe7e-100b-4d96-8310-f952f6830ec6"
                }
              }
            ]
          },
          {
            "id": "1515c323-3282-49b5-a5c8-5871f0928f15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83373c2c-ff78-4b54-9718-5699a83ec603",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c181a2-7e4e-4609-bb0a-92a4f24ece3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1df49cf9-9025-4abd-9486-f43e25d15959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa198bfb-9c9c-47da-927d-628e717bc960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10974eed-1657-4ef8-afc4-47ffe6b2ac2d"
                    }
                  }
                ]
              },
              {
                "id": "099bfb84-3b90-4544-bf34-80ab4fe18552",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6b064df-3fca-4a65-81b9-b98022e54613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c1487f6-c6d5-42b5-9d3e-809a522fc293"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d27a6ade-1dc0-4e00-85b0-fba2478519e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "084c2bd0-49ae-4191-a356-70b789451f50"
                    }
                  }
                ]
              },
              {
                "id": "9f90648a-c3a2-4a35-b51b-abad1577e6b2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "297a7331-9538-4ba2-b469-a4ca234fe800",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c946538-7a83-4e15-8075-139d36cb90ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bed19ae-0d21-42f2-94a9-0d1cb6c32eda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "603580b1-28c1-4a66-9a1d-6d15e2f094dc"
                    }
                  }
                ]
              },
              {
                "id": "e770945b-5612-42c7-b3fd-d2ae02dffca6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bc5f8f4-5ccc-43a6-98d5-d9c8595f1042",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3958083e-3968-4a68-9628-4610cda7ef28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89494815-66ab-4122-9297-7edb8d4c54c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "40e92655-1dea-4fea-a8a0-b8be911be144"
                    }
                  }
                ]
              },
              {
                "id": "a3c5db1e-5161-454d-a564-170fc1a02a86",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3bbcf08-c63a-4395-a67d-3e8b5d7721ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b74fe6c-6c94-4a39-92d6-08d5fdf5b32c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf504213-a8e8-4e53-8fef-b5ed783540a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17114b11-2327-4f08-8499-578d3ff53c15"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48dcc9c5-84e3-45a2-a9f1-5c29ac5b00e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "894f8b36-81d9-4bec-ba85-a7e0d6314857"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dfe6775-dcef-4e3b-af94-f087742fe977",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a1c8dd8-39a2-47c9-9874-0292436bf281"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0cefdbf-36a1-488f-88bb-c82f5d6d7398",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "39fea140-9664-491e-b35a-7fa84a0e76b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e40db8f4-aa9e-4910-a5bc-87153dbf7c67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26efee54-50c6-4f13-ad3c-c5c60033c410"
            }
          }
        ]
      },
      {
        "id": "4ba9ce7d-ccf5-4a7e-a493-6d508dabf37e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d1db98ce-4957-485b-b7e2-86016468dca4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f74bb54-3632-4ad3-a5dc-a0084a2d52ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7407a26-0490-44f8-b3d4-2749bd85ac6a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019b16f5-19fd-4c24-b6ec-5e396d9baf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf6cbb6-5f4e-4ce4-956c-acbe044f7c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab8a53a-c9a7-40a7-a739-1321a7e3795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0254f069-ddce-4281-9de1-3175414c3eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79ad25-24e4-4558-b230-c43951906d20",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a4ae5d-b817-4723-9539-ee18fb2fe2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7012ae1b-6258-4e56-b085-361ef0d24673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6e9c5c-6aab-47dd-8a43-5803761def61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecfb8df-c5f3-47ca-beb5-f72c347b980b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56f5406-e26d-410b-8828-911d479ffcaf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9b206f-d744-4c99-b260-c2e62561fb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07ec88f-9784-4a75-9886-858e433358aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597082a3-c53c-4641-b4d9-05813d446b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec24f746-2365-4c9f-b9c4-43632dc9bc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa52052-24e3-4b45-9ae5-b19174f340bf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37ebe31-1b15-45a2-9824-4b0673340630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797149b5-24a7-4886-a693-ff6aa3511576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb03b3d-3aee-4884-8ceb-31c01da554e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "948378b3-4931-4d6d-bac8-f7957dbd22ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8464512-5372-4191-ab44-475a34633ed6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da99b0c-6958-4e9b-ac26-c6b4ca218700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4896111-5bd6-42c1-8c96-324c5543d3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9316aa-e4a5-485c-9c73-c5ef9fb6732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2179f533-472c-4976-851b-e55d02ee4339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47388a04-b64f-47bf-a0d7-d71b72bd1f4d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d880d273-8679-40e7-ad1d-a8c8a6db430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf20986-d84b-4e9a-9645-5a742806a776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6d7c44-af05-4d0d-8a8c-ddb3406c9456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83aa28bc-7343-4268-bc21-292a59884163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7011f47f-b339-48c8-9069-bfc237ff5e7c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea0066a-7695-4638-8ff2-8df442699249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55b5e6d-51df-4c05-b0a9-9cabadb0ca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6875bfe6-79af-4116-8503-a524707b0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d29728-518d-4e56-9e94-631445e9bbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0ee12c-548b-4f6f-b3f5-01050dd9a284",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71da9f01-f3a6-432a-9db4-b9a22ab4760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bb98fd-e237-4d04-ac51-32ff89a80d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3f0aea-13de-4995-82e1-9f5a1877d09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3a652e-3436-4f38-a6c3-69458278473d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c66bd17-42aa-4be4-a2bd-04447d090dd8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d67c870-f2ab-485d-a77c-c49d59140cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a2cb34-acec-46e0-ba9a-ba56f9c6933d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2249cd1-e271-4ff3-be73-d2f97d1227f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5d59d6-c0d0-4e04-8e78-e29f701400d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b7822-4b44-4ab7-b219-7ccd27428161",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a687c3-12f3-480e-bdf6-d57ff669604e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0545c99-b722-460e-917c-408a2c677c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5da4468-fe0c-4f8d-9e3f-5dcdfa206e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35434867-c850-42b9-950d-ad170c3b3fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c85b2d-4c58-4fa8-9271-ab71a223b446",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3c4ac3-8ab6-4d65-afb5-338442fb12d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cbe1ec-9368-4a6c-9fac-c19ef0f72728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0c1c8-c258-4c4e-9a02-da6bfc44a614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a011c2db-c4ef-4091-b36d-3a2b3e7ed185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68544ad-7ed3-43a7-a5d1-d9d7797c9724",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f54d03-0ba6-4db4-838c-176fd60df209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9785e35-5930-476e-a800-587dd85d9a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2e1701-fe7a-439e-b55b-62e5063acd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5004f7df-8297-49f6-bf8e-bb6c56ebe419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2c00d7-8a9c-4e60-8f9d-404196f237ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d5218a-d7f7-4e89-8f29-30ef717a3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1159eb53-060b-493b-bac8-2601673cf097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fb8595-0168-49b7-b686-730911349d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e989cee-a4f9-433b-835b-017ee1d00971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98224c4-39f9-477f-a46d-1850bde30e0d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d92a41-af25-4f13-94f2-0fee8c3e2c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a14d57-966b-4bc1-a95e-fc8e89c61cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b9f02e-973a-4321-9058-79d40d9d3caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5698bb3c-4344-4b5b-a930-edbd9e884903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba20c0bc-c5c2-4047-8e14-120aa2c432d2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae91130c-af1f-4fdb-964b-f1ea9522b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af5b926-591f-4f92-b645-9d1f996f7103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50cf48d-5c1b-486e-bd54-470defda6b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18769b40-d21d-478f-ae87-b90ac337ba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4778f8-9c73-4884-be86-32b6f0bf79c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe42d9-f726-4cb3-8c7a-074ed1338b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa17d58d-9798-404c-a823-dae613975cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9661fcb-2d27-45c2-8942-d84eb48a8346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f55b93e-11f4-4e41-bfff-d9a39576cf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1119d4-024b-4c71-b6ed-6c0ddf905819",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2060855-51d4-44ed-b8b5-8724f52176c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f0c659-64ed-41e2-8f0f-77a1240837a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8feab8-de19-4c98-9f7d-8e6ae6176744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "349f6eb7-c08d-4d23-9ed9-5ec4c2136147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb013a1-8f79-4d82-8173-b2d4e893d18e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14df638-6bf5-4f95-9d77-4ba42ff65526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093417c1-984b-4f2c-aa98-693cfab0da08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ae0e96-8620-4512-b7a3-a86a53bbea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6976b6-cf56-4ffb-85ac-1b42c3b5044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bd5889-51c4-4063-9901-0b8ecdc87239",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3aa3ce-90e9-4efe-bf38-1607e24c57c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138d5225-e6cf-4b68-9465-a0460de414ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff0be21-bfe5-49fb-bf14-5dbd0834e358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15471ec1-73ba-4030-bb63-f6e31e14b4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9deb3b-960f-4e7f-91f1-b35ddb945448",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e1e47c-7baf-46c8-9963-1534cba1d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a329684e-33b5-4f65-9d7d-73853f1c1527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab159a0a-94c4-469f-bf0d-f49892a93854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d615cc8e-c406-4412-8742-75b563b8d95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a71f76-3cff-4dab-a983-c5adb8e08751",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d06bedb-d9e9-41f4-9daa-7b2c2a26be23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62d7fa4-e569-45a8-90ac-81dfbb0a18b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8177d56-45fc-484d-8a8b-241a5db73339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1952663b-55ba-4f08-8588-c3b4f1c26c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1266b87-213e-4cb1-9b67-1c4cf9e74567",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9d3ef6-4e72-4a21-b181-3dbb038609b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e81251c-c0f5-4990-bdca-da7a634f96e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91683fc5-fa2b-4560-96e9-37f6926493d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc81fb29-c843-4b0f-be37-b291ba23fd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7b37ca-9a66-4b35-b638-b0e3008b4ae7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a26e6e-7469-4479-96cf-72c08d640a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f153680-f2d6-481b-a810-069b649d252d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324885a-22f7-4eee-9bfa-a64aa6f22f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8e8037-4947-41d7-8c51-29f795d67217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec99c8b-d1ec-43f2-ba56-96905095cab4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b86a3-e05a-4177-8473-1df7008d325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243ea454-2f50-4aa9-b6e6-11580b09dbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abad091-deb9-4f68-8be9-27511412e16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d14c55-d294-42b7-afa0-c84329357a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace9107d-b701-414f-a698-d2fd67433bdc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1176f4-297c-4a3b-ab0a-e70c15027162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5806ba51-d227-4860-883a-764f521ff477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a3329f-0c52-4622-86bd-5aa7e5618810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4ff99e-5259-4db6-a180-7d7c8bafb47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5036b53b-0929-414b-bc2c-e58db4912ef1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8037778-4ff2-4c47-953d-c14da31e8651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd6e20b-9624-448d-93a7-fd4e41ba80fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95acf0c1-2b0c-4cc9-a943-8a1888dca503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c51bd25-60a9-43bd-bc48-e4388eedfcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e1876c-802d-4141-aa4c-e6141395e2bb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb0b24-5174-4101-93dc-480fa04b9b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d6f4a2-8418-47dc-95e3-3d12f3fef3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0872490b-6f72-44db-a355-a80ed731eb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c445e3-7cf8-442b-b01f-bbfdf7fe3803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f6876a-1f95-4ae3-83a2-4a1750448f43",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4778b6c6-4ddb-487b-af1b-6c2cd187d3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5fd462-2b76-4150-b638-aa2cd3dca6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6417b750-f4f2-4543-8b26-7a1de5d7f9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e27668-0144-4c66-8930-26bd011547d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabfc160-57e5-47d7-a8f1-6484faed6426",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd77285-09dc-48b0-a5e0-906aa1f9eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d725aa-f99f-49c0-ac7a-0c43dbff44d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f961cc3c-e50b-44cb-a0bb-ba3fb5d1ee78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd30575b-57eb-4006-980e-8280f5986a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edf75c6-dd4b-45b7-8d30-91d5f2e3e570",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884bd815-5b3b-4bf6-a377-e4aac65d862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c57ee24-31e7-42c1-8686-583529af5dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4668f48a-97a1-46ab-aa6a-d485bb43921e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac96972-3b6a-47fe-98a1-9809caa781c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7672b49c-0fed-4b73-9e46-eece9e378152",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6383ea84-1fcd-46c3-b5de-98e62d6782e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439ee597-d71d-48e7-b542-7b562082100d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2004e965-1cde-4d66-b3f2-e5e7f6cb9600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13229865-f42c-485b-9899-37f8a384d251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19771e55-6d69-4396-a838-38aec1e2ae8e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a336deda-d772-44e4-a7be-61cb9346b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca02a222-9a29-4683-b8e9-032707556fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2747cdea-bae3-49b5-b0ee-4b656a3940d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c114565b-64cc-4bbf-a5c4-5b09084b4fe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "532b3dd0-f526-404a-b2d8-30485c75f6e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0980204f-a61f-4d82-ab71-f55e4002e379",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e35a333-6d4d-478b-b687-0113cd1494fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "72021ac7-f5b2-479a-8606-8ff8219649f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ffe06a-bf8a-45a2-9b9e-d7d114167cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e45c9090-0eb1-4339-a9be-3b5a5ceaf284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4849cb51-a002-4451-80ab-a10d8692d69a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aaa99e-6546-4e01-99fc-021fe814e23b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8bf474-9153-4df7-9756-2062d8a489e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f503a1-72b7-4ebd-9456-218d97952c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab4b4802-20a6-4db8-8b45-94aee12c7fab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03ab43a0-4b7b-45b1-bd98-047c12af5ddc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7de68a9a-bd08-4a4a-b3df-31e0ca82aae0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f4bc490-f61e-453a-a231-57c1a6abb55a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ea035e0-ad08-4e29-bded-5b78eb3bc9db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e63281af-c7f0-4f35-82b4-205e07d245a4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0a5f813-98ec-4ce7-b15e-14bae2c40e87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01439a74-18b4-4f38-b515-15deb3a5e373",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de6febf0-0c55-4ce1-a87a-d732825a932b"
            }
          }
        ]
      },
      {
        "id": "8dd67b9d-8b04-4670-b59e-dabf0f7b8ee7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "123f2822-5336-41c5-af29-11d2dbd12864",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da1278b1-7040-4564-b7ef-12ab350c6737",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1570baf-ef9f-4a27-875b-9584fbfddbeb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2a04a5-aee7-40de-a1d5-4fd4c79184a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275ec962-e958-424e-978d-504343a57677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f648051-3f89-461e-bf5f-dd004852e045",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a57d290-29e7-4de7-abff-6291056be72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88ef3e0-57c3-4934-b516-0e190dc715cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80051516-d513-4ed1-b01d-1aa0e197623a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a1eac6-a97c-4de1-808b-b5f9621f1f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230dbb69-823c-4ae2-a0ac-f4dd4e52568f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3271aa67-a5e5-440e-a32d-21e25c15be09",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ea74a5-5840-49bc-8800-2ec5ddb0487c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926f776d-b7cc-42bf-b17c-75b216f52093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374b428-9991-4c12-8b82-a27f938748fc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ace197-75d6-4874-9ac4-836496dd84c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7efed3-0640-4e63-892d-0e20e5129cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a7a99a-9f20-43d8-a19c-0df332fe7b16",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837bd48b-1464-43f9-9ee8-a1335e824ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b587520-a03e-4341-9071-8a10a23b15c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d867776-5a20-462a-bfb1-46444d467352",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba4880a-1a8f-41ea-b123-70044822b1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ae1bda-4307-44f0-94f5-ceaea6d523ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cfb2bd-64ae-46f3-b3cc-843fc5e593fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db31e3c-b733-494f-9b94-59ca1265fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf95bbd-66f1-4f57-a6f8-f9a9952f8439",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee4f67a-884c-4696-9da0-53f8aa4d390e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a641982e-d075-4ed4-a462-17b5f917f61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28dfbad-0e2f-4b4b-91bc-137cd6fcaa1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bd58c3-a46e-4492-9114-c41803a994d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6619c046-18f8-4c89-98bf-0dc2749f158c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a5c52-e00a-4118-a73a-17e328896f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af158240-133e-4603-8f7c-998483b1d21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b571547d-9864-484d-bae2-7948ba7f186c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f494c60-889a-4325-983a-2224f60a2993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4878d8-bf81-4971-9134-e92b58ab4783",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d2ef10-d088-486c-b035-5f66683af735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a889449f-b5e4-436b-9b69-940ab405a7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039ce220-90d4-41e5-8f21-da8e949b0f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e6e0b3-1caf-4786-8f4b-4c0569db03de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c0980e-ccb3-48a0-971b-eb4cc11e2508",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bb42a8-27b5-44b5-a659-d40921d86cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a979ac-67ff-48a7-9881-6043ef4e9449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d6f80-ad86-4fe0-b7a6-9a8772835a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693e8e65-b014-4a58-b7c9-c4e2a2a2dcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc5dd76-ab5a-4307-b31c-fe7714a23db8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1436d417-7431-4005-a6a7-9049148a51a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78c2196-5e32-4e0d-86e3-8b90fa5304f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4fb654-34cf-46ca-84ff-f381a8e0884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfdc44f-5639-418f-a2c3-0a7d8f8405e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb40c3a-62e8-4e00-b808-d6574ae10b29",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d5e017-624c-4c09-9b37-0d958e54acb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35741973-89cd-4103-bdfa-ad979d136fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a77142e-5755-4605-aa87-ea39401df721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490c6598-dafa-4572-b3f3-4af9bd01b957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7117482c-fbdc-45ea-bbb3-3496981afcf7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63875722-e155-4e33-8a28-9c69953acb23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643b1cfb-5725-446f-978c-91970533eac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa22bba-3f0f-43a7-b79a-3e1fbfac444a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e917fda8-9a10-4182-b17b-219ef1c5278d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2753d8c9-7c50-4700-ae30-f1d76c7dab33",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd626129-b1f1-4aa6-a18a-ba5f80be2374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb88c03-d811-4c84-b4fa-e83e94f93341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c3c28b-2346-4413-afbe-7a4274a7ec67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4850f5a-9ac5-4543-a475-94c729487ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de171ed6-04df-49e9-b0f7-97cd80dd6aed",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26609511-cf23-4d40-9e3d-784da44b37e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77273b9a-d5b0-4b16-9991-302f40031fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eff4a92-f065-49b4-9d7b-f87d3ce1c00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a505a05c-a1e1-4119-a8c8-8ac5b2c75030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725decb6-2433-480d-a466-b7392c55b9ba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda031d4-8a9d-4fc2-9cf0-91b01505bb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95979a9-0db5-4475-8732-185035b18aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c728dd-a3af-4f4f-9c98-d147edf2454f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12ec49f-b4fc-4bda-8e2b-c930545f6f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f9242a-6081-437b-a0fd-56f277309246",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e72c1e3-24ed-4c87-a034-f8a6534e57ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b80f026-7ddf-430d-960d-bfc9f0be05c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4aaeb5-2a92-4f57-8847-2f1f6303d05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580539d4-7b27-44b4-b31d-cc8db52975e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8faf35d-3d2f-4227-a365-068e322f8117",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e456c0a-5f95-45da-97cf-d1be0f6edcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad190966-a152-4297-8140-78429339fc2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6c4a5c-2130-4625-9c37-245ef52f1a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e62cfcd-b896-462a-9dfc-42e3ef6f16d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4fe38b-02c1-4639-a06e-605587b7103a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2ef0ac-6c15-40e7-a97b-502f08b6016b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6aee545-202e-41b5-a510-49809be3c2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555d15df-6abf-4324-96f7-c4bf3b37bcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6bdf10-61e6-4f44-bc0f-fda8e86dd0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45878a0c-006b-4d9b-a5a3-7dfa8775d2a4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f086b6b-c20f-4ca2-8fd6-b12f756b2003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d39c75f-e8fd-480e-a1f1-01888bc676e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987bc639-fb54-4a32-bb79-dbc6d5df2565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2f3ea2-8093-4cdc-b169-5081ad4d8cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ab83d3-c2b6-4051-8150-8fd6dd32376a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e9c3de-e263-4b53-bdf5-79c315225bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ff3890-36c2-490a-8755-9cd41ec39757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463e27d2-46f6-4f4b-b361-97be6983a18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061d3b19-52b1-41eb-9850-baaa07177b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2096a95c-9bbf-404b-804a-965aace5f084",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdda879-07bc-4449-a99a-fa7593b0c13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5ad360-b78c-4bcf-ada4-f6a77af36e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0314ced-a252-4e4d-a7fd-3cf415b4295c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91762958-2916-41cd-a8cc-a7b9d6fdecca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a1d2e7-78d9-4818-aa11-adb2c648c047",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecbd646-247f-4f74-90e4-5079335ee7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4635334-b7ac-40a4-8c6c-ca54f25358bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f98968-efbe-4227-8882-2e92edb7fe73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71574a23-64be-4e86-ac72-773d442ba0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68227a2c-8755-4744-80af-235ee47c69c1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e616e2f-3a3c-4387-8d76-e3b0fe418436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27f803c-b8f6-456a-b884-b3f35e20ad02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae46ebe-950b-41ec-be3d-c4fd03a7f606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc13c70a-1161-44ce-949c-f2cd9d8f2039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05b2cab-c9c5-481d-a930-faff012a31e9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1c9e83-0192-44e7-bcb7-3e32247aa9a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029298df-e2c3-4150-b6f9-af2de6191651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea4ad35-24ce-4e0d-b2cd-223324821fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248f752b-6cf1-4efd-bcc0-e3d475b3a926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a6e9b4-b6ce-4001-9094-c30ebdac5c2d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c99c7ad-e51e-4bb2-a69c-23c1e0075bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e74e35-312a-41cf-aa14-2af946eacabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3b5a4d-56ef-45ac-831a-6dd6fcd807e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4a43a4-c2e4-4232-88ff-c3ea48c0130f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea843f64-899d-4b66-85d2-2be55d2ac01e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdce8e4-ac1e-4f8b-b6f0-ee9291ab98cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d759dd1f-3b25-4ce8-9d12-c26032230d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6754a77-505e-42ed-a542-6113b99ffee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f092b0-c499-4ace-bcb8-92e9cb7bc33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd3d572-10f5-48eb-9404-72086af9be6f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eceba3b-4ce1-432f-8b80-065653f65362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbdfd89-378c-4440-b1c9-aad501c8b21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa755f31-4ec3-42a7-8305-2651f91bc2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c3e37f-9314-4c96-89f8-436f8edcaa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963936c8-b9d6-46b0-866e-247ed284427b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55aa8f4a-e797-429a-b63a-9466841d34df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a282e7-c2b3-4222-89e1-f16e23049f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1011cc-f551-402e-a680-371edd9205f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc180e7-499c-4319-8b4b-5c142e316251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18e6f86-c6f5-480c-bded-5cee5d3abc37",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1d0af2-9925-454e-83f7-f11cd37f36c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2865c971-475e-4461-8ab5-0930e6e53ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bf0d8b-6593-423d-88b5-ef4fe6c54dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6c4c9c-4586-42c9-ba73-f7f34dee2b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618d2453-66df-48fb-b632-d73c845903da",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c037bd4-6398-476e-a23c-b1b6b855f1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c595cf1-2389-49a3-82e9-4aec8526073f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24186505-d3f1-475b-8831-11cb48546450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029e3609-46fd-4b9f-b52a-6fd672a47163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbefe4c-938d-4c35-8249-6fe32852ecc3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dbfeba-fc30-4bc3-938d-c7e8f24a28b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e34abd6-5497-4a84-ac19-5203d46604ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080fd473-9cfb-48a0-987b-503f8de5b956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a90890-4677-4397-982a-669c62bc936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6738a2-b6ad-4afc-854a-52c370c3ab0d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d486bf7b-cbd2-4d08-a705-fa01d14fe7c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30ba8a8-8519-4f62-b471-2bf7c8f848f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6e33bc-63c7-4cea-8de0-f266ff93aaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d2af19-82ee-43d9-b7f6-07d0a3403111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c191ced4-c3fa-4790-b4e9-5fec75016c79",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa81250-6aa3-4083-a16f-2bf9875e231e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e61ffcb-cfa9-4428-b744-89107abb2ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f8c4f-f655-49f8-939e-13451301c744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc47389-0031-4796-ba93-ae4218183deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2542aaf6-a31f-4e63-ba6c-3257b9169d0a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c29870a-fb34-48f1-b259-910b276600ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf11fa7f-3a9c-4b9a-b8a2-85313d1b516f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07345496-44be-42ec-b202-1effa7d6cb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c767c8-3202-4f6d-b68f-4752882f4162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89324443-acab-4d67-b390-0a2b1f02b488",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b09d5af-baac-4e54-b9fe-68474185ed16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3387983d-63cf-49d4-b6ea-f124ac051448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604e61e-620a-4349-b65a-8456d481e8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2739d69-ed01-4a7f-be74-0af669113c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66751e4d-875e-4d92-bdea-5cba891ef1d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ea9831-1cb6-4a0d-8ff1-54350289ad8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d17a4ef-511d-4aa2-9676-911360bd5083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2acb8bf-167c-4a45-902b-fdeab38865b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124ed783-e1df-4a14-bf93-e8e84ba0a083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51a8708-6669-460c-88fa-b973ba4416f6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49f8e5a-e212-42b4-8934-5577295f4ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dd553c-148d-44e0-8ff2-37a1b395312b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaddccd-34ae-47f7-8f65-57dc9dd3bec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e11ac3d-d2fb-4dd6-aedd-34860e72e991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cf2dc6-8067-4998-ad3b-585e8eef3194",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c377f76-881d-4b9b-9246-80efe3a1dd73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ba265f-9e74-4cf9-84d4-f2aac3af5dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433f7c0c-c09e-400e-9e43-058888af8597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139cc0e4-02e6-4d80-b7ab-7eacce1e59a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2930656f-fb57-43b9-b2e2-582f6affc022",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4115dcbc-594e-4e81-b996-c97df2e0b97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd43dfa-8465-463f-9010-debdebfb428a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afd2477-c826-45eb-bfd6-507f8c67a582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678e7a2a-6b6e-42c4-ba82-72544e07bdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd18218c-f3d9-4ee2-8ecd-d67d0f6ea15b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f528b510-4b56-4fc2-b723-3cf758f9fefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f905137a-f26d-430a-98c3-a2ce18c1fc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed14e6f-9166-4fca-ba98-af91ca8bf3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9d1033-92a0-467a-9b32-cc8c98789a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afde0bff-bca7-41b1-8042-54fb5f9a2ad6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440854c0-f931-409a-a9ed-3b1e6511e172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c649e616-210a-469e-bf65-7a525be696c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa3afc3-b778-486a-9674-71bede3d838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2f3e6b-2589-446c-ba14-810558569e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e5e7b9-b8ff-4b2d-a694-88aae02b5634",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94be77f-dbcb-4650-bdae-49b00d8b1cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8300b1-6bef-4649-8ab2-0620e9031dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeabff4d-3580-47ca-9af3-2df97fe9bb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b942492-c793-49fa-8d08-759e62aeb880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42b60a8-1f0a-4432-b5c5-af6db402ea90",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415fb634-65c3-4875-adec-b9e716747a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afe8b75-5f01-48f3-87c9-dd04675cf556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72e0275-7da0-42a8-a540-bebb7b1d0b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e895e563-7d2f-4c2e-ac3d-e2eb9a020800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd14015d-4520-41f6-a99a-bc1586edbd7c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f577add-a569-4761-94b6-70992d873577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996bfb71-a446-4c73-9628-b63ae80d1a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5183ac-0eac-4307-b402-159fbacabe79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f7ef1e-2f3e-4ed1-ae6d-5d7a251ce833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6436b0e7-2b73-4d54-a522-c4ba394ae64d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a8fa3c-5bcd-432c-ba73-c7e8b2bb7799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5917a1-d220-499d-84f5-909d5e8c4c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632850a0-1ffb-4a92-81e3-707311482191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc78a927-876a-4aad-a097-602fbcd8f5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4b2c57-d7ab-4209-9059-346cb72fece1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121b79d1-a7ee-433d-90ce-7bf8999f02d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84aa7542-e6e0-4c8d-b43a-02abae0c315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aed0468-c6c4-49b4-bf49-74f397ee4090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160512c7-0cc0-4355-804a-6f4fe4428c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed02c8a1-7a09-491b-ac25-d7911cdb3e2e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa04f61-75fe-4c5f-96aa-012952e48869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c543ee1-49ed-430a-8910-7ee997d102c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ed62a9-8807-46ca-b18d-2a3a57007999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18d9afb-7c73-42e4-b297-85ca80b4b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cee65cc-3bbd-4d56-af4b-452ffe2a7042",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13adcb73-ac69-4e7f-a288-705bc368941b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049c0a30-4cf0-4964-b7ef-41e4901b33d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8425a1-f0ad-4c49-9a5d-d45a717604f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31872cf9-1416-4497-8cdb-c169cb388dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473628c-f01f-4daf-843f-5d2b29a1e9f0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84402e4b-60a6-419e-82a0-01125576d1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e367cf7f-f23d-4785-a4b1-63be27aeec0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce94023-f17d-4c7e-b2ef-03a63ef90db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf735fe-e253-4001-925b-20d15695ca4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0dacce-08b6-4b1c-bc35-3ee88b0797c5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b173db-b676-4e92-91b5-44c8bd02eb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888c182f-b359-43b2-9a6b-32c49b5146c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02917e29-b9eb-4f2b-82a6-916786f6c54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf8963d-214b-4ba8-b7b1-a01a6463a5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b51b6-67c0-41e6-b451-842616b34dfa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00940697-ba78-4083-b55f-c11da4cd6d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcf4044-d358-42b6-ad9e-3e6927805698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c618df6-bd99-43ad-ab91-5596a6f0089b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f299f82-0791-4add-b07f-757b7b1a419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817dd985-9f61-4d85-8d34-f6a94b1e8369",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3069848b-f711-4384-afb4-7d18bb64446d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b710b6ba-ed70-4c4d-82dc-4017e163cd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6cf3a7-8a35-41e5-900a-5443ed4d7f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f77ecd-df3a-4022-9075-98ef973b038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3443423b-ff96-4acc-85b0-eef26504b5f3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865555bc-c7fd-494f-afa2-86836967c88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98de5a00-7f35-40b2-ac63-f2292fe05a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3157a0-b936-4230-abd8-32a46a651ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219a4f80-de1d-47ea-a14c-5168b4d14eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2da2a28-4ef9-4533-8362-481284535095",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b12dbe-2a8e-484f-87b0-d1c767f3df0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d371ce1-f649-491c-b590-981dfa009b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a52097c-080f-4731-88db-d2c0128bd752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6ef074-c311-4281-928b-1560e2164004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a5a795-7f09-40cb-8b31-a27bc408497e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed39c9d-7381-4b85-a7bf-893b935ab161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e585cd63-5d84-4f41-8804-d0cfe868f774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f5593f-781f-4803-9716-ebb9c12536c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d95b731-0055-46fd-8059-36e2dac31e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec9ab3c-fba5-4743-8630-1c0779876e64",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef7ea4-1350-40a2-bc41-169f56f5c927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2b7754-3dd9-42ee-8a63-0f3304710d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62acc74-faee-4ad7-ae56-d065081aecc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2cb24f-e027-49ae-b787-8f1e7cff2d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da52d1fc-967a-41dc-b169-7432cf880a63",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdf29ee-48e0-4b98-adf2-03bcf432e208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d5e0b7-d5db-4de5-a279-7d05b8359565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef4724b-f9ca-43aa-a5ff-3be2e96ee54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8981dd87-ed78-4c62-81c7-316dc1245f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0a0f48-b03e-471a-893f-94187469c238",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446272c1-bf08-4c2b-9f5a-f4f3cef96f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e91f880-9138-4732-8480-17efe36c308b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642bbcab-ee01-406f-82a6-9546a23d7fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3353d5ba-63f5-475a-9b49-5334599ac0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3888aa-f960-46ed-9699-d978a6bbc4f3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcaa47a-f033-48b9-8b86-7fd58bb66c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a60f29-68a9-47e0-85fd-ee1fbc24926c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d8f523-416b-43c0-8f0b-97b6267fc57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0352368b-78e5-42cb-af4d-ab1867521dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120349b2-c3d6-44bd-9ea2-c66d549cd911",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ce9af9-355b-4bd1-91a0-bc331061bb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e30603-f396-4d70-9328-f2bad3c8b95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb3c5d-abe7-4402-a560-921e5578a03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7b2cc6-38fc-43ca-a3b6-2270fe5c89f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725e2aa4-773d-410a-8d93-03fff3223a6f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c0c368-b213-4f30-b3f2-4470171bbafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd8621f-b2be-48da-b9d1-2497ba5089f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaafc8a9-091d-41f2-b984-2d8bd7aadeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5126aa-8f0c-4d4d-a35d-e878623e6f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5686aaf-c6d1-47bd-900d-eff4259a69c7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b4af3e-0f80-4ead-9e2e-ba8738598161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b870c3-3d55-4e05-9de6-50c5ca07f69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5a50a-7934-428f-8896-070b74bb4796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c179ba1-1fa2-43a0-b20f-e86851553bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddafddb-8aa2-4a9a-be34-d3f0ac79c60b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf60c6b-8498-46ea-a7b1-6fbfbe82009a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41c1e04-a0b8-4c78-a69c-dfc709ce0f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd71aad9-af65-4fbc-9ae6-d05f20b53561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b89fd3-5e28-4202-86c8-e70f5a281dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815dc019-0d26-4932-a114-6a7cc48f0cbc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0e0eb5-0878-4d23-9e3a-4e405c5e7f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dde045d-e839-4925-9508-3154e525f29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab36858-6415-4eb9-a5b5-4accca0630c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80f361d-915c-4e58-89fd-81a74907d648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b59dc14-36ab-4cdf-921a-90d3c0fc293c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e85b07d-22f5-4f8a-8b37-634a86af9f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1e65c8-6736-4f3b-910a-359e6ea01ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd04b81-2926-4c09-af3b-6710f2bab478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f30aa1-d116-4eb3-acdd-360a34b156c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7ec9a5-0d8e-452e-8d66-083adf761dab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452a72cc-c3ed-44b6-9238-a476f917a583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "491bcd21-19ef-4b73-9f59-4b75e7354e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83fb2ee-e377-4583-a27e-d4a1d4402512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750ff183-8aa6-4727-9596-651610ba5319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aead37-2474-4567-a8ec-391d773df93f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48298391-5f3e-4e3d-b6f6-aa6bb556bafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b098fc6-1edc-4854-b1bf-4fcc41cf0db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535b842a-5ffa-43db-8360-9478105d210b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d36e608-bbcb-4d3d-88f2-87e5a1ce5777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f915e2d2-62fb-4ec3-8cca-37245c901b29",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b965530-b15b-434c-a430-8597cf407b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b2c609-0850-4f82-af09-151c2a11cf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eb2fda-ac7f-4271-b840-4df9d4aa85e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b65c9e8-61a6-42a1-ac7a-0bcc2d912499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e663bcf0-0078-4079-bb54-45b463adfd7a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab971d22-7bbd-4c85-b117-6836ec7641ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3409aa06-077f-42ff-af51-e874b3f9ee42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7248032-2ccc-4f9a-85be-8e3bf6c57e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6513154a-d989-491f-bbb8-e41b4b7113c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e41eba3-b67d-43ea-a0d6-892b218a9327",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7299a145-0c95-40ac-8210-ced9964da64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "182e702d-d692-4273-bd18-5a27cb1503fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d7e1e-f5cf-4c1c-bb88-2c8b07752f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031e5eda-da9a-473d-80a8-de32db1590a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0110b7cb-7830-4ad6-a3a3-350b5381bf95",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b8bd28-d178-4e91-b270-441aa00ec8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f969718-5511-4d76-b0c8-135f88094378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f18504-deed-43d8-a1e6-f9607e2eb919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e4657b-f697-48be-ab63-a19af12c19bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58601e82-624c-4a55-b797-7ac48fa60f59",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b20a6e0-6fa2-4558-b6fe-0cb8e0121b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1b1fdd-cde2-4e0f-ad00-d8e3169bf50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cf7ad1-3139-4a10-a35e-c649a7e91244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1a2c5d-cd28-4226-b016-a19001acca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dca264-722d-4b24-906b-bba30878aa8b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66f7ba3-0735-4403-9eec-4e6e46e34711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aed2851-dce6-4f0b-9aeb-8cb329ceeebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e594df6d-a457-4d1e-b4ab-2d1bc581e208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dfa622-face-49b4-bc7f-545e86b7b4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7a4af1-e23a-45d9-b47f-d934f5ce8538",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a92144f-decb-4d6d-b3e5-7739c53fc871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d025e5a-15a3-4cd6-9b29-dd192fad000f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7641c6d4-26ed-4889-aec1-13edeab8a80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b07df82-2a07-4c33-8177-468daf5bba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960a5619-ee2f-4a75-bf12-86fd592e6893",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2d357-10b7-4611-a21e-7195fb04846e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fdb0ce-b826-4c73-8730-4b2461f15049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5852b38d-a953-4f57-bbf4-1fc80ec19e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cc3fa8-4dfb-4589-9830-f43b564c8c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da598774-905e-4a43-8ec8-73a5723d0f4f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b64059-8786-4c35-b4b2-ef79bbd3dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca212d29-ad6c-4891-93d8-125a31f5f74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65476c4-62a4-47fb-a9b4-f7052cf71dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4085155f-68d5-4197-a09a-b70adc7a5932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6a0a03-f2c4-4d89-a206-4513a89aac40",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555e0022-9c10-4a97-85cd-db81d2305636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdb86e2-69d0-4c6e-86a6-8f298c0a677d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f80ef0c-7ac8-4c8a-bfc4-207ca7e9049a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075f4d42-a16f-48dc-b737-2cfb17d0e0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fcd8c5-42c2-4b36-a9ce-2e1a8349ee7f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd777e2-9fc7-4412-b404-eb91f5f141b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e6e525-ab36-4248-a00d-19cca73b5ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10376adc-e15b-4035-b5a9-7627644e9698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6339158-4901-4899-99e6-561a6e032069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35227f68-82e3-4b9f-a2ee-2ffd3590c7b2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18386780-fcfa-4ec6-b7db-969a9650b161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e01273-2c49-4e3b-bf5a-09ecfb16e590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f6610a-b28f-4e04-9b50-ef7358dd79fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc06919-64dd-4dab-ba9d-5ddbc6ae4172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e65bed-4e1f-47e9-85da-b020d9b57422",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bbd9a2-4b72-4e2b-a30f-38dff9084bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d4f595d-f9df-4ebc-bd5b-21db0fd5e896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acd8746-c60a-42a5-b9bd-957cf78e9b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98fcd50-2b4d-479c-bf68-8e4262246a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b148d25f-7c53-4063-b9dd-02701ea37764",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edab15cc-5297-41e0-b8ca-be87879ce46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147e92f0-4415-4e2d-981f-1c904dc800b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a852ee62-960e-4062-8686-76c676fbbf8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52e0519-cd84-453f-9c57-af302e98bae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38564d-f8d7-4404-af3b-6d073e6b75b8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aca55d-5689-40ef-84b3-5ddac4d0f47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b05bd22-6245-467e-9fa1-a9c5664e22bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e159614f-dd81-4a50-b187-78df78b9e7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f1f78f-5e18-4b82-8a24-a4b7d714195d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b37827-2c49-4d90-b069-5945326644f7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dc9718-d174-44c9-ba87-fcb50a508440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b07c2c9-3eed-4033-bd7a-9869a0cfce18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47795ab1-1f28-41b7-b020-4cb18496eb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb62fcb-68f2-4cd3-ad1a-c206ac60a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ecda89-005a-4dc6-a77c-60a6351e676c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dfb7e4-a9ee-412d-9348-68167c0ae3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70aa2b7-e523-4e76-b1c5-744605e4891b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c700e3-0615-4313-8898-185ab5cc71f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620148dd-c8c8-4dd9-b548-14b12bc408cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf8a5f4-2abd-4ac2-ba87-7cebc126f3a8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea13aa3-a275-46b8-a0fb-4cfbfe33e3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf7a1a3-e35f-48a9-a546-b8744378208c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3648648a-d6eb-4c21-b3ee-d6dd0afca1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb2023b-21f5-49a6-8687-bfce295609ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efd6ffc-9c5c-4269-bee2-d8b4864b153e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b667c25e-dde8-48d1-8e3b-7d857ac9eef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1cb825f-1447-4090-9c7d-6f240a95c640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df9770-0cc5-40c8-802c-eb102fbffbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad196b6-341f-45ce-94fb-c91742c0e483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040c1ea3-d0df-4840-8125-cfa4c0203849",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959eced4-f2ae-4173-98a5-b4200f4dd5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e3b9289-79b7-415b-bf84-622dfb76d907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4abd05-46ac-4f13-8a5e-383922efcc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37285a2b-6e43-41cc-940b-97db9220496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a61eda-6639-4be3-9e85-93f875eed592",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2637cac7-01b8-41be-a2f7-0e4be1286eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf3feca-ca5a-43a6-aefd-b219118977f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4f1b2f-b0dd-4dfa-a214-69a30ee8647f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0b3f1a-f7ad-498e-97f4-d9bc33c3920f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb9b993-7f97-4ee1-9763-838d44f983e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c34c0a4-9576-45e1-abee-fd4d2695e409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250dcff4-61de-4377-bc71-eac6f4c5db26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c74ba8c-53b3-4cda-914a-69d6142433df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fa449e-01dd-4505-bb72-6c93fc471749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66322fea-9dce-45cc-bc8f-6e625b04ffe0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910cf31a-18f3-4ce8-ae10-a0b895832aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0e8101-97e1-4087-a69c-de20532e08d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004a4109-9783-471e-8476-9f3904c7a320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4234bd0-c90b-498d-9e61-ecfc1eb3ccca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aed508-bf84-4490-a9fb-1c8efe3c81a8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05748f8d-8cc5-44e2-a306-50b1d0ac608a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c63e0ea-0fff-49d7-9a3d-6e181fd0956d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5366a9-9d06-48e0-8a4f-e93b09ba124f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c302cedf-0f60-4d4d-9825-f30b316a894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78dc36f-f46e-49e3-884a-d53013701f77",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89242549-fd32-4683-bd27-642ffc322dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee75b3c-acd9-481c-94be-5278b5d8b74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15665f92-1ae5-47cc-9a28-9f18363fd260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaef43e2-c8f9-4637-8a9f-cb268d692a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f79baa-bcc7-4989-8240-725409464d07",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90b3a8b-5936-4820-ab26-562d675469a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1a0623-8857-405e-b368-d39ae10f8244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e48a56-9fbd-4f8c-acf4-04e0c99f2f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6efc5e-3edd-45d8-a80b-1fb3f3a79cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18bcacd-e0a1-4a99-ba0d-1a381f8b020f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360f531-24d5-422c-9aaf-5204aab744e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1795be17-656c-4976-ae19-8819e3d16196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1a56dd-4a17-4751-a71b-50978797e285",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b413fef8-cf7a-47fc-97cf-4e1cd4d8b18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92510f00-9bb3-43bc-af54-2e2e105e053f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe6e323-5711-4194-b446-520d98d93949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be10e264-2390-4665-9064-5f886ddf1507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb7ecfc-93b6-4131-ba15-e806ec5a59ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6ed673-b2a8-451c-90f1-6caec1ac85a6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "525db669-019b-41b5-bfa2-693f33f38805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "751e15b0-84f8-4421-b875-ce4bd15c62cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7edf660-1122-4797-8aa8-3ceb03ae2784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8261fc0f-a406-430c-aa3d-63ed38872875"
                    }
                  }
                ]
              },
              {
                "id": "43966741-6205-4266-9797-3cbac2f4375e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aa7449e-5ff8-4819-87fb-2b1aa2c7c954",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b266d7-b1b3-442c-8846-0a732ef86c4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ed715d79-039f-447a-9acb-5b6bd80a6e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e0d243-33b9-491b-aca0-b61f3a95cabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cccb5247-b0f7-4696-9d9e-b057f6496ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9167c74a-40ae-478e-ab50-11b5ddbac8fc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79942e2a-7cf0-4908-a5fe-4d5efb1ca1dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "006aa6c3-36d7-45e3-8130-e1fe75d338d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbc3b26-113d-41af-9310-e73137a0f49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaa59414-c0ee-4649-9388-24360d15f187"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d2e7d91-8e22-4293-9181-ca2b9d0d99e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab41ff21-3d60-419b-a5ea-ed121339a226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8b5355d-0c90-4741-b442-5b281d42cd6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdc7c2ee-de69-4390-8e2c-e518a4fd7096"
                    }
                  }
                ]
              },
              {
                "id": "7dc73511-8278-4692-9586-dec93bab817f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4ada17f5-46b7-46d1-b0c2-ae96e8f2f077",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f7ba3d-2e2b-4b0f-80ae-c5412dff5f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9e14c43b-27ff-4a79-a8f4-29eae32442b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc01a56-5b98-450c-a7e9-c401440643d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1ed0c6-e4b2-4940-8082-784bb84ae6af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "371a12c8-3e5c-4b4b-83f8-e903b43a3cdb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b73156c-e743-47e9-a07d-1e20da4a0be8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06b02945-0593-468d-8040-e0eaa0606f6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df64afab-7a6c-4e9b-abce-263d55ea5893"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98683105-672f-4795-9a60-d757d0968c0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8a63191-50b4-45d2-9951-a68c032659ac"
                    }
                  }
                ]
              },
              {
                "id": "d1d0a44b-8152-4b4d-8b94-f208d6ee7a07",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3df4087-ed64-41a6-bf9d-60fa1b7f4846",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba53ab0d-015e-4962-9c5d-a8738e390677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9038ce7e-ea8b-4eb1-86e3-b6a6793b95a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1e8a744-5b9c-4ab1-b62c-f38ee36a6803"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0f48b7-28e5-4888-bb97-66cacc07b0ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "827eb7b2-bd31-4a06-b0a9-7fccf2533dbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "909b4e32-3dee-4474-bba2-9bb4b1979831",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c94e828-4b74-42fd-99d7-932d7d5429f1"
            }
          }
        ]
      },
      {
        "id": "9abc04d9-622e-4e6d-bd67-65c1e92837af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f00c8ff4-c6ec-4b6f-9980-53923b41e8a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "438549c7-ae66-482d-a6f2-fdd78d39c95e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eba3043-8fad-4990-af88-59edf5604561",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755a3948-be82-4dcf-8dca-a5c153779f3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "93f99109-937b-4a9f-a77c-6ffdff32397d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ded7dd3-f44f-4a83-b78a-ce1709713081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e516ca10-7281-4123-a765-3029f609fc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa90f6c-94c0-425d-a6a5-3e4bb7407ae9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2ea568-ffe0-48c2-b53e-383c2dc55827",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d720eae1-e515-402d-91bd-d291c91e871b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536fba63-9c5e-4675-a564-b4121a8345c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c81fe9-9fe2-4f9b-bf14-70476fbaa684"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e859057-a21f-4a29-bc93-c60314523ae1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8afc0c3-99ee-40d5-bc95-148ece7fb9c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84c39f13-4ad1-4dfe-9a79-23459c55fa49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58b4f748-0b10-4624-af4e-c0074c05a1d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df4b6768-fd5b-4ede-8cab-94d46fc22ffa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "888b5bc1-2691-4c66-b867-737e1e5bcd1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a05ed89-87f1-42f5-9795-b6a1cb173d19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08a3aa54-aa7a-450a-9c82-03800bcfeeba"
            }
          }
        ]
      },
      {
        "id": "4ed57970-341b-4770-949c-e130c98dfaa4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6ecc9e11-5f16-4767-8f36-e5795c06f6d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "593cf748-494a-4f05-ae1a-ed0c495b8dd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "625967a3-c098-48f5-930f-93e280f0c622",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffd62b4-9104-4f22-a4e6-92b7ec2f5a65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ab8881-4ee9-4439-b358-dc945201cedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d09133-fbf7-4f33-a727-a72b005dcf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "263ba9a8-f924-41ed-925a-852395646d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595230ed-5df5-4992-a279-9710e129b87e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4249dc-2ff7-43a9-95cd-2417f375a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c836e60b-7f91-4626-9efd-f67f0c631476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d2e85c-01c4-4769-9b6d-7772cd3a2587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea03a36c-9585-42cf-8d91-252461727562"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3413f217-c394-43cc-ac5a-27a215e6d205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bc18704-8110-4669-810b-6d7092094804"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf158a8e-5bd7-4e1a-838e-19c59c427bea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a0ea6e-16b3-4466-89b8-74b6c5c963dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60a919f3-379f-4583-9ee9-84093333ebfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe9ef404-1a46-432f-90e0-098f27061155"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb7a988f-1c5f-4c96-805f-fd53e77109f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea17f6a2-d13c-4adf-bd30-eaf13288c6a1"
            }
          }
        ]
      },
      {
        "id": "34d002cc-3015-42b5-affa-474a94cf48b4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a17f2b1f-f203-483c-9350-d914c4b8c61b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e650fe27-fdab-4387-bcaa-2af2dc4f449b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "757f0ae1-238e-43eb-8be3-f88def282dc0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd63bc5-a9e0-4dbd-aa58-4d2a850b8c6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9844e56-284f-4882-aedd-eb1e487c88fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c137b51c-9130-4a60-8841-9c219e774bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74a8327a-bc51-4bb5-a915-3760e896f1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4be0ba-d579-4424-8542-6b2692810445",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f14e9ff-336b-4ccf-bc1f-d40a346bd2c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0822113e-d9c5-4758-bd54-8d019f87a308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0231d88-9e18-4700-9bd7-88010d2415c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "492d54b3-0e3b-41ee-83f2-a5e109184e12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79c698f7-fb0b-45c8-9f01-5ed22e6aa240",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5df99b8-cb6e-4c71-baab-0e994a019c29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eccd9d1d-0d68-44b2-af85-5632a37eee72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b4a0c49-19cf-4ac9-9b25-8390cae86ee4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1d64846-24eb-4e9f-ab0e-8bc384c29583",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f248a3ab-0442-4ee5-aca8-12bd501d3a2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46ace7f6-f7e4-4da4-8244-78713d5c1a7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f87fe44-0515-4dc5-aa31-2764f8d8eb9c"
            }
          }
        ]
      },
      {
        "id": "1461da9c-b5eb-4309-a6c3-1882e1e233e5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8d7fa27-8d49-4ef1-af89-71398692f439",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1c9271a-b4aa-45af-939a-6921f9a03a4b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3d4e9492-a21b-441c-a21b-59b5d4c851a0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aee8fda-84a7-464d-b1a6-eaf58cbdab95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18d64bd8-ec5f-4ce3-be32-6c481b3f0286",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.841698841698843,
      "responseMin": 3,
      "responseMax": 325,
      "responseSd": 39.77516491269504,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678150038826,
      "completed": 1678150053879
    },
    "executions": [
      {
        "id": "9cc74da4-2847-442d-ab96-7a11ccdd0f2b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7a1efba0-92b8-4167-8914-a6a498583b45",
          "httpRequestId": "dc106e7f-faa5-4923-941c-8df3c96e0127"
        },
        "item": {
          "id": "9cc74da4-2847-442d-ab96-7a11ccdd0f2b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2fe3bae5-1ce3-4641-9e57-ededa27e8a55",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "8fa341ed-6467-4e83-a6c7-854ba418b0d0",
        "cursor": {
          "ref": "4e1f32c6-dff6-478c-98eb-e75df1a6d600",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "efdd2341-4022-49d4-9ac5-72913bfdc388"
        },
        "item": {
          "id": "8fa341ed-6467-4e83-a6c7-854ba418b0d0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5c32db5e-6f18-4ad3-8bf0-b45b1623b509",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "45b57255-a84c-47ef-8fe3-fbc99a2561ca",
        "cursor": {
          "ref": "831a4f17-e370-4cd3-8df4-96eaa59222e3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "892431b6-4ed3-4102-bcef-32083482c01a"
        },
        "item": {
          "id": "45b57255-a84c-47ef-8fe3-fbc99a2561ca",
          "name": "did_json"
        },
        "response": {
          "id": "34837e8a-a06c-4e92-8ecd-ae68e0f28860",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981f752-6821-4fb4-9405-eee77c50c396",
        "cursor": {
          "ref": "7a309f4c-7ff8-402c-b71d-f92fc138179d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16b5bd9f-c118-4a62-89f3-2c220e4ef03c"
        },
        "item": {
          "id": "9981f752-6821-4fb4-9405-eee77c50c396",
          "name": "did:invalid"
        },
        "response": {
          "id": "12003016-f102-4ef1-a3bd-42f57998e468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981f752-6821-4fb4-9405-eee77c50c396",
        "cursor": {
          "ref": "7a309f4c-7ff8-402c-b71d-f92fc138179d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16b5bd9f-c118-4a62-89f3-2c220e4ef03c"
        },
        "item": {
          "id": "9981f752-6821-4fb4-9405-eee77c50c396",
          "name": "did:invalid"
        },
        "response": {
          "id": "12003016-f102-4ef1-a3bd-42f57998e468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fbdb8c-9dba-4111-9af5-64efb73d70b7",
        "cursor": {
          "ref": "783e55bc-365b-45ab-b53a-3bbc30fa141d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "597b79b3-370c-46bf-b158-57ed3c12669d"
        },
        "item": {
          "id": "57fbdb8c-9dba-4111-9af5-64efb73d70b7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f432d71-4ef5-4567-9b35-7c4f5d1eb2c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffea326-5d5f-48f1-9140-521ae1b333d4",
        "cursor": {
          "ref": "fee4e6e6-bf34-4b65-a732-501112f64b0e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fbe3f657-b247-49b4-9e0a-dcb7f8caabbe"
        },
        "item": {
          "id": "8ffea326-5d5f-48f1-9140-521ae1b333d4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "beb14c6d-c8b7-4366-a802-35c466da6b04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a852b-a431-483d-930f-f7c3d4067c1f",
        "cursor": {
          "ref": "34cb1d33-4517-4445-9022-e0ec7a4fa682",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ff184943-2a37-44f0-b27d-4413a166892e"
        },
        "item": {
          "id": "061a852b-a431-483d-930f-f7c3d4067c1f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "33dcc618-d59f-40b1-b719-92fe5a076917",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a0c001-adce-4bbb-a8a2-2c9029dd2c00",
        "cursor": {
          "ref": "6d414388-ee29-4586-a1f3-f438f7cbd1ed",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ac354412-b7e8-4939-aedf-728c91b73862"
        },
        "item": {
          "id": "20a0c001-adce-4bbb-a8a2-2c9029dd2c00",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "010aa7dd-057d-4442-becf-3d9b919bfe58",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a0c001-adce-4bbb-a8a2-2c9029dd2c00",
        "cursor": {
          "ref": "6d414388-ee29-4586-a1f3-f438f7cbd1ed",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ac354412-b7e8-4939-aedf-728c91b73862"
        },
        "item": {
          "id": "20a0c001-adce-4bbb-a8a2-2c9029dd2c00",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "010aa7dd-057d-4442-becf-3d9b919bfe58",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2168f0c4-a71d-417f-b107-d931074ec57e",
        "cursor": {
          "ref": "e403eae7-8fa7-49e5-96c0-a28dbc11562b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df0db927-ea0a-4c36-9ead-a60d45349e24"
        },
        "item": {
          "id": "2168f0c4-a71d-417f-b107-d931074ec57e",
          "name": "identifiers"
        },
        "response": {
          "id": "ee7ef7bb-0aff-4592-9a23-75dbdb6130bc",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcca504-6347-4233-b964-0da7c567d4d8",
        "cursor": {
          "ref": "f2eaa936-ba9a-4468-aed4-3436e7504386",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "04315302-1e94-4226-93d7-9bf3febe4e49"
        },
        "item": {
          "id": "cbcca504-6347-4233-b964-0da7c567d4d8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "df2a6e27-f227-4916-a437-935b08bed012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcca504-6347-4233-b964-0da7c567d4d8",
        "cursor": {
          "ref": "f2eaa936-ba9a-4468-aed4-3436e7504386",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "04315302-1e94-4226-93d7-9bf3febe4e49"
        },
        "item": {
          "id": "cbcca504-6347-4233-b964-0da7c567d4d8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "df2a6e27-f227-4916-a437-935b08bed012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951f456a-cef7-45c2-bf40-0755aacd9da7",
        "cursor": {
          "ref": "38bdd15a-e487-4bf6-8659-1357747417f2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9bb615c4-abf1-4512-84b2-7f8ff17548c9"
        },
        "item": {
          "id": "951f456a-cef7-45c2-bf40-0755aacd9da7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be3c2b4e-2cb0-4066-9b93-a16a8169a962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11740acd-25c2-4e07-81ce-35cf74befe9a",
        "cursor": {
          "ref": "57c14608-8fd5-4792-bdad-1171d438c118",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d5f0b97d-ffb5-4206-a1e1-10c221ee552e"
        },
        "item": {
          "id": "11740acd-25c2-4e07-81ce-35cf74befe9a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6153493e-f4d6-4711-a2b8-413317311755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951f207b-b5df-4cba-b162-c0fbf7b31708",
        "cursor": {
          "ref": "f2267d54-3ace-469d-89cd-a5f40f3cf607",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e8003792-37ca-401e-b5ad-eca80aef6805"
        },
        "item": {
          "id": "951f207b-b5df-4cba-b162-c0fbf7b31708",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "409ec50e-9a97-43b9-80d5-961262ee9009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee20c677-b3a3-4ae3-9ced-76d7b0eee209",
        "cursor": {
          "ref": "56a58a3c-8569-4e0e-b28c-74b6e6c644f9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "54e87323-de25-446d-9d94-95458e486a10"
        },
        "item": {
          "id": "ee20c677-b3a3-4ae3-9ced-76d7b0eee209",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d948d8c-53a6-4c85-a199-0d48578eaa16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59017130-ca0b-45f0-abdd-d5c774664fe2",
        "cursor": {
          "ref": "5e00c449-dd24-4879-83d8-6d5bfe85c34c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f00667ab-74d2-4a4c-8883-4c7b499f466d"
        },
        "item": {
          "id": "59017130-ca0b-45f0-abdd-d5c774664fe2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f42d8727-43a8-4f6b-8e06-b28f9d2d01f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6165095d-80c1-4941-8682-5eb20be2f75d",
        "cursor": {
          "ref": "f79ad445-a52b-448d-adda-437d772644d8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8565131e-11cb-4477-873f-def264451f5f"
        },
        "item": {
          "id": "6165095d-80c1-4941-8682-5eb20be2f75d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b8cfc349-a7cc-49d1-9de0-9326a4fe708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677d3e56-633c-49ce-bccb-ceb5a1412b1b",
        "cursor": {
          "ref": "73cb1857-0300-4273-89c8-88b040a84799",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98349ff1-32e1-49ba-a830-6802f446b5c9"
        },
        "item": {
          "id": "677d3e56-633c-49ce-bccb-ceb5a1412b1b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "950de7ac-2079-40a1-9827-e76b55344458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6563539-469f-4ef1-ab44-650950872a5a",
        "cursor": {
          "ref": "b0b093c5-c1ed-49f0-99b8-2f41a881464b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cc5b6b66-78a9-47ed-91d7-33761427cc66"
        },
        "item": {
          "id": "d6563539-469f-4ef1-ab44-650950872a5a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4b428bed-d80d-4e04-b95c-c96abc7baf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba60ea55-399d-4605-8303-7fa829009864",
        "cursor": {
          "ref": "d7cb0559-1f26-4f04-960d-696e81eecf3a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fbe1a07d-6a62-4236-86d1-7d4b3a7f7650"
        },
        "item": {
          "id": "ba60ea55-399d-4605-8303-7fa829009864",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2bd004e-2785-44fc-9ab3-b6b64c67b852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195dd27c-875b-4dd8-b77c-208675157a0a",
        "cursor": {
          "ref": "69a54835-ee88-4b76-b776-15796168dfc0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4e42a677-fbd6-446b-ba10-aac1c3f27606"
        },
        "item": {
          "id": "195dd27c-875b-4dd8-b77c-208675157a0a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9185e1b7-2130-4168-8fb6-55c05d5e2783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0117b-cce4-4a58-8067-144506e4b3ec",
        "cursor": {
          "ref": "0ec3f2f9-ecc6-4d0e-895d-d1f851061887",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b2eda861-1012-42b9-963a-8a592cdc2c54"
        },
        "item": {
          "id": "8dc0117b-cce4-4a58-8067-144506e4b3ec",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "02a6da80-59ad-476b-b277-864ce95f1b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdfa7ae-8343-4588-aca0-0f1b7ddb60ff",
        "cursor": {
          "ref": "280bf954-cd12-45be-9ca1-01e2793e466d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "212b3b25-361e-4c9b-bd14-105f8157020f"
        },
        "item": {
          "id": "dbdfa7ae-8343-4588-aca0-0f1b7ddb60ff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb8f0ec5-a6ec-4b20-bb0c-80b88352b68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2463fc5d-0966-4ab4-9175-76f263304abe",
        "cursor": {
          "ref": "1c052408-8770-4174-8f01-8fb0e3f21e08",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dc108bc7-432f-4b6d-8709-998fd74b4268"
        },
        "item": {
          "id": "2463fc5d-0966-4ab4-9175-76f263304abe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1fc4477b-0af2-4266-a2e3-3cd0be9c7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c53930-c7f2-43f3-847f-e23d872957ce",
        "cursor": {
          "ref": "d5b30a7d-4184-4219-9f12-9ee598148249",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d2462d3f-027f-49ab-b809-eab6ec4d1784"
        },
        "item": {
          "id": "54c53930-c7f2-43f3-847f-e23d872957ce",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eb9ab3d4-a5ef-4aa8-bf0a-92bc34a27c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4de8fc-8ba4-4979-85e8-914ab717a338",
        "cursor": {
          "ref": "3318749d-330d-47bc-8e61-5ae98694e830",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a7699ee9-f951-4fa0-ad71-0239d1bffce8"
        },
        "item": {
          "id": "fc4de8fc-8ba4-4979-85e8-914ab717a338",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8ce9d414-5dfa-4912-9ae7-44abf670990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e94dcfe-fc7f-4e61-b40a-4bdee35cd970",
        "cursor": {
          "ref": "1639dd61-4f62-4d3c-a334-05c5647d4bbe",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "23059b70-0ead-4335-ab49-cd8040d7f108"
        },
        "item": {
          "id": "1e94dcfe-fc7f-4e61-b40a-4bdee35cd970",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2af38fc1-b619-4bbb-85a5-785581ae9416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb79f59-727f-4d8a-9124-f660f67726c2",
        "cursor": {
          "ref": "0c0f144f-885c-4e74-b22b-ce96531784a5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "45ce53ab-4528-4566-b791-8b5138fd9dd1"
        },
        "item": {
          "id": "abb79f59-727f-4d8a-9124-f660f67726c2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "67bd16ee-800a-4a05-8187-bc6b241e4bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135db345-b6d6-4bc5-a2f9-fb9dc4d67e74",
        "cursor": {
          "ref": "365adbe3-c7eb-4027-8ec9-4c3170f631d1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "51e10b0a-1bae-4896-9de1-34ee8979eb60"
        },
        "item": {
          "id": "135db345-b6d6-4bc5-a2f9-fb9dc4d67e74",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "21d9ec26-e810-41fa-8ebe-8ef91b701a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b263f6b-fda1-48c4-a11c-c4c1eaf120b3",
        "cursor": {
          "ref": "92428181-a8e7-4e19-9f4a-a644965c1e7d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16b2a9e7-2b95-4742-aafb-2b4f40dd7bd9"
        },
        "item": {
          "id": "2b263f6b-fda1-48c4-a11c-c4c1eaf120b3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10e2262d-7a8b-4d37-9428-57b4750c2f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac76a69-faeb-4564-97df-f772c2d09488",
        "cursor": {
          "ref": "1b0ef9f3-2deb-46f0-8372-584d045b9063",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b1903aed-2c64-4e68-b435-3758794a556d"
        },
        "item": {
          "id": "fac76a69-faeb-4564-97df-f772c2d09488",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4e49b632-616d-4b23-87ec-8661e85ad79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1146400e-8e92-4845-826b-8650d4a0337e",
        "cursor": {
          "ref": "48023f0e-e525-4000-ba23-e0ffd0b2aa7a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "94748ce5-1e5f-4b1c-8a70-a99ec2fbeb7a"
        },
        "item": {
          "id": "1146400e-8e92-4845-826b-8650d4a0337e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dd991f76-7ce7-479c-b5d4-11a24ea38135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3561cb2-2a61-4101-9c58-68e49cf96c28",
        "cursor": {
          "ref": "0e7b0481-3bb0-4b64-8980-6efd6d4f7d70",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "361e87c0-c28a-486f-bbb1-24a264718fcb"
        },
        "item": {
          "id": "e3561cb2-2a61-4101-9c58-68e49cf96c28",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b934c713-c31f-49ac-94e1-13dcfc8cf4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c7123-5acf-4186-9037-156eb3d746bd",
        "cursor": {
          "ref": "f07807bb-7f11-4890-a738-e55fef4e2142",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d4cf2866-ebaa-480d-81d7-783ec28c7403"
        },
        "item": {
          "id": "547c7123-5acf-4186-9037-156eb3d746bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72cc2172-138d-4d5f-8aa1-f27af0c6088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da2962b-e098-45ef-a0f1-92bb3cca9a78",
        "cursor": {
          "ref": "5c3a9719-a6d4-4fc4-b510-9c18b31a7c14",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "454fbc62-52f3-4d81-9380-b572b4c42e4c"
        },
        "item": {
          "id": "3da2962b-e098-45ef-a0f1-92bb3cca9a78",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "94bb27e6-6255-4f4c-b110-4cbfc0771074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e111b95-5814-4f2c-9cb4-4982e928e103",
        "cursor": {
          "ref": "d88297b2-be8d-41b3-8382-0fefa98e05d5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "52d12212-074a-42df-9951-d877bc4f7ad0"
        },
        "item": {
          "id": "3e111b95-5814-4f2c-9cb4-4982e928e103",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2d652d3d-4c85-40f0-bccb-57ee78dc6456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee662ab7-57cd-462e-8876-73583d6bc19d",
        "cursor": {
          "ref": "28ec0c6d-e54b-4ca9-8be4-be170486d5e9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "28db03a5-960b-4140-acd3-30debb6d3533"
        },
        "item": {
          "id": "ee662ab7-57cd-462e-8876-73583d6bc19d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a41cb9d-1d7e-4078-837e-1a74286d7805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d48c73-47b8-419a-bb79-2bcfcdcdbbed",
        "cursor": {
          "ref": "aa735140-2833-4c5f-8ecd-cef88c5211d5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5a9b5e09-14ec-40c0-9c9a-a96520ff0a59"
        },
        "item": {
          "id": "d0d48c73-47b8-419a-bb79-2bcfcdcdbbed",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5eb3b252-3871-483c-ab8b-15abf9b320e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a780c412-d44b-406a-8ba5-a5881d2c95eb",
        "cursor": {
          "ref": "4e512823-5c49-4d68-a408-047e43a3fc9c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6ee2532c-8847-48bb-a05e-0dbc5718e8d6"
        },
        "item": {
          "id": "a780c412-d44b-406a-8ba5-a5881d2c95eb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "363bd178-2c31-46af-8187-883cff11783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bb4fb0-6fd0-4114-81c9-1e72365bfb6f",
        "cursor": {
          "ref": "ca193d7d-2dbd-43fd-a362-e152e0efdc40",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d8f58d4d-1f79-4547-a288-5a93354440b7"
        },
        "item": {
          "id": "04bb4fb0-6fd0-4114-81c9-1e72365bfb6f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d98db70-d5cd-44f5-9192-f1b790a460a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71b8077-c3e1-48f7-b043-8b6f4497e003",
        "cursor": {
          "ref": "215e1b3d-9a8c-469f-b8b1-73e158f057ac",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7ba0b7e7-4494-4c4a-a292-20848ff08a2b"
        },
        "item": {
          "id": "e71b8077-c3e1-48f7-b043-8b6f4497e003",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8337c602-8f51-45cf-9223-3d791418b042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac46080-654b-4942-b265-a7298d7243bb",
        "cursor": {
          "ref": "17d2919b-1e14-4173-8d01-ef446cec3604",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "10bb4d01-c9e9-4f98-8910-123ee708ab28"
        },
        "item": {
          "id": "aac46080-654b-4942-b265-a7298d7243bb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "43e8ce07-bf8e-4a21-ba99-ecebedec2201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed1f879-098b-4fae-91a9-d5295bac75a9",
        "cursor": {
          "ref": "47e7eb5d-6593-495d-a5a0-0c8896eee6ad",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4100106c-68f5-4421-a0b5-2e6fcec83e5f"
        },
        "item": {
          "id": "9ed1f879-098b-4fae-91a9-d5295bac75a9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7546c04f-bfbf-4539-a6e8-4208c1c91f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c80993-327d-49d9-be26-faf2958e5404",
        "cursor": {
          "ref": "d914d8de-1fa3-4da1-ad4e-723f52a96fc9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53062522-286d-481a-a831-99d56cd02c5c"
        },
        "item": {
          "id": "e0c80993-327d-49d9-be26-faf2958e5404",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d57cd8f8-7f78-4e3a-9b78-340ced0116ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec3439-5904-4ca0-aa7d-4e8c68268d1b",
        "cursor": {
          "ref": "ddb25f55-cb21-4605-96d9-aab4f26bb817",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3aa5fc42-b304-4511-b65f-63b624fdf599"
        },
        "item": {
          "id": "4eec3439-5904-4ca0-aa7d-4e8c68268d1b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "860e84a1-e6d4-42f0-9ee5-c838710ff0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627e3782-44cb-4745-8284-4c024151e1ca",
        "cursor": {
          "ref": "0116730f-3d8a-4dc4-aa64-51b2fa4a409a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "867db942-214c-4e88-83a1-3ed62374a529"
        },
        "item": {
          "id": "627e3782-44cb-4745-8284-4c024151e1ca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6214a985-f171-41cf-a593-8407fba2f888",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ce5a2-6f94-474f-885b-a24a8019a67c",
        "cursor": {
          "ref": "ee22bbcd-bde7-4fd2-9af6-6aa22bf2cc40",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b623ef31-5d35-49cd-ba08-b11dcac81eb4"
        },
        "item": {
          "id": "fb9ce5a2-6f94-474f-885b-a24a8019a67c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "54e44150-a1c2-4b9c-805b-b62a3f03b089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f60b943-5c01-4ad4-b016-f99084e1a89a",
        "cursor": {
          "ref": "6c119cd8-b9ea-4c7d-a294-2682229e0297",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a88c665b-1540-4ffa-81a5-4df921e59774"
        },
        "item": {
          "id": "9f60b943-5c01-4ad4-b016-f99084e1a89a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e219b8df-bb9e-4d4a-a5e5-4bdb1debd3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a1156d-7d16-4239-8302-d6a266af09c1",
        "cursor": {
          "ref": "26657b57-993c-4bfd-a05f-fecb3e04ced2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b058354f-df6b-4168-8486-45a768f30548"
        },
        "item": {
          "id": "e1a1156d-7d16-4239-8302-d6a266af09c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "37da70e9-e843-44bf-97be-19f0a923d0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410cf021-e6d7-40d6-aab9-d66c9c960ea9",
        "cursor": {
          "ref": "5c83d70e-36a3-4c5d-95c1-fab323d6f40e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0badfb51-596c-45e7-a630-06995e5ffc09"
        },
        "item": {
          "id": "410cf021-e6d7-40d6-aab9-d66c9c960ea9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b1cf371e-011d-423b-bf40-6b35a755886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec792205-da53-4aaa-a290-98c6e6402c79",
        "cursor": {
          "ref": "b081221e-42ac-4731-8887-57713cb4fcc5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7db78930-fecd-44c9-ba6e-11fbd650d220"
        },
        "item": {
          "id": "ec792205-da53-4aaa-a290-98c6e6402c79",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d2258246-126e-4a1f-a2f6-cb5b67b868a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc819e-67f7-4fee-985b-d3e9610302ab",
        "cursor": {
          "ref": "002bfc9f-845b-4c05-b1de-c3bd266f8421",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dea59b5d-72e7-4368-9e71-618ec974a031"
        },
        "item": {
          "id": "08cc819e-67f7-4fee-985b-d3e9610302ab",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "32f4515c-02ab-4ee5-994d-11d64f89b705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f57b8-41b4-4624-8cbb-a18aafa41740",
        "cursor": {
          "ref": "adb76bf9-3b84-4bda-81d2-7209d9972caa",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9d34409e-c536-4b24-8d70-3ad3547306f8"
        },
        "item": {
          "id": "787f57b8-41b4-4624-8cbb-a18aafa41740",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "318e519e-3cd3-4274-84ff-c8087316fadf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b039138-dc31-4cd8-a005-014dad24d93d",
        "cursor": {
          "ref": "fe0d3173-5968-45fa-87e5-9a7ba55a18cc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e6d83bf6-34e1-4a35-a212-f5173d579de5"
        },
        "item": {
          "id": "3b039138-dc31-4cd8-a005-014dad24d93d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "490ebfef-14a5-408c-a63f-fe4ed5693ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8005e19d-34aa-456e-9165-5ced564cebee",
        "cursor": {
          "ref": "ef06258c-f3da-4c45-a51c-c7418844c1ef",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d5400bd2-be4a-47c9-9ff0-35e03c8f6203"
        },
        "item": {
          "id": "8005e19d-34aa-456e-9165-5ced564cebee",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4b06b8c6-c587-4a20-9f4e-d218bc42744a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0074b219-5ccb-4fbd-a622-b20f5c4a584b",
        "cursor": {
          "ref": "182480b3-f4d5-4897-974d-cd4d4b5c95dc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "03ad5413-6be3-4005-ad06-6f9ffb54ff88"
        },
        "item": {
          "id": "0074b219-5ccb-4fbd-a622-b20f5c4a584b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cfd6ee67-d48b-4340-9119-c7215e15b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc7626-3be5-45e1-b2a5-ef289d28a4dc",
        "cursor": {
          "ref": "a16f82d4-7a06-4b9c-9018-e79bafefae33",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a1623a90-ebde-4ba0-9f93-813870bdf42b"
        },
        "item": {
          "id": "ebdc7626-3be5-45e1-b2a5-ef289d28a4dc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47963745-a93e-4ba5-be08-87669bdd49a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db91d5a3-229a-4c64-8ac0-9ca56152c74c",
        "cursor": {
          "ref": "2e6bb590-0dbc-47fb-bf6d-e16032bc0327",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2c8455ac-e433-490b-b468-960d10c6d061"
        },
        "item": {
          "id": "db91d5a3-229a-4c64-8ac0-9ca56152c74c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "acf61f61-8914-4aed-a3ed-0292d7a4c9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed63b11-f113-48f7-b965-59ad2207524c",
        "cursor": {
          "ref": "12a83a51-cb0d-4b79-8492-239b14faf16d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eea5ccb4-06b2-4d52-9c30-08f9c10d6490"
        },
        "item": {
          "id": "eed63b11-f113-48f7-b965-59ad2207524c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3997bf51-307f-42bc-b775-5b60f1c9e3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5606ae-6f05-4cf6-9c7e-c09058f734e3",
        "cursor": {
          "ref": "41228717-17fc-4e98-a18e-aa0b4d790618",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a210e353-c53f-43a3-b984-870017942756"
        },
        "item": {
          "id": "7d5606ae-6f05-4cf6-9c7e-c09058f734e3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "64a31961-6c9e-4f34-829d-a0c9f42434a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844a4e2f-e6b5-4a3a-baee-724b0ea9b715",
        "cursor": {
          "ref": "50959418-eb64-49e5-952c-af196054afec",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d73d624a-df20-463d-92c2-49cc18c2791a"
        },
        "item": {
          "id": "844a4e2f-e6b5-4a3a-baee-724b0ea9b715",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "729bf6ae-0f0b-4826-b235-474d9db60bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155e55b4-db74-4896-999d-520ddc19d293",
        "cursor": {
          "ref": "0b621cd4-a3d9-4066-8d76-3f31f579fb8c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "46016438-6eb8-41a6-bfde-99fa51c3e917"
        },
        "item": {
          "id": "155e55b4-db74-4896-999d-520ddc19d293",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2d027083-7559-4d8c-a6bb-2bd36b594756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016d7528-e95b-4a5b-9f7b-48e4df53e9b7",
        "cursor": {
          "ref": "f75db8f1-5e6d-4a38-bbb7-d2906a20aa14",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b36028a0-8ff0-464a-ade7-bf5bda068431"
        },
        "item": {
          "id": "016d7528-e95b-4a5b-9f7b-48e4df53e9b7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2540c45a-224c-4d44-bb76-55cdb1b26aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda1110f-8b69-48c4-875f-4dd3076f2c84",
        "cursor": {
          "ref": "1094dbcd-c3f3-4867-9e76-91ddc51a4e96",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "750a9606-b89c-4d74-b60f-2be5f360d71b"
        },
        "item": {
          "id": "fda1110f-8b69-48c4-875f-4dd3076f2c84",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "74de41fe-fc4f-44a7-9015-1f1a1abbcf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c74b9f7-db6c-4b1a-b4dc-d8fb7bbe8130",
        "cursor": {
          "ref": "12429744-5bd4-4b11-b707-8d6169ff65a0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbcbf842-fadd-4d97-8b62-1ac6bb82567f"
        },
        "item": {
          "id": "5c74b9f7-db6c-4b1a-b4dc-d8fb7bbe8130",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2da213aa-6920-4e4b-a8f9-81b1016af42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2167c52a-8b3e-4daf-a14c-17cff0baa9e2",
        "cursor": {
          "ref": "42c3c184-1cad-4009-a69a-03538d9bd7f9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3fa6c33d-125c-483a-b99a-906826eb6843"
        },
        "item": {
          "id": "2167c52a-8b3e-4daf-a14c-17cff0baa9e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "84ff1f90-f861-47b6-b940-a29441917e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128812c1-3269-44b1-9865-caeaf4b3543e",
        "cursor": {
          "ref": "b7bcf27b-0191-431f-a69a-c5524e827f63",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1311c0d4-aa2d-424e-a7ff-72082e72b24a"
        },
        "item": {
          "id": "128812c1-3269-44b1-9865-caeaf4b3543e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3fb5b727-3b44-4f80-9a00-f651d270831c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399d1f5-7bd3-41f5-a9b8-89ab7945637b",
        "cursor": {
          "ref": "65d3018d-d945-4a8e-b070-6e660fe06a85",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cd1edb3f-88ef-4b02-8c2d-b6dab3408ad4"
        },
        "item": {
          "id": "e399d1f5-7bd3-41f5-a9b8-89ab7945637b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f668942c-d446-405f-ae37-7662b6911bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0279e76-0408-4e68-86fa-02470cc1e22d",
        "cursor": {
          "ref": "cb778eec-2109-4ebb-b3b4-b23881c5658d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46b2d369-df00-43c1-b1f8-6d0378971b16"
        },
        "item": {
          "id": "c0279e76-0408-4e68-86fa-02470cc1e22d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d7ac3ec7-a29b-4c0f-8a01-8ba4ae2c8b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd06595-2809-48ca-81f7-a831c34b22f5",
        "cursor": {
          "ref": "6b27ece4-58b2-42c5-8ebe-4e0afb8b9207",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8d0a7c5f-0ea1-4a47-b5ba-d0a032b1aa07"
        },
        "item": {
          "id": "fbd06595-2809-48ca-81f7-a831c34b22f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e2b5d761-ab04-44e6-981f-d7837ddf9550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12164201-c225-4459-a8bd-69bd69359116",
        "cursor": {
          "ref": "ef025185-68cb-446d-aa17-c05796fb8ae4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91a99782-8b65-42ec-b57a-80ebde043e7c"
        },
        "item": {
          "id": "12164201-c225-4459-a8bd-69bd69359116",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fcdc7d19-3bcf-45ed-a3ca-b8ce8d23b641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da3d891-6cd8-443c-8216-af0b68d1051b",
        "cursor": {
          "ref": "19d15f36-99c1-4c3a-bfc5-2829817a06ca",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "517e4b3b-5e91-4c59-bba8-798ac5a959d0"
        },
        "item": {
          "id": "0da3d891-6cd8-443c-8216-af0b68d1051b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4dcb5a0b-7222-4f82-9584-70cb64c71735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a647f428-c500-4d96-b6ed-5340fefedcd9",
        "cursor": {
          "ref": "8adc72ca-1784-4cb5-8ece-48a1623f78b3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "36089a8d-d5a5-48dc-b34d-787c30ba821c"
        },
        "item": {
          "id": "a647f428-c500-4d96-b6ed-5340fefedcd9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4756ad84-25e0-4d85-9fef-8cda052c4ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637956ca-2403-4647-9c11-ceb273db2d91",
        "cursor": {
          "ref": "bbd96e17-4e2b-42ff-94ee-0fddb6e36141",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fc7426d1-9e87-4f63-8fb3-c6115e670630"
        },
        "item": {
          "id": "637956ca-2403-4647-9c11-ceb273db2d91",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "04b30206-9085-4220-8582-de40bf3a80e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a91e388-1c7e-44f8-a17c-c56f240e9ec6",
        "cursor": {
          "ref": "5207304d-9d3f-4b5b-9e1d-bb2fd000f956",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5b14f6b3-e6f6-444d-a52f-e74b48d24de1"
        },
        "item": {
          "id": "1a91e388-1c7e-44f8-a17c-c56f240e9ec6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0b016c43-f410-4096-8e83-3c47211b4f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017eeae9-a2b1-4687-94c0-80c5bec4a73a",
        "cursor": {
          "ref": "2f1ebee6-38ee-4fe5-bada-9c316bd26db7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2ffaabbb-6650-4366-84f0-5170de6dc8a4"
        },
        "item": {
          "id": "017eeae9-a2b1-4687-94c0-80c5bec4a73a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "982a6003-ab22-47f0-9aed-54dca7263ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f377d6-b02f-4c6c-928d-a2624b1fbf06",
        "cursor": {
          "ref": "1f7ec05c-527c-4b25-8890-f85bfae7d17c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c63e2c42-76d0-44e4-b2c3-02e1526b1dbb"
        },
        "item": {
          "id": "a9f377d6-b02f-4c6c-928d-a2624b1fbf06",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8c38d8a5-084b-4d4e-b99f-2c908c43da33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb4c6bc-ff3f-4a4c-97c2-26eb1408dcad",
        "cursor": {
          "ref": "c35860e5-86e8-498e-a267-df938ba322b0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d13d501d-0098-480d-a042-d219c7420074"
        },
        "item": {
          "id": "fdb4c6bc-ff3f-4a4c-97c2-26eb1408dcad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3ef5d86a-041e-4e22-bf2f-1b1f80f83a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a1e8b1-b95f-452e-96be-0e88622116d7",
        "cursor": {
          "ref": "955f4687-0df7-496c-9fd0-5cbbaa082f9b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "656f5a12-4dca-4234-9da6-d0a96b45fd87"
        },
        "item": {
          "id": "d1a1e8b1-b95f-452e-96be-0e88622116d7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "62e5150a-1294-45ab-a21a-076ad8fd6890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bedbe9d-2a89-4d95-8c0f-7bfb4cacc92c",
        "cursor": {
          "ref": "8ba8c718-ef4a-44cd-9d73-7e65b99738a6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b55fcae6-8561-4193-9c85-2bc9896b0475"
        },
        "item": {
          "id": "8bedbe9d-2a89-4d95-8c0f-7bfb4cacc92c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7b43820e-8eb0-4a86-a1ab-84e9542efff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48066046-575f-4073-b056-273b7e2cb7d5",
        "cursor": {
          "ref": "965a8845-c205-4618-b590-1f607b094743",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bf1a4b63-c20e-43e2-ab12-3b3efe140182"
        },
        "item": {
          "id": "48066046-575f-4073-b056-273b7e2cb7d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5222087e-ee11-4522-9013-362fab7380b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27c8c2f-963c-4c86-a3ce-e87a635454df",
        "cursor": {
          "ref": "8e0603a1-1dfb-4e7a-a88d-a00c75d8d292",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7a02e2e1-bc21-4028-a146-cbdcd19813cf"
        },
        "item": {
          "id": "c27c8c2f-963c-4c86-a3ce-e87a635454df",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8261d243-f9b1-439d-a4cc-48ae679321d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5077f3d1-4bd6-4fd3-a0aa-a6fb318cf22f",
        "cursor": {
          "ref": "111b2068-1790-441c-b8d3-9674893290a6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "27166939-15ae-4a25-9b57-4fefd2108911"
        },
        "item": {
          "id": "5077f3d1-4bd6-4fd3-a0aa-a6fb318cf22f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "89931c64-bf34-4277-aadb-742836ad8b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74c54ca-1d47-49c5-9284-77e27f5962ca",
        "cursor": {
          "ref": "84cb1f80-d92c-41d4-ab92-55f17995980c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d8fbe108-7481-4f38-b2bc-a2933f0f1a91"
        },
        "item": {
          "id": "b74c54ca-1d47-49c5-9284-77e27f5962ca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fa48ce46-5ed3-4563-9c72-7ac6212ca1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd721754-5356-4038-b561-ae80a2356ea6",
        "cursor": {
          "ref": "93526828-9d46-4e20-bae7-e14bffc5a7b7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "43eb3009-8731-417e-b0c7-480b28949d8c"
        },
        "item": {
          "id": "fd721754-5356-4038-b561-ae80a2356ea6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1b4c9b8e-2e5c-4594-ab4a-23dd12a59bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57fc13-bbdb-4b32-88ba-314b635ea233",
        "cursor": {
          "ref": "00fd8240-3d09-4928-baa9-f5b7fd46d5ff",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0a29ddea-331e-4f2b-8c54-e6f10c2c3858"
        },
        "item": {
          "id": "4e57fc13-bbdb-4b32-88ba-314b635ea233",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "587ea335-f33f-4e48-a0d7-9b6ee79192ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfb9365-a8b6-4cc5-a599-78c5e990fc09",
        "cursor": {
          "ref": "0b7bb4d9-a8ff-4380-a810-6d81f7a369ef",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b4f1158c-a9a9-435a-9ec5-92e6ed7eba6d"
        },
        "item": {
          "id": "3dfb9365-a8b6-4cc5-a599-78c5e990fc09",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1f053db9-b50a-410b-8990-ead0ede666fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baae5d6-3b52-40fa-bbc9-ac5db2494ba5",
        "cursor": {
          "ref": "30abfacf-2d13-4f01-9b19-d718629b95a4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "176163e4-eac9-4da3-9129-57a6d3cc9b92"
        },
        "item": {
          "id": "1baae5d6-3b52-40fa-bbc9-ac5db2494ba5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c5bfc175-2697-457a-80d4-8d05788d6610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21748ff-de99-4575-8a8f-f312d5e5447e",
        "cursor": {
          "ref": "fa2f698c-f52e-4162-8065-29a27f939332",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cf4bb739-50ca-4553-9fff-3282f5862991"
        },
        "item": {
          "id": "a21748ff-de99-4575-8a8f-f312d5e5447e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd621b24-60bc-489d-ad54-51131b6891dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de107218-0d33-4767-bf7d-37b118574ef0",
        "cursor": {
          "ref": "c4f0eb71-1f3b-407c-9c31-d14c7e10400c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "655150f7-f771-4e4d-9e41-f8948ff7f9dc"
        },
        "item": {
          "id": "de107218-0d33-4767-bf7d-37b118574ef0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ccf36058-60a3-43a5-9dfe-5a450b528408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4c65b1-bddc-4920-b419-f24db62e0767",
        "cursor": {
          "ref": "05aeb805-56ef-4087-b4ed-305efb769dd9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "505216c5-0538-4f8b-a3b8-0f2bc4cfc223"
        },
        "item": {
          "id": "ef4c65b1-bddc-4920-b419-f24db62e0767",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c17e918-2fec-4520-b1fc-5083cc729eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abb068c-6a0d-4d21-8e46-3f7197f2b4cc",
        "cursor": {
          "ref": "984340af-d5a0-4d5e-a725-dd44ca219395",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4e13ae0a-6542-4160-b48f-8f72eea52c76"
        },
        "item": {
          "id": "7abb068c-6a0d-4d21-8e46-3f7197f2b4cc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e5af7ad4-6e6c-4b0a-ad1a-af45101a2bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94efe29-8832-42fa-938d-b92ba65f920b",
        "cursor": {
          "ref": "95e6025c-6aea-428d-a745-9249f06f9f11",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4fbc2490-b8ab-461b-864d-97f3e0fbc4fa"
        },
        "item": {
          "id": "b94efe29-8832-42fa-938d-b92ba65f920b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "31c9c028-aabf-4bca-84a6-85de32037c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251f28c0-9e2f-4f3a-9f83-664c30508136",
        "cursor": {
          "ref": "e633532f-cbea-498b-93b8-71c8e98972a8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "97870918-d879-41cd-9f81-7235f68ef270"
        },
        "item": {
          "id": "251f28c0-9e2f-4f3a-9f83-664c30508136",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "30ca9c38-5b26-4fd1-ae47-8eb9201834d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8981d678-d5db-4cc8-a30f-6da79a64ea54",
        "cursor": {
          "ref": "ac28880f-d513-42e2-8806-4f1b7e461ca3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aef5d49c-2f8d-4181-9268-8d2f7e294eab"
        },
        "item": {
          "id": "8981d678-d5db-4cc8-a30f-6da79a64ea54",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b7188812-437c-45eb-9718-ed5725d7bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe1a34c-bdc6-4bdb-a6e1-ca2930c46658",
        "cursor": {
          "ref": "12c8f141-2c1a-4c32-8030-ac894b7569c5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8d5004cc-593f-4e40-a060-0dcc72d319c4"
        },
        "item": {
          "id": "4fe1a34c-bdc6-4bdb-a6e1-ca2930c46658",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "36b6dc2b-9c07-40c1-88a2-927115534e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9d81e7-8a35-4893-9d14-6ebadc03cb92",
        "cursor": {
          "ref": "96e5f8fa-eeba-46c1-9b5d-12d6f464ef72",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20b9c389-299b-4e14-b237-9f2733ac7a42"
        },
        "item": {
          "id": "1b9d81e7-8a35-4893-9d14-6ebadc03cb92",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bba094e9-8b05-4df5-b004-d2e7c8a5ba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc890b7-87c5-4848-8230-d4c3edf5d399",
        "cursor": {
          "ref": "7c65e603-2436-4c22-a770-643da034ff6e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bbebb6d5-a35b-4daa-8ebc-a8fe8bbed5f8"
        },
        "item": {
          "id": "6bc890b7-87c5-4848-8230-d4c3edf5d399",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2f05f62a-8c13-4236-b16a-ef2350d317fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e48056-f25f-4bc7-92bb-cd32dcb1dab2",
        "cursor": {
          "ref": "9808e180-6c63-4115-befe-f9f981940603",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4d7aa292-8aee-46fa-85ee-b780958e0556"
        },
        "item": {
          "id": "80e48056-f25f-4bc7-92bb-cd32dcb1dab2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "71ccfaa8-f9d3-4010-9814-0f43fa13d759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b96d1b-179a-45ea-ab23-24a058653396",
        "cursor": {
          "ref": "8a6647cb-5fe7-44f9-ad60-ba8cea8a0651",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0769965a-8e8a-477d-aefd-1c17ced1e683"
        },
        "item": {
          "id": "f5b96d1b-179a-45ea-ab23-24a058653396",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aa8b0c05-e05e-4bd7-be5d-93f529de158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5ed692-d5d3-4efa-b2fb-8e83df87cbf3",
        "cursor": {
          "ref": "c952ac44-f4c6-4bf3-ba7b-0875c887cc1c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "754e9925-d7dc-49e0-bd2a-a2f9ac2262c3"
        },
        "item": {
          "id": "9c5ed692-d5d3-4efa-b2fb-8e83df87cbf3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d7b62f73-7dda-401f-b5b6-ca0c0e961548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2184a814-f1b2-456a-8b2d-ba72a41c7325",
        "cursor": {
          "ref": "798f7c42-856f-475d-a0b4-2fdf39946d53",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "654e2182-f415-4b78-b435-39dc948dd513"
        },
        "item": {
          "id": "2184a814-f1b2-456a-8b2d-ba72a41c7325",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ae9b3b31-fac5-45e3-8e3c-639df8bad481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63309faa-0560-4a2d-968b-4fafe51ba3a8",
        "cursor": {
          "ref": "948d3b03-5ff9-4641-8a7d-da46e5e48526",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "51c5c086-64a3-40a1-ad46-e58edacbc490"
        },
        "item": {
          "id": "63309faa-0560-4a2d-968b-4fafe51ba3a8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "79a0565f-bd3d-42c6-9c5f-35c2e7cf88de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fb18ff-2d56-4188-9e4c-3775dee457ce",
        "cursor": {
          "ref": "c4b57267-f795-4fa3-9b0d-ffc54dbdcf80",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d2facef2-9501-4514-a0d0-58be25304846"
        },
        "item": {
          "id": "30fb18ff-2d56-4188-9e4c-3775dee457ce",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "061b241f-0a85-465b-a529-a42f9ac7c9e4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83373c2c-ff78-4b54-9718-5699a83ec603",
        "cursor": {
          "ref": "39c7a386-4b01-4724-919e-2c5877dd7e2f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b22fc2c0-d2dc-4116-8dc2-4afdaa60975f"
        },
        "item": {
          "id": "83373c2c-ff78-4b54-9718-5699a83ec603",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d3628c14-f2b5-4c69-abdf-a0e480041631",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "099bfb84-3b90-4544-bf34-80ab4fe18552",
        "cursor": {
          "ref": "59061906-8f83-4b42-b47d-a8160116f74a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9af4a2a4-2ad8-414d-ad82-f8e3d9a04cb0"
        },
        "item": {
          "id": "099bfb84-3b90-4544-bf34-80ab4fe18552",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8748a21a-ad5a-4158-9cd1-837c1ff952bc",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f90648a-c3a2-4a35-b51b-abad1577e6b2",
        "cursor": {
          "ref": "86729397-c219-4252-82a8-922b218ff285",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5ab5216a-865a-4786-9023-11a0fa7c0148"
        },
        "item": {
          "id": "9f90648a-c3a2-4a35-b51b-abad1577e6b2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8ee174ae-a153-448d-8d0c-140618115701",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 883
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e770945b-5612-42c7-b3fd-d2ae02dffca6",
        "cursor": {
          "ref": "cb334832-57e1-42c4-9058-8de02e083cb6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5b45d1dd-7709-42cf-b738-65164c452bc1"
        },
        "item": {
          "id": "e770945b-5612-42c7-b3fd-d2ae02dffca6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "47867054-8b22-41b8-9279-651763a5929d",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c5db1e-5161-454d-a564-170fc1a02a86",
        "cursor": {
          "ref": "f18727c0-4ace-4456-b1c2-6dd2eb1e099e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8d9c3409-e4ee-44d2-b4f8-0a8108b06b41"
        },
        "item": {
          "id": "a3c5db1e-5161-454d-a564-170fc1a02a86",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0e3ff73e-4a59-440c-b482-9914f52f49ec",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7407a26-0490-44f8-b3d4-2749bd85ac6a",
        "cursor": {
          "ref": "2391563a-e821-45d2-af0e-61838af76808",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "526c62a8-277a-4721-9f97-907e12271e90"
        },
        "item": {
          "id": "a7407a26-0490-44f8-b3d4-2749bd85ac6a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bddffca7-8625-4e94-8e6d-5f31984a89bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7407a26-0490-44f8-b3d4-2749bd85ac6a",
        "cursor": {
          "ref": "2391563a-e821-45d2-af0e-61838af76808",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "526c62a8-277a-4721-9f97-907e12271e90"
        },
        "item": {
          "id": "a7407a26-0490-44f8-b3d4-2749bd85ac6a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bddffca7-8625-4e94-8e6d-5f31984a89bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79ad25-24e4-4558-b230-c43951906d20",
        "cursor": {
          "ref": "1d076235-6f94-4433-9860-9cbe7b433b97",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c434e17c-00fd-450b-9331-9ef58d8a1013"
        },
        "item": {
          "id": "9c79ad25-24e4-4558-b230-c43951906d20",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "904fe0b5-a933-4c85-9516-b5af23be20c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56f5406-e26d-410b-8828-911d479ffcaf",
        "cursor": {
          "ref": "ebd65838-e43f-4e73-bf1f-509e106afe58",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5ae93d76-ab30-40cd-bb95-f6b3006b3145"
        },
        "item": {
          "id": "e56f5406-e26d-410b-8828-911d479ffcaf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ac7b377-ac92-43e4-bc21-f697f31ecd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa52052-24e3-4b45-9ae5-b19174f340bf",
        "cursor": {
          "ref": "408cfa90-eed9-4c08-81e8-3524a1d4adc3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6ee35d59-1bf2-49f5-b34b-1c1da491fc81"
        },
        "item": {
          "id": "afa52052-24e3-4b45-9ae5-b19174f340bf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d23da3e9-3854-4c80-8641-709eaa477808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8464512-5372-4191-ab44-475a34633ed6",
        "cursor": {
          "ref": "2ef622d2-379c-4dd3-a0aa-9eb3f9ea7f38",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "55713c30-5ac2-4b3a-819e-d72ca8f03fa0"
        },
        "item": {
          "id": "a8464512-5372-4191-ab44-475a34633ed6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "83118b36-17d9-48ef-9b3b-0928fe38c080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47388a04-b64f-47bf-a0d7-d71b72bd1f4d",
        "cursor": {
          "ref": "17782fbb-6fa0-4823-884c-4fa927554738",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c744a623-4ea4-4012-8b57-bded395bce79"
        },
        "item": {
          "id": "47388a04-b64f-47bf-a0d7-d71b72bd1f4d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30759cfb-7b3d-43da-a0af-c59ffcc21928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7011f47f-b339-48c8-9069-bfc237ff5e7c",
        "cursor": {
          "ref": "db57a72a-8dc7-4597-bcd5-86e9f1a08151",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "70c82af5-661c-4421-ad03-3baf2ddccd52"
        },
        "item": {
          "id": "7011f47f-b339-48c8-9069-bfc237ff5e7c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8f03ed4c-4a89-422e-b5e6-c9d95646647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0ee12c-548b-4f6f-b3f5-01050dd9a284",
        "cursor": {
          "ref": "0e52f718-b099-4e70-8de0-6612592c4b32",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "96499d90-72f8-43d6-a179-2c1d6ed30de4"
        },
        "item": {
          "id": "fb0ee12c-548b-4f6f-b3f5-01050dd9a284",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "914f41c1-b301-4479-b0d7-0ef2727bc5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c66bd17-42aa-4be4-a2bd-04447d090dd8",
        "cursor": {
          "ref": "80d53ed4-948e-4b78-bc2d-31c74655099a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a2bbc4b0-d2ba-41c0-80a2-a18caee48a09"
        },
        "item": {
          "id": "8c66bd17-42aa-4be4-a2bd-04447d090dd8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b3401b8-c57a-4af9-80f6-1ea7052f40b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b7822-4b44-4ab7-b219-7ccd27428161",
        "cursor": {
          "ref": "b66ec777-1a69-4a39-8598-472d8fbde440",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6278dbad-818f-4dfc-ad68-74f815660170"
        },
        "item": {
          "id": "607b7822-4b44-4ab7-b219-7ccd27428161",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f25e699-9192-42ce-940c-9124860eff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c85b2d-4c58-4fa8-9271-ab71a223b446",
        "cursor": {
          "ref": "f938c401-8a10-4b38-8395-5b17d9f1cf2d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "09a6209e-7691-42e2-84da-69973f43d396"
        },
        "item": {
          "id": "54c85b2d-4c58-4fa8-9271-ab71a223b446",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d6b81ad0-461d-43e8-90b3-847e7110e34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68544ad-7ed3-43a7-a5d1-d9d7797c9724",
        "cursor": {
          "ref": "7fdef91c-f4b4-4d53-a5d0-12448f434f45",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "404a4283-bb6c-4945-863a-452777f80404"
        },
        "item": {
          "id": "b68544ad-7ed3-43a7-a5d1-d9d7797c9724",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1432e986-b9bc-499f-9b10-e6c5767a9fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2c00d7-8a9c-4e60-8f9d-404196f237ca",
        "cursor": {
          "ref": "df81b0b7-5cd0-461e-8ba3-1da8d0196104",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b2f61fc4-0411-4da1-9b20-1096b0c0806e"
        },
        "item": {
          "id": "4a2c00d7-8a9c-4e60-8f9d-404196f237ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5db0dbce-08f4-4c55-ba00-ece2662f9b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98224c4-39f9-477f-a46d-1850bde30e0d",
        "cursor": {
          "ref": "b488faf1-d681-4aba-89bc-62588bda0762",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "010971a0-2c9e-499f-8d2a-01b58a656d25"
        },
        "item": {
          "id": "b98224c4-39f9-477f-a46d-1850bde30e0d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e712e3c4-0119-49fd-bf6e-2dc0d28004ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba20c0bc-c5c2-4047-8e14-120aa2c432d2",
        "cursor": {
          "ref": "4bcd5179-8661-4825-a134-06aa33d1c353",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e20134ca-fd32-476a-86ce-2f2df7f58529"
        },
        "item": {
          "id": "ba20c0bc-c5c2-4047-8e14-120aa2c432d2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5a481330-f627-4e37-976b-a53a46622c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4778f8-9c73-4884-be86-32b6f0bf79c4",
        "cursor": {
          "ref": "6d2b6f0d-8db9-450a-a417-ff7e4328bf0d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bf00c8e-d2b6-41e5-bf0a-302675950dea"
        },
        "item": {
          "id": "ef4778f8-9c73-4884-be86-32b6f0bf79c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b5e4e7c1-aaa3-4703-9993-173b8a7ab6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1119d4-024b-4c71-b6ed-6c0ddf905819",
        "cursor": {
          "ref": "3f0951a1-9e70-49fb-8dac-15f38401a0bf",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c9ba1785-66e4-4cd1-9b11-9217063f5cda"
        },
        "item": {
          "id": "dc1119d4-024b-4c71-b6ed-6c0ddf905819",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df6c71e2-5fe3-417c-87e3-e7eb0ecb9b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb013a1-8f79-4d82-8173-b2d4e893d18e",
        "cursor": {
          "ref": "211afa2c-53e5-43c5-8325-2277a84a4b70",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2c41d867-a74c-425d-b2d3-96df43d451d3"
        },
        "item": {
          "id": "ffb013a1-8f79-4d82-8173-b2d4e893d18e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "67bc9e78-c9bd-43a0-9fa8-b1bddd51e1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bd5889-51c4-4063-9901-0b8ecdc87239",
        "cursor": {
          "ref": "4afce122-1a75-4421-82e8-ba45b5816043",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1b827da7-5e82-4d6c-8b4a-fe67f0705a4d"
        },
        "item": {
          "id": "62bd5889-51c4-4063-9901-0b8ecdc87239",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ebc44049-7656-4b98-bc4a-fada762456af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9deb3b-960f-4e7f-91f1-b35ddb945448",
        "cursor": {
          "ref": "b64b2783-afb7-433e-85eb-f8f938f426cd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8862348c-c4ca-4fd2-93f1-ce3563682868"
        },
        "item": {
          "id": "6a9deb3b-960f-4e7f-91f1-b35ddb945448",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d6a4eb52-2f31-481f-9abe-ee33b7c4740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a71f76-3cff-4dab-a983-c5adb8e08751",
        "cursor": {
          "ref": "aa5d8d08-b172-4aec-86e0-51ed6ebe2fc6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c088807d-c524-45a6-a280-4fb73c19d870"
        },
        "item": {
          "id": "22a71f76-3cff-4dab-a983-c5adb8e08751",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "53db62d1-3613-41d9-8481-3c123d27e565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1266b87-213e-4cb1-9b67-1c4cf9e74567",
        "cursor": {
          "ref": "ffdce16d-6003-4a37-9230-4dedb76dce5d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "55802f32-f63c-4b29-bb48-ff6940a0ba43"
        },
        "item": {
          "id": "a1266b87-213e-4cb1-9b67-1c4cf9e74567",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df46832e-439b-42e7-81d6-97987de58c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7b37ca-9a66-4b35-b638-b0e3008b4ae7",
        "cursor": {
          "ref": "b1b574eb-3f21-4628-bf3d-94284445af0e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4af8b876-ecc5-42c8-ae46-3f00ed88339b"
        },
        "item": {
          "id": "9c7b37ca-9a66-4b35-b638-b0e3008b4ae7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d265150c-141d-426e-958e-356b8e374647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec99c8b-d1ec-43f2-ba56-96905095cab4",
        "cursor": {
          "ref": "87207789-dfec-4db6-8201-c22db0809a5f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3c98de5-caa7-430c-b297-2b96cb2771f2"
        },
        "item": {
          "id": "7ec99c8b-d1ec-43f2-ba56-96905095cab4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4adf7399-8107-496b-8393-e00ac8c2c061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace9107d-b701-414f-a698-d2fd67433bdc",
        "cursor": {
          "ref": "19a29734-0aa5-4f35-8732-0db8670cef0f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b6f9c1f3-9e97-422e-85a2-7b66490dd019"
        },
        "item": {
          "id": "ace9107d-b701-414f-a698-d2fd67433bdc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "176cd55c-9a42-4364-a899-d879f7bef4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5036b53b-0929-414b-bc2c-e58db4912ef1",
        "cursor": {
          "ref": "241d0106-417c-465a-8c38-b79d3976b227",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "df130690-7257-4110-8f64-09e191c70829"
        },
        "item": {
          "id": "5036b53b-0929-414b-bc2c-e58db4912ef1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f08632ca-c352-4b21-8b9e-a06f69ba88c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e1876c-802d-4141-aa4c-e6141395e2bb",
        "cursor": {
          "ref": "5614ac82-cf95-4028-9f75-ad05879219d4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b63d1c10-2eb4-41b2-8f4f-3388a26de4e8"
        },
        "item": {
          "id": "60e1876c-802d-4141-aa4c-e6141395e2bb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75568b84-d34f-4d64-88b2-2c78377993d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f6876a-1f95-4ae3-83a2-4a1750448f43",
        "cursor": {
          "ref": "de1f6199-c11b-49b8-aaaa-7233c68f4dd7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6f2101a8-9d87-4a75-a123-b0262c9189d8"
        },
        "item": {
          "id": "37f6876a-1f95-4ae3-83a2-4a1750448f43",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "40c4dfd6-6e5d-4c27-b573-6c2ae6a8082b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabfc160-57e5-47d7-a8f1-6484faed6426",
        "cursor": {
          "ref": "f4ee803b-b355-4e22-8f96-504d2d6af255",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aabcb938-f2d3-470b-93d0-5b5fb7b94283"
        },
        "item": {
          "id": "cabfc160-57e5-47d7-a8f1-6484faed6426",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f34cdf67-e8c1-4954-800f-465d6b2b5b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edf75c6-dd4b-45b7-8d30-91d5f2e3e570",
        "cursor": {
          "ref": "9f14beb0-79b4-45ee-a84f-e7c528e6dbd2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2fbdbadd-4d0e-4cf1-8ea1-f06484381985"
        },
        "item": {
          "id": "3edf75c6-dd4b-45b7-8d30-91d5f2e3e570",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad14cea6-71c6-4c96-ac99-275c7684a915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7672b49c-0fed-4b73-9e46-eece9e378152",
        "cursor": {
          "ref": "d922e275-8f47-4964-a1db-326fc8e45c56",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c75b1d9e-eaf8-4d28-a562-6aa6ba5e822f"
        },
        "item": {
          "id": "7672b49c-0fed-4b73-9e46-eece9e378152",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "406b771b-fe36-41fd-8e88-c13ccac3b357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19771e55-6d69-4396-a838-38aec1e2ae8e",
        "cursor": {
          "ref": "f7a1c119-aa41-462f-84af-df932f445329",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a1cb42f0-7571-4dcc-a9c3-0cb691d67f3b"
        },
        "item": {
          "id": "19771e55-6d69-4396-a838-38aec1e2ae8e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "46b1358b-4919-454a-87d4-93328d1f0a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0980204f-a61f-4d82-ab71-f55e4002e379",
        "cursor": {
          "ref": "436eb34c-ec87-4ce9-819d-728a3137cda4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "319d39ab-c367-4904-b708-73198adbfd38"
        },
        "item": {
          "id": "0980204f-a61f-4d82-ab71-f55e4002e379",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "32f718a5-0679-4333-a337-21d7721dc7fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4849cb51-a002-4451-80ab-a10d8692d69a",
        "cursor": {
          "ref": "12c42188-2876-424b-a81c-f4b8e08728bd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "324e06ba-bbcb-4ee4-b951-0fcd6d6a1939"
        },
        "item": {
          "id": "4849cb51-a002-4451-80ab-a10d8692d69a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "10d2102c-8a1c-4318-ab1f-7d8c3c66d655",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1570baf-ef9f-4a27-875b-9584fbfddbeb",
        "cursor": {
          "ref": "b9c05ded-5ade-4895-8b9b-5a210c6d14d3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "712b52cb-6ebd-4a61-810e-808a8aad77f9"
        },
        "item": {
          "id": "d1570baf-ef9f-4a27-875b-9584fbfddbeb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "efdba676-fc02-4a47-9af1-2bb7eb042305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1570baf-ef9f-4a27-875b-9584fbfddbeb",
        "cursor": {
          "ref": "b9c05ded-5ade-4895-8b9b-5a210c6d14d3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "712b52cb-6ebd-4a61-810e-808a8aad77f9"
        },
        "item": {
          "id": "d1570baf-ef9f-4a27-875b-9584fbfddbeb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "efdba676-fc02-4a47-9af1-2bb7eb042305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f648051-3f89-461e-bf5f-dd004852e045",
        "cursor": {
          "ref": "17085796-a916-4225-ae02-37a20aa1d64c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1b7c4240-b83f-4fb6-bb47-91c119e2e366"
        },
        "item": {
          "id": "2f648051-3f89-461e-bf5f-dd004852e045",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "da9049bc-5208-44d2-874e-3e9885b13a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80051516-d513-4ed1-b01d-1aa0e197623a",
        "cursor": {
          "ref": "5d9d0bfa-7403-4c07-9965-a82012b3be2e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a228de02-146a-40a0-8130-39d6a0014de3"
        },
        "item": {
          "id": "80051516-d513-4ed1-b01d-1aa0e197623a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7ae5dc90-d75a-46fa-8cdf-d6ed81eca20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3271aa67-a5e5-440e-a32d-21e25c15be09",
        "cursor": {
          "ref": "fd5866e0-e202-4c98-a0d4-116de7012205",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c72cd055-0b99-4b24-a26b-e58b526001f5"
        },
        "item": {
          "id": "3271aa67-a5e5-440e-a32d-21e25c15be09",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d04a3f65-0f8d-4292-a039-59f61453fbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374b428-9991-4c12-8b82-a27f938748fc",
        "cursor": {
          "ref": "43f58c11-a759-418d-b9f9-19991a62b11b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2a9e7f6c-b689-4ace-b72d-de3047da39c2"
        },
        "item": {
          "id": "e374b428-9991-4c12-8b82-a27f938748fc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3bebb22a-05f3-45a1-a144-b7900472fd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a7a99a-9f20-43d8-a19c-0df332fe7b16",
        "cursor": {
          "ref": "efce4adc-32a5-42c0-bc50-b87711bcf3f6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5a8083f6-1f98-4d2b-9153-aaaddae6c29b"
        },
        "item": {
          "id": "e5a7a99a-9f20-43d8-a19c-0df332fe7b16",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "95888085-8310-48b5-bd55-3e41113fbe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d867776-5a20-462a-bfb1-46444d467352",
        "cursor": {
          "ref": "c60a0a0d-5fc8-41d7-b5a6-d7d2a0c4f7e9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "38c65f25-5543-49f3-83b5-bc24d7b30bd2"
        },
        "item": {
          "id": "9d867776-5a20-462a-bfb1-46444d467352",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eb16aba8-fa9b-474f-9e97-7a05a8f1ba82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf95bbd-66f1-4f57-a6f8-f9a9952f8439",
        "cursor": {
          "ref": "b790ce3e-ba56-462b-92db-e107178681ee",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f4eeb520-8437-4d36-8def-ccc92cb34f52"
        },
        "item": {
          "id": "6cf95bbd-66f1-4f57-a6f8-f9a9952f8439",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b2806b32-88d9-446f-abb1-8231db89d78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6619c046-18f8-4c89-98bf-0dc2749f158c",
        "cursor": {
          "ref": "a7800b93-ce1b-4c5a-ad68-733b4148966d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a9b687ba-8d5c-430d-8b94-c7de3413deb3"
        },
        "item": {
          "id": "6619c046-18f8-4c89-98bf-0dc2749f158c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c9eda321-7d5e-447f-bf73-4281edfc1f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4878d8-bf81-4971-9134-e92b58ab4783",
        "cursor": {
          "ref": "66612ea8-d635-4b6b-b19c-ebe3f20dfc11",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "12ee8781-f5e4-42ec-b8c0-54920492e360"
        },
        "item": {
          "id": "ff4878d8-bf81-4971-9134-e92b58ab4783",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a7bf359a-c17c-4e81-a5b4-738318aae6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c0980e-ccb3-48a0-971b-eb4cc11e2508",
        "cursor": {
          "ref": "e9218bb3-8b67-4b8a-b490-116fe48b590c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3a67cf2f-ebf3-433c-9c9f-3723dac3b3f6"
        },
        "item": {
          "id": "89c0980e-ccb3-48a0-971b-eb4cc11e2508",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "02e8356c-9ff4-42cb-91b2-5ea8381424ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc5dd76-ab5a-4307-b31c-fe7714a23db8",
        "cursor": {
          "ref": "212e6944-2e7f-4d57-ab93-66893809e3ba",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ef28f6b7-023e-402a-9843-1aafcfedbec9"
        },
        "item": {
          "id": "ccc5dd76-ab5a-4307-b31c-fe7714a23db8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "823c79e9-8df5-4a66-881b-1fb58db55fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb40c3a-62e8-4e00-b808-d6574ae10b29",
        "cursor": {
          "ref": "cd85d17b-220f-4b3d-b4b6-ea334051a871",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "973d9983-5f19-46d9-a94e-5234c80dd8e5"
        },
        "item": {
          "id": "fcb40c3a-62e8-4e00-b808-d6574ae10b29",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f23aa036-b876-4c99-b18f-2a06afcc1e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7117482c-fbdc-45ea-bbb3-3496981afcf7",
        "cursor": {
          "ref": "a272a2df-a63b-4d3c-b221-c690feade78b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c52ff5d1-a4eb-4d02-8251-f733d2ca5c09"
        },
        "item": {
          "id": "7117482c-fbdc-45ea-bbb3-3496981afcf7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9ea391cb-d8ce-4224-9152-b578706bfea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2753d8c9-7c50-4700-ae30-f1d76c7dab33",
        "cursor": {
          "ref": "67843792-80e9-456c-bc42-4ac7bf4e5af7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8cda44b7-7803-4679-8e55-09799eef9457"
        },
        "item": {
          "id": "2753d8c9-7c50-4700-ae30-f1d76c7dab33",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ac9c1d4-142d-4f1a-8a2f-631a00337133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de171ed6-04df-49e9-b0f7-97cd80dd6aed",
        "cursor": {
          "ref": "821c9a23-e9b6-4ef4-aecf-b14f9e81aaae",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "685d2b80-8f2c-4cf0-a68a-98051bf04bd1"
        },
        "item": {
          "id": "de171ed6-04df-49e9-b0f7-97cd80dd6aed",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0bc1634c-c392-4532-92a4-28c1fb98541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725decb6-2433-480d-a466-b7392c55b9ba",
        "cursor": {
          "ref": "b8742203-c011-42f2-a993-dbb4e55fb338",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f28eed29-292a-4eaa-8d07-1c2324540bba"
        },
        "item": {
          "id": "725decb6-2433-480d-a466-b7392c55b9ba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "093c8d91-4fbe-4694-ae20-56d926fe0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f9242a-6081-437b-a0fd-56f277309246",
        "cursor": {
          "ref": "ca85b667-5c1e-417a-acdc-e320f17f9647",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f24988c5-b2a1-4fe4-a5c0-7f670a929da3"
        },
        "item": {
          "id": "48f9242a-6081-437b-a0fd-56f277309246",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b19b93a9-6d0d-458d-bbc1-38b3a7c25fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8faf35d-3d2f-4227-a365-068e322f8117",
        "cursor": {
          "ref": "374c7ca1-8d24-436e-83d6-8e47fe4a3f58",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "94c3779f-256b-4971-8036-12e280435022"
        },
        "item": {
          "id": "f8faf35d-3d2f-4227-a365-068e322f8117",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f6167d96-093e-4ef2-b3ea-e244cdb20c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4fe38b-02c1-4639-a06e-605587b7103a",
        "cursor": {
          "ref": "d25626be-83ad-4a36-b3f3-f9655a88f695",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b7bc4a77-32cd-46d5-9349-dfb66605b0dd"
        },
        "item": {
          "id": "ae4fe38b-02c1-4639-a06e-605587b7103a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eac3aee9-5218-4299-8b1a-6e639cbaf40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45878a0c-006b-4d9b-a5a3-7dfa8775d2a4",
        "cursor": {
          "ref": "c6800d11-23ff-4a61-bcfc-152b924199a6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b26ec41-15b9-4f53-a0ce-97c28116f24c"
        },
        "item": {
          "id": "45878a0c-006b-4d9b-a5a3-7dfa8775d2a4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b800d8fd-845f-4bff-a45f-433633d87197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ab83d3-c2b6-4051-8150-8fd6dd32376a",
        "cursor": {
          "ref": "89fb13b5-f145-46e0-88d1-a906ed82e95a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e4c8b348-426e-4644-9383-9d8db6adec30"
        },
        "item": {
          "id": "21ab83d3-c2b6-4051-8150-8fd6dd32376a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b502171-2b7d-44bf-b1d0-9763c7818060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2096a95c-9bbf-404b-804a-965aace5f084",
        "cursor": {
          "ref": "d80a5571-cb2e-431d-b354-b8ac2003fb34",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "61852a8a-f092-4da7-a8ab-f098759f9e54"
        },
        "item": {
          "id": "2096a95c-9bbf-404b-804a-965aace5f084",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fbde722d-a8af-4674-9991-4d1a138b87b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a1d2e7-78d9-4818-aa11-adb2c648c047",
        "cursor": {
          "ref": "fb0429ab-b373-47f9-b0a3-485a2d7ec5d0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4ec446bc-6031-4951-a73f-2cd10a2d909c"
        },
        "item": {
          "id": "07a1d2e7-78d9-4818-aa11-adb2c648c047",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba65284a-c462-4c80-8a1e-c65426dae9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68227a2c-8755-4744-80af-235ee47c69c1",
        "cursor": {
          "ref": "46008fef-678e-4022-a8b1-64f084dade0d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f72c6ab8-4353-4df1-8ad1-599b5734ddcf"
        },
        "item": {
          "id": "68227a2c-8755-4744-80af-235ee47c69c1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5b670705-fab0-4e4d-bacc-80f2d6c34176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05b2cab-c9c5-481d-a930-faff012a31e9",
        "cursor": {
          "ref": "85ba8072-fd25-4a09-b7f7-cea8f16fbea1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f6855755-43c8-4396-a159-cf3e6a30fa53"
        },
        "item": {
          "id": "f05b2cab-c9c5-481d-a930-faff012a31e9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "07ea6d58-fa04-41a5-a58b-261976c94769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a6e9b4-b6ce-4001-9094-c30ebdac5c2d",
        "cursor": {
          "ref": "5d73a6d2-71e4-4546-9a7d-20c63a3ec710",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0da1e52c-9dc7-481b-a874-4dca336ac00d"
        },
        "item": {
          "id": "b0a6e9b4-b6ce-4001-9094-c30ebdac5c2d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "88b02b74-78c1-4506-bbe9-24d20774bcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea843f64-899d-4b66-85d2-2be55d2ac01e",
        "cursor": {
          "ref": "fdb28432-239d-4e12-874c-0b9015403749",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1655bb7a-a1c3-4ce0-be9b-a9c379d19439"
        },
        "item": {
          "id": "ea843f64-899d-4b66-85d2-2be55d2ac01e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c25704cf-e95b-4c7e-8d99-f8be315f967f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd3d572-10f5-48eb-9404-72086af9be6f",
        "cursor": {
          "ref": "e82a5bb1-c149-4407-8eff-22ff33b1e996",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c119410f-ffbe-453b-b47c-7f5d7f9d7058"
        },
        "item": {
          "id": "acd3d572-10f5-48eb-9404-72086af9be6f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2319c434-cb4b-4182-b090-09f82d343e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963936c8-b9d6-46b0-866e-247ed284427b",
        "cursor": {
          "ref": "2eeef111-a599-4238-ba8b-a55bd010b181",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3d755ed6-d7ed-4796-94ab-c7cc893f79d6"
        },
        "item": {
          "id": "963936c8-b9d6-46b0-866e-247ed284427b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5df80d07-75cc-41a2-a369-a36ed2f31e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18e6f86-c6f5-480c-bded-5cee5d3abc37",
        "cursor": {
          "ref": "4445e2b4-01f2-4cbc-b97f-b3d241d737cc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a18a6d9-8ce7-4b8a-b626-ea64177ce95c"
        },
        "item": {
          "id": "f18e6f86-c6f5-480c-bded-5cee5d3abc37",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "38f99859-0d21-4912-9114-5bffe36fc67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618d2453-66df-48fb-b632-d73c845903da",
        "cursor": {
          "ref": "0a04df19-a4e8-4a48-82c4-77b9031721f9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cea31266-fa86-45f1-8901-f89f545bacb9"
        },
        "item": {
          "id": "618d2453-66df-48fb-b632-d73c845903da",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0231a8c1-2adb-4461-8f0f-271000884e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbefe4c-938d-4c35-8249-6fe32852ecc3",
        "cursor": {
          "ref": "dc9b342b-82d8-48a2-a36f-c81b2ea79a88",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ddc557be-532c-484a-b19b-308d721c7d9c"
        },
        "item": {
          "id": "0cbefe4c-938d-4c35-8249-6fe32852ecc3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "42dbaabd-03ba-46f5-93a6-de07909b0fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6738a2-b6ad-4afc-854a-52c370c3ab0d",
        "cursor": {
          "ref": "1a34b1d0-6db2-4eee-9e9d-7dc475725861",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bca33fea-1bb2-498a-8b0c-65864ab4dfa9"
        },
        "item": {
          "id": "4d6738a2-b6ad-4afc-854a-52c370c3ab0d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a693e3a0-a741-4d34-9d3d-df4b183bf318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c191ced4-c3fa-4790-b4e9-5fec75016c79",
        "cursor": {
          "ref": "b8c1b05e-fe05-431b-95b6-e56fb7f304ab",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35af8466-29f0-428a-9661-8fedf27799e5"
        },
        "item": {
          "id": "c191ced4-c3fa-4790-b4e9-5fec75016c79",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dde872d7-82ed-4e22-9e0a-2d0ef2bf0444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2542aaf6-a31f-4e63-ba6c-3257b9169d0a",
        "cursor": {
          "ref": "1a123a97-a3c1-4e64-bc32-79d391daf784",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "931ac262-363e-4240-811c-8935cf48cd1b"
        },
        "item": {
          "id": "2542aaf6-a31f-4e63-ba6c-3257b9169d0a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "84249d14-7e5f-4d59-87ee-1f95de942f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89324443-acab-4d67-b390-0a2b1f02b488",
        "cursor": {
          "ref": "5450fa7d-d700-4a31-8a79-f80848cdcaaf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a7c90e74-1f7a-4e48-8e90-42269959b4b8"
        },
        "item": {
          "id": "89324443-acab-4d67-b390-0a2b1f02b488",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "23dbcc69-b638-4739-8a91-d4e52829adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66751e4d-875e-4d92-bdea-5cba891ef1d3",
        "cursor": {
          "ref": "e839b244-d0d1-4c72-9439-2784a7a6039b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4e5297cf-ca1a-4069-ad3a-e4a458b57360"
        },
        "item": {
          "id": "66751e4d-875e-4d92-bdea-5cba891ef1d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1d85352c-fd93-47a7-a1e9-f8ce52b533eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51a8708-6669-460c-88fa-b973ba4416f6",
        "cursor": {
          "ref": "09341738-feb4-46a6-9589-6935d11f4ace",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "58ea92b4-4a1b-43d5-86f0-53c27dd5ff59"
        },
        "item": {
          "id": "c51a8708-6669-460c-88fa-b973ba4416f6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7d5e3fd4-b529-4f1c-abb1-11dcd6a35ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cf2dc6-8067-4998-ad3b-585e8eef3194",
        "cursor": {
          "ref": "7a687ebb-8d95-4305-a420-6ebfd38a4a1a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d8530a0d-90ff-4e2b-811d-5b85bbf25f39"
        },
        "item": {
          "id": "32cf2dc6-8067-4998-ad3b-585e8eef3194",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cfe281b3-1f18-4fad-90e6-1334a4c6d473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2930656f-fb57-43b9-b2e2-582f6affc022",
        "cursor": {
          "ref": "43d381b4-738d-40e3-9fa0-3e68023042e4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "24ff8c61-f306-4b2e-90ce-5690601e72a5"
        },
        "item": {
          "id": "2930656f-fb57-43b9-b2e2-582f6affc022",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba80c2fc-cbc1-4150-8b22-19845f847f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd18218c-f3d9-4ee2-8ecd-d67d0f6ea15b",
        "cursor": {
          "ref": "d804165c-bbdd-4c60-8e76-e0e4fa3837eb",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0d20e325-d408-4fba-8445-4c035ae20939"
        },
        "item": {
          "id": "fd18218c-f3d9-4ee2-8ecd-d67d0f6ea15b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aa29204a-d28c-4b3a-a928-69aa0a8ce937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afde0bff-bca7-41b1-8042-54fb5f9a2ad6",
        "cursor": {
          "ref": "fb66bc24-95e4-41f9-b720-69d7e80d337d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a95e982a-d920-4e6e-9acb-aba4293e2d7c"
        },
        "item": {
          "id": "afde0bff-bca7-41b1-8042-54fb5f9a2ad6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "28db31e0-12e5-4e88-9019-240a8edc6428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e5e7b9-b8ff-4b2d-a694-88aae02b5634",
        "cursor": {
          "ref": "03dac375-9d61-4bb5-9bb9-43fec1b6205f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d88bb36b-9fb6-49b8-915e-a91dd57b2fcd"
        },
        "item": {
          "id": "b7e5e7b9-b8ff-4b2d-a694-88aae02b5634",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1726a3ee-f9fb-492d-9ab8-a23bee120eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42b60a8-1f0a-4432-b5c5-af6db402ea90",
        "cursor": {
          "ref": "e44bda82-a518-493f-af49-f9af12472bb0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fab9f7eb-94b9-4967-bda0-36635185d95f"
        },
        "item": {
          "id": "d42b60a8-1f0a-4432-b5c5-af6db402ea90",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "36ee620a-8c2f-4598-9924-3b0c715e83e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd14015d-4520-41f6-a99a-bc1586edbd7c",
        "cursor": {
          "ref": "e985a58c-76bd-496a-abdc-9754a30abda4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "42a9540b-1adc-498a-a73a-ad3f617d33f5"
        },
        "item": {
          "id": "bd14015d-4520-41f6-a99a-bc1586edbd7c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ef3f2879-a721-4402-bda0-a78f0b87f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6436b0e7-2b73-4d54-a522-c4ba394ae64d",
        "cursor": {
          "ref": "f9a6ffc2-e9f5-41a2-934d-aca91364a9c8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "caf8def8-1146-4014-8d22-6fdb917e1339"
        },
        "item": {
          "id": "6436b0e7-2b73-4d54-a522-c4ba394ae64d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b89a3419-752b-4643-b90a-27ba47b615e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4b2c57-d7ab-4209-9059-346cb72fece1",
        "cursor": {
          "ref": "44fe1bb7-454a-4b62-8344-e00f2daf04e6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "35f49e71-cb99-4084-b82a-62f497edca21"
        },
        "item": {
          "id": "1a4b2c57-d7ab-4209-9059-346cb72fece1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3885084b-9636-4d40-8f07-e7646dd58ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed02c8a1-7a09-491b-ac25-d7911cdb3e2e",
        "cursor": {
          "ref": "24a92a37-9321-4d50-8499-226a632059e9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2bacbe21-d575-477a-aa33-94abb8304013"
        },
        "item": {
          "id": "ed02c8a1-7a09-491b-ac25-d7911cdb3e2e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ac6c19da-9214-49da-93c1-ea11ea7ce0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee65cc-3bbd-4d56-af4b-452ffe2a7042",
        "cursor": {
          "ref": "2c389ae6-9ef4-478d-95d0-76447a17c4c2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6d9d69dd-9050-4038-9efe-c692cb98c868"
        },
        "item": {
          "id": "2cee65cc-3bbd-4d56-af4b-452ffe2a7042",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9b28810a-ad77-4881-939b-a33d6e4164fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473628c-f01f-4daf-843f-5d2b29a1e9f0",
        "cursor": {
          "ref": "2e143824-c715-4eb9-b828-a5ead8797d2a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "42433d0c-24f0-49bd-a712-b8c91e472d7d"
        },
        "item": {
          "id": "e473628c-f01f-4daf-843f-5d2b29a1e9f0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "15fdf6b8-07f8-4fef-93bb-2585a12ea28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0dacce-08b6-4b1c-bc35-3ee88b0797c5",
        "cursor": {
          "ref": "3f3dc259-8e5b-4163-a67d-326e9bad2131",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a61ec25f-f800-4525-bbd1-23dfea64e4b3"
        },
        "item": {
          "id": "5e0dacce-08b6-4b1c-bc35-3ee88b0797c5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0be9a122-41f8-48e2-8925-1b541cb3f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b51b6-67c0-41e6-b451-842616b34dfa",
        "cursor": {
          "ref": "6ed0ed69-73dc-439b-8c62-e5f98a091913",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d9a85dc9-c6cc-4905-b462-4e0e111662f4"
        },
        "item": {
          "id": "933b51b6-67c0-41e6-b451-842616b34dfa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2f0881c1-9e48-470e-afce-1703f6a58013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817dd985-9f61-4d85-8d34-f6a94b1e8369",
        "cursor": {
          "ref": "3f9e3b21-675b-407d-bb4a-cde177246e21",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e1c909a-8f53-4c84-a71a-9397f3d5af60"
        },
        "item": {
          "id": "817dd985-9f61-4d85-8d34-f6a94b1e8369",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c981a876-4cf9-44ad-ab4c-ffff3a8cc88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3443423b-ff96-4acc-85b0-eef26504b5f3",
        "cursor": {
          "ref": "7f29b307-374a-4c03-bc36-3224f166dc45",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8009773b-4980-4781-a826-9b8316d36ca1"
        },
        "item": {
          "id": "3443423b-ff96-4acc-85b0-eef26504b5f3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "35df1d4f-c1eb-4200-a3e6-23bc94648333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2da2a28-4ef9-4533-8362-481284535095",
        "cursor": {
          "ref": "e143101f-bd6e-4992-814b-b9917daedd27",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "27da0aef-0c3c-4528-8234-adf7621a636e"
        },
        "item": {
          "id": "f2da2a28-4ef9-4533-8362-481284535095",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "91400843-58fa-40a0-b609-2c8fdd55c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a5a795-7f09-40cb-8b31-a27bc408497e",
        "cursor": {
          "ref": "d3e8c2f9-5927-47a0-8e87-56771a5bfffe",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a3a7a44d-aad1-4785-9c0e-36071634ac5a"
        },
        "item": {
          "id": "65a5a795-7f09-40cb-8b31-a27bc408497e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d6a01d3-8cd4-4a4f-9e8b-788424a8eeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec9ab3c-fba5-4743-8630-1c0779876e64",
        "cursor": {
          "ref": "181cb672-10de-4818-b6c7-87095081dae8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8426744b-cb47-4962-ac71-2351c7c24093"
        },
        "item": {
          "id": "0ec9ab3c-fba5-4743-8630-1c0779876e64",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aa8b061f-2b01-4804-b47f-3913c6e7539d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da52d1fc-967a-41dc-b169-7432cf880a63",
        "cursor": {
          "ref": "268e9d4e-bf65-49ce-b257-bbbb5e8104f6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "53e41ea0-3eaa-4baf-9f0e-057c90a39556"
        },
        "item": {
          "id": "da52d1fc-967a-41dc-b169-7432cf880a63",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f87868d4-4891-4419-be51-56b0dd786b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0a0f48-b03e-471a-893f-94187469c238",
        "cursor": {
          "ref": "a622bdd6-9291-4c83-b17d-9760571484ec",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9dd946d2-7e20-47f3-8900-7eaf4367a531"
        },
        "item": {
          "id": "6d0a0f48-b03e-471a-893f-94187469c238",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1d616832-15f9-4696-b149-878b9f7b9b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3888aa-f960-46ed-9699-d978a6bbc4f3",
        "cursor": {
          "ref": "4f712375-328f-4bbf-8e8e-ed848c583ddb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00c0c08d-988a-4bef-a4ee-6206643ecb54"
        },
        "item": {
          "id": "2e3888aa-f960-46ed-9699-d978a6bbc4f3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "faa8a4cb-aad3-4f15-8212-911ee396380b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120349b2-c3d6-44bd-9ea2-c66d549cd911",
        "cursor": {
          "ref": "8e907257-b51b-4d9e-9439-dc87ee26aa49",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c09f153f-9a96-4498-9738-c5a35586bf14"
        },
        "item": {
          "id": "120349b2-c3d6-44bd-9ea2-c66d549cd911",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "26c59224-87f6-40cf-a922-fdbeb9aa70e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725e2aa4-773d-410a-8d93-03fff3223a6f",
        "cursor": {
          "ref": "4bff790e-8de2-4005-b8e6-06ba7d82b22b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2b9329a-bad3-40c5-b102-8c15a953a763"
        },
        "item": {
          "id": "725e2aa4-773d-410a-8d93-03fff3223a6f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f0a3aced-286e-4650-bee3-0ed49b454165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5686aaf-c6d1-47bd-900d-eff4259a69c7",
        "cursor": {
          "ref": "5a870c31-1e37-49ce-addb-ee1e1c36e173",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fb7489a3-0886-4f39-b8b0-b99b8db2544a"
        },
        "item": {
          "id": "e5686aaf-c6d1-47bd-900d-eff4259a69c7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a6182f28-6469-4c44-8138-2f317e1df4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddafddb-8aa2-4a9a-be34-d3f0ac79c60b",
        "cursor": {
          "ref": "5fa3ce1e-4185-46d0-86b3-4e90e92920b1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f57a7c6-a871-414d-93b3-7ef5ad012e62"
        },
        "item": {
          "id": "4ddafddb-8aa2-4a9a-be34-d3f0ac79c60b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "296b02dd-6577-45d1-821a-86536afb5368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815dc019-0d26-4932-a114-6a7cc48f0cbc",
        "cursor": {
          "ref": "f2c4c647-36fb-4f55-b392-414befb906f7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "662011e6-fa9c-4e2e-934e-a64a7a797c80"
        },
        "item": {
          "id": "815dc019-0d26-4932-a114-6a7cc48f0cbc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "98b81d65-aa35-4315-a0b7-52eb3c3ce302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b59dc14-36ab-4cdf-921a-90d3c0fc293c",
        "cursor": {
          "ref": "d917974d-1c90-4073-8c8b-39cc469d53ad",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "218ba394-9020-475e-a22f-8dbd9c3ee7bd"
        },
        "item": {
          "id": "6b59dc14-36ab-4cdf-921a-90d3c0fc293c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3581400f-8356-4a81-a81b-48869464e4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7ec9a5-0d8e-452e-8d66-083adf761dab",
        "cursor": {
          "ref": "019d7740-eca6-484e-a320-b00e55dc3c12",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3250299f-352f-4d9e-85e4-e6c576fc8a85"
        },
        "item": {
          "id": "0a7ec9a5-0d8e-452e-8d66-083adf761dab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ac98095c-7754-46d5-9a7a-7fa5d0d1a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aead37-2474-4567-a8ec-391d773df93f",
        "cursor": {
          "ref": "3205fe7e-dac8-40ac-9dea-adb2350ec347",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c453ee4d-c015-46a5-8a5f-88bb887ee639"
        },
        "item": {
          "id": "e4aead37-2474-4567-a8ec-391d773df93f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "55feb704-a23d-48c5-96fc-2ac2bd008754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f915e2d2-62fb-4ec3-8cca-37245c901b29",
        "cursor": {
          "ref": "65bd06c1-8276-472a-a9c3-1984f711cb04",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "321417e5-7762-4503-8493-c11e145801e7"
        },
        "item": {
          "id": "f915e2d2-62fb-4ec3-8cca-37245c901b29",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b9c7305a-a926-41be-8810-27b4c47cb1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e663bcf0-0078-4079-bb54-45b463adfd7a",
        "cursor": {
          "ref": "7d8ec692-32ef-435a-9f3e-39299e6b0470",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c856284f-d80c-4f2a-a3df-c68ed34999b7"
        },
        "item": {
          "id": "e663bcf0-0078-4079-bb54-45b463adfd7a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "630b1d96-e8cf-4e5f-abf7-7e425ba3b8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e41eba3-b67d-43ea-a0d6-892b218a9327",
        "cursor": {
          "ref": "4cb03154-e5b1-441a-a977-bc6e1a68192b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "32647b9a-d091-4d28-a792-407161729837"
        },
        "item": {
          "id": "5e41eba3-b67d-43ea-a0d6-892b218a9327",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8d3d9cc4-902f-46ee-bc8f-14229b78cd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0110b7cb-7830-4ad6-a3a3-350b5381bf95",
        "cursor": {
          "ref": "d824a01f-9acf-4cf4-aa3c-6c353afb200e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bdea0b7f-c5ca-4cb6-a375-6c4dcd59ef61"
        },
        "item": {
          "id": "0110b7cb-7830-4ad6-a3a3-350b5381bf95",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6d99715e-2c44-424c-8607-aaa3117725a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58601e82-624c-4a55-b797-7ac48fa60f59",
        "cursor": {
          "ref": "e46e9225-1991-42e6-9259-ff221afc2f9a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7a944ef2-a339-42d3-9502-33faa7e4812e"
        },
        "item": {
          "id": "58601e82-624c-4a55-b797-7ac48fa60f59",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a352abc7-1554-4f0f-97c8-feb832d4368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dca264-722d-4b24-906b-bba30878aa8b",
        "cursor": {
          "ref": "b9e95e31-1064-4fd8-a931-f3ed63663b3d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "da312de6-ec89-4da5-8b6a-3cb8f4d7f622"
        },
        "item": {
          "id": "b7dca264-722d-4b24-906b-bba30878aa8b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3ec19b71-9e61-458e-8c23-8817fae6c0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7a4af1-e23a-45d9-b47f-d934f5ce8538",
        "cursor": {
          "ref": "77f3a0c6-9654-4ebe-9471-d85b65a57952",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cb80113c-ddce-4e01-a0b6-f6eae23d5ded"
        },
        "item": {
          "id": "5f7a4af1-e23a-45d9-b47f-d934f5ce8538",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "083e7e1d-0a29-43e3-8789-4b3293ae5779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960a5619-ee2f-4a75-bf12-86fd592e6893",
        "cursor": {
          "ref": "c3bfb1c4-0023-49d3-a5c1-848d34937295",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d010e37-af4f-407c-ac6b-388d37ee355c"
        },
        "item": {
          "id": "960a5619-ee2f-4a75-bf12-86fd592e6893",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6fa924e2-7786-4360-8380-3c91b8152398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da598774-905e-4a43-8ec8-73a5723d0f4f",
        "cursor": {
          "ref": "0602d9da-639d-4baa-9ad7-70d4909cda17",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "73e9b966-eff1-4068-bb5a-da921bd2d612"
        },
        "item": {
          "id": "da598774-905e-4a43-8ec8-73a5723d0f4f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a3310762-a1bd-401a-b9af-f0b97b6462dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6a0a03-f2c4-4d89-a206-4513a89aac40",
        "cursor": {
          "ref": "cba1094b-8272-4aca-885a-03235dc7a958",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "35cc10d3-465a-4a0e-a84b-c06757d28af7"
        },
        "item": {
          "id": "2c6a0a03-f2c4-4d89-a206-4513a89aac40",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cf1af374-1fb4-4f60-b825-eb07ead91f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fcd8c5-42c2-4b36-a9ce-2e1a8349ee7f",
        "cursor": {
          "ref": "c805d689-402b-4954-89c4-77bab6cce9c7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1b40cced-c00b-4085-b04d-8d5e35811591"
        },
        "item": {
          "id": "f7fcd8c5-42c2-4b36-a9ce-2e1a8349ee7f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f038c2c0-feda-4980-87fe-060b93070012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35227f68-82e3-4b9f-a2ee-2ffd3590c7b2",
        "cursor": {
          "ref": "2ef0d9a6-0389-43d0-89a9-59b338b17ccc",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "38430202-dced-4b25-a05d-89f0cb510090"
        },
        "item": {
          "id": "35227f68-82e3-4b9f-a2ee-2ffd3590c7b2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3788edb5-a1d4-4ffa-9e36-2283f183f738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e65bed-4e1f-47e9-85da-b020d9b57422",
        "cursor": {
          "ref": "6febabcd-a6eb-4a97-8952-b3c68cc7525a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7206b74f-e272-4251-99a9-e99cd89a108f"
        },
        "item": {
          "id": "96e65bed-4e1f-47e9-85da-b020d9b57422",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "79ab4854-0f53-4d57-9426-076bd9bf6b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b148d25f-7c53-4063-b9dd-02701ea37764",
        "cursor": {
          "ref": "d61a749f-6e10-47ae-8004-5def82b4f0bc",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "412ebb0e-2aa4-4c6a-a664-e7cadcda893e"
        },
        "item": {
          "id": "b148d25f-7c53-4063-b9dd-02701ea37764",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0e3b2863-5539-4876-b9fc-be62d4d736e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38564d-f8d7-4404-af3b-6d073e6b75b8",
        "cursor": {
          "ref": "b35adf53-e66d-408f-b59c-9a893146e4fd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34045b38-6c44-4c5a-850f-8a2e49fc57cf"
        },
        "item": {
          "id": "8e38564d-f8d7-4404-af3b-6d073e6b75b8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "08c05348-0c5d-4cc6-b919-836a5ba93f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b37827-2c49-4d90-b069-5945326644f7",
        "cursor": {
          "ref": "5041bad6-9ba6-4485-b2cb-bc8f4f9df638",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a3775139-9940-46c9-9fa7-61a9c28d13e8"
        },
        "item": {
          "id": "b6b37827-2c49-4d90-b069-5945326644f7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e1b138d9-3aa1-4ae9-a771-586da982b25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ecda89-005a-4dc6-a77c-60a6351e676c",
        "cursor": {
          "ref": "cb298850-7ed1-4c18-8205-376a51893c90",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ec0feb20-d1f1-499f-9097-d7d0ca340fa4"
        },
        "item": {
          "id": "82ecda89-005a-4dc6-a77c-60a6351e676c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "67642070-222d-4e6a-8a97-071e74899a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf8a5f4-2abd-4ac2-ba87-7cebc126f3a8",
        "cursor": {
          "ref": "eefda665-ac1c-44b1-a7dc-2ee877de39ff",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ed89aefc-763a-4871-bcc5-f19cb381a968"
        },
        "item": {
          "id": "ebf8a5f4-2abd-4ac2-ba87-7cebc126f3a8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82220fa3-065e-438c-883c-c4ea5c8b3aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efd6ffc-9c5c-4269-bee2-d8b4864b153e",
        "cursor": {
          "ref": "2dc1afd6-819c-43b6-9bc5-9bec20a526f5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c103ab7b-87fb-4f71-95f6-8a07bdf89d83"
        },
        "item": {
          "id": "2efd6ffc-9c5c-4269-bee2-d8b4864b153e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ac27598-da3d-46da-bcc9-1747a831ef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040c1ea3-d0df-4840-8125-cfa4c0203849",
        "cursor": {
          "ref": "2b5577ae-8568-4e84-9004-1a2471221328",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4a48c4a7-f7d8-4fe1-8ecf-c68331a89337"
        },
        "item": {
          "id": "040c1ea3-d0df-4840-8125-cfa4c0203849",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "96b98634-e8e9-43cb-b8e1-98509363ec98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a61eda-6639-4be3-9e85-93f875eed592",
        "cursor": {
          "ref": "1fae6c89-b107-432d-8252-2eec353e96b1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a2abbd3-b2c2-4566-9a30-e8d779de26e8"
        },
        "item": {
          "id": "29a61eda-6639-4be3-9e85-93f875eed592",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3190d293-b125-4ed0-9aae-e3a21b889d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb9b993-7f97-4ee1-9763-838d44f983e3",
        "cursor": {
          "ref": "cf759acf-be56-4014-b257-627c91eb94c9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4be7d087-7844-4409-99e8-64cd5509bc48"
        },
        "item": {
          "id": "2eb9b993-7f97-4ee1-9763-838d44f983e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1c4a7707-17b3-4f36-9402-f20d035eac22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66322fea-9dce-45cc-bc8f-6e625b04ffe0",
        "cursor": {
          "ref": "26816d25-729e-4e43-9961-80456cbd26a0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "644345b4-d74f-4ea1-85e3-3bc291d4d556"
        },
        "item": {
          "id": "66322fea-9dce-45cc-bc8f-6e625b04ffe0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a8d6fcd-48d0-44a1-90cd-03a34c62e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aed508-bf84-4490-a9fb-1c8efe3c81a8",
        "cursor": {
          "ref": "773f6ea9-3e32-4b62-a8fc-b6b80bb292ec",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ef700e53-2b80-45d0-866e-41716b08b7c1"
        },
        "item": {
          "id": "05aed508-bf84-4490-a9fb-1c8efe3c81a8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ea10249f-07aa-4c8d-bc51-bf12b493e32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78dc36f-f46e-49e3-884a-d53013701f77",
        "cursor": {
          "ref": "39648d98-48f9-4bf4-bc66-9c757cf4cea2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c353b4f6-b709-4a51-a807-3d4fdfc44369"
        },
        "item": {
          "id": "e78dc36f-f46e-49e3-884a-d53013701f77",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2c9748f9-acdb-4ab3-9583-c96457d21f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f79baa-bcc7-4989-8240-725409464d07",
        "cursor": {
          "ref": "eea98b2e-b9b5-4067-a4cf-3164825f196a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "26ccc922-e9cd-41b8-ba77-3d8de71cd5eb"
        },
        "item": {
          "id": "a3f79baa-bcc7-4989-8240-725409464d07",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d13c72ca-ba26-48f9-b84d-70ab21e0a677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18bcacd-e0a1-4a99-ba0d-1a381f8b020f",
        "cursor": {
          "ref": "2919bba3-0f7a-4a23-bdc4-cb0aa4a57cfc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7abf5ca0-3e9f-47f8-944b-c1e713cba348"
        },
        "item": {
          "id": "d18bcacd-e0a1-4a99-ba0d-1a381f8b020f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f0a4e786-412b-4d5a-9568-700540980770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92510f00-9bb3-43bc-af54-2e2e105e053f",
        "cursor": {
          "ref": "3f5fd156-ac0c-4050-920a-2b43397af568",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "65e767c8-ec85-4297-87fe-903961d6a6f4"
        },
        "item": {
          "id": "92510f00-9bb3-43bc-af54-2e2e105e053f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1cf6d68e-1a8b-44a5-add9-7eda6c9c83c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa7449e-5ff8-4819-87fb-2b1aa2c7c954",
        "cursor": {
          "ref": "e6fabadd-2335-4b61-864e-f86fba7fd0cc",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "797db494-fa4d-4768-bc9b-8207051bdfaf"
        },
        "item": {
          "id": "9aa7449e-5ff8-4819-87fb-2b1aa2c7c954",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d23d7393-59ec-441b-813e-6f65655947c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9167c74a-40ae-478e-ab50-11b5ddbac8fc",
        "cursor": {
          "ref": "c02ce741-a8ad-4d4f-867e-87cb55acd620",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "596e83ec-a0d4-4fb8-a976-78aad730a770"
        },
        "item": {
          "id": "9167c74a-40ae-478e-ab50-11b5ddbac8fc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9c4b9395-2d43-40d1-ba66-1058d47758ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 18,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ada17f5-46b7-46d1-b0c2-ae96e8f2f077",
        "cursor": {
          "ref": "3a66025a-4be9-4739-8098-dc1faa487cf8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "84bbc464-2a4e-4d44-a26a-d874bda113a2"
        },
        "item": {
          "id": "4ada17f5-46b7-46d1-b0c2-ae96e8f2f077",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6f196137-2651-45f5-98ac-af491ffc0472",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b73156c-e743-47e9-a07d-1e20da4a0be8",
        "cursor": {
          "ref": "904419ae-3ba5-4c61-a139-5fb8add97682",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "102735e1-2343-4f47-b81f-668cb09b3ca7"
        },
        "item": {
          "id": "1b73156c-e743-47e9-a07d-1e20da4a0be8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "538cc2cb-7c06-41c6-bf14-6ddf497d75ba",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d0a44b-8152-4b4d-8b94-f208d6ee7a07",
        "cursor": {
          "ref": "ac701f3c-cdf0-4878-8cd8-b8a7fa051f5b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ba6c367c-1aae-4ed1-a203-acb6573e6be6"
        },
        "item": {
          "id": "d1d0a44b-8152-4b4d-8b94-f208d6ee7a07",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "026e7e22-3976-44c6-b1a8-9812a6eb19f0",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eba3043-8fad-4990-af88-59edf5604561",
        "cursor": {
          "ref": "b7c0ee2e-88d5-4da1-a7ce-d6f401b16241",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "810df24b-89b9-4ee0-b0f6-23026c37bea7"
        },
        "item": {
          "id": "9eba3043-8fad-4990-af88-59edf5604561",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb55caaf-1bde-4e24-83d7-49422151c9c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eba3043-8fad-4990-af88-59edf5604561",
        "cursor": {
          "ref": "b7c0ee2e-88d5-4da1-a7ce-d6f401b16241",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "810df24b-89b9-4ee0-b0f6-23026c37bea7"
        },
        "item": {
          "id": "9eba3043-8fad-4990-af88-59edf5604561",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb55caaf-1bde-4e24-83d7-49422151c9c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eba3043-8fad-4990-af88-59edf5604561",
        "cursor": {
          "ref": "b7c0ee2e-88d5-4da1-a7ce-d6f401b16241",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "810df24b-89b9-4ee0-b0f6-23026c37bea7"
        },
        "item": {
          "id": "9eba3043-8fad-4990-af88-59edf5604561",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb55caaf-1bde-4e24-83d7-49422151c9c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa90f6c-94c0-425d-a6a5-3e4bb7407ae9",
        "cursor": {
          "ref": "a5f55fd6-81f1-4a6d-bff9-6f871fcdd162",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fd8a4122-f392-4577-ab85-518cba6a235c"
        },
        "item": {
          "id": "4aa90f6c-94c0-425d-a6a5-3e4bb7407ae9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "cb64c9d5-539d-45f4-9b41-4f248c3685f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625967a3-c098-48f5-930f-93e280f0c622",
        "cursor": {
          "ref": "8d0b049a-bda0-4b47-8335-8316ff8326e4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9a78064-7515-4892-817a-35d2e67f06c5"
        },
        "item": {
          "id": "625967a3-c098-48f5-930f-93e280f0c622",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d67da605-04ac-4590-99a6-eb5143757474",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625967a3-c098-48f5-930f-93e280f0c622",
        "cursor": {
          "ref": "8d0b049a-bda0-4b47-8335-8316ff8326e4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9a78064-7515-4892-817a-35d2e67f06c5"
        },
        "item": {
          "id": "625967a3-c098-48f5-930f-93e280f0c622",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d67da605-04ac-4590-99a6-eb5143757474",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595230ed-5df5-4992-a279-9710e129b87e",
        "cursor": {
          "ref": "5f42d538-9907-4978-af9d-7e3321e6e64b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "52cbfbe7-948a-494c-8eee-7505c8a2863b"
        },
        "item": {
          "id": "595230ed-5df5-4992-a279-9710e129b87e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4264b0ab-7fdc-4341-93c4-dc35d4ff3328",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757f0ae1-238e-43eb-8be3-f88def282dc0",
        "cursor": {
          "ref": "7cdac19a-e9df-47d2-834a-984fb4c2c2fa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "453556f8-6977-4a59-9e1f-91726ce31ea5"
        },
        "item": {
          "id": "757f0ae1-238e-43eb-8be3-f88def282dc0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb43ab10-be91-424e-b38a-72a8893e4bd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757f0ae1-238e-43eb-8be3-f88def282dc0",
        "cursor": {
          "ref": "7cdac19a-e9df-47d2-834a-984fb4c2c2fa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "453556f8-6977-4a59-9e1f-91726ce31ea5"
        },
        "item": {
          "id": "757f0ae1-238e-43eb-8be3-f88def282dc0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb43ab10-be91-424e-b38a-72a8893e4bd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4be0ba-d579-4424-8542-6b2692810445",
        "cursor": {
          "ref": "af455c23-4069-45bf-b2d7-0a7fdd228be4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad1ddc97-89b4-4fa6-9675-fe59e9a9d6d4"
        },
        "item": {
          "id": "df4be0ba-d579-4424-8542-6b2692810445",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "46b4131a-f35f-423f-ae1a-3ae6c2f905fa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}