{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "49e24a22-1836-4c7e-8921-2fddaa580ab9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8b711aac-c586-4ffb-8fc7-21494c85c1c8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6cf8d7c-9c03-4ab4-8207-7d7bef1a980f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f80f135-8134-456f-9ae0-2efc67cf4835"
                }
              }
            ]
          },
          {
            "id": "19d3e90f-c507-4d77-a667-d439e5f44e6a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "653c6129-0132-40fc-9aa0-c60e1dd12703",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "83a428b4-f6b4-41ab-8e8b-b63d709e1374"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1c2f8a06-fdfd-4f1e-9670-56e64b4a904e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9aacaaeb-82b9-4f4c-9155-468420a298b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "447135e2-4b34-4d46-9c2a-872d1ca0346e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45762bb1-7a0f-4128-879e-ff79f7c7e1e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c53832f4-8fc9-40e2-8b84-733a633a55fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9095a45f-6213-4278-a52d-ffe1c8e40766",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "248780bd-2ecc-44fc-9968-f7cd5cf1e661"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a42ae67-ddde-49c1-bfa5-adf8d7005d1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7749620-60f0-4f32-977d-69a5691288cf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bdaccc1-c0d1-437a-b0e2-0d60fc154291",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a8b1e76c-283c-40d5-9669-11e496481666"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0d6245d-71ea-418a-90bf-70ccecdb227d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12634fe8-28b1-4b98-96e5-9e436a6c8a88"
            }
          }
        ]
      },
      {
        "id": "f82a43fd-c874-46bb-93b9-ac1988d8fcd2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "40fcf7d4-a6e6-4fb6-9c0b-811ff36afdf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c45b699e-836c-4dfe-a5eb-fb57c07b5fab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80d6074f-848b-4c69-819d-3866f597a383",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e61d65-5f3d-4867-8bde-70d57f9020d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87bd7595-9be4-496f-864b-3a65a8521e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84582f71-db13-4754-8c6d-a92ef9014f6e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195054d3-39cc-4cd5-b3a7-24b437a82915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c85a808b-c259-4c01-8f23-3f46bf4bb16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec31fa62-ef4a-4dc2-b7b9-9bdb0fe0dd5f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48244cc-5edc-401c-b923-d45cbadf043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fa2400d-4a86-491b-aa3a-c866dc27ba28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd57f8e6-9b96-4eb9-9ea3-d2bd1c43b4fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee8c3fb4-9cf8-4294-8c44-68cf18c0a444",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83ea051-7b02-4e94-94ba-7c1c1434d489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11ddc4b3-2753-4cba-a973-6db620542efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f4598d-d130-487f-a992-3a3f3e7ef439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfd232e-95d9-4e51-a53c-452f56f003f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "447f7a02-374f-4868-9c5a-b9496bd2a09d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0710349-9bc1-41e3-a9d1-d6f761215d15",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4343eab5-e0d1-4cb4-8884-9ee55c2a5997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "81198c8d-c13f-4ee8-a407-8aafc63d2d60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a6ddcf8-3d33-4bd1-a4f0-7f2303fac783",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "833d929b-2703-4885-b816-9f8a643c3cb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05ebf100-eb45-41a7-8ce5-76de27a0bfc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62d5a673-d14d-46b9-a9fe-fd8002a55b3b"
            }
          }
        ]
      },
      {
        "id": "13bc44f8-535e-4b22-a238-dcfbdd84b84a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e334ee2-7130-4087-894d-185ed6a53f88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd80a708-7b76-4e43-9bb6-82aece46a4d7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "46521010-58be-40d1-a02d-b2e77fbfc26c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b875b8ff-1d96-491d-8c56-390929539b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9763d8a2-7b63-44c3-af62-b776f228565b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f83fdd-cfc8-4346-a167-d83d70ab5a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27504261-0518-40b4-9e32-b1ad961e41c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901a64d0-85c9-40f6-96c6-b3ac7a175c8e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2816474f-aefa-4e0d-96fc-2b4ffd671024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1dec9f-6502-4de0-8b6b-ac54c2f2314b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13b3004-ddfa-40a7-ac1a-3f97f8727d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd262c1e-0da7-4582-9ec0-a298acc7eae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b0007a-1caf-4c76-a2e8-e538d9b52b1b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ef2499-1504-40d5-81bf-f5aeb5f65828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee150b8-61fb-44a0-90f1-ccbdddd4f9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45c1bc3-6f3a-4a22-a9a0-f133def9f293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8370b92d-beec-413f-a580-1ddfe8949195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce212ddb-bb74-4423-a355-42094de6d882",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e158fd-f664-4b1a-afe9-0a4cb5b12e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5991a633-ddc3-4324-ba7e-d21579b172be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945d4faf-d1af-46e8-8c9d-24d5208e45cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e71a7c49-9146-42d0-b683-0cd95e790cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f3aa94-d413-4ed0-a1ca-b7c096111267",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb65b90-f060-4640-b6bd-2b4b52d37c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f315d9-bd1e-420a-afab-e7e84accb49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa62137-1d06-4029-80f8-5e2fd01caad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31e14f5-c010-44d7-95c1-598f06031b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b036f30-f408-4975-9916-e62b0ecc7136",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498c6615-fe2e-41a5-ae6a-055fae1cda7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59e7f8b-eb1c-43e0-99f0-89124ef3e555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7b26d-a7ce-4043-ad64-bf9b6edc1f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95de8cb-c59b-40ac-b773-d5c32b488337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7703c69b-9134-4eaf-bab4-a10ea0742ba6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225a8f5d-0693-4edc-aa75-ae76240192c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3078a048-8644-478e-bb2f-f79c082889f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa24b9-fd5a-418a-b7d6-64cb6b372378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c4fdadb-d370-4e5d-ae3c-bc929af4e8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44199bf2-f9c6-4c36-80e0-20fa65b4b1fd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffc9c52-eccf-4467-a28a-056f24364dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e33fc4-4070-44a7-b50a-49880133a448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b21815d-9745-4563-9151-a81d5d6ec8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53f50a7a-5362-47f4-8822-2ffd7aed2d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fb312d-adf9-4e5c-bb66-6e70547ba03d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8ca413-6090-481f-bcf5-ae54f1a48959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7099751c-3312-4188-80a1-d4c14bc6b979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae371740-4d73-42f0-b7dd-77e4e4462892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd62be87-3d75-4727-bb6b-982e0e2b83aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d343a6-34e7-4b0a-a35f-cedd06d691f4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29786b6d-1de8-4229-8666-bcd29ad7eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e725ac65-a46e-4cbc-8da7-11b5c90c4919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac47c55-4834-4ca5-94c7-ebba8534875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f10ff8b3-861f-4405-8d6d-8c761aff143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92fb6d5-698d-489e-98e0-a0e8f75573e9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05794ea-afd1-43c2-b87c-db3c00ac6451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fedb12-6ea9-440f-8576-637c2ad1d363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656589b3-5f0d-4918-8ced-e80354634107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3496a380-85e4-4762-b269-970972bec8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713b0f22-8036-4af0-bdd5-e32b06e7a83b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93c4b3-5c6f-4911-84ee-2d26a4abbab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12463440-e7f4-441d-8dc2-13bd5d1d9162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f02b09-7d38-4087-9364-d1adead28e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "200ba2c7-02b0-4977-8968-6208d3c5e5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ac30f9-69b7-4b62-ae55-8c4b69e1f0fc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ee634d-0648-40de-a110-465d7bd4dff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa7c128-0d8f-4709-8087-3457a0789877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a353bde-9e8c-43ce-bad8-725e1ba10077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "527a7bee-e306-40bc-8e7a-da7da8912d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4779b5cf-0066-4262-8268-8b097206f38a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e3ce1a-2cbc-4508-adb3-32e6306b7356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34ceeca-9ddc-4f9e-b047-21516f5bf02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbd823b-029b-4363-a458-b8970eb22918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14a8a387-10ee-42fd-aae2-86030e9490ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b83db07-fb90-4f88-b8ef-51526036cd1c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83d4b1a-0454-4db1-ba57-2e045847180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2782e9a2-5da2-4718-afe3-32769fc18549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9815d396-aa3d-44b8-b7a2-f26d6623d09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9220b35e-7818-495a-91e1-4407dac6b84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b276eb8-7975-499d-8cb2-b1ee79fc03a5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6c315e-59d1-459b-95cc-929e5518b591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5da401e-653e-4b2c-95ee-f4800a715303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c97094e-d63f-4f24-b4a0-b04dd6559950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "162f2c4e-6712-4be5-a403-0d090f6d12f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1323db3-777f-49bc-b540-b2cdb22f386d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff15c3df-b350-4aab-8da4-ab94b6166e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b0f19b-b232-46f6-8e3a-a15c1a3e406f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5087d86c-e388-4ec2-83d5-93d0830327b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e80a484-4e19-41ea-8284-522de9d8c852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d8b732-055b-4e27-8071-c0ebe4867901",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb13edd-73c1-4710-b5a9-e6f18f0105c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7849bbee-0b58-433e-85aa-c3c0219c6ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da563d00-cafb-4ba3-841e-178146ad538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f431e24b-5a65-4922-bfae-df6bf085e9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51bfdbb-3518-421f-adad-148d29c5bf4a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0629dc-b079-48bd-9792-61109f67a656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6976735-7571-421a-9870-d84cfb6a327e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6498ed2a-2dcb-4932-b5a5-075cb5b355c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5df1eb1-92fd-41f6-b68f-a438bd5ce5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4466157-9700-4f0d-9756-0678660aa019",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e09eb2-a37d-4c04-9038-0f3c3c6bf6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc968d9-503e-457f-a3ac-32cabf134195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade2e092-8d94-4852-9e97-909b47a7e413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8096c759-fdfa-4a6f-9910-7d8d91d7dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5f34e7-46b4-48e1-8631-e30944164b93",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf96412-cd17-4b5b-95ee-5a38badc0afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5683a8f1-d415-42fa-94ae-61020806a86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2777cf11-060e-4693-a82a-7d08359d698e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b76f720a-2f4f-4b77-90af-a1cbe6b96681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4ec43e-d13d-43b3-9bd1-650d7ac80a0a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc46dbc-80db-4700-af3f-461f429076cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20c7769-b371-4ec7-b634-b2ac653ce34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d315a97c-e0ec-4b15-9ccf-73d5f1113924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c450a6c-9503-458c-b479-f03a7cb51176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dd8dcd-e01d-4ace-9607-6eb81356c901",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90699d86-464b-4e84-8ab8-b0e9a1d03ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02efe9a-7f3c-4a92-ae9b-5e6aa78ef0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61477379-494c-4a7a-8453-20803154bf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57bb0b1b-3d6a-467f-84bc-c95e793d72db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797358ef-7dc1-4cbd-9f33-4647823a66c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24176600-8cad-4bb5-9e30-d632397ed41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cba1c9-b71a-4799-8af8-a03b3a1dcc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0691ef12-d010-4736-9189-bba8bca7a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeac1e4e-b1b8-4b5f-bfdc-c92a2b9c0b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8044d7e-dae4-451b-b2cb-30c906646e8c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d70079-8822-4cbf-8f9e-cf96d77ff55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab505cd-237c-48e8-b72a-adc8a32112de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e70d918-9e65-4e86-85a0-7718cbbab329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e376354-e550-40fd-9858-22c1d02c984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318efc63-26ba-428d-b097-73e1d930e2e5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f187ae-a94e-4d7a-be06-4fcac3e99db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb7ce22-186c-4f28-a649-5e2cb207d237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c7cb37-ae63-4c96-851e-8b8635435a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf1c064-3618-434b-9344-852c2c3cdc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4778ac5e-36fd-4cde-89ce-105e691227e4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779a1ad4-6224-4ebb-9f2a-81aecf6ca3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36672498-7dca-40b0-bb42-ccd234e9f8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce31ac0-3e4e-41c7-aae8-23b01ad164eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e45557a-f54b-4d23-a9a7-93d4fa62e4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce695c6-0517-4445-bc33-826a26d9a9ed",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a23a5-8824-4b9b-bde3-4f8358222071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8519609-0380-4580-b056-173b64ec7141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe464f3a-a99d-4151-910d-18d6e27de45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e7cef5-9e1c-4433-a507-ca802dd3ba97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ee2363-bcfa-4a4a-8cb1-a29220c4024a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d8fa73-2c7f-4330-99c5-c1331357f23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19424fa5-687f-42f4-a59e-f6e3ebe99532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76847752-03af-49d0-be73-1df7a991c054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddca498d-ff1e-4694-8e7f-82a0e457dd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33144263-4422-44c9-a69f-000309154d11",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25482c66-44e7-46fc-b144-eb2ab48e086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7429c9d-7125-447e-85ed-3c37b2f00b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3086f52a-4bab-4e4f-ab16-cfd55d3a5e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2117bed7-95d1-4ee4-8c18-9f565a76c28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cc5cb7-ba5b-4d24-9866-1896a30c6e02",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06ed4da-2bb1-4e1e-acde-efd5ae190155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4fab52-629c-4444-bc3e-15ab2b1d5ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a58cd23-73dd-46f6-838b-eeaffc997bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc914f7-1741-4351-8d35-97c8e4f0fe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2053d5d-b2ed-4083-b8cf-ed08edf4efd5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef7a916-b89e-4be3-9199-8899c76d6724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185f7f19-bf0b-45b5-a216-f9b1ee422d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10beedda-d105-47a2-bb69-6b4606f829f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e73c6a-8e39-4e60-9016-f6339fc72939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedf4455-ff9e-4c98-8f4f-01d037255602",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b29da6-6bc9-448e-bae2-2732c9cde7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a6e631-5b96-4128-8961-de2a2f7f7526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4ff9a-9819-4f44-ba6d-131a34fc89c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c951400-67fd-4068-9b63-154d01f53ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42df2c3-4a5e-445c-8fe8-34b6f62f5659",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413549dc-8612-42df-8c30-ade0c65363e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4b8b70-92c0-4d0f-a320-80b464d873fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26f2f3c-f6b2-45a4-bf73-bd80223bbca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c55eabd-eac8-4b10-9c56-db1f910babe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3513323b-85b9-437b-9761-00b85fb7cb04",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a8c928-a553-44bb-8ef1-e4cb415c7738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ad8601-ea6f-4d6f-a100-15f478918b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeae027-afc1-43c7-b104-f013254c6487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "28ed314d-8814-4208-8f5c-9570a59c2de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf7a0da-77a0-40f1-8891-633dc8ddce21",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849e854a-faa0-499b-8192-f52f65489fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54928750-9386-4e38-ae2e-8ea9edc3803f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ffcd74-8697-4e13-b4f0-dca30c075b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75849d95-7656-4e3d-8ac4-87f84632bb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc9db1-9659-4cd3-8db9-44dd29dc370b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85549de-d580-4727-a281-b3fc249cc0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9ee6a3-9df9-4b21-9067-fedec81ac3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9979d76-f3c7-4153-a573-6b8f7eb1c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff4fed2-9c21-4f74-b5c5-8ccaf8683ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b45bbb7-0765-4b11-b253-f45f4ed9b51f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a0945-7133-46e4-8ef4-7c0f56b48306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f95846-a049-4c13-9fae-332bee91095b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f958758-0a6d-4a3e-bcd5-c752a83d6a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64f4db6f-dee0-496b-8cc3-443522d09e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead472ad-293e-4b95-8c52-bc34f4416ee6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f0c54b-cdcf-4d12-be91-c3c424733c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54418fbe-0aa9-427d-b868-885112122dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2007d05-e222-42ff-bea5-faeb8b1772c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6048bfec-36e6-4209-b5df-cddfb5d3724f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71ac949-2b3c-4698-9acd-8eecf1410387",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f34cc6-6903-4c59-b694-8871f9b3a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc88bebe-9180-43e4-b625-5c6b8f0ed6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dffd27-c117-43b1-a53b-5a2168fe4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f193c6f-df8c-40ae-b4cb-dbf9ed2135bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1b016f-0c96-45cf-9b6a-8c677e2ffc0b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31395ff-c115-413a-8aeb-0e3ba67d8c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47487678-5b83-40ee-8bed-8ab6ef0e2fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d718be43-1d94-47f0-8649-b97ed4cdcc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5902605f-9325-44f6-b240-c212dbcd3932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f914677-2105-40d2-9929-5277a3e389e6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae5266f-cb94-4738-87ab-ccd414f26503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c1cabf-1c24-4184-b8ac-f0bd6de77f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2b184a-cde6-423b-bd9f-2a769e83fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "96c5c321-64a2-4aa4-885e-83159ce3ce3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aabed5-0669-452e-a9dc-c4649aab5984",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c23f98-7f57-408e-ba56-cc27969d7298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd49d5f5-46b8-411b-8689-ecdef7c3bff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d6202-ee71-4dc4-8bb1-907832c3e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1e017d-748d-4f40-865c-d2a23d4c2c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b285a63-10ec-48dd-a641-0b4cbc4d2e3f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ec7c6c-4758-4f27-ab6a-9df3b5226baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f74f165-8ed5-433b-857e-963a673caf4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e629b0-8dc0-40cf-b27c-1ba447af7385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "91877169-5cf6-4ef6-8ed7-93f50cd0b397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d007bb4-ab4e-4c9c-943c-ee2ad66cffb8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a950e8-b070-43ea-a9de-7f4d0d7b245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acee0b00-68d6-4a0b-a652-72568d828a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16466dec-b4cb-4840-873d-abcfbdfcc765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa39cdaa-17b7-4825-9841-e4d20b64c6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84610a92-9721-436a-8651-9ce90f13595e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b97833-09e1-48d1-8fdb-fc43cda0ebb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce9c3f0-f97b-4a69-bb18-0fc0984f9343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82601a35-3468-4670-b9aa-e53c35ce1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95679ed-f785-490b-ab80-eef363006414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3076fe76-499d-44fe-860b-659e1d02e704",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a00cf14-cbd5-4460-aed3-ec7c084add26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2939a8e-5268-45c5-8cea-23190d245c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bafc72-0f23-4d4d-b6bf-69657b61d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28db7b8-10b8-4cb8-9f00-c62f6e6e95d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384ef4ca-7fe1-442d-b4b7-a85e03be9d0e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868cc7b4-eb8b-4a2c-b015-c8117786d8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a45385e-d3ec-4194-a25c-f769b8031631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52779a2-a74c-4eb2-8264-5b63771016e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99a8db8-1149-48f8-9d3e-d709c5e908f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262c0deb-c250-449a-9e9c-36d4104fb171",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df7a31f-86f2-4ba6-944b-c7ce1c34f216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890c9973-b412-4605-b4c1-949f2235285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df954c-ed41-40e1-a4cc-d7f991bc1445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "219e8b2d-e96e-455b-b652-77234e251c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87011015-a96b-4d3b-85e3-5623185033bb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac34628-9c1b-45e1-84aa-d20b79f7a640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83781654-aa58-475d-b27e-154c27f8f1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b766ce77-bd04-456b-89d9-118e4dfa7420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01a95946-f1cc-42a6-9d84-a879f5fcd35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305d9d0a-d091-4bd7-a2ae-8f21b2bb0a49",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485793cf-21c0-417d-9647-381710ad93fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d7d8fa-283d-4d13-a995-84515e6f5c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cc4e9a-8732-4770-aed2-4e54e540cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5336cb4-cfda-4642-9dcf-5c13c8e5fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a9a5ea-b801-4cbc-b44b-2cddb2d6b0af",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0778b234-3d61-4da9-8ebe-bdb076ffe97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64e4c5f-7225-4050-9a38-29c3c305337c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efe7590-16ae-464b-bd24-e46864632095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed1ce23-0cff-4173-b2a9-3f62f7f5377e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f839c6ec-a1c3-415e-81f5-eb48768875d2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac72f24-55e0-4f9f-b865-0e4f64cea08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d0eab8-99a5-4214-a2ad-226efd7bb0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d73860-9b74-4c8d-841a-9fed7a6a0827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edba0a02-2b57-4d38-a667-f817c607c0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d344ca-62f1-408d-b1db-889ba1dadf07",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a467c-0c17-4182-8e98-c37cb330305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b961441b-7f01-4688-b80a-4a3273582f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8d4a18-c8be-462e-b863-d7e860758d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a84b50b-f65e-4a36-9b22-55323a15f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13011574-1e3c-402b-a03a-69a50caa9414",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac85569-6e1c-4f86-8208-2604c0c8e86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0ad5ba-7dd4-459d-bc02-779f94a6a438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7119f9bc-5b78-48a3-ae2b-556d6af88f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc349691-560f-43b4-a38f-9deaeb8541d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74232b57-2b51-4670-b794-43e6d7876903",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a1b812-5eb2-441e-8dd2-db8125a6b8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe708cb-ddf9-4e4f-af32-b899c2e14844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed904e1a-7e2e-406a-8d5c-9e95b885aaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "df1dfad0-d4d5-4f52-a36b-71e5906e7cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9b5e46-4efa-4fe5-b182-2e44bd593c15",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305df015-0500-411b-90b2-0aca6c793ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e1f9fe-241a-467b-be2e-ca838eff935b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a13bc5e-80ce-4a34-916b-18798ee707ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8080361-6bf2-4d85-8bf3-8330bc81d72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ca4fbd-53d0-4106-936f-05e6cb5415aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e53dd5-a587-4bdf-a0ce-afa48e7aaf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e733cc-b806-4aee-a872-0173d937c40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5bb90f-8364-4a3b-b56c-53561e9bd851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ee9711-34cf-449a-ae12-75b151c91b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a0f552-cb82-4655-a4ab-f9f381dafa8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d18ad31-cb51-4115-b7ab-4a5b0a95b400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bd0a05-6099-4b40-81e7-e4567a695a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1adc359-b855-43b2-825d-397206f5ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef8fcb5-1cf0-44aa-b135-bd1c4ebfbfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a3bea3-3296-45f5-b863-0a47b58725c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4411181f-7d90-4e91-a2ac-6078465bf820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24da4c0-9fe3-4928-b707-0471fb79f81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f28dd16-f801-4b26-81be-f55f883ee08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98452982-a772-44f9-b32b-b0aa4829f612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a88e5-ec3d-4e90-9584-70a48d4a23f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0c685-bc5e-4552-abb8-cf0c96b35e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996c488c-828c-4c48-8acd-0c0579c76f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e08796-cce9-409d-a1e8-a7a64e46311d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09ed9a26-d894-4242-a9f1-a87dc7859a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699c772c-00b3-44d8-a647-2cb0b04fe583",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f550522-62e9-49fa-8671-32c29fecb2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca9e9f9-63f6-4985-838b-8a4639d3b48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a07ae5f-f938-4dec-9745-1a9fb3edb13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f363e610-fc89-4424-bbcc-cab93c27c24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d3502d-06d7-426d-a831-63a970898d30",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdfc9d6-0548-4669-b49c-573364bfd973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5b547f-d250-4634-8900-15e6266bf150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3670556e-8c1f-4a54-a842-93fab4782520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b327ade-93ba-4cfb-8b61-cd43d9fc6db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a911cc-cfc4-46cb-865a-fdb31a7406a5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c963eb47-9c1e-4a34-96d6-70b610f7187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb2e689-ba24-4c62-89a1-feb0a41e2f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297d0224-b336-44f5-916e-0fc626c6d2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3948862-e5a5-450f-ab39-82265f5db08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba50e1f-f7bf-4338-9542-349e4aa100ff",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b102919-70e6-4dcb-9ae2-28797ac49b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d699bdc0-89be-4e6a-bab7-faa1fcc87e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6284e8e-d15f-422a-b531-98590b308dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f02d11ea-f422-4a69-a896-c8bc778edb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65519d4-1a1c-4f24-b097-19221bf038b1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7346ff-1ce9-42f0-a795-5c2cdb31acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e32093-0a30-4a6f-8d9a-1d4b3de5cc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c87076-721e-4124-b780-3e895097ed3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "346d1edd-0a80-41f7-9fd4-907a262b750a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b558b75-728e-479b-9829-495f8d20db5c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719128b5-a7f9-4b63-963d-37ae46a22b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39973770-4124-487e-a597-dd553f248295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a03488e-ccf4-420d-8f88-d503c1939777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd94af9-fd82-43d4-878d-40271eb80c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475e48c8-b2e4-433c-9e32-f0693cc76fc3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012856b1-6321-4ea6-b0fd-9dd9af824b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ae7dcb-37f9-4fe9-a2dd-04680712ed7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915c58bf-219b-4ad7-b8c4-6fc333b2a5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc45a8f2-e6d3-4669-929a-5eeb07f0cef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac46831f-3b9e-4635-90ce-c0fce4d28c56",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b60d7f-4671-4911-9111-275500ad9f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d8ff7b-ca4d-4f2a-8b14-7a8faa8d10af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcba9e67-fe60-405a-9539-01c77c3721ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76aa774b-0262-4304-9a80-38dc6c745cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad3c72b-61fe-4765-a57b-ecaefcbbb47c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fff1d9-212b-46ed-8db6-d76443425d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58758c3d-4bf4-46ee-8273-33b1f533d7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f2df74-91cb-420f-a2d9-db0f01ab4fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d18df7-5b66-481d-9234-c8d8d9b399a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd9141e-a7e4-4c3a-99f9-bb41836a57d8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac3a943-00e1-454a-ba00-6c2302a2665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0f2938-6440-4259-80c2-9a4be938e837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a58745f-acec-4a4a-a6df-c92ef14ed26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "418da6de-3f6f-484a-ac28-22b64d5fe000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd69b1c-b1f4-42e2-928a-8c237c90e48b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a08f3a-3fcc-4f0c-b19a-ffa71598958c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a98a9f-ae39-495f-9cea-2ec88d910a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a514ae2-40e9-4884-9eab-6bea020b639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26fc52c7-1a01-49f1-ada6-f7b9a2775b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2ce97-89f3-406e-8b3b-4630d0962847",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b83da8-acdb-4ad7-8669-7faf6ed3d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf40d985-e501-445e-9e4d-fdcdd7b90e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d62f1f-e8c2-4b1a-ba03-a072bfd9742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d77e36c0-0c0e-47d0-84df-cce8f3083fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18555eda-5904-4d1e-adc4-304c66235bbd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d224a8-5521-4844-8fc2-3799a0d1b491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b60d387-93dd-4733-831d-7d04caa3a412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b14d6b-b46e-46ae-b142-3ecbccd8bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e046f9a6-02f5-4890-8f2c-75ad4e9e02c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d190fe5-e014-4895-8802-d23fd237d2a6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13d9c6c-a9ac-44ca-b589-840ff3451684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d060b1f-35d2-43ad-8d39-55c1cf4dd27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7fd8d1-e1ef-46dc-9c0e-e1e69610e62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ed9405-66a0-4cae-9292-70e5c32a4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20552f00-71c4-4c2b-a6ab-6e018da2a482",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee4317e-4fbf-45c0-8621-04d73a847020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4e6168-6a12-4f3b-a785-8555dc8eea26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ae86d-d26a-4b30-bda4-f727dab37423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6c7177-cb16-4f24-8215-208ea6384d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8a73c7-af64-4990-9cdf-dc826031fee0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37215063-22ad-4de4-898c-6f5833afbb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753c8188-2031-4fb0-827e-123074ffe20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a724bcf-1423-4a09-8879-eab3637f70f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a848f6-c030-4284-a29b-d0484b192079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb99dfa7-99b7-4fa1-b2ad-e383d2b703dc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bae46c-5149-416e-9f21-f9e24a831ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cb5483-7e31-44d0-b5c5-927c00afa141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89402773-4ae4-4783-be2d-3aabfac4fc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea25b3a-b782-413b-8fd2-0a04034e245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c68690-1dd6-4fe7-abdf-b9a2470a03d7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce1a610-5a51-4c85-aeca-0bccbea47ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17461a01-dabc-4f5b-909d-42f6843ec92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa8c9c4-8fe4-4a94-b97d-140b2666be27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48dd9c72-0363-4f60-8522-c082848285aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591503f8-a44f-47ad-9990-1afd4bb90e9a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ffd6b5-f936-4dbc-887e-a851527cf42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca37e50-74c2-4cac-b6f0-242194f1b910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b7aa4e-d9c7-447d-b20b-08b627f7ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0df5e788-44eb-429e-874c-111b4503889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6857db81-661f-440f-8f5a-7095cf2fa574",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f5d3b5-a573-4626-8c28-f61c8b69f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b1a31c-b8cc-486d-92a3-f86d1f262e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216d2520-13d3-46f4-a2c4-4ee089414a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5ee1ee-f993-4a36-a1b4-d07fdc7440b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c773fdd0-9ce8-43d7-a032-a1e58a5c4e7d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc7a661-d332-4321-aca2-e06169fda581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d64da5-f186-4fb1-b4d1-287c4131dcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8e1e91-8690-4292-bccd-b6794b3688c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "538d983a-7833-4440-8635-7ed3a25433f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f1c2bf-16b3-4d8b-b722-316fe5af66c5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2929afe5-3d8a-476d-8807-729d715ce652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df41af9-0b7d-453b-8fee-0404776c5a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42915990-b278-4cd7-a467-d6fe95a4e307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81296d3-2dbf-4437-a8c7-3fc8a3d57875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a75979-2e3c-4792-9fc1-6d038a35fa1b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd3048f-72a3-46d8-9567-2e5d75b8574d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cb50de-21ce-42ae-b706-fdded6041cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4090150-aad7-43ca-b09d-c388fbe5b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb6c0c6-2234-4d62-9a5f-c59ea17c7164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1ffc68-3700-4deb-a90c-d80aa949290b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81d6689-3b3a-42db-94ac-c3047a68e6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc09f5c6-ea17-44e0-961a-4cbc3fc55107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c493005-42f1-4871-99fc-61c14d845b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5565914d-8fd4-427c-ae59-e62cc88eaec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09951eed-4641-40d2-99f1-30bacb6d3ab5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97d9f16-2945-4bfc-9d91-ca735293b702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb29d15-7c71-4529-be0c-672a81d17fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3a28b4-c65f-4558-b15e-8578cb828d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "349de05f-f81f-417f-b78f-6edcecbdf52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0396d752-2441-495d-942d-6fec589c75d2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6b3f6e-3508-43de-8e6c-593461dc1426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6983a651-d347-4e20-b355-7cbb740ee23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5238e1-9308-4ee8-a4df-a83d2a2487df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4945a93f-8b39-4013-8d6a-0ffdc5be39aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13468ec-3520-4b05-b86f-01edb91c58e5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c1b65-1866-4fb8-9ad1-110b6168b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48dc0a7-17b3-4625-9eef-1ae4f6d58ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2efac56-1329-4c33-abe5-b3f2d6966fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "653c5b19-2686-4d88-81e3-4cf8ccd7664c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18843bbb-3cf3-4834-805b-ef2a5a5b78d6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc8a281-c27d-4e6c-bd24-5829c7f0d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf40ed90-bff4-4aec-9d79-688865612692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b22d3d-fd77-4a37-9cca-bec43e9b539b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb4ea40-a049-41ee-8331-3e870769a4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eb82fd-765a-41c5-86d1-b54ab911fb1f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00579c6b-fbdf-410a-bac4-7be9ad92c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbd878e-baae-4770-b255-ac2b28822ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d58035-b599-4312-9278-440a54f55eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d517ba89-a4f6-40bb-a9ce-e9029163026c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bbeed5-fa59-4c60-b88d-5ce14c2fa697",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c6b988-ad6f-47bc-bc59-f86eedd82064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be77c67c-1d37-4673-a672-206086e92547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd42ac1-8597-4d39-9443-8274bddf7c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e66f0355-0821-4bdc-bf15-e13696c0eaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396c98d1-671c-4bf7-9e26-0e385283721a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3b6f5d-e768-47c9-8452-a1dec52e25a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c7d4a5d-a55c-44f3-a305-8b133c71824a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db8e9b8-6baa-445d-84d1-439a5e9bdb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fc0900-bca1-4ceb-b466-e59272e518e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b60f464a-5f74-42c2-91bf-be85a9172a9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f62a15b1-13ec-4cd8-be65-37c70bcbbcfc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717fe36c-c320-4981-9028-60f8573e294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f755c36f-2380-4446-ac45-1f39d41e4069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f477a314-b3f4-4a10-83a6-dd15987390a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ed10047-d33f-41a7-a56a-68218d25115f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a09a761-be31-460a-947a-b8ff475f2068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26bcb677-91d6-4e3f-8058-400062f4b184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b46faf-d421-4c19-ba44-e1430ac87efc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e336838-dd56-47dd-97d1-98dddc085ecc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c60669f-e01d-4476-8cc2-3ef689119565",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "443e6f4c-f58d-45ec-b955-9d224dfa6e2a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "673b7d62-9b96-4af4-adb2-0e236948a763",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48b2b71f-088a-4933-8f6e-a71183ea203e"
                }
              }
            ]
          },
          {
            "id": "91a56592-6878-492f-b801-4fb07b7e1028",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3849dcb1-8115-45a8-8e79-427082cef25f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bf2dbace-18d6-4f0c-9e95-d2b776505783",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f8719a-f836-4bae-8537-e774ac31e2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce55f62b-9eb8-40a4-89ab-f403a104ee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1816180b-21f9-4f0a-967f-5a8d5c490f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f421304-c376-4b5e-8601-1497bc5ae239"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "889ae423-790d-42e6-953e-fd55860d0d9b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba648abd-0c5b-4237-8fb0-b6acd1196096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efdd62e2-f736-4dfe-9eb6-20219acef5cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cccf87c-576c-44cc-99cc-28a17885ec6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f5353b5-e1a2-47a5-9403-68d4bd60199b"
                    }
                  }
                ]
              },
              {
                "id": "7e7a6055-bc27-44e2-ac32-599706fae41a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fc833fc-ab25-4b85-8827-183c9b731cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd9de110-5bcc-4d81-aa7c-5dc3661f271a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ee64ac4-2905-4d5b-94c4-2f8bf341250d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5264782e-c7ac-4e74-ae4d-4196780caff1"
                    }
                  }
                ]
              },
              {
                "id": "a4449b06-41dd-4a15-8b2c-613485fb35a4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85ed2870-3c01-45c9-b537-d2ef71f02be2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b483910-951c-4e29-8d2a-8a36a9667abf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4c3e401-89e2-4c7b-9387-30aa9969b4f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e86a966-aec1-4b56-b135-16797ac5b13e"
                    }
                  }
                ]
              },
              {
                "id": "5fe4d4fe-0b23-4c34-a8b9-9bb52f7cc9cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71289ed5-626a-48d8-a63d-dc9f00ceb8e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48258ff7-4f1d-468c-ad61-005d99e5948b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "606aa98a-008a-4b38-9363-459df35991b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4a7a8e19-662b-486c-a9e3-0f19c5a244b1"
                    }
                  }
                ]
              },
              {
                "id": "04d43a20-f67e-43a8-8ff6-e7206137069a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b56f9f9-c339-45f1-a261-1b62a03be926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebd0b2bc-2761-40ba-9842-dd7a14c139c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef0d46b-a2c3-4e9c-945a-404157bea901",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3412db96-d0f7-428e-b7bd-b1f509fbaa1e"
                    }
                  }
                ]
              },
              {
                "id": "8d8e901a-57c0-4684-aab8-b82e7bda4e26",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb0c6844-b635-4df3-8eb2-29664c5680bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b31afcfb-3a43-40cb-870c-4a4e03b317e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dbf0f41-6d12-4314-8df3-5147c4e8495c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "983c26ca-155e-4242-b12d-fd980a85bea0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "486705c1-f2d7-4a7a-beca-5d3571de5a89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c60932b6-cce5-4b46-ae7e-779819216655"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a595cba6-ea8d-42e5-b0ee-83da028acfe7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55f95356-99ac-4597-8cd6-c6cf4f9297dd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "375f7eb8-26f3-4e1e-8bd1-9bccdde05cd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ab05e972-3dbe-4182-ae2b-f7fa10551540"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c2cabf-8779-4fb8-a8d7-1a1e32c1dd74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7da3897-dfb2-4541-b671-f37eaa5d7269"
            }
          }
        ]
      },
      {
        "id": "50689ee0-7752-45c6-adcc-87556ec366d8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c4bed9cd-683e-4ee0-9c85-992d0a07f1eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f52d9422-a388-4e3b-9486-7ff67ddf34b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf9c7906-197b-4731-b265-0783e5505f03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9b39f1-cef0-400c-b4dc-5c5795fd5113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44799798-582d-4cff-8612-de07e84f246f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f0c2fd-f87a-4ec9-ba2b-9e41a64c278c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0813b452-387d-4848-bc42-66145a1dc396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4b0ecf-a2a0-4de1-a3b9-238313e8ce4e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9462e01b-60c4-49bb-a888-0d03d201345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656c09e7-7fad-44b7-aa83-e3e9c208de54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca6274e-9b5a-4171-9376-615cef8abdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c53019-07a5-473a-b74f-cac8c70f0437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b44724-e573-4eec-9ed9-a79e52d8c566",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d75915-30c7-4ce8-b96d-4d6207f5cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678644b6-3835-4fe7-a3bb-96c0ce2704a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa3ffd8-f530-495c-8e88-0a601d459b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde8bbf4-5473-43fe-bee8-f6ff08b86859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22523c2-0dfc-4832-a5ed-380acb317525",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdca82c8-55e1-457c-96d2-667b8a509f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3083fdf-1327-4bfe-a4ef-30308393c832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828ef9cc-6f85-4199-96c5-fb08e3d47519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "711cff8a-5f45-4bab-8f1b-eb33cb8118e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ab03d-3161-4f61-b9db-f75e96d55221",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d611029f-a8b8-489f-98b9-7e5aa076cc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e666115-9589-4a06-8308-5286455c9676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d482bcbc-b0a8-4797-893d-6f793c4c4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2af5df-b6e1-4e26-9b97-d727457339d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d75e38-cd9e-4078-8fd1-a42004f6762c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417f831-1123-4242-9476-c0f8cdef380c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048ab552-ab6c-4ec7-a4d5-3d23ca7eb26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa412e4-2001-4822-b93d-9874e2f95ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2685da8e-e25e-44cd-a5f4-290967954369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa4fbb5-77c2-4110-bf9b-03a9b6b963b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a127011a-e6ab-4a74-8c7d-c8c37a61a554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9624bff0-e09b-4c3d-8f52-8c400ac27b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c8756-0d67-4108-bc16-02b3194775a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f37f699-9d66-4e0c-b741-b9a45a9d7e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665fed82-a939-41f3-8ac0-9cda784e9a7e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8fecb7-0cea-4765-a978-0bfa4594b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fb2ad4-b728-4047-9ce4-da4aa8281463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f069f6b-9c7b-4a4f-a184-9325f7372193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa0a4fc-6c0a-411c-b723-05e314420776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bda51e5-bf73-41bd-8f25-a05aea84f376",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204e734b-ac60-445b-97f0-308bbb0efd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bf04c7-07ee-4e85-b3cd-1c793795984b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d108ab8b-7d0f-4bac-a9f0-cdf4fea9cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a34835-6d8a-493c-8d72-bf088146b64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a6b725-8036-46c2-8815-840478a61c87",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20fec92-e72a-4179-8552-cf410e74eb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cece87a-bdc9-4c06-9e4b-e5b26b319886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949d471e-8af4-4342-b216-952da07f617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3980065f-5bdd-4070-a86e-4ccd2c31ec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397f84d4-8abd-4933-90dc-cf0040536548",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31aa7d9-34b8-4275-a6b5-6831d4cd801f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523beec5-3010-49e0-8a90-50fcd753376f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92d5ae9-5989-4b65-8b68-a09cd1a3679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eee2749e-f3e9-432a-80a8-740cc4b71321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e54a073-0b0e-4dc2-b389-a5cf6bf9c218",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e097977a-9105-4477-9b3d-1fa9a4e67977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a40addf-bb60-4e9b-9864-051006002d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3ab53b-29d7-47c5-9420-209523c97eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5464c8f-fbbd-404f-9a76-99769d48730c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e4b4a7-a26d-4e5d-9be9-47f6246a8b68",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53073dc4-4c39-4fac-b738-2b49337fa735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456cb254-c91c-4f3f-a5f3-e2fd6c3fa460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a916ca-e9cb-4def-923c-ddb7c545bc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "266c969b-9ce4-4ad2-b737-f01494faa8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a271df5c-e764-4af6-a7f7-e0e2be950ac5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87d0d94-c3dd-4c07-b33c-dc2de91803ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04db36b9-4437-40fd-a725-5ce9de1a1a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2348751-5fd2-4044-a6d3-8f07eefe79ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8426c018-3a8e-4a61-b678-ca4ece2d04af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48815041-da14-4af2-85c5-14d3a76e538d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a537193-7b7c-4895-959a-15072e89495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cd62f8-d249-42eb-a8f9-437b892ade11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424466ea-11e5-493e-a28e-6efa3440f252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa870352-2ddf-4933-8685-c86704cf2c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aab418e-6172-4f16-9aa9-959806cecb41",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f91265-56e0-4317-b030-08e09328821f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7553a89-95c7-4a2f-8d46-75fda46ff7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47020f9-32fb-4335-9d74-d57edeaeea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5509a550-5605-43f8-b0f3-c5c7b20e9c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89a5707-3739-48b8-9b29-9ebf38238e6d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471c9ff4-6d54-42b2-a2d2-d407c3c1f6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e408536e-4c06-4e0d-bd1e-9963c70cf879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafa1fbb-0331-4de8-9741-f2f47021b10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ad87b8-1941-48ad-b035-776a4a570665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996a0cbb-3239-4977-a06c-bd843e5be78f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3e2882-55f5-434a-8200-a25358ff7174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32ff50f-96ce-4b9d-9be8-de930f6c0535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6d4e52-61e9-46f5-bac3-8fc48d9091ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3729c73b-b835-4994-bcf2-10d6aaec4b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583b2baa-ce1d-4c9c-94eb-c3647493202e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7082857-df3a-4d5b-bc8f-6d1062f6f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb28f363-6990-4a83-9326-679c9ce310c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf019c4b-c923-4ae6-b88d-3a250d43c695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92a3013-f1e7-4c1e-a3e7-4642248d0848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c38312-97d4-47c1-9cde-689f30867335",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47f9f2d-116d-4def-9313-1869f95a376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1816b8d-49c7-4db7-9f14-d6af2c9999b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae956c0-31d6-46c0-a5e7-bf2628fd7b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "164db684-d3a2-4607-89b7-055dbd764fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438077cc-9401-4734-bed0-e39723ea2e77",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9104416-7f02-414e-a946-b09e682d37df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf065733-0fc6-4f8d-bb50-658e2eae3586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812418a9-41f4-487f-9693-67b7898c2a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "098d813a-25d6-49f7-9af0-d395f612c838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42494a57-add4-48fd-9f57-9ded37340599",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d979ba-8e18-4875-adae-97f16763ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e407eb-8f6a-447b-9c86-9fbe8e2e34b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468870a8-a872-4bc1-92b0-869c778be1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d129e594-00ab-4f48-8869-27a3086443c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24587465-d160-4cc0-a87d-fa8ad3aacbc0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503bbea0-087c-4d29-804f-8231906439e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ceeaf5-52d0-4d68-82ab-ad008ce048b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485e1371-70e3-477f-82ee-b36276004625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82cf369b-95cc-43e7-ada3-a8c97eb9f1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34358382-62fe-463a-a24a-655e6849e99f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04afc195-6517-4a02-8f58-c4f65445a337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfcea9d-f7f4-4887-8cfa-9bafe75cce8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38d09d8-fb8f-4f7d-b9a1-c7c876ef63da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0538b20-54c2-4d38-945c-0dd56fbbb0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345d7a7e-6aed-498f-93d8-44e729922a64",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94656cd5-25d0-4609-8fdb-d393766ce388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e0d2fa-9c37-4845-89ab-12b3c73883e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3826db-c13e-4686-8e48-9f5e04fad994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b350c3c1-780a-41ed-895e-4042e4e8fe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c05c06-f35d-4dc2-bc47-465b7f4fcbec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bda1cbc-3c3b-41d3-b8ca-46b81bcfc02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602c480a-e2ec-4925-b692-117fb37d7fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa71d8dd-e609-4bb4-88b9-12ca4c9fb33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d34bc4b-d13d-4f47-bafb-1c522afe1187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973e7856-ace2-4147-9f37-a640a4958d16",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a35217c-ecb8-42a0-9691-6a3b154283ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edeff317-fca6-4752-a324-e022a410c4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee7c48e-d2e2-4c2f-98b4-5bd0de996bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b38052b-3c5f-46a1-b716-9bc6cd5a63bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5ef212-340c-4995-ad78-4ab41a6e5c4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ebfd87-2675-4652-bfeb-832fe7ed09d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8431698d-bd25-489c-b7f9-059fe8a1ffa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd87522-f8e6-458f-845a-8d75a9ffbfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc13dff-fdff-40cc-b0b5-27111f9b75f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19651428-f332-4650-bc03-688ff405bc07",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e4513a-522c-41d7-90ef-a00c476d4cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0920ad4a-479c-4607-a9b0-cc81e5d49d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4195c6-b801-4b79-ab5b-c8102d6b0e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8030bce1-2cec-41f8-8da1-26a9d8642f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394d04a9-3d23-41ff-9430-aa1524a5706b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b23e33-978d-4b02-8989-2101c907d1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c61462-73d7-411e-a63a-5c53e65d9365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c12349e-dda8-47c3-95fb-eb901c2801f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95486e59-585d-4611-b100-68931c8afe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6e5261-f9a5-431e-bf32-0d56dd4412e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab8a980-30ac-4e31-932c-3972d8d472b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14211a89-4ea3-4894-891d-ad757687ca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49a0a2e-d3ac-4250-b6b9-b4c42df7ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9ce8ff-26ec-41f8-99cc-25a5e5dbed4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c3ba42-25b8-4ac8-8c1c-acb85c2a9e12",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417a7631-dce9-4b94-ba16-9090bef03c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13bf293-390d-4c1a-b4e5-a4910de0c447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2d288a-79c1-48ab-83f1-70be3171fa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3f696c-d895-4e1c-a634-d905037acfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23729b65-76dd-4b1a-b2b5-91136bb4e5ee",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10843d26-1518-4f15-831a-8ff62707b851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9224485b-89e5-4bf2-a706-8aa05c507b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef88100-e0c6-4dad-b1ef-86584bdd706c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ccfc9c-f803-4250-a5fa-a01945697f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3f511e-94bc-4e26-81b1-331e9a561891",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3680a4c8-da55-4a63-8110-61103c6fdc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2586b634-572c-4bee-851e-90cdad6995e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c24bb9-2d12-4a00-bf0c-ab22062c5a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "799125dc-19b1-46c8-9ef2-21b7c207a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727b3634-01c4-461f-baa0-6320356fd829",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb843a25-c0c9-4432-a863-5b3ea91cdfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8199de88-3eee-49fe-aa33-21425d9f5946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f2f1e2-653d-4452-9f79-1710e132d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3712db16-54cb-4941-b10e-afac877600f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8aa3aa-4341-4f65-8fae-3425045fa742",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f553b744-d710-4ca2-acc6-704a9dfa20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c7f666-f5b2-4441-a210-fd6f0e2975e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee23d7b2-fe44-4d7b-9adb-5ad8e96ce13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2d0ca2-d547-4d19-8a07-0ba5ad23fb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ffdeb8-46ae-4e8a-b893-70686cdbb963",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc01291b-7a24-466a-81e4-0c5ba8b34595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40888bdc-fc65-4b64-8f9c-3dafa6e76828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a4197-bc50-4cc3-8edd-368107c1af8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7c9978-3465-48c1-a709-bf4cdbc83f3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e59f3275-eab4-417b-b250-b47fbf2a2cf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c04af48-a4a1-40b1-81ca-3c3450443bad",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2a61bf-6c86-46a1-97a1-2ee79f17bfdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "da91ed9f-ca51-495f-b881-b05ab7500e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6730d8c-a88b-4952-807f-f15bcf73cab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3dc9100-d9f0-46a6-9161-bf5802af7b84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d980d99-6857-4e96-bc22-6ec74e004310",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e93cdf71-0aa8-4dc9-ae44-6e86d5b11cf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4cbf9d0-6029-4658-a8cc-6fe472cb71f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "046ef4f7-aa86-4c4a-a94b-0ae71f4aee34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3879e74c-dca5-4946-ab4c-3596c6debedd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18f2dc09-aed7-420e-9c1d-33b4b8f0fb12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9edd569f-28ca-4c12-95f5-aca6f8cb30ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3bf6190-52da-4593-b6dc-41b5b41e06d7"
            }
          }
        ]
      },
      {
        "id": "4ea4bee5-d6ce-400f-8a34-fc29fae8da8e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "15c681b4-ce7f-4219-a686-2537c0935f47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08761ca3-5196-444e-9db9-edb8446ad995",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7a6f3f8-b7d4-4977-bd5f-f2ed70cd5cb0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1969a2a-4c5c-42ea-8b2b-2da5f46d416e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4a8775-dde7-4708-9803-5a309d12b03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2285c17-be60-4e7c-ac67-4571ed15d3cf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29fdcfd-0420-4c5a-a151-f1adde58f8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3ff722-b463-4d32-8e8b-ced5788ce0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adba1d45-19c6-4429-8180-cbeb7cb53b05",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e26cf57-b379-4d53-ad7c-ea861aeb5295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739e96a5-7ec1-4ce1-b4a8-e8ac7603e11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b097b9d-e22f-41f4-bc29-9ced2c12e2fe",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeec82a-0c3c-4d52-94c2-59fbd903beec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e92e0-b099-4615-a0b1-912c2e12c593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0bf2de-2900-42c3-bfd1-7080c65b2ed1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebfb599-12bc-4b05-a916-e282845aea66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc88687-df76-45cb-9f7e-4336f9fa164d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11545ff9-5bd0-4024-ba70-4410db529f8a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef151a-5fb0-4835-b11a-7fd9a1efc3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466f2768-3f78-4fd0-8d40-106422b47662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f89b47-d1ff-469d-a462-0c6bfae26991",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff15a02-f2bb-41cf-aa88-406f751f89c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721b1581-05cd-470e-850b-7e576e18e6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e23f416-cecb-4f53-85e1-82ac369c9103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ef9568-eb76-4ca2-a255-75c236954fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713e4268-c0a4-4fb8-b952-c88c70e0631e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565e2444-520f-46ea-a22c-cc994e1c839d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09cbda29-7114-4e26-915d-b0960324ee43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5415995-5e13-46aa-8b6c-aae08ad5a996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869a9ffe-b976-439b-ad74-0939092b4ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a7cd59-7d58-473b-8a88-4d0a247824c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba33b2f-2bc2-4917-9349-6ca4605a73b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697434a1-89a4-438a-9e72-63d319be4d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfb3c06-4d97-4b57-864d-a9fa3bca2bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18a9dba-bca1-4816-95a7-ca1c7e4faa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438efb26-0377-4f0b-9cb5-f3e7633b4304",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17965100-6f5b-4992-ad7a-646783435ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e543be8b-5848-4447-9d9a-861eccd40d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a1dc4b-245a-4e25-a069-0b9e46ba2127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26489721-a505-43c8-8ed7-e90876908883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f952fea-bd6e-40f0-81bf-3a10aa41e191",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72e6541-5918-4ab5-b04c-89bb8e3d2289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e61efc-df3a-47f2-9e5b-40e2b7040862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bf5a7e-005f-424e-a411-fb2653240d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e663b84e-3d79-4f9a-a341-180759ce426b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feb1a8c-c237-4817-bfa0-86ccbe5cab92",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc9b179-c31e-4ca4-a669-d9803b1d6a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25ea8f6-31ea-4bff-aecc-fa390625f1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82831b72-7f1a-4a6f-89f5-8178de2594f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d94ff-608b-44aa-8aae-dcd2d2ccf747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ef7db7-a56f-41f4-abb7-0fe572c4be33",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8bbb72-8654-48a8-aa3b-19858b19ec15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c305c450-6fb4-4660-92e4-817b8034f3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375dab65-68d2-4e3e-a67a-f19b07971578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54343617-7410-4513-9705-c57b19a8cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f835fdc6-94d7-40df-8c26-7a5dfa357079",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fc2532-1be2-4f7e-a49e-56de4ee72774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40483ab5-aba1-43b3-a23f-5d8c1713f01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee9e880-6be8-4363-9fd3-1a45d48d24d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a85361-1e1c-4e80-91e5-dd89bfb66374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17932ce-8b8c-4189-a4d7-e7a8e451918b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01fd49b-f80b-4682-80d9-90a504fadc71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f3b523-3ba7-47ae-8db5-c97819ab6df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd36572-0b3e-4660-8c01-9e9dbb22f9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9686050c-9dd6-479e-9899-945993458094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645a0dc0-13d5-4725-9834-20cef8b572ef",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20bd1d4-9926-4646-8470-217c76729ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5c4986-0294-4260-9783-e55a072a50ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c358c81-f51f-4d60-b323-1e37e96ce905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55271586-2001-4b8c-b00d-aef3f5121597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927ad25c-da58-4fe4-8a2d-62fe78f8a9f5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f634db1-252a-4e9f-a7ae-abe83ff9cace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839d8373-2e0c-4580-8b0f-746906840d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f08c75e-3f5a-4a4e-9645-0ebf65aca890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bf8fad-d2fe-41b5-8bc1-41774e5a19ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6883b3dd-23c3-45f0-9455-6f9b13ce26f0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56222d5-b568-4cf1-aa18-32c5273ac94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367fea60-68e1-4985-85d4-ac0a18e905ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d286fa-3a27-4f90-9220-60a711aa1308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bff7fb-8b54-4ca1-a471-ad118dad99f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bff8091-d445-44fd-a208-90eb2c6ec70e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde6ffac-e48f-4bca-b119-2bcc7e6d042e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ad1b27-4e80-439e-9b88-9fdc5fb8f34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f848a594-06cb-4ec6-a7db-b3971c316a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a06904d-0d06-48ca-bb33-08d85e3895aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1443041a-3fb8-495f-88b7-7d9cc4110129",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a825d5dc-b44f-4ac9-be1b-cac6d3c2e25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77998704-2fa1-440e-ae3a-4c2d44d02c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ae96e8-50d1-4ccb-bda7-c0eef3746cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead62df6-78e3-44d5-90ae-1d6a16f5d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe9d943-b349-4be5-b330-c3cc6a8bc156",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b3efb6-d8b1-438c-8c55-20b039fe15fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f803364-9e85-4e64-8021-a945f81c6254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862a78da-e072-4e16-90d9-38400562c4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e1c1ed-02a1-4087-9f92-c87b01c41c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c412c376-7d52-4963-9129-51b3fed06b04",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c69511-b25c-48c8-b3e6-161bce99a215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d2ade0-5235-4493-b6f2-49a57b2ba6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8e6e47-4299-4d6d-bed3-fb89411abd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f979188d-5c97-4df3-abcd-ad7a4f8cb826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b89e7e-f9cc-4e3f-966d-8117822518f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb7ab6d-4695-48f6-b067-1402519f0efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28a55ae-b242-412a-8916-a8da6f05e718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d31438-8077-42a1-9a29-4d4f17d875f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e41ed19-bcef-440d-a895-d288a95b300a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b1d8d6-4ffc-4ce9-a32d-9be70d29ef8d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa43c48-7afc-4d1a-ab40-a485fa43c90f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e75681-655c-4fd7-9186-59e6a379883a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8bf6a5-5b32-437f-9ca9-fed3dfcba628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f19aa5b-12cc-4ab8-9596-7d625ec3eea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab60e45-d99f-46a1-bc18-0c1337986f78",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1087276-941f-4573-8f47-70d7cc5e0af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9f3e8d-1fb0-4ed1-9b43-35f6c930845c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0545a3f-92cb-4b0d-823d-cbca728487bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d15a368-1bc6-4a43-af37-e2c3ecaf42e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76bf465-7ed8-4143-bccb-ca2e8020ea6d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9726e4-b535-4a5d-8c6a-ed128033363a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79e17cc7-9706-4af2-a1df-7698559c582b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4c2f68-dde8-445c-9cd3-ef50577871a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bcf43a-d687-4ef3-bc73-5e308dc4c245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254c0b69-41cc-45f4-9f97-46cc9ccebad9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ea8756-63ea-4c32-a103-c1675751b16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b450e7-1228-4351-8846-d62497929a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59248453-11a4-4307-af9b-9fd83e40e906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c47bab-7cdf-485a-bbb5-570cd2dae05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e328144c-e86d-421b-bf75-d0473a00466b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07aa0ec-df85-470d-98c1-d231cf7f28ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643fc394-3dbb-4266-99f2-a8a902904b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc31d3eb-9d8d-4977-a10d-a30f28fca8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e2287c-58b7-49da-b8fb-0ebe1ff478c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc7319-1f1b-4b54-b20a-516d8733249a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e07375-6a75-49ec-8ee7-86cd39484f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc45890-e550-4224-8a90-5d707e87db7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205d7e2c-2638-495a-a4d1-71d6f8cef4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab14017a-e0b3-496d-ba4e-70f7129e5922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dae578c-e301-4e49-90d7-c6834e8f4e9f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931da340-4e4f-4f71-96a0-58117c441f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6673ac54-2e8c-48f5-8817-ef832207e4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f7bc6-a6f3-4c75-be30-26ebfc92509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb6cb8c-ce06-4879-aa88-477b5901b008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9003a45-bb83-4b06-99a5-47c3448dc669",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e07a58a-da69-4d63-b7ed-2c59115c4d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef157456-1f92-48cb-83e4-651a04ebacc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91421e19-3f6c-4adb-aba3-cee7a733bd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb54cabd-afab-454d-8858-97b9aec597e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4f4f30-43dc-4d1b-b5b1-e90a629c7046",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d440902-747d-43e5-9ba1-5b4a61104e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67c9c88-e4b2-410c-a28a-809c2ffa3479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f6ced2-f22a-42c0-8a2f-b835f12353da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c40f512-be54-46fb-884b-a518191d6fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415c0c20-8993-4e62-a528-477c6e5f4a6a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e86b93f-964e-46f6-80aa-c6ecba608cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf6dabe-ef7a-4a6c-be24-fbfeed3d3419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4916ff-454a-419e-b079-63b787b9f8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642815af-b4ad-4bd0-a380-fa95b0df1aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b355fc5f-3eac-4c12-9395-1e83c67a5e86",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d93b649-b61f-47be-84c3-7fa0df672cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e2d9d6-eb95-4e96-9784-19bc5c95c29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd352b45-e973-4cc7-8581-0f3a46f8f4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de058bff-7c4b-4aab-af76-d0197b83d94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9db1623-bf5b-4eb2-8023-ed27c3c72bac",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f495a8eb-4da0-4c50-b848-325ca4f9420e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97636ab-a532-417a-8645-feebb68ea7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83401a19-7176-494c-8e05-2ec5b1770559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1734058-0334-4cbf-8022-6b674b261d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9290ed1-dc9e-4671-ab86-f39072746be9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10636cb-5835-43a3-b369-5a8197fd867d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faefbe3-5791-45fd-bba9-a202ff8196f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694c6dbd-18dd-4921-b413-b472cb75d6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15e00b2-07ae-41af-a1e5-5a43184c43ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff7d2f8-dd41-4777-93ff-c9c7a9fe59f1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b3ad59-ece6-46df-949d-bcf5a80be431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8cb6a9-3acd-4360-ad7b-546730ac8649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251136f1-33e5-4f4c-a0b2-b2f8d78447f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4017434-fccb-447d-9249-b8ec0c073f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef84106-a764-467f-a4c6-4a72804ea34f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e064c5b-88a2-4157-aaa7-d2ecb086a689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814c9541-218f-46b4-a47b-b1583b201ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c86c5c9-22f8-4bea-b91e-152001a07dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c3904d-489e-494a-9808-8819ef5af738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5be1c5-a800-48f0-bff4-198aab3a58ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c542f3c3-3962-4761-b657-4abd553b6245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef248181-929a-49a6-a28f-8990d82bd079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8991ec-ce99-4c03-8273-a7382cc7ddce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d22b619-08e5-45e2-b80e-f1d1e9049720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d401e75-1453-4f2e-9597-80c168504352",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f66d72-349c-4bc4-9236-00b159290b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe589b6e-bbf7-4221-800c-2c497dc951ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509df17b-c0a0-4afc-86b8-2d679e2a72c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83b41e3-03ac-49b1-bf54-b4778c67ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1cd0ef-9665-45ae-ac25-09a43d2f8cdd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90926b7e-5b54-4dc8-b85e-9663ee97add5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506f954f-bc34-4b49-bf79-9edd284969fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4370821-d0da-40e8-8854-7fd4d5f40855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f9b4ae-573a-478f-b1da-0f6d1617666a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1472762c-199e-420c-ae72-e88c28c41521",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139c7508-4575-4cbe-8809-85038f2a1901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1138b9ba-3969-43f0-8123-e05b4179dbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63f5ed3-bb01-405f-8ff4-a0a6d81b7006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb82c4e-c849-4a98-905c-2b4a6834a564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732a8472-77de-4b8a-8c49-e8e20dd05329",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5af87-caf4-4cd8-9320-3a58eec0c15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffbca41-f44e-4169-908d-2e5568696c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d5c0e1-84db-4762-9538-a9521a137985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9110df-55e5-4047-8e60-a0b91b421016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ef2236-3a4a-4436-8d6b-339e151c7a6d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d95aa29-faf2-41ec-b113-01dcc866c9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef5eda2-8bcb-46f9-ba53-7d18564c2486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6c70aa-5ef1-4bee-b57e-23caf39f3d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee439b2-a758-4c9c-bd44-db147ac4fa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367acaa3-83a6-4edc-8da9-4e3d723f296d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfafb00-bf8f-4242-97fa-23eae9cee1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a33d76-2491-4e02-af50-11b8dc144c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9fb1e9-bcd4-468f-aa03-6785b2a9c7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74aa09fd-dc14-461f-b641-bf10c020672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0faa3b-4936-4470-b09d-4e1a0e823108",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1579faab-5cc1-41cb-8ca1-bc86f924e3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f9c64e-9001-4b99-a798-3df6fff6609f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e21de3-2e8a-475d-ad00-3a1b2245686e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd98a06c-0729-42f0-adb3-f205a9825657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab6461f-54e4-4113-98c7-86a049ee3584",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b266689-d8fd-41ac-b43e-d9c38f526fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbc0cf7-caf5-43a0-aa5a-c7d74ec3da70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa196bbe-c34d-49d0-a381-e1f284e3600c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60022644-4603-4b7f-a877-ab078f787b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc276db6-eb0f-477c-82d4-e1989909bfe2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588a354e-b001-4d1b-8e13-13f6c5df392b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9646b109-df74-463c-ae8c-e4320daed4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa29a25b-93d8-42a9-aa31-76cd8a5e7f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62332000-e472-4fef-8412-a79f7f440bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d6ad55-3d5b-47c8-ae81-17a563634234",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895b99be-ca0b-4b82-bfc5-c46c53ce8d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc39462-9eef-4820-b480-b766a19bc27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2291f9-7751-4017-a795-16902218ca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d1a991-8355-4ec6-9e99-4d22f3214658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8878aa6-14f9-4646-99fa-accf8a1c44c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441aa613-58ed-47b0-96ce-cc769675043c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7c3c3f-aa75-40f4-9bf5-59df3c44c849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1184d463-6ec4-4fee-8c9e-c4bcc8696f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408bf8cc-ec7c-4eab-ae61-3455e74f00d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c60ca-e0ae-4b3a-a789-95af565ae7de",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51797d4-dd97-414c-8414-b46cfe374568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012db221-d2b7-4b24-9138-886648628c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bcc61e-7643-4201-bf8e-155106836730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5be8d8-f05f-4bad-ae3d-39b7283a3a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f85f8a-de36-4218-a5a2-e45561a87a89",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02973c9a-b1e2-417d-9cd0-38d9782b11b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce1445b-54f2-48e2-a560-b6cffb654352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa241c-5ae4-494a-b21a-349a7fc8bf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7f3f25-078d-4f7a-bad1-aa01fbd76bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240b42d5-3821-462b-8b24-1b053654be9f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2278691d-5ffc-4004-aa34-eb3d1c0be8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe8bdc1-a4fe-4627-8b5c-b75d915461e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c277c56f-660c-4487-896c-f03b6faf87ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd85c7f-cc07-40c0-af90-769572e521dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c273a8b7-b7f9-48d5-aebf-98f83a560aa6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3775f53b-8ffb-437d-af12-21a69e7c9452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303c3d31-6c01-4d0e-9e11-cef64f521c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f815dbc-0165-41fb-ab51-5cb3009290d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849c1865-934b-41c3-b131-967d7e51ad1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac7aa6d-17ae-423a-a567-91a439a43efb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ada60-0ce1-4aca-9c77-327e9f520412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d298a2f8-1895-4574-8a77-02cbb9101862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257812a5-0560-45d5-80c8-83d4dd1ca674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24b1e73-afd2-42e3-a340-ce91e863cd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b1b472-636a-46cd-bdbd-86b781aa2f7a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef70d53-3c86-4f80-9922-399719324d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d5e6ff-af15-4edb-9d9f-d4234f787f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af28f73-8da4-4036-8805-159da81d4091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e007f51e-ca9b-44df-98cf-f1175854c2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b450f3bf-6c6d-4eb8-a22a-c29e5c41f206",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547a8bf9-ccf9-4592-935e-8b5d77f74491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193858e4-3f22-4efb-86ed-967ac98072e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f95ec3f-1661-4dc7-996b-92116b4ea444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793bf0bd-2b2c-46ab-8d70-5d737474e644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82af0d58-a027-405e-9c9d-93b1356a8d68",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a42277b-fbbb-4710-9d5f-720c47d289cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca550743-8090-48f7-bcc7-1da4ca774a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974c68a4-3b1f-4d06-8bb4-47cff4f05f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027563aa-30eb-4f73-907b-8890d9896e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb310679-f33a-49c3-a334-c00f61de6b69",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99a10f2-558d-42ae-b4b3-73a685e7b0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf0ab2b-3015-4562-9ade-7db48cf9be35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae3aea5-62e6-4564-b260-f325088e597b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17400e17-21c8-4a88-962a-c4afd08c09c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880c3c2c-2e75-4296-9d42-e6c406f5e362",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b86eeb2-9a09-440e-a412-b26e97fbc77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43330505-25d4-465b-aed1-8058d29a6965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d712c22e-ee5d-4625-9a9a-df5aef4f72c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6dd5fc-9d18-46e0-ae3b-b07840ca9973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0676da4-2237-4614-8614-a703d761ad74",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ff870-73ac-42d3-aadb-61cfcb9a2dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c21364-72f2-4ea8-b3dc-9d99786a7c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f674d52-6d45-41c4-b1f6-fe7769ddc00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dccb038-4fca-4277-96c9-10ffd8c2e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae85688-8031-4b85-bbab-ba5e9eaf7239",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a261507-924f-460e-af75-c3d8e1b7aea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a99203-1b73-424a-8647-053c241a497f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9285c09b-b424-4a19-92c4-b356034a3317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c0456b-cae4-4dea-afbb-43eba12616a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c848dd31-4751-40fd-b79f-4ce9addc2772",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f0f91-4b88-404a-9139-27906c4334b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a073e694-fbaa-4af3-86e9-3b35b6361054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bbf6de-3d68-45ca-90dc-2e9c9fdd5efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6cdf11-1210-453c-8380-5503989eff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d721f96-caf1-411e-8094-88c57c96bb2a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4756a6-5bed-4079-9321-33c4cfe67e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504ef4a2-2fa1-4128-ae47-1e144908629a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6418314-d859-4ae7-8778-a051ee698684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7a98fd-e209-444c-b034-c306bc9e9f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3000928-6e4a-4209-9a12-d092a8abbb1f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3217776-aad3-4c10-bd56-a4877e2a0332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b703693-593e-495c-bc21-e658c85912a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6871f529-0168-4af3-9f5f-1095c70f6384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad6669c-04e4-42aa-9ebf-e90407718c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3c337c-6bbc-43a1-a10b-5a914a702c1b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f669ae-7263-48ba-afb6-277e67381109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74160387-c8de-49d4-9a27-cdf27e2ed99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5f18e3-791a-474e-8481-b603f039b296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e34e60-12b4-4c21-86a6-24c9e3c539f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f655f6b9-5d5f-4bfe-b1d4-112d04570014",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc3a222-1a3d-4117-9f9d-420e3f790f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0b54ca-de7d-4f4d-841e-790e51db392a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2fbf37-af7f-4f01-8587-9964b3b924af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0616d551-8314-4d40-962a-4f8c90f05bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e0c9fa-48ab-40ff-ac24-04983520620c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b9e12b-8ada-4884-94b7-131a322a5191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c4aa90-7aa0-410a-ad4c-7f7674e76d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e36c6d-c60e-4a7e-b0a4-229561b1d605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ce0f9c-3dd7-4877-a633-4d1eb6daed66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5519f0fd-bc7e-4926-8f26-4955b3836374",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418f7b5e-cc0e-4fa2-84f0-d020728a8e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9268dc5c-f886-465a-9ba3-4a2220e82abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4714f83f-5146-4ebe-bcb4-b2c336b081e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790407c5-91f0-4bb0-b936-5a8a1195d5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36902df2-c549-46b8-89b0-fb5d19e460f5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677c974d-73dc-430a-b52d-e119c864c896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753c3ee2-2853-47f2-9fa9-4dbd072567ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81873cd8-bc2f-4c01-b2b0-e197995b60b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffd3925-2e9a-4887-acf7-665b16bf08ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b10bbd-c768-42f1-a531-f461dfe368e6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e26e87-3c5c-47a3-9df6-3204fcb90169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1df8619-7160-411f-bdcb-f2d19e374070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd8b229-3d3a-4656-a783-c95b9efd6921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15908b0b-b136-4612-aee4-7d7fb0c22283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa10b92-6ceb-411b-a0a7-550afa9dbf06",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde99e86-b0dc-4b99-bb94-c23145eb195a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5e5082-776f-4346-973d-4f06862b58b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4df6e99-b9d6-4b25-8780-89e117c32665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7976866-921d-446b-bc83-c2ce13c294ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b579e929-d80f-4a6b-a352-5c377175a718",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45f819e-72ab-4e02-b8c6-ddf07f9d71fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1747dde-d859-4a6a-8bf9-1d9ea288779e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeff8668-8bdf-4543-86c3-99b6e49a71d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b43ba75-d463-44de-be7b-184dc71c4a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f97be1d-3763-42b3-901d-80c51460d3c3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8178fd0-76ba-411b-9f2c-6ea1bbf702e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11344a4e-8d10-4210-9051-a0f54fdd8a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f549c6-6dca-41cb-80d1-17a6bb95f61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1d01b8-c8fe-4845-96e4-3f7e2291b350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3929a311-f322-47ee-a03f-3ee5b0461d4f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8618482d-1075-4556-9bae-4b560da0abff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0975cb18-107c-4f58-83d6-4ce2698f1d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed4534b-5825-4eac-884f-24b5107996cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb020d01-ee04-4a88-b723-729db7113557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb02da5-7f4e-41d7-9b01-0b818ee44f76",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5cd4e6-9ee5-4d55-9e86-2135be509605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecabd8a-12af-4e76-aea1-38941eda975e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaa9552-9af1-44ea-b08c-6baa09527984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4322d51e-d665-49d9-b96e-86ded75eaf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4290aae6-fc60-428b-b7d8-6759a415d3ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ada8d44-9ad9-47f9-95a8-8940087e310b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a3e6f2-1c70-47d1-b647-173f89d2128d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f54985b-ac01-4b2b-85f6-3a31dcbe7428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195c2fc8-068c-4ab1-998b-45c6ad9c3cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eab976-3a96-4bb5-94f9-3e9ba0017831",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ff7c09-b39e-4ed6-a2c9-bc29fa169e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a045d156-0bf2-4f85-ae31-2d6c001bc9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cfa9e5-d485-43dc-a06e-7e8e1ba90f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f94d752-d52f-4b06-8393-20148e7b9d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6704e06-acb1-41f1-b053-452493165183",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf58af-0d96-4a64-8308-97c6cd16e79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0217e84e-ec7d-438d-bdfd-5ed067f9cb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149a130a-c070-450f-b151-939de1ded29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c6b0d2-fcf0-4728-b816-16a0816b6527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33ac80b-81b8-4f9b-880d-c59a0b0da672",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad2cb61-8cee-40d8-be0b-f20cf70706e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46329081-0ae8-4f1e-9ac4-cb93625eb417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63603217-e731-4729-a34c-7bb2cfa29853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f73eb40-d117-4b60-9692-21a75947be74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab6c62e-458b-4ded-9672-ca9ccd07cbbe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c4a1a5-f10e-46ab-88dd-eb7652a7aa53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba71e4f-6871-450d-ab7b-2ad850cd9885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64610a9-9a7c-483e-aa98-be185c189acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc4e7b9-9fa5-4284-9952-d0afb9c63b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e617d01b-7905-4a57-ac7a-5a5d03985194",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40804ce-9127-40c8-8e69-b8247f81a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c187a3-0a7b-438d-b35d-499b9db7eeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdc73db-a203-4d5b-bc2f-b1681998e6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544edfea-586d-4364-ba7c-301516193726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d0f324-65ec-4180-b993-62e9bee04ef3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fd7aa4-5113-4ef2-9457-d1d07c6e870e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e72b2d-999e-4e9d-8930-a5f92c76419f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dcb166-6395-45ad-897f-13255b49e2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a28869-86fb-4594-8b0e-9ea66257970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67af04ff-9045-4166-a01a-84b860233238",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9c56a1-2173-4b16-8ddb-c8f5460e3b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edca95d7-3e76-4451-8504-23885e98f3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d9b839-ed6a-46e4-aaf4-4f5392db485b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952b7fb1-29e8-4665-b682-5587f5c277b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32640f5f-bb01-4655-8575-70acdeabe79b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9377a1ce-b02d-4025-b81c-855d17d0082c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06dac56a-2be3-4864-b889-57d6affd14a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8a7858-d6b1-422c-9505-258ae8101197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b718fc56-c23c-4335-b0ee-d01010f2cccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ed90a7-ad8f-41e5-9b4a-41c0ad6bc6ff",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b65d5-dd19-483b-9d07-9b4fefebf472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814c0296-bb71-44b0-9b02-29123120df10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d9f62c-81c1-47cf-9b22-0d8e6744cb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57df474b-9dd0-4b4c-9337-3e9e8638bb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b435094-1e53-4102-91c2-a4fd5e5e62d5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e87d4d-4ce9-43d2-a9c1-2fff6c67d736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e38e3c6-5fa6-4d41-b81c-814a9051a009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71668e0-e96f-4f78-82a8-bcfcbbb4cf72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3701ac2-645e-46af-a51f-bc518332fd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7a4def-1319-4974-9074-4c83e4eff377",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89891faf-6d3e-4d30-b9f3-5d9750678744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca851b3a-338a-43c0-ad57-35e576ad99f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9bd75a-38a4-4e74-b077-bb464d3233f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cff0d6-f8bb-48b6-b3a7-e55cd715cfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad612a2-982f-4fa4-8dc4-010125c6e907",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9a1f94-01a4-40f8-805b-1961658443c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616a349a-cac9-4bcd-82ff-32c530e39b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124b0a28-22b3-40e2-8214-569f0f43f496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39720f32-e6a0-4dce-a8b9-1eca44a23651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6220c42-5349-44c2-a647-227c14aad31c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78313423-b8b7-4d5a-9bd7-a07fc756eccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7081546-6c0a-444c-a21d-55b50d54fa62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4624921a-489b-4b26-9e02-b892c77ef258",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7cc5f9-1e93-47b6-9fbf-4cce1a7b9c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f3af38-c61a-462c-9f4f-a246527e3cdf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47e9ad-8cc9-4b27-9b28-339d465cac15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496450d9-ed74-4673-aaf7-c9fb19a86aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bc6cda-c1b6-4370-a011-d523426a80d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbfa55f-6ecb-45ad-b518-8844f93e6f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5573ece8-2538-4171-8644-884ee1e462e5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631a39f9-ed3e-425b-bd69-63659684807e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d839135d-323c-470f-a1d5-ea31457631f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52614010-43de-4240-b074-1636492dd1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c873f03-3688-4cf6-ae6b-25a0aebb9770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc6284c-d696-4520-8071-5d7ddaf40e01",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334d3933-038c-4062-a11c-d155ab6dde7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b947c17-80b7-4012-94dc-fce567bb3be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d09ae6-7fa8-4ea2-8c4c-bf431e1e8bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd449f2-45a3-400f-b74f-dd5ec52e7e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6c2825-2cbb-4984-aeeb-1de1e6dab9ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad20062-d29f-4275-b16f-e8762f343be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305b14d0-b762-42ba-beab-09d81f480446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ab1e20-3f9d-4866-b01d-57d114de8880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73813994-dfd7-49af-bce2-7848fdc44550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d1d78b-b99a-499b-8908-a3d729a6a2c2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4440460-ed2b-4ec5-b36d-13eeef9f4598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411e007f-db05-4455-9e96-009728a30a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988c23c6-2aac-4ec2-98bb-24590379f3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4212ef-1b42-4130-a753-b570be8ada1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af2ae42-d170-480c-89bd-557d2bd739fc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e187a6a-018f-4d7c-9eae-327fc7bef390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d82059-35b2-413d-a14c-e72ee6f3315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bdae73-aca5-4446-98c0-1b2679304d09",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11be764d-cd90-4a6d-9e5f-0138f878b381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2603ea0-9dc7-4ce1-9942-5dbbd145dedf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccf7b7c-5651-46f9-84e4-97b075e2ec62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f68cb1-689d-479a-b73d-681a34dd3b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d343bf3-35a8-4af0-9938-90d46ea0d95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fedd67-7eaa-456d-abb8-fed1e082c640"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cdb2d30-ef44-4f69-9e2f-1f5677206118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caca74e5-60ba-4198-8fa5-3bca26a7943e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ac712c-4768-4147-a794-68cea2b3728d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7aea65a2-f0db-45f2-b9f9-96a6788c8e2e"
                    }
                  }
                ]
              },
              {
                "id": "ce5908a5-ed86-4db4-a0e0-d1523b43554c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ec67eab-7d8a-4362-a1dd-d185d3c9b523",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e84a78-ac39-44d7-a252-53e0a5c12adb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf7f7cc4-69d1-4df7-b561-6113ef016ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a95959-2939-41a1-897c-8f45365a0832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c52b081b-de39-4c9a-90cd-bc35af09d662"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "748c73a7-3c43-4a56-88ed-d0407bf551c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a19a8d6-b4e9-4b12-aea6-be3c6bf7adb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c19fa9e-c0fb-41b2-81e7-a5be17adb2fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eef1bedf-4cbe-46c1-8d00-8483bc6ff7dd"
                    }
                  }
                ]
              },
              {
                "id": "3a233afa-1142-4a80-96a7-2c913143e14a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "39fcf9ff-db53-49d3-a35c-8140180f315d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c89879-3a5f-4fd0-a6ae-a183d7ddcd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ee473038-1e27-48aa-9698-f90364afe4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590378fc-0015-47a6-b711-7bcd10101f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b353fc2-8da9-4d36-a6cc-0a546a952286"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1b97feb-a77f-4e3c-acd6-a095154ddd69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2866e0df-1dfc-4e1a-b0ce-0b83e5f8b861",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20743edf-5fec-450d-b0b3-e9232aa524e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2349d543-db01-43bd-837c-4f9c54a1ad06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae19353a-5155-4e9c-9138-feda3ad96775",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34cb2325-5ac7-4d53-a49e-5911fe3dacd9"
                    }
                  }
                ]
              },
              {
                "id": "fa797e61-ff7b-4268-9b61-e4a8c2490134",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c126c429-b096-4da0-8767-3546d5deca6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c1968697-4105-4885-a977-0cf14c7fd171"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "096da008-1b2e-4584-aa93-684f1f00553d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d78480f-a47f-4949-b773-48514db043ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56b44cec-f04b-4779-80d2-7062ca233cb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e24b94c8-607a-467a-aeab-8ab128564c0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad0fad12-6c06-4ede-be37-0f781a834f04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4906092a-cc2a-490f-a953-0b8a8e0bb05e"
            }
          }
        ]
      },
      {
        "id": "165cf64b-4813-4c1c-812e-7a37d96e3fa9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e07ce08b-6a33-4147-8739-2ce1c4f72c71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b734f1e3-7a9b-40b4-8cdf-2fe8f0655233",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39fa8fb9-3395-415b-b6b8-fd32981bf42f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511e9a06-69a8-4c54-8a72-e60bfcc672ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8e1a1883-09f1-43e4-8272-a405e86ceff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f55e7c6-7be2-4200-9305-9396c770e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a780a4d-d64f-4efb-ac46-c7215cfc7ee6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b72610a7-2e2c-43a3-ac1a-f4851e6c0cd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2626f08b-b2e3-42d4-ad65-755f759566af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6a2fe93-58f8-439a-b17c-6dbb008b5505",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c81d36c5-9e54-4e1c-8a48-497339dc5105"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59bc1d97-9330-46c7-96af-d23cb9f7f79b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7ff3cf72-da8b-40f6-92dd-75a6ed134b39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50e7d83c-71cb-4758-8de6-e584fe79f776",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62437906-d141-4270-8918-6d13806d3ce0"
            }
          }
        ]
      },
      {
        "id": "9fca2002-93d5-45fe-ac73-23712e9824a5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1069756e-8b8c-4841-bcb4-74ab7e8a9387",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33b723cb-ac3f-4503-8b4d-34f637cfdc11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8b6f3a5-8dcd-48ee-ac58-ee4863dbd620",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379b3faf-9d04-4dbd-abe8-946d1718736f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ccc157-f470-460a-9fa2-dd244c8a4963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f3665f-fc08-4ac5-bdfd-71c13d4afaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aedb9daa-4b8c-4edf-afb0-762530a6b65d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b88536a-9514-414d-b361-da21ae87ddbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b80c64da-d966-46a5-980e-e17490d25654"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a147ca-ba9c-46ce-a311-c37544bc3016",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1cbb8f3-36ef-46f7-a73a-125c932ac983"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84a6a03f-0d41-40b2-ad00-0ebab8e8e7d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8bd17ba8-5601-4212-bb7f-808c5e57dd6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d97b191a-4a0a-443a-bf40-dca1067bdd58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f0d2b95-7ab7-4b2d-9cb1-d6e8ebea16fc"
            }
          }
        ]
      },
      {
        "id": "7146172b-b4c3-4c2e-aa9f-4542002805db",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3b153cc0-3b04-4c59-96ef-7f635275ea04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcf9e030-8b4e-43a7-be4a-ffa6477b2ab3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d1e0629-24e6-4c8e-98bb-a316f8f4defa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46f099e-231f-4ca6-a241-101a59e4793c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "355f7003-4e37-40cb-87f6-0e6e31468574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7e1013-4658-4523-bd66-32e772fcbe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e3155d-79d7-4d19-bffc-4d2230102556"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6f49e2a-01a8-4dca-ab5a-cde2340dfc78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2e622b3-dcb8-4c51-bf83-251aa502d754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "809dd865-0c6c-4ccf-8f9f-9745de1568fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "904a4a78-40e7-4732-ad64-a153697955d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9a1f610-5eab-4571-8d80-de10d6e32190",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76c2793f-d6f2-4ca8-8b70-739b42df8dff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a71378ac-de99-4ec4-8350-bd47c74fed3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9a6dd4c-dba0-4e0f-a57c-51247a9399d7"
            }
          }
        ]
      },
      {
        "id": "70abe8e4-3ab4-4b9c-9692-f9ce4e95d3d5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcccc283-18b5-4fbc-aee8-bc8c1d1ca361",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39ed4eb0-5f82-44b9-b8f7-f080e145a3b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0a28e366-e5f5-4859-9250-4b46ce3f6e74",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "286d799b-c5d2-4587-a168-3a61a9e95274",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17d06fc1-24ac-4b5f-9273-965f27181b43",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 142.7301587301587,
      "responseMin": 6,
      "responseMax": 13291,
      "responseSd": 858.5169282399607,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720571982559,
      "completed": 1720572026744
    },
    "executions": [
      {
        "id": "8b711aac-c586-4ffb-8fc7-21494c85c1c8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3aa05f3c-8df3-4069-bf8f-e6edb10e693c",
          "httpRequestId": "b707c1e9-981d-40b0-bfcb-ccbcb4974c3e"
        },
        "item": {
          "id": "8b711aac-c586-4ffb-8fc7-21494c85c1c8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "13691639-df8d-469f-8af7-f0dd833e2ea9",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "19d3e90f-c507-4d77-a667-d439e5f44e6a",
        "cursor": {
          "ref": "3898d4ef-e27e-41ba-81ca-99a01096f382",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "579a8cad-6766-4c06-b20e-f018a8a7e467"
        },
        "item": {
          "id": "19d3e90f-c507-4d77-a667-d439e5f44e6a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bbca45af-ae3d-4742-a40c-48114660aedc",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "447135e2-4b34-4d46-9c2a-872d1ca0346e",
        "cursor": {
          "ref": "dad95f55-e17b-4c6f-af50-699a0ef691ea",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "063e2667-1523-4421-8fb7-8cc84ed11213"
        },
        "item": {
          "id": "447135e2-4b34-4d46-9c2a-872d1ca0346e",
          "name": "did_json"
        },
        "response": {
          "id": "fb87f97a-315d-4a31-982b-f9af425a6113",
          "status": "OK",
          "code": 200,
          "responseTime": 268,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d6074f-848b-4c69-819d-3866f597a383",
        "cursor": {
          "ref": "98229154-d189-4f47-a963-ad07bd118cdb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3c9dde2-102d-45fb-8c56-9ef1ff71c6d5"
        },
        "item": {
          "id": "80d6074f-848b-4c69-819d-3866f597a383",
          "name": "did:invalid"
        },
        "response": {
          "id": "c00fcb67-acb5-4a69-b6c6-28262f746add",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d6074f-848b-4c69-819d-3866f597a383",
        "cursor": {
          "ref": "98229154-d189-4f47-a963-ad07bd118cdb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3c9dde2-102d-45fb-8c56-9ef1ff71c6d5"
        },
        "item": {
          "id": "80d6074f-848b-4c69-819d-3866f597a383",
          "name": "did:invalid"
        },
        "response": {
          "id": "c00fcb67-acb5-4a69-b6c6-28262f746add",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84582f71-db13-4754-8c6d-a92ef9014f6e",
        "cursor": {
          "ref": "2706d36a-3a1f-4550-ae3b-8f9d320a7f20",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "82fd1858-fde1-4f1e-bf08-688599a92d1c"
        },
        "item": {
          "id": "84582f71-db13-4754-8c6d-a92ef9014f6e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "867ef85f-0a59-4070-9da1-77211e11ea4b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec31fa62-ef4a-4dc2-b7b9-9bdb0fe0dd5f",
        "cursor": {
          "ref": "16a1b2a8-89c4-40ec-b756-52493f3fe726",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4079c091-dfa8-4046-ad22-4b323a2fa217"
        },
        "item": {
          "id": "ec31fa62-ef4a-4dc2-b7b9-9bdb0fe0dd5f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0fa49c19-27f7-4a76-a118-8ddfcdcfec80",
          "status": "Not Found",
          "code": 404,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8c3fb4-9cf8-4294-8c44-68cf18c0a444",
        "cursor": {
          "ref": "eb9d56dd-b1f4-4f12-b4b8-b10f6a1006ae",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49a339aa-f5d8-4b8d-9cb6-0ba75bec3c99"
        },
        "item": {
          "id": "ee8c3fb4-9cf8-4294-8c44-68cf18c0a444",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7377ae80-d82e-4d7b-b616-0fa928ad6f4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 114,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0710349-9bc1-41e3-a9d1-d6f761215d15",
        "cursor": {
          "ref": "279d61f8-fd70-4c5b-bb34-b046b72db6e7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3f729eb1-f793-4ff7-9cab-83552380ef24"
        },
        "item": {
          "id": "d0710349-9bc1-41e3-a9d1-d6f761215d15",
          "name": "identifiers"
        },
        "response": {
          "id": "5f1716a1-36ad-48a0-8c48-11a63a6f7fe6",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46521010-58be-40d1-a02d-b2e77fbfc26c",
        "cursor": {
          "ref": "dc8cc322-d75f-47bc-9eab-80c704cf5e9c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "eb6e8932-b961-4a9a-9d98-79dfb3eaaa84"
        },
        "item": {
          "id": "46521010-58be-40d1-a02d-b2e77fbfc26c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "237017fc-7782-4ffd-9689-9eb18be7c7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901a64d0-85c9-40f6-96c6-b3ac7a175c8e",
        "cursor": {
          "ref": "f5eeda59-acb1-4cfd-8f40-2d6f838fbb6b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5d25f580-ce4f-4568-b87f-0953a7fdcaf1"
        },
        "item": {
          "id": "901a64d0-85c9-40f6-96c6-b3ac7a175c8e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b83b410-fabe-49b1-8dc7-71b932b43fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b0007a-1caf-4c76-a2e8-e538d9b52b1b",
        "cursor": {
          "ref": "5102e260-1b2a-48c7-aec7-6f27d4ef08d5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "95479e82-7567-42d5-979c-d364538a0760"
        },
        "item": {
          "id": "27b0007a-1caf-4c76-a2e8-e538d9b52b1b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d85d03bb-6e61-420b-8bfa-5e9251999a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce212ddb-bb74-4423-a355-42094de6d882",
        "cursor": {
          "ref": "7d6e15f2-def8-4937-a73d-c3373ca978a4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f6a87bd8-73bf-4588-a286-644944241c89"
        },
        "item": {
          "id": "ce212ddb-bb74-4423-a355-42094de6d882",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "753cf71d-90ce-4638-a2ef-26890a8f5757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f3aa94-d413-4ed0-a1ca-b7c096111267",
        "cursor": {
          "ref": "2a310358-8906-40cb-aa79-6f32c3d6c4c0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "13b30627-6ae5-431a-931d-afcea9b95fd6"
        },
        "item": {
          "id": "72f3aa94-d413-4ed0-a1ca-b7c096111267",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c539d7aa-5f9e-4f64-847c-35d557c09193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b036f30-f408-4975-9916-e62b0ecc7136",
        "cursor": {
          "ref": "7fdc0721-ea5a-4530-8f7e-2fb9ab880ee6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ebd4476-0e08-4497-aec9-d3c777bf9499"
        },
        "item": {
          "id": "9b036f30-f408-4975-9916-e62b0ecc7136",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "488b201d-dcf7-4e2e-88bd-3156313d3043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7703c69b-9134-4eaf-bab4-a10ea0742ba6",
        "cursor": {
          "ref": "af0cdb5f-3fad-4f6e-b34a-2835190a04f0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4ea709e0-411c-4662-8736-47917308cd81"
        },
        "item": {
          "id": "7703c69b-9134-4eaf-bab4-a10ea0742ba6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "88eafe49-2a11-465d-8d03-5094bbb0e4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44199bf2-f9c6-4c36-80e0-20fa65b4b1fd",
        "cursor": {
          "ref": "ce5e6d0a-9434-4993-86b6-583a24a9884f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2e8b0410-8c58-4641-b4fe-cd43aa9c0edf"
        },
        "item": {
          "id": "44199bf2-f9c6-4c36-80e0-20fa65b4b1fd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2f8d7b9a-294a-442d-8a81-2e68ce08cb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fb312d-adf9-4e5c-bb66-6e70547ba03d",
        "cursor": {
          "ref": "5e0f7aec-a16c-4974-8fcf-e774471e182e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5a92f347-cb56-4ff3-91f2-cc6a8694abb5"
        },
        "item": {
          "id": "d7fb312d-adf9-4e5c-bb66-6e70547ba03d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96c34440-6e94-472f-a07f-d3fccf4bfd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d343a6-34e7-4b0a-a35f-cedd06d691f4",
        "cursor": {
          "ref": "c3915ed9-e132-4cb1-837f-435535b2f06b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cd744fe4-2d01-4064-b1dd-8d0963b7aaf5"
        },
        "item": {
          "id": "83d343a6-34e7-4b0a-a35f-cedd06d691f4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1657788-472c-419f-bf1e-12c9202d036f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92fb6d5-698d-489e-98e0-a0e8f75573e9",
        "cursor": {
          "ref": "ea456bb1-e46d-4daa-8603-67a3dbd86cc9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0d5375ec-eab3-4a83-ab41-e1c567d094e9"
        },
        "item": {
          "id": "e92fb6d5-698d-489e-98e0-a0e8f75573e9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "04ad7deb-ce51-4e97-ae1e-c0f11d90ca71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713b0f22-8036-4af0-bdd5-e32b06e7a83b",
        "cursor": {
          "ref": "22335656-a8a7-47da-a2ea-4d93782eef69",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2d25e99e-a364-4ab0-a184-c14fc5baac9d"
        },
        "item": {
          "id": "713b0f22-8036-4af0-bdd5-e32b06e7a83b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "37a845db-8405-4baf-92f3-d19cf13b1a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ac30f9-69b7-4b62-ae55-8c4b69e1f0fc",
        "cursor": {
          "ref": "ceacf2d6-b39f-4ea8-be24-b18122fe4b1d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5219dc77-6191-467f-a678-4dfe6ed52af4"
        },
        "item": {
          "id": "b8ac30f9-69b7-4b62-ae55-8c4b69e1f0fc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "848ebe38-4ea7-491f-8144-1adde8112a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4779b5cf-0066-4262-8268-8b097206f38a",
        "cursor": {
          "ref": "9557bdf3-d909-467e-816b-f9856d4fdf68",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aa2bdef8-c754-4d90-b2ba-ab54d31aea8c"
        },
        "item": {
          "id": "4779b5cf-0066-4262-8268-8b097206f38a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f7ab64c3-6282-418f-9968-e1a9856a9acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b83db07-fb90-4f88-b8ef-51526036cd1c",
        "cursor": {
          "ref": "647622cd-613b-40da-a55d-d4534f84db24",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "65799657-0746-46c7-b7a6-805691141249"
        },
        "item": {
          "id": "1b83db07-fb90-4f88-b8ef-51526036cd1c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e81cceb9-d6ac-4d2a-aca2-e396a58d7b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b276eb8-7975-499d-8cb2-b1ee79fc03a5",
        "cursor": {
          "ref": "95917cdb-12b7-4968-8e9d-eea71018098c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "21389004-fdbb-4d38-a277-6e67f6264e28"
        },
        "item": {
          "id": "4b276eb8-7975-499d-8cb2-b1ee79fc03a5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "14b63b15-b041-4dec-91bf-6d04f64defc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1323db3-777f-49bc-b540-b2cdb22f386d",
        "cursor": {
          "ref": "58c776d3-ef25-425a-9f5d-f54a5b29e5be",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f1498e13-2651-4237-aa85-b7d44ae4229a"
        },
        "item": {
          "id": "b1323db3-777f-49bc-b540-b2cdb22f386d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a0f9989c-74e0-466f-8cdb-32a35c86ea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d8b732-055b-4e27-8071-c0ebe4867901",
        "cursor": {
          "ref": "f131a74d-4322-4a82-80e9-92338a333fb2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "06bf40f4-ddd4-430c-97cb-2ab46b30e63a"
        },
        "item": {
          "id": "c5d8b732-055b-4e27-8071-c0ebe4867901",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d3746eba-91e5-4b54-888f-35453e45ee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51bfdbb-3518-421f-adad-148d29c5bf4a",
        "cursor": {
          "ref": "b2c9f9e6-715f-4828-8b0d-81fd4195346e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "258ce30e-41f4-443b-9216-3eeb70be8af1"
        },
        "item": {
          "id": "d51bfdbb-3518-421f-adad-148d29c5bf4a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c1f2d79c-bcc1-4dee-9bff-459c0cee1604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4466157-9700-4f0d-9756-0678660aa019",
        "cursor": {
          "ref": "95f89eb9-7bb7-4006-8755-6714990ae8dd",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "166bab89-4596-463c-94a8-ba9458c931c3"
        },
        "item": {
          "id": "c4466157-9700-4f0d-9756-0678660aa019",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ba6c7ccb-ecdf-42c5-a16c-ea9114e5dcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5f34e7-46b4-48e1-8631-e30944164b93",
        "cursor": {
          "ref": "b0456f9e-39ee-4bd2-9e27-e78b1b6573ef",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "daa4e7fb-badd-4ffd-bb47-c282f5328e3b"
        },
        "item": {
          "id": "ba5f34e7-46b4-48e1-8631-e30944164b93",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c817756e-d790-432e-b143-8567f6354be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4ec43e-d13d-43b3-9bd1-650d7ac80a0a",
        "cursor": {
          "ref": "e1131a17-3458-4263-a44c-22329113a29c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bd6050db-bfac-48b7-9db6-6765b3cacf4f"
        },
        "item": {
          "id": "1d4ec43e-d13d-43b3-9bd1-650d7ac80a0a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ebeb2d05-cd12-47a8-84f6-7d4c4e74ae35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dd8dcd-e01d-4ace-9607-6eb81356c901",
        "cursor": {
          "ref": "74c6155b-a041-4960-8e8d-399f7849134f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d59baf45-b9ad-4505-8bce-91c220076937"
        },
        "item": {
          "id": "46dd8dcd-e01d-4ace-9607-6eb81356c901",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "54823f95-4fc4-4b82-be9e-e0449b5d9878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797358ef-7dc1-4cbd-9f33-4647823a66c0",
        "cursor": {
          "ref": "b1126486-4a25-4180-8a37-f98c1ce0a01f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cc5f840a-ad45-4953-bb5d-56ae23e02acf"
        },
        "item": {
          "id": "797358ef-7dc1-4cbd-9f33-4647823a66c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a153b07f-079d-4cb0-9e03-a9b754f98e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8044d7e-dae4-451b-b2cb-30c906646e8c",
        "cursor": {
          "ref": "79128348-db9e-450b-aa17-ec06d6b30959",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9946a41c-10ce-4412-a06c-abe57cd61c9f"
        },
        "item": {
          "id": "a8044d7e-dae4-451b-b2cb-30c906646e8c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5982705-140a-471f-a0c9-112c352a14ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318efc63-26ba-428d-b097-73e1d930e2e5",
        "cursor": {
          "ref": "73bc9e66-11fa-490f-9a99-76f421e8323e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b650e9c-cffb-4cd6-8f0d-cf7b1299a308"
        },
        "item": {
          "id": "318efc63-26ba-428d-b097-73e1d930e2e5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "71cadd2e-b21e-41fd-a036-072d8c62bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4778ac5e-36fd-4cde-89ce-105e691227e4",
        "cursor": {
          "ref": "b31672f7-91d5-421f-a7a7-3bb61c3cf7ec",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9c66e73e-8046-424b-9ec3-6284b3b09115"
        },
        "item": {
          "id": "4778ac5e-36fd-4cde-89ce-105e691227e4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f0e8072b-fd98-4e3b-a0b4-6e8b779b5369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce695c6-0517-4445-bc33-826a26d9a9ed",
        "cursor": {
          "ref": "5353fd6f-3b77-4a62-8fa7-68d013c1e474",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "04ddf5de-f269-437d-bfed-4d2467d1bd8d"
        },
        "item": {
          "id": "7ce695c6-0517-4445-bc33-826a26d9a9ed",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b7a010be-0f0e-4d5b-95e7-ec95ee174650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ee2363-bcfa-4a4a-8cb1-a29220c4024a",
        "cursor": {
          "ref": "86fe3023-de35-4c3d-b479-17627ecc61fb",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8cb0eb9a-3de4-4fc1-87d3-104337dba154"
        },
        "item": {
          "id": "83ee2363-bcfa-4a4a-8cb1-a29220c4024a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c662dd75-0fde-4c6a-9f2f-783d6dd309b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33144263-4422-44c9-a69f-000309154d11",
        "cursor": {
          "ref": "5b43a5e7-d4b7-4d57-b856-3f2e10d8bf80",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0d39da2b-b51d-4fb4-a5b2-d1dd481d6c0e"
        },
        "item": {
          "id": "33144263-4422-44c9-a69f-000309154d11",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a5e99a1-da57-402a-a097-fc2d0f812b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cc5cb7-ba5b-4d24-9866-1896a30c6e02",
        "cursor": {
          "ref": "2c34b9f4-0745-448b-96ad-55563461638f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6e0ccb4d-f7e5-42f7-9c71-c5bbfb5853b8"
        },
        "item": {
          "id": "13cc5cb7-ba5b-4d24-9866-1896a30c6e02",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5696aff5-4949-4d43-82b9-fa91642e9acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2053d5d-b2ed-4083-b8cf-ed08edf4efd5",
        "cursor": {
          "ref": "57774bea-c164-44bb-9826-0702eea3826f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bd84fe20-8346-48dd-9d15-e4a63f2911e9"
        },
        "item": {
          "id": "f2053d5d-b2ed-4083-b8cf-ed08edf4efd5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6d2e053b-470b-4d4e-af0a-7fd74ea1ad2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedf4455-ff9e-4c98-8f4f-01d037255602",
        "cursor": {
          "ref": "222eda47-77e5-4f1b-814a-cc65f6c1f080",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b4e22a7a-3c4c-4afe-8d75-99a32ba6be2d"
        },
        "item": {
          "id": "aedf4455-ff9e-4c98-8f4f-01d037255602",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "20e348a2-ef13-493e-aa67-71d260e85b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42df2c3-4a5e-445c-8fe8-34b6f62f5659",
        "cursor": {
          "ref": "609b5748-1de1-4cd5-bd37-cd92a8f60b6c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "43d5a402-2888-4df8-adab-5c24cb5a253d"
        },
        "item": {
          "id": "e42df2c3-4a5e-445c-8fe8-34b6f62f5659",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "02eb7909-0c7d-4f5b-acfb-d54210253023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3513323b-85b9-437b-9761-00b85fb7cb04",
        "cursor": {
          "ref": "f13f2e04-07e3-4273-9002-b21492d07352",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1481a469-8a83-40cc-adef-ec882172add4"
        },
        "item": {
          "id": "3513323b-85b9-437b-9761-00b85fb7cb04",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc30b88a-14ae-4c06-94c3-90fafffdb8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf7a0da-77a0-40f1-8891-633dc8ddce21",
        "cursor": {
          "ref": "0a04434e-9abf-43eb-b480-cfca4a945f73",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "47c3f2db-a6ce-4e37-8d90-480cf75418c1"
        },
        "item": {
          "id": "9bf7a0da-77a0-40f1-8891-633dc8ddce21",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "03f1f6f7-ae97-4b5e-8b96-c321dc06e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc9db1-9659-4cd3-8db9-44dd29dc370b",
        "cursor": {
          "ref": "9da92b1d-2a0c-463a-a744-8335d5d917d1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "85048d37-6368-415a-93c3-c1171a3ccaba"
        },
        "item": {
          "id": "debc9db1-9659-4cd3-8db9-44dd29dc370b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fad33cb9-7d95-41d3-982d-642d42bfc323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b45bbb7-0765-4b11-b253-f45f4ed9b51f",
        "cursor": {
          "ref": "847c6fea-38b2-4edd-9cdd-9a0afb90e99d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "65882cf8-c178-4bba-a5a7-fd3850fe41fe"
        },
        "item": {
          "id": "5b45bbb7-0765-4b11-b253-f45f4ed9b51f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "63607ca1-8dbe-4f83-a5a2-e21e406c6c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead472ad-293e-4b95-8c52-bc34f4416ee6",
        "cursor": {
          "ref": "1c3e69eb-2c46-444a-99ec-d645daad382e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd85176b-d9ea-440d-a256-01f16a3d074b"
        },
        "item": {
          "id": "ead472ad-293e-4b95-8c52-bc34f4416ee6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a46f176d-86fd-4719-866f-d8f3d82ea4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71ac949-2b3c-4698-9acd-8eecf1410387",
        "cursor": {
          "ref": "18e69a3b-3154-4930-a7f1-d0eec75d9c86",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "66b1f8f7-5a5a-49c5-b618-164ce51aaa43"
        },
        "item": {
          "id": "f71ac949-2b3c-4698-9acd-8eecf1410387",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8662e6a1-1f10-422e-9450-ae9ffe9690d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1b016f-0c96-45cf-9b6a-8c677e2ffc0b",
        "cursor": {
          "ref": "33b0825d-57b5-4cdf-a2fb-1701625bd37c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "689e1f91-a179-4e06-b0be-3815b35c9916"
        },
        "item": {
          "id": "eb1b016f-0c96-45cf-9b6a-8c677e2ffc0b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4d654969-04be-436a-808d-da430de25cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f914677-2105-40d2-9929-5277a3e389e6",
        "cursor": {
          "ref": "9c4400ab-2b78-45eb-9968-758ad07069c1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4263d087-7365-4f71-8f88-908fc64defd0"
        },
        "item": {
          "id": "9f914677-2105-40d2-9929-5277a3e389e6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8454551d-00ef-4da9-a94f-21c8eb31032a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aabed5-0669-452e-a9dc-c4649aab5984",
        "cursor": {
          "ref": "bbe7b8ed-1c32-42bb-8f95-7260b7040862",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c84c1408-be92-4cce-8dd8-f66671926de7"
        },
        "item": {
          "id": "67aabed5-0669-452e-a9dc-c4649aab5984",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3ecbeaa6-696d-4282-ad72-bd0241365f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b285a63-10ec-48dd-a641-0b4cbc4d2e3f",
        "cursor": {
          "ref": "d56b73d9-9b5e-4ee2-a703-e4dbb9dd3f8f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1c841826-7db6-40df-a1d8-9ec712853d3b"
        },
        "item": {
          "id": "0b285a63-10ec-48dd-a641-0b4cbc4d2e3f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "375234dc-1df6-459a-b264-a1309a67ac30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d007bb4-ab4e-4c9c-943c-ee2ad66cffb8",
        "cursor": {
          "ref": "bfdc681c-340e-4707-8b6c-ef0a807dad34",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0ababd24-1dc4-4d6a-8458-9fd8c9f6c242"
        },
        "item": {
          "id": "9d007bb4-ab4e-4c9c-943c-ee2ad66cffb8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e3d29494-7c41-4959-adef-4439ad76e6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84610a92-9721-436a-8651-9ce90f13595e",
        "cursor": {
          "ref": "74d40665-b9da-4f9d-80fb-63d454a97f80",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "623407e5-17c1-4b8c-87b8-0f6c12d42068"
        },
        "item": {
          "id": "84610a92-9721-436a-8651-9ce90f13595e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "54f6e0bd-58ab-49cd-8130-11c2a0a20133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3076fe76-499d-44fe-860b-659e1d02e704",
        "cursor": {
          "ref": "bd57c9df-6a35-45c8-bd5b-ed2d1e1c1753",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dc173d45-e974-41f3-9eea-0bae46166aee"
        },
        "item": {
          "id": "3076fe76-499d-44fe-860b-659e1d02e704",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "87ac2145-e2a7-49a0-990b-d79149440cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384ef4ca-7fe1-442d-b4b7-a85e03be9d0e",
        "cursor": {
          "ref": "e901bcbf-7e93-4f68-b532-5935c906e1a5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "62e6f071-6e61-4352-a4a5-239aa277bda3"
        },
        "item": {
          "id": "384ef4ca-7fe1-442d-b4b7-a85e03be9d0e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54c8a0d3-d5ec-4869-9013-fe100fb51767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262c0deb-c250-449a-9e9c-36d4104fb171",
        "cursor": {
          "ref": "8f597a72-50e2-439c-96a9-44f64386bbf3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5dc98ab6-0cdb-483a-85c5-034778d74649"
        },
        "item": {
          "id": "262c0deb-c250-449a-9e9c-36d4104fb171",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "28cdda5f-5809-44dd-a5da-8a9cd6334a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87011015-a96b-4d3b-85e3-5623185033bb",
        "cursor": {
          "ref": "b5d0b3b7-742a-4afb-98db-6430e6983e89",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "07bc81ba-926b-45a2-ba70-9aaaf8e3ae17"
        },
        "item": {
          "id": "87011015-a96b-4d3b-85e3-5623185033bb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "149123ab-807b-4213-a3de-eaf64df74ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305d9d0a-d091-4bd7-a2ae-8f21b2bb0a49",
        "cursor": {
          "ref": "d20b8724-bdfb-4cac-88ba-d1ff19f89cc3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b35fa376-5d3f-42ff-bf6d-29e1a3e0eff3"
        },
        "item": {
          "id": "305d9d0a-d091-4bd7-a2ae-8f21b2bb0a49",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2fae4c0f-8a5a-4ac3-a94a-48d4b7c6c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a9a5ea-b801-4cbc-b44b-2cddb2d6b0af",
        "cursor": {
          "ref": "0f621d0e-23b8-41d3-bfba-a13c319ed98b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "264bf7c5-db57-416c-bc53-138ee6ac89a4"
        },
        "item": {
          "id": "74a9a5ea-b801-4cbc-b44b-2cddb2d6b0af",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1739eca0-b79f-493c-8c1f-a059c2526706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f839c6ec-a1c3-415e-81f5-eb48768875d2",
        "cursor": {
          "ref": "d880c506-e3f3-409d-a473-150cb9886a22",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a21fdfc8-0845-42bf-bed1-db8b3e0c37c3"
        },
        "item": {
          "id": "f839c6ec-a1c3-415e-81f5-eb48768875d2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "824d0687-9c0f-4a6e-bb00-f2a0472d1fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d344ca-62f1-408d-b1db-889ba1dadf07",
        "cursor": {
          "ref": "7eefbb74-75a6-4eb3-b7f4-6ab00f20c5c4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "13cee22c-5fae-4acf-8106-3f6b06eddb88"
        },
        "item": {
          "id": "68d344ca-62f1-408d-b1db-889ba1dadf07",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f0dc5264-39a8-46c5-9b5a-8410e6f7e5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13011574-1e3c-402b-a03a-69a50caa9414",
        "cursor": {
          "ref": "82ef607a-7195-4604-8ade-56bc8af2441d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1421a784-4316-4a6a-bf45-d1fa8807e316"
        },
        "item": {
          "id": "13011574-1e3c-402b-a03a-69a50caa9414",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d31d1280-926b-483b-abf8-da446d5bc8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74232b57-2b51-4670-b794-43e6d7876903",
        "cursor": {
          "ref": "621f6795-a842-41a1-be98-7c4d257da5c3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "39a6ef80-8ba9-4bf8-b0e5-43d8badb7612"
        },
        "item": {
          "id": "74232b57-2b51-4670-b794-43e6d7876903",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "415de29c-8114-4b09-a885-8602961771b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9b5e46-4efa-4fe5-b182-2e44bd593c15",
        "cursor": {
          "ref": "47d3d9f0-0222-4292-ad47-0c89ebf86bb3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bfbe2a3a-f363-458a-96fb-effa3ffaf89e"
        },
        "item": {
          "id": "ab9b5e46-4efa-4fe5-b182-2e44bd593c15",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2f81a342-f035-4bca-a65a-f53b48a9ba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ca4fbd-53d0-4106-936f-05e6cb5415aa",
        "cursor": {
          "ref": "925893d3-646f-486a-acfd-a355f89edfbf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39d28b7a-1440-455e-a053-8b48bb8f075b"
        },
        "item": {
          "id": "41ca4fbd-53d0-4106-936f-05e6cb5415aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "257e0d4d-6e97-46d9-ae39-414760a31f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a0f552-cb82-4655-a4ab-f9f381dafa8c",
        "cursor": {
          "ref": "1217a027-2c02-462c-b12d-b4ce70b99c01",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d77067a9-47e0-47b7-a831-1264307f47be"
        },
        "item": {
          "id": "26a0f552-cb82-4655-a4ab-f9f381dafa8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3776ca7b-7e34-4f93-8e0c-c61f48c54e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a3bea3-3296-45f5-b863-0a47b58725c0",
        "cursor": {
          "ref": "85494caf-4839-4b76-a688-ab72f6034269",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4886af23-4e15-4c18-885d-6cd420a732d2"
        },
        "item": {
          "id": "e6a3bea3-3296-45f5-b863-0a47b58725c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7408621e-8ba7-45be-b85e-5518abf9fc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0a88e5-ec3d-4e90-9584-70a48d4a23f6",
        "cursor": {
          "ref": "8bb69a3a-c103-4940-8d13-f0634cbda228",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c882b862-4dba-4f26-b974-79e60557cfef"
        },
        "item": {
          "id": "4d0a88e5-ec3d-4e90-9584-70a48d4a23f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8b126906-8b09-42a2-bcd6-e9c5eda6110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699c772c-00b3-44d8-a647-2cb0b04fe583",
        "cursor": {
          "ref": "5c3e8122-b2de-449a-aa8c-fc7581779064",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b79e47e3-0a90-411b-921b-bb6a88e5ee5c"
        },
        "item": {
          "id": "699c772c-00b3-44d8-a647-2cb0b04fe583",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce0f5ea5-8091-425b-ab1d-6128ccde8217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3502d-06d7-426d-a831-63a970898d30",
        "cursor": {
          "ref": "8807df05-cf13-44ce-9c04-bd1e0d45ac8c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9477bd60-3e44-43bc-8c58-cc32843b9373"
        },
        "item": {
          "id": "18d3502d-06d7-426d-a831-63a970898d30",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9325a69c-0eb7-4d78-8997-43327d0071e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a911cc-cfc4-46cb-865a-fdb31a7406a5",
        "cursor": {
          "ref": "1a9df1e2-37d6-4d58-a0d3-70eb6795104c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7f2dd550-4567-4b6f-969b-c3822306822a"
        },
        "item": {
          "id": "30a911cc-cfc4-46cb-865a-fdb31a7406a5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2e9d6cf2-a07a-422a-89f8-c97da8238268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba50e1f-f7bf-4338-9542-349e4aa100ff",
        "cursor": {
          "ref": "31227949-ed23-43ea-8570-e90f6834616c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e55f3b22-6385-4da3-bf39-7d8e386aa1a8"
        },
        "item": {
          "id": "6ba50e1f-f7bf-4338-9542-349e4aa100ff",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e8a55dd3-156c-4331-89c4-7bd0455a5820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65519d4-1a1c-4f24-b097-19221bf038b1",
        "cursor": {
          "ref": "fb38fea4-6beb-4e31-9f4d-1d8eabbee1f7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "929ba3df-e01d-49db-93a7-6df0e0906208"
        },
        "item": {
          "id": "e65519d4-1a1c-4f24-b097-19221bf038b1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b4ee068-8c2a-407d-ad28-096068f41ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b558b75-728e-479b-9829-495f8d20db5c",
        "cursor": {
          "ref": "cf3dd75d-433a-4385-abb3-dc872d510849",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "91a27044-3a33-40de-85f4-afa6d3bd4d7c"
        },
        "item": {
          "id": "0b558b75-728e-479b-9829-495f8d20db5c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ea1852e0-8fd6-4bc6-b3e0-b6309be9caea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475e48c8-b2e4-433c-9e32-f0693cc76fc3",
        "cursor": {
          "ref": "7a8717ed-dff8-4979-a0d4-792ac9f6a597",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c3676695-1cde-42e7-9b40-c6f03ac6ca29"
        },
        "item": {
          "id": "475e48c8-b2e4-433c-9e32-f0693cc76fc3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0204f2f2-c08a-4158-9bea-0b2ce2a84fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46831f-3b9e-4635-90ce-c0fce4d28c56",
        "cursor": {
          "ref": "83ca01bd-52ad-4800-83c7-687208548b07",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "76ae44d1-5fbe-42fb-9afc-ec4fe2fd60a3"
        },
        "item": {
          "id": "ac46831f-3b9e-4635-90ce-c0fce4d28c56",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c8cf8717-4747-4283-81ae-5f5f5e9a1e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad3c72b-61fe-4765-a57b-ecaefcbbb47c",
        "cursor": {
          "ref": "0dcaf2a2-6c4c-4a8e-a018-f3b0f366fbde",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f32eaec3-3a77-4061-a474-349fa944d83a"
        },
        "item": {
          "id": "1ad3c72b-61fe-4765-a57b-ecaefcbbb47c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6ba6bd0f-f999-4859-ae6e-e6fe8d7a4cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd9141e-a7e4-4c3a-99f9-bb41836a57d8",
        "cursor": {
          "ref": "8c8ddbb1-70e0-48eb-9de2-21fb586fa674",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7c16fe62-ef9f-4ba9-a810-cde9ce403efd"
        },
        "item": {
          "id": "4fd9141e-a7e4-4c3a-99f9-bb41836a57d8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c716ebc7-5091-4de4-8c05-79899a94a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd69b1c-b1f4-42e2-928a-8c237c90e48b",
        "cursor": {
          "ref": "21105b41-54ec-424c-9e30-9a09ab45e443",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5aac4d3f-6882-4cd6-be96-5eda8b2dbd55"
        },
        "item": {
          "id": "7dd69b1c-b1f4-42e2-928a-8c237c90e48b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b6599f48-61a9-48d2-8386-35c50aed981d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2ce97-89f3-406e-8b3b-4630d0962847",
        "cursor": {
          "ref": "5258b8fd-96b2-406d-995c-27872d9517b0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "934b1603-59b9-4760-a68a-dcd5f459f4f0"
        },
        "item": {
          "id": "8dd2ce97-89f3-406e-8b3b-4630d0962847",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2317cbfd-6b01-4476-84f0-3e437cb8baef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18555eda-5904-4d1e-adc4-304c66235bbd",
        "cursor": {
          "ref": "5e44f716-227a-45c5-ae83-c0242dd86713",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a23f5e12-4585-4f97-8733-3a863da1038d"
        },
        "item": {
          "id": "18555eda-5904-4d1e-adc4-304c66235bbd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ab33b724-a6fb-4c21-980e-b82588bde665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d190fe5-e014-4895-8802-d23fd237d2a6",
        "cursor": {
          "ref": "180f090c-82e5-43cf-81da-8d8fdf133750",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65e01a71-4079-49ee-a8a3-54b016c8dfd6"
        },
        "item": {
          "id": "1d190fe5-e014-4895-8802-d23fd237d2a6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5cbbd638-319b-4423-869f-5a29755dd969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20552f00-71c4-4c2b-a6ab-6e018da2a482",
        "cursor": {
          "ref": "a1b609d5-4a49-4a62-a89c-88489cb0d9a0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bdbc2d3-025a-4a46-bccf-e59985909917"
        },
        "item": {
          "id": "20552f00-71c4-4c2b-a6ab-6e018da2a482",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "925769fe-3c04-4cec-b786-07e5f803eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8a73c7-af64-4990-9cdf-dc826031fee0",
        "cursor": {
          "ref": "554b8cf5-f796-4ac5-b114-5aa08334c77c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc6b4b6d-6ea0-4da7-a4c3-877a081908c8"
        },
        "item": {
          "id": "bf8a73c7-af64-4990-9cdf-dc826031fee0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "117ca7ad-f243-4f47-ac3e-1c58e4489406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb99dfa7-99b7-4fa1-b2ad-e383d2b703dc",
        "cursor": {
          "ref": "a91e818c-90f7-4362-80cb-354fae255dee",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "29231c5c-8b21-4bf4-b0c9-fa8d132ecf9e"
        },
        "item": {
          "id": "cb99dfa7-99b7-4fa1-b2ad-e383d2b703dc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5d03e6fc-476e-4dbc-b03e-fef8eca4b9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c68690-1dd6-4fe7-abdf-b9a2470a03d7",
        "cursor": {
          "ref": "2fff497a-c8b9-431d-82d2-b0d159eebd79",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8cd9a43c-2985-486b-ba36-8426d47c0c19"
        },
        "item": {
          "id": "61c68690-1dd6-4fe7-abdf-b9a2470a03d7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "69f8bfe5-ec7e-404e-9669-6ea79ca0c908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591503f8-a44f-47ad-9990-1afd4bb90e9a",
        "cursor": {
          "ref": "9cb8611c-69fd-498b-ab3e-c88b3d298c7c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6c5094a8-ea2d-46c1-bb0a-7358d71c6b1d"
        },
        "item": {
          "id": "591503f8-a44f-47ad-9990-1afd4bb90e9a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9c55fafa-19b3-4ce5-8d21-c424e31b22ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6857db81-661f-440f-8f5a-7095cf2fa574",
        "cursor": {
          "ref": "c2013cd9-6c13-41b5-9399-9aa9e925378e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "adb1be4a-8521-4de9-b63f-8ae134fa5866"
        },
        "item": {
          "id": "6857db81-661f-440f-8f5a-7095cf2fa574",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "644a1bc2-f8a0-4fc4-bbca-46af01109c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c773fdd0-9ce8-43d7-a032-a1e58a5c4e7d",
        "cursor": {
          "ref": "37925fc5-e801-43a0-a94c-db3f2e77e67d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f190c27e-3236-4159-8e2a-7b1da7981ec4"
        },
        "item": {
          "id": "c773fdd0-9ce8-43d7-a032-a1e58a5c4e7d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0ee7ddbc-56a8-4a59-8053-ad117e80035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f1c2bf-16b3-4d8b-b722-316fe5af66c5",
        "cursor": {
          "ref": "7a693bdb-c567-4078-b201-4445ab9ba588",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6b0a944c-2e01-434a-861e-6f5a897934af"
        },
        "item": {
          "id": "c5f1c2bf-16b3-4d8b-b722-316fe5af66c5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ff1c744a-effd-4983-9a3b-825697dd39ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a75979-2e3c-4792-9fc1-6d038a35fa1b",
        "cursor": {
          "ref": "020b3d17-f5c0-46d1-a874-1b8852915d97",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d7ef26ad-4b58-4d63-b8be-aa79671f9a33"
        },
        "item": {
          "id": "83a75979-2e3c-4792-9fc1-6d038a35fa1b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3d46269-0a2f-4b86-a18f-8251b0c486f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1ffc68-3700-4deb-a90c-d80aa949290b",
        "cursor": {
          "ref": "1810a0a3-a759-4799-912f-df7d17d25e0e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5fa8ca80-10a2-4b77-9533-fcfc938a4333"
        },
        "item": {
          "id": "fa1ffc68-3700-4deb-a90c-d80aa949290b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "60078853-4409-46b2-a873-b8c1a392b2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09951eed-4641-40d2-99f1-30bacb6d3ab5",
        "cursor": {
          "ref": "c05a7766-f4c3-4393-b63a-13f421966cd7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "15819052-a937-4f31-9fcc-51a6f5c5fd44"
        },
        "item": {
          "id": "09951eed-4641-40d2-99f1-30bacb6d3ab5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb8ca27c-8339-4c0e-88e5-9ea64c81b8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0396d752-2441-495d-942d-6fec589c75d2",
        "cursor": {
          "ref": "6c963a7d-2267-4106-b168-2cedd4a7d0f6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "94e0d992-148d-48af-8333-a1e7ad0b30ae"
        },
        "item": {
          "id": "0396d752-2441-495d-942d-6fec589c75d2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "889e7b38-642d-4555-a35a-d4fdec73176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13468ec-3520-4b05-b86f-01edb91c58e5",
        "cursor": {
          "ref": "d7afda8f-0ffc-4690-b446-9419c9f9f4d2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "598fdd63-5cfd-4747-9324-5a02eb61f889"
        },
        "item": {
          "id": "f13468ec-3520-4b05-b86f-01edb91c58e5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ee9ba67a-557d-4455-ae87-b244e60dd98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18843bbb-3cf3-4834-805b-ef2a5a5b78d6",
        "cursor": {
          "ref": "12f23071-7b67-45e4-b80f-4ce5be70fe5d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78dd5900-c328-49c0-b74c-15496e9e846c"
        },
        "item": {
          "id": "18843bbb-3cf3-4834-805b-ef2a5a5b78d6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f7e4ec69-a8a8-49fc-9c6f-a88f8d908ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eb82fd-765a-41c5-86d1-b54ab911fb1f",
        "cursor": {
          "ref": "1e5cb321-2291-4f4c-878f-091f80b9dbcd",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "627626d1-accc-4cc5-a6d9-a837924cb146"
        },
        "item": {
          "id": "04eb82fd-765a-41c5-86d1-b54ab911fb1f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "db492de4-f75f-40aa-b119-b6c62dea201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bbeed5-fa59-4c60-b88d-5ce14c2fa697",
        "cursor": {
          "ref": "5ce0f7a0-ef9a-4981-ba0b-eee0dfe1b6cc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b2bb05eb-d1c5-4ab3-b0e2-d2083b9bd818"
        },
        "item": {
          "id": "97bbeed5-fa59-4c60-b88d-5ce14c2fa697",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "33ceda56-452c-4475-b471-c42c597b0e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396c98d1-671c-4bf7-9e26-0e385283721a",
        "cursor": {
          "ref": "683bd206-81e3-4166-9301-fac59229dbbd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e58292a6-3725-4bbe-9d2c-4bd80d739d07"
        },
        "item": {
          "id": "396c98d1-671c-4bf7-9e26-0e385283721a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fe723b90-2b87-4f69-b7b0-c16397d7088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62a15b1-13ec-4cd8-be65-37c70bcbbcfc",
        "cursor": {
          "ref": "5edff64b-f13c-4801-a65b-48748c43bf42",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e27b454c-0ac9-4848-90ac-204e331435e0"
        },
        "item": {
          "id": "f62a15b1-13ec-4cd8-be65-37c70bcbbcfc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a5d56c3-cf47-44d8-80c0-34f9a1379bc3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2dbace-18d6-4f0c-9e95-d2b776505783",
        "cursor": {
          "ref": "619d60d9-60e0-4a29-ad7a-4ddef141fd06",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "64321136-62b8-4ab8-8f3d-533ed877eab1"
        },
        "item": {
          "id": "bf2dbace-18d6-4f0c-9e95-d2b776505783",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "451a0d25-2d8e-4f57-ab69-45a996afe2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "889ae423-790d-42e6-953e-fd55860d0d9b",
        "cursor": {
          "ref": "56647817-a7f1-43b4-b8ba-0eed6e043dbf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ff9ac581-d422-4daf-8361-e191a7ad317b"
        },
        "item": {
          "id": "889ae423-790d-42e6-953e-fd55860d0d9b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4ed1a549-66af-4bf2-aee4-0a6c237e91d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7e7a6055-bc27-44e2-ac32-599706fae41a",
        "cursor": {
          "ref": "d55b5d32-cc4a-47b7-90b8-54c4726b5292",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c9ec7914-a283-407d-8dfa-9e5090507604"
        },
        "item": {
          "id": "7e7a6055-bc27-44e2-ac32-599706fae41a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "721a9106-79d5-416f-a847-73375542b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a4449b06-41dd-4a15-8b2c-613485fb35a4",
        "cursor": {
          "ref": "07b33963-1f91-4f37-a25e-e73dae24905f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "944a19b9-cc9d-4dbf-afc2-0f6ba4718137"
        },
        "item": {
          "id": "a4449b06-41dd-4a15-8b2c-613485fb35a4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "30502f0d-6376-4031-a91f-61c900d6a5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5fe4d4fe-0b23-4c34-a8b9-9bb52f7cc9cb",
        "cursor": {
          "ref": "63023579-151a-431e-9a91-f7378b8d0910",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b531c3ec-18c0-4211-9793-82f830cd0405"
        },
        "item": {
          "id": "5fe4d4fe-0b23-4c34-a8b9-9bb52f7cc9cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ae852c1a-f47c-46d3-8447-888f8526dca7",
          "status": "Created",
          "code": 201,
          "responseTime": 13291,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d43a20-f67e-43a8-8ff6-e7206137069a",
        "cursor": {
          "ref": "5706ebfe-5973-4c43-b6d1-91938f995f3c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d4203306-8304-4209-ab6e-2d409d2a56cb"
        },
        "item": {
          "id": "04d43a20-f67e-43a8-8ff6-e7206137069a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "83b8b090-d958-4f46-8fb0-d07bdbb3a7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8d8e901a-57c0-4684-aab8-b82e7bda4e26",
        "cursor": {
          "ref": "c3583d16-e447-44d6-bed6-b663f6fd2679",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "897ad1d0-d795-43c0-8501-2fa7f047027a"
        },
        "item": {
          "id": "8d8e901a-57c0-4684-aab8-b82e7bda4e26",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "404db51f-c4a6-4803-ab87-be484821d412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bf9c7906-197b-4731-b265-0783e5505f03",
        "cursor": {
          "ref": "9ac13aa9-6b4f-4113-a05c-78ab6d575949",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4df314c0-2ac0-4bdb-8cb3-25d512d9805b"
        },
        "item": {
          "id": "bf9c7906-197b-4731-b265-0783e5505f03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c3f3037-a9d2-4897-9027-7665c30aa494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4b0ecf-a2a0-4de1-a3b9-238313e8ce4e",
        "cursor": {
          "ref": "319b0e7a-fafb-4257-8e26-f6b11e39b9a3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7118637f-8649-4e1d-9efe-df219a09192b"
        },
        "item": {
          "id": "af4b0ecf-a2a0-4de1-a3b9-238313e8ce4e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a33dec9a-2d32-444a-a289-e605f8a8efdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b44724-e573-4eec-9ed9-a79e52d8c566",
        "cursor": {
          "ref": "925403a2-e857-4d37-8f8c-e5ed94f02fee",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bb48c34b-b0de-490f-8580-aadeda05279f"
        },
        "item": {
          "id": "89b44724-e573-4eec-9ed9-a79e52d8c566",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3376aef-83e0-41b7-9aab-0227af483aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22523c2-0dfc-4832-a5ed-380acb317525",
        "cursor": {
          "ref": "0c9940d3-03f2-4c15-a3ec-8a251fdf7df1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "22b1dbde-3bc4-41e1-85fc-521b0358187e"
        },
        "item": {
          "id": "c22523c2-0dfc-4832-a5ed-380acb317525",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "95d7acfc-ae94-4713-b465-f5b21b75fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ab03d-3161-4f61-b9db-f75e96d55221",
        "cursor": {
          "ref": "db00d475-b0d4-4b75-9f36-2923c320d398",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2d42281-1ac2-4003-ac84-a9648e224412"
        },
        "item": {
          "id": "723ab03d-3161-4f61-b9db-f75e96d55221",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b332d85c-ec86-4429-b9fa-31a05aedd188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d75e38-cd9e-4078-8fd1-a42004f6762c",
        "cursor": {
          "ref": "0bd18529-3f5e-4c64-95f3-e634d2f45678",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c54f55d7-5281-43b4-863b-d0184f420dbb"
        },
        "item": {
          "id": "89d75e38-cd9e-4078-8fd1-a42004f6762c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "23e58b95-03bf-4901-b98e-808087ca7215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa4fbb5-77c2-4110-bf9b-03a9b6b963b9",
        "cursor": {
          "ref": "8916f9a2-e0ef-4727-8a0d-83a0798a3ae8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "45d8a879-e5ab-4332-8cb5-4e8b2df63877"
        },
        "item": {
          "id": "faa4fbb5-77c2-4110-bf9b-03a9b6b963b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "07f4e04d-703b-4a83-8d4a-72901bd6d823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665fed82-a939-41f3-8ac0-9cda784e9a7e",
        "cursor": {
          "ref": "3ca4f1b0-7fc7-47d9-9e3c-76ad9bbd1dac",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38363fc4-ac93-45f3-b63d-6160e1dcc345"
        },
        "item": {
          "id": "665fed82-a939-41f3-8ac0-9cda784e9a7e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5dffe61e-a548-4f0e-a5e8-932037b4e64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bda51e5-bf73-41bd-8f25-a05aea84f376",
        "cursor": {
          "ref": "2702ba9c-9b8b-4a48-9409-fb85ac902411",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "38da9b9e-22d3-440b-a81b-db2db8e029d3"
        },
        "item": {
          "id": "4bda51e5-bf73-41bd-8f25-a05aea84f376",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5f033ca1-e5d4-4c77-a44d-7ea7daa84749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a6b725-8036-46c2-8815-840478a61c87",
        "cursor": {
          "ref": "763ac34e-75ca-4e6f-9a00-fa926177d712",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "359eb8ab-dbbe-43d2-ba23-50f4d9fa8e02"
        },
        "item": {
          "id": "05a6b725-8036-46c2-8815-840478a61c87",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "40d25580-d3ae-401c-83cc-60533bc50699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397f84d4-8abd-4933-90dc-cf0040536548",
        "cursor": {
          "ref": "20e6dcf9-f867-4e73-829e-a8c1f98c7ad6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7d35f630-7042-4e8e-9d53-0216760205f2"
        },
        "item": {
          "id": "397f84d4-8abd-4933-90dc-cf0040536548",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d8c184f6-978b-4ab9-837e-58fa2434b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e54a073-0b0e-4dc2-b389-a5cf6bf9c218",
        "cursor": {
          "ref": "3c138639-fad8-4c14-a5de-f7f5f9dea882",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c6c4da63-b81a-4579-9b71-d2ebb9de1eed"
        },
        "item": {
          "id": "0e54a073-0b0e-4dc2-b389-a5cf6bf9c218",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ce3166a8-0b6f-441d-b5bc-a87015bcf2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e4b4a7-a26d-4e5d-9be9-47f6246a8b68",
        "cursor": {
          "ref": "3ada6856-e0da-4105-8264-dd7bfe2044dd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7df6a9f0-8e3e-4ebb-b58b-7c8573d406b5"
        },
        "item": {
          "id": "95e4b4a7-a26d-4e5d-9be9-47f6246a8b68",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "79a4c89a-33ef-4c4c-a017-cb7802e7b10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a271df5c-e764-4af6-a7f7-e0e2be950ac5",
        "cursor": {
          "ref": "848e0b6a-e77f-4a39-8d89-4e44cdd85ab5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1c2a29f2-172d-45f9-bac2-34410ddc9bd6"
        },
        "item": {
          "id": "a271df5c-e764-4af6-a7f7-e0e2be950ac5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "548b1c03-e6df-46b8-a1d4-a70af3edcf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48815041-da14-4af2-85c5-14d3a76e538d",
        "cursor": {
          "ref": "78f261fe-0624-4b65-9df9-5dd1b32ce776",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5daefe73-14ef-45e9-a442-34b7f162d397"
        },
        "item": {
          "id": "48815041-da14-4af2-85c5-14d3a76e538d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca080274-c20d-4078-9875-1efd39ac6414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aab418e-6172-4f16-9aa9-959806cecb41",
        "cursor": {
          "ref": "bee1d815-7557-4100-a880-574a6ab09641",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1363bd80-8bb3-438f-9cb1-18a890636fb1"
        },
        "item": {
          "id": "6aab418e-6172-4f16-9aa9-959806cecb41",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "85e83be6-92b1-4120-81c4-f7d698a61b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89a5707-3739-48b8-9b29-9ebf38238e6d",
        "cursor": {
          "ref": "2f87cf42-0f90-4774-9120-8988b13be480",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ea063dcf-a5dc-42b5-ade2-4b385fb20ead"
        },
        "item": {
          "id": "e89a5707-3739-48b8-9b29-9ebf38238e6d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a28211bb-2e27-4657-af11-3e8fa20ec793",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "996a0cbb-3239-4977-a06c-bd843e5be78f",
        "cursor": {
          "ref": "43c11b6e-9b7d-4429-b9cd-6e1ead271210",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5a2194f8-ecaf-422f-9357-a5ecf5f0ec04"
        },
        "item": {
          "id": "996a0cbb-3239-4977-a06c-bd843e5be78f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "abde59b0-14d9-4443-9e95-daf318e61945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583b2baa-ce1d-4c9c-94eb-c3647493202e",
        "cursor": {
          "ref": "218c93cf-6b6c-41f0-8281-9695431e7dae",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f7b9bfa1-f762-480a-b756-06213dd809ec"
        },
        "item": {
          "id": "583b2baa-ce1d-4c9c-94eb-c3647493202e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b769bcbb-323e-471e-ae0f-1f631242555b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c38312-97d4-47c1-9cde-689f30867335",
        "cursor": {
          "ref": "adb2fa26-2830-4fb2-ab8e-9701d0027edb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d48f8afd-d7c7-4257-8f9a-5eb1057fd8e4"
        },
        "item": {
          "id": "b3c38312-97d4-47c1-9cde-689f30867335",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "48bb6bd3-8871-48cd-9624-099539ef1d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438077cc-9401-4734-bed0-e39723ea2e77",
        "cursor": {
          "ref": "7fb2ce33-cc07-425c-8504-6a8fc6ab3367",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "608d014b-6777-4cce-8a7d-eb8abb57d214"
        },
        "item": {
          "id": "438077cc-9401-4734-bed0-e39723ea2e77",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e25c459-3f20-480a-a1cb-2ee8c8ca24fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42494a57-add4-48fd-9f57-9ded37340599",
        "cursor": {
          "ref": "db1e185d-60af-42eb-bd84-b3a3c555f977",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b231ac18-96ba-4280-b5b0-084087d55cd3"
        },
        "item": {
          "id": "42494a57-add4-48fd-9f57-9ded37340599",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b0546bfb-0b27-4ebe-9477-5c554f289323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24587465-d160-4cc0-a87d-fa8ad3aacbc0",
        "cursor": {
          "ref": "58f0e2ac-6cac-43c8-b96f-f326e32f77c7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "76f0bcca-dfeb-4877-9800-2a7526961217"
        },
        "item": {
          "id": "24587465-d160-4cc0-a87d-fa8ad3aacbc0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "16b2f913-59ac-465c-81a6-59ebbb716c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34358382-62fe-463a-a24a-655e6849e99f",
        "cursor": {
          "ref": "4d6bed3d-7aa3-4aaf-979f-2f5634806c4b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74da1801-a22a-4027-843c-6f33a847fd76"
        },
        "item": {
          "id": "34358382-62fe-463a-a24a-655e6849e99f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cba6a42a-6f07-442d-8a27-28d39096cb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345d7a7e-6aed-498f-93d8-44e729922a64",
        "cursor": {
          "ref": "14630e19-fabc-4664-a5af-ba20a798c643",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b88b9235-f8f1-4fb6-b950-3ce586ad4578"
        },
        "item": {
          "id": "345d7a7e-6aed-498f-93d8-44e729922a64",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0a01523-0232-4c98-bebb-4afdf8302803",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b8c05c06-f35d-4dc2-bc47-465b7f4fcbec",
        "cursor": {
          "ref": "3815f4ee-8b27-4f27-9f5b-bdeeec38c5d6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "72287ff6-722e-4441-91a4-eaf238360d19"
        },
        "item": {
          "id": "b8c05c06-f35d-4dc2-bc47-465b7f4fcbec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "422b3528-40eb-400d-9d90-a30aa781159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973e7856-ace2-4147-9f37-a640a4958d16",
        "cursor": {
          "ref": "be7d4ce2-b02a-45dd-bf1f-a632ce903373",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ba712096-e70f-44e3-940c-1c5d3a5a8a96"
        },
        "item": {
          "id": "973e7856-ace2-4147-9f37-a640a4958d16",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75dea0f4-fa63-4171-8d31-8bdbcb9ab5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5ef212-340c-4995-ad78-4ab41a6e5c4a",
        "cursor": {
          "ref": "220c82a5-db50-4e89-9a56-5c7bdc614555",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "34d63848-942e-417e-a391-b04c20b5f43e"
        },
        "item": {
          "id": "ac5ef212-340c-4995-ad78-4ab41a6e5c4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6435ef1d-86dc-46bd-ae18-c3ed9e5ae7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19651428-f332-4650-bc03-688ff405bc07",
        "cursor": {
          "ref": "7a15e69a-7400-41ce-a458-840d96530a9f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1e0422bb-be6e-46f2-8ac6-b49fc3501abe"
        },
        "item": {
          "id": "19651428-f332-4650-bc03-688ff405bc07",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbe76bbc-d136-4d46-8deb-214d9d90a358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394d04a9-3d23-41ff-9430-aa1524a5706b",
        "cursor": {
          "ref": "b9644452-b78a-4d37-aea5-d2acf79bf6b8",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aa242774-551c-4f78-9d74-7288bd1edf07"
        },
        "item": {
          "id": "394d04a9-3d23-41ff-9430-aa1524a5706b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d609fb25-a09b-4bef-9c18-784e6a2e786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6e5261-f9a5-431e-bf32-0d56dd4412e5",
        "cursor": {
          "ref": "60b4f9d0-7c34-49b4-a497-4d061a9fc38a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "99457185-66c4-454b-bf34-99ce5ca3c237"
        },
        "item": {
          "id": "3d6e5261-f9a5-431e-bf32-0d56dd4412e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "44569939-e912-4f20-98c5-ae2f03de5f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c3ba42-25b8-4ac8-8c1c-acb85c2a9e12",
        "cursor": {
          "ref": "ae438f37-fe50-48ff-9e05-7b5f8da927b1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e4ef145e-01be-4e6d-9ca4-3c06edbd689d"
        },
        "item": {
          "id": "48c3ba42-25b8-4ac8-8c1c-acb85c2a9e12",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2e944254-038b-46b2-9f84-61c1722d42a4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "23729b65-76dd-4b1a-b2b5-91136bb4e5ee",
        "cursor": {
          "ref": "08f45d8a-f604-41ea-8597-e55de1b5b15a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e9afb37a-5c15-45af-9183-ec4d7cdfc14d"
        },
        "item": {
          "id": "23729b65-76dd-4b1a-b2b5-91136bb4e5ee",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4ebb4be-fed5-49af-951a-1c49fc2cc693",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 93,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ec3f511e-94bc-4e26-81b1-331e9a561891",
        "cursor": {
          "ref": "7421e491-9639-4e09-a897-9679bb04dd38",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "96ef3d38-ba75-4192-85fa-6fd03db05dc5"
        },
        "item": {
          "id": "ec3f511e-94bc-4e26-81b1-331e9a561891",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a8121e23-9c81-478a-9d69-17e03f27c9f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "727b3634-01c4-461f-baa0-6320356fd829",
        "cursor": {
          "ref": "32cf56dd-1c16-44dc-be61-bf8f64892a4f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b6d1ee4c-9483-416d-8196-8f4a29a4af25"
        },
        "item": {
          "id": "727b3634-01c4-461f-baa0-6320356fd829",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ea07ac2c-2b6c-4dae-8316-1d30298d384f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ad8aa3aa-4341-4f65-8fae-3425045fa742",
        "cursor": {
          "ref": "98d7bad0-df55-48b4-b375-6f3aafc87cd9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "62b23c78-19de-49f4-a6b1-627cd5d0cc83"
        },
        "item": {
          "id": "ad8aa3aa-4341-4f65-8fae-3425045fa742",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f2320e5b-9bc8-4fd4-817d-b9ef4e58d76f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 92,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "f3ffdeb8-46ae-4e8a-b893-70686cdbb963",
        "cursor": {
          "ref": "af785385-bc56-48bd-aebe-437ecda3cfcb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c347c00a-e498-4a6a-ab2c-340c99928461"
        },
        "item": {
          "id": "f3ffdeb8-46ae-4e8a-b893-70686cdbb963",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "83b0c852-d8e8-4d9b-a9ff-5e3624308cfb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9c04af48-a4a1-40b1-81ca-3c3450443bad",
        "cursor": {
          "ref": "938127f2-58c8-4cc2-85a5-cc2c5fe53ae0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f16c4113-1a90-471c-9d9d-3b731a10e880"
        },
        "item": {
          "id": "9c04af48-a4a1-40b1-81ca-3c3450443bad",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25620cd7-fc12-492a-b3da-fd523c06a77d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a6f3f8-b7d4-4977-bd5f-f2ed70cd5cb0",
        "cursor": {
          "ref": "78e36b45-71e1-45c7-996f-4b4d082986e6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59141e92-6457-4001-85da-abbe96a539e7"
        },
        "item": {
          "id": "e7a6f3f8-b7d4-4977-bd5f-f2ed70cd5cb0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e9742669-7868-46d4-b70f-414f4aafb87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2285c17-be60-4e7c-ac67-4571ed15d3cf",
        "cursor": {
          "ref": "2285c0d7-0b8a-42fc-8ded-9f4403ad88e9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "405c1895-100c-4169-a9b5-96a5490562fa"
        },
        "item": {
          "id": "b2285c17-be60-4e7c-ac67-4571ed15d3cf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2be160eb-c373-4ee1-a427-76bb5fa2cae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adba1d45-19c6-4429-8180-cbeb7cb53b05",
        "cursor": {
          "ref": "2f6c66e4-4bae-4414-9458-d48ce47167b9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e3a0c1a1-7ba7-45dd-80b0-6a83e2b1d0e4"
        },
        "item": {
          "id": "adba1d45-19c6-4429-8180-cbeb7cb53b05",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d9bd8bfb-3d00-4042-ad8e-ddf5ba98c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b097b9d-e22f-41f4-bc29-9ced2c12e2fe",
        "cursor": {
          "ref": "f0399c15-48dc-48e6-bbce-c543802675d9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "417e704b-1d7d-464a-9327-a0d202ed1dc4"
        },
        "item": {
          "id": "2b097b9d-e22f-41f4-bc29-9ced2c12e2fe",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b2df58b6-3bd5-4fa9-8740-ab5118b6d380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0bf2de-2900-42c3-bfd1-7080c65b2ed1",
        "cursor": {
          "ref": "d29f4ec8-1a3d-4714-a821-abdaebbf472e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b24cb4f9-0111-431f-87e9-2e87ab2fac4f"
        },
        "item": {
          "id": "8d0bf2de-2900-42c3-bfd1-7080c65b2ed1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b561ce45-c967-4082-b024-857274042083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11545ff9-5bd0-4024-ba70-4410db529f8a",
        "cursor": {
          "ref": "0fd2f0bf-b5db-433d-b209-0c3ff654eebd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f1997c04-5a8b-40c2-86a3-34cbdecad402"
        },
        "item": {
          "id": "11545ff9-5bd0-4024-ba70-4410db529f8a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bf11b01c-ff48-41dd-bce8-9c7b91521e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f89b47-d1ff-469d-a462-0c6bfae26991",
        "cursor": {
          "ref": "b4188fa1-690c-4ff2-86e8-33c904e3da30",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fea8761e-b5e6-4af7-a291-a807857fb236"
        },
        "item": {
          "id": "63f89b47-d1ff-469d-a462-0c6bfae26991",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "00010570-f0be-40f5-b40d-3cf3bc53feb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713e4268-c0a4-4fb8-b952-c88c70e0631e",
        "cursor": {
          "ref": "27c2d3ef-18c3-4944-861b-21a1bb0f3ad8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "175a00f9-df15-4756-9a6e-1cbad7ffc4f2"
        },
        "item": {
          "id": "713e4268-c0a4-4fb8-b952-c88c70e0631e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c5a9b30b-80ac-4d22-8cf8-3d7263cc1a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a7cd59-7d58-473b-8a88-4d0a247824c6",
        "cursor": {
          "ref": "8c24048f-47d3-4072-ad6a-b4412464014b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "092a1b8f-d0ec-4868-ab70-c4f38b6ba8c7"
        },
        "item": {
          "id": "91a7cd59-7d58-473b-8a88-4d0a247824c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2a5e3a30-3004-4f24-841e-20035de9c01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438efb26-0377-4f0b-9cb5-f3e7633b4304",
        "cursor": {
          "ref": "ad678c0f-c4ac-428b-b0ac-e62fd64fcd08",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c9f27f3f-3178-42e5-8a95-ed918cbc942c"
        },
        "item": {
          "id": "438efb26-0377-4f0b-9cb5-f3e7633b4304",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "faec63a3-244b-4372-8b16-be9c669f89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f952fea-bd6e-40f0-81bf-3a10aa41e191",
        "cursor": {
          "ref": "23e6872d-cafe-44a6-87f9-99c2db49f16c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a836189a-51f5-4c7c-8876-50b9c342b3d7"
        },
        "item": {
          "id": "4f952fea-bd6e-40f0-81bf-3a10aa41e191",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b1fdada1-cd2a-4dd9-8b0b-7502b3947a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feb1a8c-c237-4817-bfa0-86ccbe5cab92",
        "cursor": {
          "ref": "6d14f355-87e9-441f-bb9f-c2abd29f45b2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "02a2448f-5ad1-4f69-a786-43ca5e6d1443"
        },
        "item": {
          "id": "0feb1a8c-c237-4817-bfa0-86ccbe5cab92",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6f3a0bd3-5375-4bf3-a197-1669ec50b28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ef7db7-a56f-41f4-abb7-0fe572c4be33",
        "cursor": {
          "ref": "ab4db179-6bea-48b8-888a-d8f9a5f365b9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bc1e09b0-ff64-4204-804e-d21a02d5cc57"
        },
        "item": {
          "id": "00ef7db7-a56f-41f4-abb7-0fe572c4be33",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aec5ea35-bb71-4889-9e08-98967cadfd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f835fdc6-94d7-40df-8c26-7a5dfa357079",
        "cursor": {
          "ref": "5db2e437-8d19-4936-a7f0-8e1196cfd79f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2371540c-ae28-47c5-a1f6-8d9c563d987c"
        },
        "item": {
          "id": "f835fdc6-94d7-40df-8c26-7a5dfa357079",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dc90cc58-18a4-433b-bbc6-771139e83b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17932ce-8b8c-4189-a4d7-e7a8e451918b",
        "cursor": {
          "ref": "49c9d9d9-d6ff-4bb7-bebd-635d2f886343",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2d1806c6-6306-4e00-b15a-2e1a5cb33a24"
        },
        "item": {
          "id": "d17932ce-8b8c-4189-a4d7-e7a8e451918b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e42052b5-e6a4-4063-9770-5ebe2c5bc5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645a0dc0-13d5-4725-9834-20cef8b572ef",
        "cursor": {
          "ref": "b3df79e0-bd2f-4a7d-a8ee-d5d9c63b07d7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "485f5181-d56a-4e7e-9321-afb7433d392d"
        },
        "item": {
          "id": "645a0dc0-13d5-4725-9834-20cef8b572ef",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "17f9810e-39b1-4a21-b9f1-0297f08f687b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927ad25c-da58-4fe4-8a2d-62fe78f8a9f5",
        "cursor": {
          "ref": "f9b6b907-e932-4813-9919-d154a1aa845e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c6394d8-b753-4fe1-ac99-d6abf9b42385"
        },
        "item": {
          "id": "927ad25c-da58-4fe4-8a2d-62fe78f8a9f5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a65e8f42-3129-457a-b795-da863c9e02ff",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6883b3dd-23c3-45f0-9455-6f9b13ce26f0",
        "cursor": {
          "ref": "6174f786-7933-4798-8c15-f983b53569cc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ee6329a5-d868-4900-b3dd-85d4d9c57642"
        },
        "item": {
          "id": "6883b3dd-23c3-45f0-9455-6f9b13ce26f0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd3d1447-3090-489b-8872-c0e9e8f5f92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bff8091-d445-44fd-a208-90eb2c6ec70e",
        "cursor": {
          "ref": "10debae1-b925-4945-a96c-e0ab6d4ff2f1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "842d4b0f-7e9c-4769-b49a-7f92d8aca72e"
        },
        "item": {
          "id": "4bff8091-d445-44fd-a208-90eb2c6ec70e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b7a8bfe6-c00b-4ebf-b177-c0bbdb489073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1443041a-3fb8-495f-88b7-7d9cc4110129",
        "cursor": {
          "ref": "f8d7a7f9-08e0-419c-ad55-2d7144ce8d19",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6138c2bb-9266-4b28-b8c2-901d41fea431"
        },
        "item": {
          "id": "1443041a-3fb8-495f-88b7-7d9cc4110129",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d290dcf3-405b-4be3-b98b-16e027bcd73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe9d943-b349-4be5-b330-c3cc6a8bc156",
        "cursor": {
          "ref": "86651ecb-a1ae-4072-b893-c2cc7c50c342",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a693595-c1a8-4b44-a05e-841b013c477a"
        },
        "item": {
          "id": "abe9d943-b349-4be5-b330-c3cc6a8bc156",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8a17a850-e772-42fb-9a1d-7bbfbb9e04c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c412c376-7d52-4963-9129-51b3fed06b04",
        "cursor": {
          "ref": "c5b287ef-f08b-4f68-b720-50456400d4dd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96697ea5-b8f7-4434-bfda-33565ceb48b1"
        },
        "item": {
          "id": "c412c376-7d52-4963-9129-51b3fed06b04",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "635546b0-1c1c-46a8-a0c2-91356929591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b89e7e-f9cc-4e3f-966d-8117822518f8",
        "cursor": {
          "ref": "4ca4614b-439a-49ad-8009-abd6ca746eb9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4f4c550f-4f83-4f59-bc59-beea039febfe"
        },
        "item": {
          "id": "82b89e7e-f9cc-4e3f-966d-8117822518f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7f315897-cd41-443c-88dc-a1c9a6ebbf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b1d8d6-4ffc-4ce9-a32d-9be70d29ef8d",
        "cursor": {
          "ref": "256c84f4-e645-4ebd-a10a-7a33e6210175",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "07aaa2d8-7247-4d0d-93bf-b89291c9c0fd"
        },
        "item": {
          "id": "68b1d8d6-4ffc-4ce9-a32d-9be70d29ef8d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3e622cec-ef45-4967-9aa5-6207d720208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab60e45-d99f-46a1-bc18-0c1337986f78",
        "cursor": {
          "ref": "d8ead9e9-4500-4c38-a7e9-e2b30151329f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4acdba94-cbf8-4ff2-89b0-d413964ba402"
        },
        "item": {
          "id": "fab60e45-d99f-46a1-bc18-0c1337986f78",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a8151be3-b105-4d16-b049-1d294911b7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76bf465-7ed8-4143-bccb-ca2e8020ea6d",
        "cursor": {
          "ref": "d9e48fa0-235b-430e-96db-cc89b73194b5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "91d4fc61-ef1f-4070-8490-4223bd2a3309"
        },
        "item": {
          "id": "c76bf465-7ed8-4143-bccb-ca2e8020ea6d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "79d009c4-69a8-4220-88e6-fd01de119a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254c0b69-41cc-45f4-9f97-46cc9ccebad9",
        "cursor": {
          "ref": "4d14082f-461b-4b26-b15b-78caef0ac243",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "538d1c98-19fd-490b-bf67-28d7ad41facb"
        },
        "item": {
          "id": "254c0b69-41cc-45f4-9f97-46cc9ccebad9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "abd13a5f-8da3-49d2-9f87-11a587c7637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e328144c-e86d-421b-bf75-d0473a00466b",
        "cursor": {
          "ref": "392c81ba-0488-4d7a-a3ab-68435a421830",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7325eded-ec26-4b9b-a4cf-9979c43e078b"
        },
        "item": {
          "id": "e328144c-e86d-421b-bf75-d0473a00466b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ab124ac-efbf-412e-b2ca-84711a0cbb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc7319-1f1b-4b54-b20a-516d8733249a",
        "cursor": {
          "ref": "414296aa-23ad-4422-a360-d1d7bfb1a19a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29411de7-eebd-46c8-8bdd-766d53e2e518"
        },
        "item": {
          "id": "abcc7319-1f1b-4b54-b20a-516d8733249a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "918ce5d8-c7ad-4708-a9b3-693036504ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dae578c-e301-4e49-90d7-c6834e8f4e9f",
        "cursor": {
          "ref": "04d54549-50ef-491f-a1cc-0dad59fd8e08",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "27593cc4-5393-4c72-ae51-78b272b30288"
        },
        "item": {
          "id": "3dae578c-e301-4e49-90d7-c6834e8f4e9f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d87291a-66af-4914-bc73-8a3d37fa70b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9003a45-bb83-4b06-99a5-47c3448dc669",
        "cursor": {
          "ref": "d1a900cb-0684-41ec-a8f2-6d51f4dd8db6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "18661219-b052-49d0-9f3e-3f52b674aa5f"
        },
        "item": {
          "id": "d9003a45-bb83-4b06-99a5-47c3448dc669",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "df990a98-7d52-4987-b5ca-876293391b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4f4f30-43dc-4d1b-b5b1-e90a629c7046",
        "cursor": {
          "ref": "f912be20-5eae-4465-885c-bd5cc54e5faa",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9d55489c-f985-4607-9fee-044213a2abd9"
        },
        "item": {
          "id": "ea4f4f30-43dc-4d1b-b5b1-e90a629c7046",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d07f5a43-4c7e-4915-a7f0-26cd4fbd9e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415c0c20-8993-4e62-a528-477c6e5f4a6a",
        "cursor": {
          "ref": "cff33829-aa34-4180-8d06-e7aed88ff71d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4950ec1d-9c6c-40a4-bf16-b9fb0e02144a"
        },
        "item": {
          "id": "415c0c20-8993-4e62-a528-477c6e5f4a6a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d3ea54d0-8ffd-4c7a-8ed9-7468d7bedf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b355fc5f-3eac-4c12-9395-1e83c67a5e86",
        "cursor": {
          "ref": "5a516901-b3f8-4afd-af0e-f7f4432f3f28",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "609da3ac-864d-4c96-b653-0084cf0580df"
        },
        "item": {
          "id": "b355fc5f-3eac-4c12-9395-1e83c67a5e86",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ee45c603-fa9d-4d8f-a895-cb732e06a956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9db1623-bf5b-4eb2-8023-ed27c3c72bac",
        "cursor": {
          "ref": "01c0a003-958e-4934-8041-6bfa0f9a98ef",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a6f9cc05-e2e4-4367-bbbf-c5cb6e39d72b"
        },
        "item": {
          "id": "f9db1623-bf5b-4eb2-8023-ed27c3c72bac",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "88241a5c-fe67-4d22-ae12-db2dce39ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9290ed1-dc9e-4671-ab86-f39072746be9",
        "cursor": {
          "ref": "74d466de-cd25-403f-9077-fae6c2ae86b3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "555967e4-e2a4-4891-83dc-829d010d6b52"
        },
        "item": {
          "id": "c9290ed1-dc9e-4671-ab86-f39072746be9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6b2ed0a6-019e-48c1-b086-048a024bafba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff7d2f8-dd41-4777-93ff-c9c7a9fe59f1",
        "cursor": {
          "ref": "104bbfc6-d231-44f2-a5b4-b152edcc695b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "71219d5b-0a5c-421b-9580-99a75e5cfcc8"
        },
        "item": {
          "id": "3ff7d2f8-dd41-4777-93ff-c9c7a9fe59f1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15c92058-4fa4-496d-bde3-fee8e483e293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef84106-a764-467f-a4c6-4a72804ea34f",
        "cursor": {
          "ref": "f20b79d2-dc18-4b59-b867-f16b91156a6b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "26655ff5-ad7b-40e9-9e85-a5ba878be3fb"
        },
        "item": {
          "id": "7ef84106-a764-467f-a4c6-4a72804ea34f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "224c3fe8-a7d0-4fc8-ba52-a786d7640bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5be1c5-a800-48f0-bff4-198aab3a58ce",
        "cursor": {
          "ref": "c9e562bd-e746-40b9-ad2d-922c7055c980",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "11c6fb9d-2ca8-4bc6-b1b3-83978d1d676f"
        },
        "item": {
          "id": "de5be1c5-a800-48f0-bff4-198aab3a58ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0a7cf512-b702-415e-9dcc-e2c053ab8e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d401e75-1453-4f2e-9597-80c168504352",
        "cursor": {
          "ref": "d15d3649-97de-473a-ae18-d5940b66921c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e6e88e63-618b-4430-9430-41c9ec6cc82b"
        },
        "item": {
          "id": "5d401e75-1453-4f2e-9597-80c168504352",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "174b9e5e-4082-4218-bfb8-c746db4f3f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1cd0ef-9665-45ae-ac25-09a43d2f8cdd",
        "cursor": {
          "ref": "1ed346dd-3560-4c51-9eae-f555968d5ade",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "48a4cb47-dd02-4b0c-8bb1-8945f4515526"
        },
        "item": {
          "id": "8c1cd0ef-9665-45ae-ac25-09a43d2f8cdd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c4a2861b-7f10-45e9-9156-9e8123fe093f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1472762c-199e-420c-ae72-e88c28c41521",
        "cursor": {
          "ref": "61812690-36da-4de2-bec9-185129517954",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "41f4dacb-704f-41af-b511-fbb834b66a09"
        },
        "item": {
          "id": "1472762c-199e-420c-ae72-e88c28c41521",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90fb459f-bb6d-4a59-ab43-b53dfd8a0e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732a8472-77de-4b8a-8c49-e8e20dd05329",
        "cursor": {
          "ref": "5f95a49d-5f85-4412-b14c-47c30b724140",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1dd3facb-fa79-411b-be04-1e35c9655441"
        },
        "item": {
          "id": "732a8472-77de-4b8a-8c49-e8e20dd05329",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9f9e3e38-1b67-4dbf-9f83-af1a849ceb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ef2236-3a4a-4436-8d6b-339e151c7a6d",
        "cursor": {
          "ref": "0c1f6120-4109-40d6-9847-0f6a460ea922",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "113fdf2d-7dd9-4daa-acb4-5bf4dba0171e"
        },
        "item": {
          "id": "a2ef2236-3a4a-4436-8d6b-339e151c7a6d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2f8e82a2-6a66-4fd2-9f40-679ecf8e3a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367acaa3-83a6-4edc-8da9-4e3d723f296d",
        "cursor": {
          "ref": "e47ee747-ffba-40bb-b618-83c876994d6d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e678ce40-62c2-4967-b13d-70591d1b6119"
        },
        "item": {
          "id": "367acaa3-83a6-4edc-8da9-4e3d723f296d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e6cd4a89-dc89-4b8a-9051-922fd95e66ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0faa3b-4936-4470-b09d-4e1a0e823108",
        "cursor": {
          "ref": "a1a72685-43e2-439f-b390-10f1d1f41455",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "42649774-a0b9-4f37-a308-c1332c3d104d"
        },
        "item": {
          "id": "0b0faa3b-4936-4470-b09d-4e1a0e823108",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aaf43c8e-1653-4f7e-88c6-0fc17573b71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab6461f-54e4-4113-98c7-86a049ee3584",
        "cursor": {
          "ref": "80b179d0-22f6-47c3-8cd1-1ec7b158eca1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ffd76ee0-f987-40a3-852e-e4a9c61cfd16"
        },
        "item": {
          "id": "3ab6461f-54e4-4113-98c7-86a049ee3584",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b12c3725-4996-4415-9156-8ac6e7c7502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc276db6-eb0f-477c-82d4-e1989909bfe2",
        "cursor": {
          "ref": "d33f04fe-3cb8-47dd-9e6b-75e17480df65",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "da0e26c9-4129-4c0d-a4ec-bfa9770592c4"
        },
        "item": {
          "id": "dc276db6-eb0f-477c-82d4-e1989909bfe2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d0202b8a-1029-47ae-b99a-f32a82baafb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d6ad55-3d5b-47c8-ae81-17a563634234",
        "cursor": {
          "ref": "5271b898-955d-4042-b99d-a0e34ddbe881",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "01fa9534-2392-4813-8d1d-1c5a6128e2cf"
        },
        "item": {
          "id": "c6d6ad55-3d5b-47c8-ae81-17a563634234",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8a308d98-9173-44b2-9207-765f92315760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8878aa6-14f9-4646-99fa-accf8a1c44c0",
        "cursor": {
          "ref": "56535793-7c32-4f2f-b191-04c82510ca28",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d34f6328-3cc1-42a0-81e7-fdd358d7447e"
        },
        "item": {
          "id": "e8878aa6-14f9-4646-99fa-accf8a1c44c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "be570ded-2add-4ce3-91cb-b2295b2c82ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c60ca-e0ae-4b3a-a789-95af565ae7de",
        "cursor": {
          "ref": "9f6f2d2e-5c28-4eba-bec4-f45117c4efae",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5fe921c9-16e9-44a7-b53f-0a64018671b4"
        },
        "item": {
          "id": "ca3c60ca-e0ae-4b3a-a789-95af565ae7de",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "77ea5418-c29a-4fab-9ab0-dc4556fe043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f85f8a-de36-4218-a5a2-e45561a87a89",
        "cursor": {
          "ref": "f2fc0834-ef85-417f-b9f9-588fadfaeccb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8da0092a-4c40-4f29-934c-123b776b149a"
        },
        "item": {
          "id": "98f85f8a-de36-4218-a5a2-e45561a87a89",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0c692884-ef35-46bc-abc2-4ededa7919ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240b42d5-3821-462b-8b24-1b053654be9f",
        "cursor": {
          "ref": "f6ed0199-e38c-4f93-bde9-7f7c2e17ae80",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1986d541-3cea-43ad-a463-d0f279bd0631"
        },
        "item": {
          "id": "240b42d5-3821-462b-8b24-1b053654be9f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bd27432c-1c8f-4931-82dd-9cef7dda071b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c273a8b7-b7f9-48d5-aebf-98f83a560aa6",
        "cursor": {
          "ref": "cf465464-7842-41bc-8d3b-17ce70d1bc7e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f45954dd-39ef-4c86-b132-5c37b36b20f2"
        },
        "item": {
          "id": "c273a8b7-b7f9-48d5-aebf-98f83a560aa6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "799fc2e7-e130-42c5-a24d-6eb0373186bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac7aa6d-17ae-423a-a567-91a439a43efb",
        "cursor": {
          "ref": "0cac8f73-318f-4827-985a-00b5ffc446f9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b4fcdbe5-0867-4ca8-8733-da0446054d2c"
        },
        "item": {
          "id": "aac7aa6d-17ae-423a-a567-91a439a43efb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e157c755-0b49-4852-af5e-be7fee2852d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b1b472-636a-46cd-bdbd-86b781aa2f7a",
        "cursor": {
          "ref": "a4618a3f-bebe-4edc-95de-e6d6162db224",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b5acca2d-b410-4809-b446-06e45a461086"
        },
        "item": {
          "id": "17b1b472-636a-46cd-bdbd-86b781aa2f7a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7ae35814-6da1-48c1-92c4-53816770017b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b450f3bf-6c6d-4eb8-a22a-c29e5c41f206",
        "cursor": {
          "ref": "722b6e26-2742-4739-ae89-e76321703bb0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9303be63-7200-448b-a5b3-90d6a88d742e"
        },
        "item": {
          "id": "b450f3bf-6c6d-4eb8-a22a-c29e5c41f206",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4ebab35e-cd6d-4ca9-9ef4-6ca143add4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82af0d58-a027-405e-9c9d-93b1356a8d68",
        "cursor": {
          "ref": "f33037dc-de14-4d16-a610-0f25bb7b6aa5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "90959efa-09cb-4759-8f01-a0b6f624452e"
        },
        "item": {
          "id": "82af0d58-a027-405e-9c9d-93b1356a8d68",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8a22469b-bf80-479c-a090-112491e66c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb310679-f33a-49c3-a334-c00f61de6b69",
        "cursor": {
          "ref": "cabf6706-d784-4493-8d13-d19080b7a1fb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9be7bbbc-13e6-4c78-af92-b3f4d99148bd"
        },
        "item": {
          "id": "bb310679-f33a-49c3-a334-c00f61de6b69",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a9d857be-af2e-4f00-be6e-448a9e4fb28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880c3c2c-2e75-4296-9d42-e6c406f5e362",
        "cursor": {
          "ref": "7310da59-ed98-45f7-b8e5-5c3798aa276e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4864776f-bceb-4127-a2cf-aa7c70487bad"
        },
        "item": {
          "id": "880c3c2c-2e75-4296-9d42-e6c406f5e362",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "96134efc-5397-47e5-b0d4-aa942021896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0676da4-2237-4614-8614-a703d761ad74",
        "cursor": {
          "ref": "a5e99a7f-1d9d-4a14-9ca0-a42140f7871b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d4ca7c7f-51b8-4707-953d-c882bcf0fde9"
        },
        "item": {
          "id": "f0676da4-2237-4614-8614-a703d761ad74",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "636d7c4f-81ee-44fb-b1d1-4772feed666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae85688-8031-4b85-bbab-ba5e9eaf7239",
        "cursor": {
          "ref": "4b499446-a76f-48bb-9f85-aad49e3e251c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fb297688-eb53-422b-b63b-eba79b47c171"
        },
        "item": {
          "id": "3ae85688-8031-4b85-bbab-ba5e9eaf7239",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dfdddfec-b513-420b-9e01-eb21fe0a4c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c848dd31-4751-40fd-b79f-4ce9addc2772",
        "cursor": {
          "ref": "c356f892-a01e-4fc5-be99-6755e8f6e535",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0c1897f4-9a95-4c8b-b335-51dadea35d7d"
        },
        "item": {
          "id": "c848dd31-4751-40fd-b79f-4ce9addc2772",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4ee11e99-fa0b-496c-a2e7-d50feee0df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d721f96-caf1-411e-8094-88c57c96bb2a",
        "cursor": {
          "ref": "22135c48-e900-4bcf-8b5b-55376592457a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d051120e-7e7c-40fb-a70d-030e49c666ee"
        },
        "item": {
          "id": "7d721f96-caf1-411e-8094-88c57c96bb2a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "06b11935-47f3-4153-923f-8f676875df6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3000928-6e4a-4209-9a12-d092a8abbb1f",
        "cursor": {
          "ref": "12364c0c-fed2-4be0-8b98-eca9ac5c2a3c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eefe1ec1-3c72-45a5-b852-cb212b3409f2"
        },
        "item": {
          "id": "f3000928-6e4a-4209-9a12-d092a8abbb1f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "661fedca-64c6-4461-a058-646561a0c730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3c337c-6bbc-43a1-a10b-5a914a702c1b",
        "cursor": {
          "ref": "e11636bf-e5c6-47de-a1b3-fea448347605",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "84210131-bf62-4815-9933-5eaa6439a1e9"
        },
        "item": {
          "id": "4b3c337c-6bbc-43a1-a10b-5a914a702c1b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f759db28-8de6-4ba6-85f5-012ac7955263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f655f6b9-5d5f-4bfe-b1d4-112d04570014",
        "cursor": {
          "ref": "602d6280-693c-4b7c-896a-5450184c86f8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "47464697-6cf0-4c65-bc24-7c03f0d6cb81"
        },
        "item": {
          "id": "f655f6b9-5d5f-4bfe-b1d4-112d04570014",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8736daa0-1bf4-417b-bb1e-173cfd2a0788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e0c9fa-48ab-40ff-ac24-04983520620c",
        "cursor": {
          "ref": "e1d06a1e-8f3b-4a03-b459-86ff1407992d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "78a3e9ec-d517-44a8-bd6e-d7ef8a3acdde"
        },
        "item": {
          "id": "b1e0c9fa-48ab-40ff-ac24-04983520620c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "388b37c6-fdd8-4549-900a-8088cb2bbc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5519f0fd-bc7e-4926-8f26-4955b3836374",
        "cursor": {
          "ref": "ec76ef35-f3c5-4994-a250-05d1d3960bb8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e7ab4fb1-7268-4dea-932c-4e4b784cd76e"
        },
        "item": {
          "id": "5519f0fd-bc7e-4926-8f26-4955b3836374",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1d9690fb-c0b9-4b0c-9ca4-994bd6a3d7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36902df2-c549-46b8-89b0-fb5d19e460f5",
        "cursor": {
          "ref": "6838c163-f9e9-4310-9627-2478be1db422",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a375a61d-c29d-499b-9b21-910b6987e447"
        },
        "item": {
          "id": "36902df2-c549-46b8-89b0-fb5d19e460f5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cd4a7cec-39f9-4e5a-bcb6-3a9f4d15bd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b10bbd-c768-42f1-a531-f461dfe368e6",
        "cursor": {
          "ref": "5fa6a797-5ef1-4ec2-90bb-416be81b5ae3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1f11f05-27d1-4e34-8ef0-7d2e0c80ed62"
        },
        "item": {
          "id": "e0b10bbd-c768-42f1-a531-f461dfe368e6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e86c92d9-7553-4a7d-a43f-59c9a5236686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa10b92-6ceb-411b-a0a7-550afa9dbf06",
        "cursor": {
          "ref": "510d6c2c-ea28-4d6c-ae92-e9606a5d8990",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0b21339a-687b-4c86-b959-3f86a2e0962b"
        },
        "item": {
          "id": "3fa10b92-6ceb-411b-a0a7-550afa9dbf06",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c5c52d13-617b-4961-b445-2909c07bb2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b579e929-d80f-4a6b-a352-5c377175a718",
        "cursor": {
          "ref": "293529ba-5482-46c9-b4b6-71192f341cb1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cdd044e4-78dd-4f0f-a375-111ce40dcf1e"
        },
        "item": {
          "id": "b579e929-d80f-4a6b-a352-5c377175a718",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "59d8baab-2653-43d4-9008-9aad2ab3bd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f97be1d-3763-42b3-901d-80c51460d3c3",
        "cursor": {
          "ref": "ef7b9698-e9ea-4cfe-8483-b7b7d4cec879",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d27bd8eb-8f3d-4679-a8a6-d3fb1d82e9ce"
        },
        "item": {
          "id": "5f97be1d-3763-42b3-901d-80c51460d3c3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fa6a16f1-1ab7-4f8d-8cf8-5d6d12040b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3929a311-f322-47ee-a03f-3ee5b0461d4f",
        "cursor": {
          "ref": "12cdf37c-b983-4389-b8cd-0a04b242f947",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c4cf19be-d34e-400c-8b68-211abe3d01b1"
        },
        "item": {
          "id": "3929a311-f322-47ee-a03f-3ee5b0461d4f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de60f5f9-1d5e-4086-b83d-e206ab1cf4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb02da5-7f4e-41d7-9b01-0b818ee44f76",
        "cursor": {
          "ref": "bdf81dfd-c3af-4693-a473-fbf6d947214a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a3220a1e-cc67-42ae-ba03-f23889884548"
        },
        "item": {
          "id": "3cb02da5-7f4e-41d7-9b01-0b818ee44f76",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d3768908-1015-42cd-9810-250fc7a1d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4290aae6-fc60-428b-b7d8-6759a415d3ea",
        "cursor": {
          "ref": "4b2857f5-f695-4e54-b64e-389b9cffa1c6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "11b3f6f7-0dd1-4c84-919e-00ca25798e52"
        },
        "item": {
          "id": "4290aae6-fc60-428b-b7d8-6759a415d3ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "383f76bd-a6f8-4811-b3f2-d9a8f7358cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eab976-3a96-4bb5-94f9-3e9ba0017831",
        "cursor": {
          "ref": "cd5ae798-e17e-48a2-b995-a1d8dd82e65d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a3c7be4f-6853-4833-83c7-49ce007e708b"
        },
        "item": {
          "id": "59eab976-3a96-4bb5-94f9-3e9ba0017831",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2d401697-40b2-4877-adf1-eed62036ddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6704e06-acb1-41f1-b053-452493165183",
        "cursor": {
          "ref": "ae4a7828-2725-4b70-88e7-aebd171617e2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "647dd962-88db-4be9-bdd6-6ff4c26cb9c2"
        },
        "item": {
          "id": "c6704e06-acb1-41f1-b053-452493165183",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8d478326-e638-4382-9584-3172fd43798b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33ac80b-81b8-4f9b-880d-c59a0b0da672",
        "cursor": {
          "ref": "acf3f085-9c9d-45cf-aa14-e7cd961877f9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4be5b725-9ba6-4c51-9b95-c5aeb286cf58"
        },
        "item": {
          "id": "e33ac80b-81b8-4f9b-880d-c59a0b0da672",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0bd68845-eeb6-4f76-8323-1609c46bf404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab6c62e-458b-4ded-9672-ca9ccd07cbbe",
        "cursor": {
          "ref": "ef066383-7e44-4753-93b6-5227e9f0741b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5d72d011-b500-4340-9660-cc1d03b15343"
        },
        "item": {
          "id": "7ab6c62e-458b-4ded-9672-ca9ccd07cbbe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3643eb4e-8840-436c-a5e7-bf513f937fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e617d01b-7905-4a57-ac7a-5a5d03985194",
        "cursor": {
          "ref": "12d7b687-8932-483f-8a3f-110fba7bee08",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9c896f87-15d9-4a6d-9ff7-068ea3833684"
        },
        "item": {
          "id": "e617d01b-7905-4a57-ac7a-5a5d03985194",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cf03628d-5bc0-41f0-b1e3-c0f15a4a41f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d0f324-65ec-4180-b993-62e9bee04ef3",
        "cursor": {
          "ref": "cb7d0249-eeb5-4ab1-a1e4-5e9d053d90e4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0569f7f6-05b3-4b8b-98f3-7417e77c5d6d"
        },
        "item": {
          "id": "b7d0f324-65ec-4180-b993-62e9bee04ef3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dc758f88-4a99-46ce-a71d-2e922c111f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67af04ff-9045-4166-a01a-84b860233238",
        "cursor": {
          "ref": "90d96c18-adc8-4c8f-9202-de6b8bcdd2e8",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "765d80e4-fb64-4ffb-8185-2520392c95cc"
        },
        "item": {
          "id": "67af04ff-9045-4166-a01a-84b860233238",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2a650f03-8231-429b-85d4-4e8766118755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32640f5f-bb01-4655-8575-70acdeabe79b",
        "cursor": {
          "ref": "32dcf43e-3f3d-4c30-8539-3fdd2819dbfc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0bb9c34c-ccac-4fe4-b86d-613c4fd1cb59"
        },
        "item": {
          "id": "32640f5f-bb01-4655-8575-70acdeabe79b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a828bd7b-a764-468a-881f-541a7f984279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ed90a7-ad8f-41e5-9b4a-41c0ad6bc6ff",
        "cursor": {
          "ref": "fd02c470-1265-4897-91e1-c275b3b986fa",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "638ac448-7e20-4a62-9c31-bd710471f5bd"
        },
        "item": {
          "id": "01ed90a7-ad8f-41e5-9b4a-41c0ad6bc6ff",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f616006a-3926-4a21-93f0-a361318a942c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b435094-1e53-4102-91c2-a4fd5e5e62d5",
        "cursor": {
          "ref": "054d8e64-9315-4581-a095-e95965fbaacc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "657825c1-f57f-4678-932c-cbdf0e4771f9"
        },
        "item": {
          "id": "4b435094-1e53-4102-91c2-a4fd5e5e62d5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "62fc7713-68a3-44b3-8a2c-9d199d1da3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7a4def-1319-4974-9074-4c83e4eff377",
        "cursor": {
          "ref": "e8fc9fa3-16cc-42cf-b4db-1f51c09b4b39",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "03303f9a-e50a-45d5-93f3-0288360bb60a"
        },
        "item": {
          "id": "0b7a4def-1319-4974-9074-4c83e4eff377",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "031826a4-7db2-42af-a36d-c0269e8b4cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad612a2-982f-4fa4-8dc4-010125c6e907",
        "cursor": {
          "ref": "bdc09884-d2df-4a38-a9eb-aa3292c457bf",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "350976b5-81a6-4949-b61c-f87b984a3cdd"
        },
        "item": {
          "id": "2ad612a2-982f-4fa4-8dc4-010125c6e907",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9229b8c8-b1ba-46a7-b299-cf7223f939b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6220c42-5349-44c2-a647-227c14aad31c",
        "cursor": {
          "ref": "7ce519a7-8e22-4de6-9077-75dcd715dcff",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "757aa34e-3c59-4409-865b-79087f8e057e"
        },
        "item": {
          "id": "a6220c42-5349-44c2-a647-227c14aad31c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "476915e0-586d-47d8-ac02-fadf06153097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3af38-c61a-462c-9f4f-a246527e3cdf",
        "cursor": {
          "ref": "cbbb0f17-e7d8-44b6-9e2f-a1cf26b908a3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b8b185cf-5076-40b5-8f20-85e700d663fa"
        },
        "item": {
          "id": "91f3af38-c61a-462c-9f4f-a246527e3cdf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89e53bda-b21e-46e4-938f-47d13cebf010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5573ece8-2538-4171-8644-884ee1e462e5",
        "cursor": {
          "ref": "439ebd70-c683-4f6c-a744-7c45500a6a12",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "27aeb308-3d07-47b6-85e0-120af7d4ec2d"
        },
        "item": {
          "id": "5573ece8-2538-4171-8644-884ee1e462e5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "37cea104-25e7-4f96-8d45-22e860a505af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc6284c-d696-4520-8071-5d7ddaf40e01",
        "cursor": {
          "ref": "40deddb8-fd15-43a1-8512-0e593d03bba5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b7edf708-95c6-4bc1-8f1b-ff8797ddf794"
        },
        "item": {
          "id": "3bc6284c-d696-4520-8071-5d7ddaf40e01",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e61ff245-1031-486f-a9e6-a2fa0e5c8d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6c2825-2cbb-4984-aeeb-1de1e6dab9ae",
        "cursor": {
          "ref": "6d9402b7-23bb-4144-948c-d3e212b2bcac",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c408c8ff-a8bd-417c-94ce-1ab102f18342"
        },
        "item": {
          "id": "2f6c2825-2cbb-4984-aeeb-1de1e6dab9ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f3a78003-292b-47ee-a5d6-8d43104c5d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d1d78b-b99a-499b-8908-a3d729a6a2c2",
        "cursor": {
          "ref": "8d6c0473-eb5a-4952-8e4b-865bce46cc9a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59c567b3-ecaa-4546-bc77-889c952cbee4"
        },
        "item": {
          "id": "65d1d78b-b99a-499b-8908-a3d729a6a2c2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "11205544-b0de-4656-85de-e7845579d0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af2ae42-d170-480c-89bd-557d2bd739fc",
        "cursor": {
          "ref": "4df089e8-8679-4eea-990e-7287682d1474",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c45fe0f-b8bb-4a43-9787-caab3e715512"
        },
        "item": {
          "id": "2af2ae42-d170-480c-89bd-557d2bd739fc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7f8450fa-b2f6-405b-92fe-8d1219837443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2603ea0-9dc7-4ce1-9942-5dbbd145dedf",
        "cursor": {
          "ref": "639017eb-4f6a-4ded-add0-ea48a250b991",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "63d2b32a-32e2-415e-a43d-2271ab4932fa"
        },
        "item": {
          "id": "d2603ea0-9dc7-4ce1-9942-5dbbd145dedf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "714aa192-eff8-404a-8c86-25bc2f345b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec67eab-7d8a-4362-a1dd-d185d3c9b523",
        "cursor": {
          "ref": "46cdeab2-854c-4962-a4d8-45df78972304",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d9507965-5a9d-461f-b692-38f32e7527f1"
        },
        "item": {
          "id": "3ec67eab-7d8a-4362-a1dd-d185d3c9b523",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e1869018-1bce-4dd1-9e6b-01b149277494",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fcf9ff-db53-49d3-a35c-8140180f315d",
        "cursor": {
          "ref": "4e78e6ea-4333-4fd0-ad26-78f3c650ee6c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "381da2a9-0dba-4886-92ac-276cc1cdb026"
        },
        "item": {
          "id": "39fcf9ff-db53-49d3-a35c-8140180f315d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "32d389b4-8a38-44c4-ab38-f5de82069329",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2866e0df-1dfc-4e1a-b0ce-0b83e5f8b861",
        "cursor": {
          "ref": "90626cfe-fb4f-4a65-b66d-d3373dc1a9c8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0050a235-2b18-4e63-bb8a-bf142fa4a531"
        },
        "item": {
          "id": "2866e0df-1dfc-4e1a-b0ce-0b83e5f8b861",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b4fa73a1-83c5-414b-a7e2-1268e3dd8308",
          "status": "OK",
          "code": 200,
          "responseTime": 2391,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa797e61-ff7b-4268-9b61-e4a8c2490134",
        "cursor": {
          "ref": "0088c786-71a1-47c0-acbc-b248a6cbdb7c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ddd4c0e-ecae-40aa-a4a3-58ea66f79823"
        },
        "item": {
          "id": "fa797e61-ff7b-4268-9b61-e4a8c2490134",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b4728a7e-67cc-4eb2-8d5f-b3f2833b9acb",
          "status": "OK",
          "code": 200,
          "responseTime": 2322,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa8fb9-3395-415b-b6b8-fd32981bf42f",
        "cursor": {
          "ref": "1855995d-5008-47a5-98a3-495683d3a6b0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7ff7c40b-8a23-4a33-921c-297072f680d5"
        },
        "item": {
          "id": "39fa8fb9-3395-415b-b6b8-fd32981bf42f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "34e1c851-f6d3-48db-8dcc-6b79f25aab77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa8fb9-3395-415b-b6b8-fd32981bf42f",
        "cursor": {
          "ref": "1855995d-5008-47a5-98a3-495683d3a6b0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7ff7c40b-8a23-4a33-921c-297072f680d5"
        },
        "item": {
          "id": "39fa8fb9-3395-415b-b6b8-fd32981bf42f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "34e1c851-f6d3-48db-8dcc-6b79f25aab77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b6f3a5-8dcd-48ee-ac58-ee4863dbd620",
        "cursor": {
          "ref": "5d864586-786e-4dfc-b97c-8e43c0619a67",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0ebd8b37-77b4-4d33-9333-a2ca3469b666"
        },
        "item": {
          "id": "b8b6f3a5-8dcd-48ee-ac58-ee4863dbd620",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7d938334-05c0-4726-96f1-c90ecc841679",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1e0629-24e6-4c8e-98bb-a316f8f4defa",
        "cursor": {
          "ref": "94d164fe-ea09-4d04-a334-e90734230ba6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2eb162bc-123e-43d8-ae1f-fc3e89aae8fd"
        },
        "item": {
          "id": "4d1e0629-24e6-4c8e-98bb-a316f8f4defa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "08043007-b878-4a55-9dd6-4d1ed606c37f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}