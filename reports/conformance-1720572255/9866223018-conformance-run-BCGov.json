{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c5dfd48a-326a-43e7-87a2-f9eebace8ed9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4f9f99ba-1a48-4101-8a97-e6f97945610f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "188f8d2e-6ab7-4393-8023-1a4cb1ab31ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e442354-85de-48ef-a916-83ec976fc96c"
                }
              }
            ]
          },
          {
            "id": "7fe8df04-3d46-43ec-b052-6c415d8d461d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2735be89-78f5-4d3b-a0d9-e131f4a32a37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbf6878c-4859-40c8-ab16-96bd5773c901"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "45410ca6-3adc-47e0-9a83-64b6c2cf132a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1b0150a-9930-4cca-a466-4d9667656f51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "669cf976-7696-4882-9de1-2dd51b41ced6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d596d717-d43f-469f-b58e-b727e73397a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3876776a-d56d-4d83-98a0-5e73bfeb1a24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5721466-79d6-456e-a059-62a5d1569703",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bede0db9-b348-4c9c-b26d-8982dfe736b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e813d11-c672-487b-a119-ce8454f4c906",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37e2f2d2-cb4c-4a3b-922a-a1869673120d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0f984c2-035d-42a5-bbf8-c584c071c6f7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "031e1fbb-ca18-4cfb-9e60-06468a1912e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11102857-f12d-4dfa-8a0a-ea33ef80f1ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fec7c1ab-1511-47b4-ab09-0fa5056b35b4"
            }
          }
        ]
      },
      {
        "id": "8d631ca1-0a55-46f1-9aa1-fb767fbb6900",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f6af5e71-ea46-40b9-826a-61598136266e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3d5cad8-4f2a-4037-8e9d-d6e7e46742f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88109f20-4529-407d-b075-36f50675aea0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acd125e-95e1-4b16-96ce-9251d7202ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4da8d00b-b6a1-4900-b9ec-c945452c499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a14a39b-158d-49bf-8af1-5fcbc5538a97",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cadfc69-14dd-42c4-809b-81579ddbbcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c51c2a3e-d2d9-4b5d-b2a1-32cd58bccd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3036d49-bcf0-4dc7-b865-1413b7ec0d9a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207b4b56-a7fb-4b33-a7fc-39008965074e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55f3d643-43d2-481c-9580-252136f2738f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fe0a2a1-0b17-4458-9c3f-e666f1469f4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5573908-e6f6-44f6-930b-6afa05706edb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edef882-705c-4bcc-b872-91cef9d99715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c40c4de9-332d-4a35-8909-645a6957480b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b611f28-b359-4525-8909-6fdf472dbce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a351939f-7b0c-4766-b418-3624fa40674f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3a8343e3-45da-4f5e-ba1e-a8c3cf85b9ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4d4a8dc-089d-4dd6-935d-c90e8c8d2eac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93cf9f6a-f604-4a4d-a694-11c700d00bcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "efaf513e-b6b0-4ce1-9f16-264c3e7563bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0d850a1-fc4a-40bd-8482-dd717a63e960",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c0380b29-9cbd-4595-a41c-9297be532c7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f0e30ae-6841-4514-8da7-8ce819a2b8e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42d2b0af-ffb2-49b9-a071-90f2d698d781"
            }
          }
        ]
      },
      {
        "id": "1dfbd8c8-41d4-47ba-bec9-51d327bb5770",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e97e2581-dbe7-46cb-a1a2-db76164c6138",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7914ee76-2951-4f49-a930-dad9d521ac9e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e3768595-8336-4bf9-afd5-60428fb40270",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11e2bee-55ba-4156-b592-03f559b5c66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4757467-5a06-46af-85dd-b37fe8f38ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1585269-95f0-40ab-8d68-d94c1f74de04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68345072-b72e-4856-91ca-1fd803fe4fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec8631c-70eb-496d-a2d5-5bbc58e9769d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60abecb1-df9f-40c7-8171-a1c1348f076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf59066-92a6-41b1-ad1a-5186eb799635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa751ca1-c677-4875-bf4e-1677ec71ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e121ae-4fba-48d2-be0f-9d636072168b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f2b002-e1d7-427d-ab4f-eb247bf44875",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc97e9e7-c7b0-4ba2-abaf-5ad76f975645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8832fe3e-f9f9-4409-9175-34f240bb0447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a3a14-7057-45e5-9e2d-e61e5da913fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6656cfd8-3267-4b1a-b39c-612b1fbae397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96568661-22ae-408a-8b20-5904d0f03089",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3fe5d4-f870-4810-a998-53020cb41bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96188a1-8ef7-48d4-a617-3d8cbe67265f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ba2e80-751a-4a26-9e5e-e5292543f805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b3dfde2-4757-4cf4-b7c2-04bce8bfa444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec6a350-cd2a-431b-94bc-e4c1bc4cd8f1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfbe40d-66e7-438a-9279-a62663c3e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f95f92-3d89-4879-83a1-7df37527d082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ddf2b3-671f-42fa-bb06-5e379c70932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d427bda-cc20-42e6-8b14-2ed722f5d686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e2bc49-7137-4531-b661-d87eef88f0cd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fe423a-f550-44c6-a496-b206525ecce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e56b35-f916-44ac-9756-aed85db71adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2d7e4b-096f-4646-bcdd-6d0196d2f322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "216708d2-0efe-40bd-97e5-4fc85d07cd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bacb4b4-ba51-461d-8ab4-1179a0f02116",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed3e93-1ddd-4beb-8106-10ffe5d7204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d18db9-9325-49b1-beeb-a1faa9b28e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdece0d-ff36-424f-8ea5-6233a741d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c90027b-b787-4ae0-8a41-9742c9255534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbb89f7-ddf4-45ee-ac9a-5289e87e6e69",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce10b3f-5e47-4500-b52b-aeaea09dd496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f829264d-f4a8-4141-8095-501cf5f6fe02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f68e1-92b2-48a9-bc6b-b783eff62abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b03612e-5f44-4fb6-b803-e23b954103c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d2a224-656b-493a-b5a3-b3d5c057754c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8d96d9-4ede-4490-92d4-9784ae121542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58125188-6273-4f52-8fd6-374ac4d1c23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c79ed9-33b5-4061-80a8-3bb91947fad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9ed3037-2c17-48ad-ba0d-647ae2ef6a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0609e0-7b6e-4017-afcb-866563d2ebd0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af223127-29a3-4609-bc56-fbbc4c9c0b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4622c594-320c-4063-a792-c404a41b71cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ea4df5-20fa-4df5-a706-41ae396a8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61619ab3-dcf5-4c79-b0ed-4ddc1752cf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7beec5-d6e5-40a2-b525-76ece3431c8b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005e3060-2d25-43aa-bcea-58a1beed7624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10766159-b511-44e9-8ec1-be7d36c9c483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2775e15d-99fb-4359-b2c3-0afff143d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6162bafd-7b40-4f09-8438-132507bee875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccdbb70-5e7f-49c8-9231-bc6c033eaa4b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66806bf-3ff2-4964-abfd-2a91a30a3d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbea10bb-02c0-4001-a8a0-3bd3b4a23f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bac3692-bf20-402a-8d2e-c51eef77169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c41c473-5528-4d28-8fdb-c3255baef319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2429af6-72ce-4de1-a909-e383733ad7b9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff3a7a4-ec5c-4bcc-b92b-e5811c695a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fbe53b-ec12-4efe-9c2a-6fface55dfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907ef0d2-bb21-4d66-b0c9-ff859109c961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e05f1d7-b31a-4151-b7a5-43938a96e64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e5cb30-ff29-40b7-972d-7d46a02b58e5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a724312-6df3-43fb-ab81-6a8fc421bef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf22b01-97ea-46bb-816b-430540fd05af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1915866c-386d-442a-b943-1de43261c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "330c3bc3-5425-4212-91fa-6c16c8e7ff65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99c25d-a3be-4fe1-add5-b24e22fa97b2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee73845-2e1e-4861-b27f-e11745fa8b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becaa6d6-15b6-4f3c-87b7-f971f534b315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8d6fac-5b98-4df7-8c5a-3c810a3e8033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50cd373b-95c4-4f27-a878-83cc6eca7a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b171ef20-12bd-4ebc-88c5-a205e016a4a7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e913e85d-57f7-4692-8a11-19bd9e6e271e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75b47ac-884b-498c-ba26-a32c5ae7e612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af4ac65-06e7-4fcc-afac-0db3586fef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a96f8098-7250-4677-bd0d-3dbf113807c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb74a6bd-29fd-43e8-a787-d60c5f4b859f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2758fc6-9f64-4445-ba55-d226ccda8786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b44d3d-2000-4290-94c7-475d0c342757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5afba3-771f-45f1-9a4d-eb538553c515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69b51855-90d7-459a-9343-786e6d40dfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e429aede-5e0e-4a8e-9f14-3127b756a676",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a29fad-27ba-4e40-9e36-252da08e66be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb007da-85df-4b33-8925-dbbea886b87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6683239e-92f8-4f71-b569-88f3288e2dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "46505d65-4a76-4de1-bc7a-045dcf57fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95e3c03-6a67-4cb4-afa2-a2d0ddecc147",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d77116-1ab0-4a58-9f30-9c4e837977f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2366a154-b824-40a4-9e7c-0b5d422d7dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5952772d-91da-4af8-a8ac-91ba145b6234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c496fa-86c8-45fa-88f7-d712f35c193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cd8171-708d-41b1-a659-682d2bae2bfa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a8878-c941-4c8d-bf4d-82113613fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7c870c-21f6-41e4-8bd1-b7a9fdefeb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cda2b7-1d5d-4556-8107-c6c704baa830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7793445f-3838-46a1-b070-39efa0c70786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba2797-b8f8-4849-9ff8-95f8546595d8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd5f6e5-2990-46f6-b421-d0b5bc866c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbefbde3-15a6-4e87-a64d-326cf930b012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3fab63-efaf-4d68-bf61-e0fe153600bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da645f37-7132-4980-8aa4-e8f64cdd9e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0d888b-8a52-4324-907b-e6d37fb31b7c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba2c79-c812-41af-a1c6-ac8770188403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bcfd49-edeb-49c5-a076-954ea0c6293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8ac94d-88b3-4bb1-8c82-84f42d56a38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5db5da-d75c-4f2d-8725-e7eb4158b60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee9c3b0-09af-4f79-8e49-67fffdb452c3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d399294a-3c6b-4171-bf18-bd3575bf1691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7328b5-ef32-4f67-b602-151c91174073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfa76de-d41e-4562-aa41-9145219f6422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77359289-ed1c-48c6-a0a1-15b45f9b856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700ba612-b519-4ddd-8965-2698bb814fbd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa684e72-f3c2-43c6-95f9-54abb9a60b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dac7f30-a873-4d33-a21c-6209a895b03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c1c890-3288-47d9-9623-754950335046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d79695d-06f7-4d70-85ac-1c228570b664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5778b6b1-f69c-460e-a6ff-d0d9f8b0ef6c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482685d6-485a-422e-aaf1-537a5f09a712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cb505a-6047-441e-98d2-db391dcf35b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d99f74-56a6-44a3-8e00-4fb81657d308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1702d4-9286-4137-a1b5-9c096c9f778d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624c0dbc-938b-4099-bbd8-80da33dc6da8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2df5aa9-8d37-4d43-aa9d-8fe21e8cb1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e41b4d-cdfd-4207-b187-6ab5c7b56307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdbcf41-4326-44fb-9ded-5f5255111cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "674efb30-c608-47b9-8df9-eb110d45f44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c41ad5-8b37-4dcd-b799-0eb7db8b4318",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58242a3b-fb54-4208-914e-83c2bbed66ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaeee5b-760e-43bb-9df8-672a1d110aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc6e59-bc30-4b7d-9219-ce3e864b49f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c28362-9e63-4614-a9b3-ee2bc236cb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b954cb5-b5c1-4246-bbaf-5888b21dd454",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de98129-cfc4-40f0-949a-0f5f92f2429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0833d74-407e-416f-a277-5e1a76741de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b54d2a-50e7-41ab-a4a4-4891eea94ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "650862e7-754b-4c96-8336-3088dde223a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08aed35-f4a0-46b3-a794-0e178fc4329d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee72a09a-63b0-4cd0-bc49-d4caee9269e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e398cec-b1d7-495d-a7da-db5764624995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d637dfe1-f26f-4918-99b2-ee8a00323139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e73be4c-1eb9-4236-929f-927225c92fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85bda3-35fa-4bb1-8dc2-700746adeab0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486a448f-cb78-484b-901b-17cdd567f218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb0270f-bceb-4766-a05f-a53fd11b08ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53691565-601d-450e-a328-31583f2b5bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c2a10c-b03c-4d38-ad62-daaaa9af111e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb30b0b-e5ab-484f-8f6c-050e46e07606",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23327b7-864e-40fb-bcc7-7fd7b2bbd03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f569a29-d6fe-4d1f-ab68-ba25bb5d44f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252670d4-bdbb-4959-b0d9-e86b17208124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac70030c-eec1-4fff-8c0d-736d400020e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9f1f2-d40c-4cd7-b7c0-13af53df1da5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097d0cfb-2183-4d24-9934-1ae9f8f7ea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0469774-a5f4-453a-8007-aed989612d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1ccbf1-1369-40ac-ad84-3b76df6fdf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "646e4cb5-6c55-44fc-b701-cfd6632f3fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29bb89c-af00-473d-9cba-dc3698c236bb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5526a213-f6b0-4bfe-8dc1-b2d103590a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ca888f-3c07-4115-a889-d3392914d39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6936baae-4646-49e6-a622-be22688b3acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f52d09ff-fc82-4af8-816f-215412dda0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63a71d7-af03-4b1c-a5bc-2a9339722e05",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1993f14c-04df-4298-87a1-c7236414a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c096a3fb-22ad-4cc0-bf54-3c6f33743c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d1f89c-5e87-444b-a6fe-1f924766c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1abd06-ac7a-47c9-9313-31d70c40816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aeb18f-19e5-491f-a260-a20667eeca2b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec59fec8-4e15-42de-831f-613503d9fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec974ff5-0dfe-4f88-a149-376a2c70a34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a4be70-be9f-4750-9455-d5a31200bd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "356c4c03-93bc-4d92-a24e-e0e75ed916e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e98280d-8311-4cfb-9ab0-45ef4597a866",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70234b2-a12e-4dc4-aad9-12a99d58055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f71ecf08-f344-4d66-9b56-a13fae18d132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ddd03b-3850-47d1-bccf-6b7753572a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "201a1b25-2eb4-4cbf-9987-2477c2c66f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17709d0c-42d9-4d18-9985-4a6953f8e401",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c424d7f-ddaa-489d-8876-3009fe440612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f193c31-c96f-45f7-87cf-1ba031117320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f042d71f-bfaf-4a0e-9675-33cd003be249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79d8a577-f903-491e-b9ca-7b2e1d79d0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed6004d-0b43-4d44-a4e4-0d82770393bf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9be590-76e2-40e4-b666-64c006712935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3417fa6c-c99a-48ad-8c20-ab8e94402e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe6b3db-af31-431c-8356-fe7fa2b71afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7efa42-24dd-4f02-9faa-2dd05349617f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e7d7a-830b-4dee-a8cb-63672aaf9b84",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2c36b-c33f-4ce9-a5fa-1881d9328d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c392e1f7-200c-4332-add7-72206e9400f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8392047-3695-4329-88fc-e01cda35e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1607c2e5-75fd-437d-83ea-6017f612fc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13fa1b8-8fc4-495c-bdc4-219ec412cdff",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f95f41f-4ecd-4277-81a0-c363ddcb47b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5057a288-c033-4052-9b71-248b4fae182c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5db6aa1-436b-4b0e-9b3f-c0b9edce51cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfecf436-c7fb-46a1-a99a-28e5d4d36933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74061ab-d2a4-42d7-81bf-b562921012df",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482da49b-ef2b-4200-89c3-131f5e0a33bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c122f9-4bcf-4eaa-a0dd-f360badd170e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dc0965-9207-4bdf-a8a1-bd5930fb3607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e547e8f1-78d2-449b-afb0-5fbb1ed6e29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4504f1c8-3c83-4a80-a2cc-ff669a500806",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd47da9-860b-4f35-92e3-cbc2191ba039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0328878-c743-4845-98d0-c578135eb9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4f6d6-9c18-452a-b0df-a640546481dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e396c4e3-bd0e-44b0-85ee-42c493e7b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaee6465-1bfa-4020-8384-301fc101e3cd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753b291f-0381-4a69-9dd8-8436e103c601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354ab08a-0aab-4883-89d9-eb844ff0156c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f436f1-acee-4762-8f93-ee9c5377303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7dc748-c84c-4a99-8600-408262b4bca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f51ed2-6ee5-4a1b-a9a5-fbeb48282961",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3b3662-ddad-4bb7-8f07-aaa616ce1b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6bde02-42e2-4a1f-b22f-81bebc271465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92db1a4-f58f-4809-9d11-1a1bc4e758ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e3c849-abea-4be7-b4f5-5fea7c861297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd7b076-8ab3-45c7-ae04-078b1045619a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63445fec-2cce-41fe-9398-b855f24df704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ecf62c-f737-4e50-b724-befe1f578ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd59fe44-7544-49ad-b214-9ecc64f5e07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db055e32-719a-4e48-98ae-b68196645c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833d9275-2a77-46c0-8ea1-5f5cbb81d90a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b11d19-8fa6-4b83-9d73-d1336f799980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150559a3-067c-43bd-927e-3deeb8c13212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c50442c-89cb-435d-9ca9-7d57c8cfedd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1b0674-342c-4d45-a3a9-93c207ce3c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0785db92-6e68-4062-a65d-cb894555ca4e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c93dcc-7e13-4a64-a39d-c81d2ea1e60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86870266-4ae0-4e65-86a9-69d032a68161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8873be-83e7-4fa5-afe9-1192d8cf90f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e19a4b-5833-4da0-9fe4-a1b6649e7ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2932c26-8b8d-465c-9f0f-7edf7176d962",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b014cd0-4dc4-4bd4-825c-735b5503fb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0affd704-3a8b-4a37-b026-5d3f3662a2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b26a37-c79f-422b-bd18-cb66102ec520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a41645-961c-4ed5-a01b-14d4b6d3e83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64802b3b-75cd-43a7-bf5a-3d731f0349ce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae88e44d-54a6-4648-ad5c-fe0bcbdfe954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c991d6-3f3b-4336-a38f-175cc6b64cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1991d08f-5c3e-4b3d-bfaa-80d03953daef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d27fff01-a4c9-4d45-9727-f63dc4470852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b971c39-5088-4650-8cd9-5f18b891ab77",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5b0b0a-ee27-4ff7-b3e2-ed6d9dab747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ab6c1e-d87b-4eb2-a1e6-beb7e4367fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b008d5f6-fbf8-412c-9134-8be331933dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "449f672a-c4fd-43ae-b87b-6cad07a7fa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feb1cf3-a60b-4e9b-8dbe-cc8bdf89ac27",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777f3bf5-2438-4f22-a146-68d56e818eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3d34fc-85ae-4bcc-b733-84737b921d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e461f25d-e0e5-4501-a104-a202d6ec1cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b050d5-a281-4e93-b2b4-270228c43641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc79cb76-b652-4580-9133-720b440ba925",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6b1f51-b744-49d5-a451-f774449a3b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70246ef5-e850-436f-ae7a-0b852ba06d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b796533-3732-4ac4-8f6d-4c9e2746210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7cd381-8baa-45b6-9c9d-d1347561efa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b2d701-5697-4cad-806f-24d018884c9e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44399b4-a69c-409c-8897-492bbf05e5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc1bb5c-9081-4ec7-a0bf-73bb47d47419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e8f0d7-7e84-4361-9403-6d2c045adbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66093c1f-68bd-4868-8924-4b2aee3b989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d776242d-ed6d-49f4-a9f2-f6aefe7429cf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7382d372-c695-4664-93d6-921f05d08f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9230f8-4fc9-4a84-af72-f422a56b4311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363f1fda-1c62-49b1-98c7-1d850eb13f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da3f3d8-2201-4309-ae62-e5358c1bb799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a8b58f-4ff9-41c8-98d6-2151dbe7abf8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de82861c-e74f-404b-b61d-18f650f1808f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1505bb-fdda-469c-8978-9408f56756c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a8e12-c823-4ea1-afc6-cef2eea1fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a656822-7773-4ec2-a6e5-a6cdee44f86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de09297-750a-4dfe-b63a-7e44a46ebb0f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbcb531-7a0c-42c7-8910-aabf1e734e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e6549b-a1e1-4df2-a0e0-ccf98d133d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2265ba-ca26-4bae-b6ad-2f7c951f24d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4d356801-27ce-40d5-9590-fe0e8b19547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10473f7-f6a0-4deb-b461-38f2937b415f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0647d22c-45c0-42c8-843d-74e28bb02e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7096ec-558a-4c7f-81af-b3ddce11e963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a311a20-8ce2-4bfe-aea0-f3e8b1648c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0adaa4-a8ac-4575-908e-6cb409504461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917f2998-592a-431b-bc65-a00cab81233a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e127df-cae9-485c-a208-3aa0b948fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5d9187-c679-45de-836b-248a4a31ed43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9338bef-4632-4fc7-9aa7-f28ecee0b170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "100eab81-882f-449e-a042-be939e7adc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e6432-2150-4f3b-a79b-81419b5775f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75699672-fe1e-445e-be4d-52b25c9ce225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185ba936-f70b-4ba3-aee5-5cbfcb71d66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a59fe80-82cf-46bf-8b2d-9d4ec880fdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f86ae83f-b74a-45c4-a379-118bb2b97f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18ac85-f729-43a7-8cde-0429cf2c4b88",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1fa96a-8224-495e-8544-e42e0bcd1b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beef862-ace6-4db9-923f-69fceab3be88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6b10e9-f759-403a-a742-4baf8fdd4dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15db33fa-72ab-4360-9eb8-87b979f78a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da4271e-bbb4-4431-91f8-569170660220",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a9bfab-1f60-480d-a207-1f2957333d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0363db-6faf-4b61-9f91-aa7c1294336d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846a1967-6021-46bb-93b2-545b2f001a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f07e5a9-c518-4785-9f5f-08c1a044f4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98772022-3a69-49ca-aa3b-001f569c59a5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af66215-b61e-4105-a796-eb02bb2dab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff8cc9a-5ec0-4265-994f-22a8fa2ad627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0917e6-cbce-4f60-9704-9ec946a41995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0d7fff-07c4-493e-8c54-da0fce3a5ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f66a3b-ca1c-4d81-87f4-23fb53e6af79",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33ea9c3-869b-4511-92a1-c2f0febeff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f770b00f-1b9d-4def-9a27-3b24604ff454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2ad1bd-e887-49eb-87a1-627b7a1ad645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cd26b7-754b-4228-9df2-f4aca4e7416c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed9b5e1-9b24-4f78-9704-314b9bf5da6e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306aff72-66ec-4df4-8680-e04d8c3f3b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e391cd91-f4db-4df8-98cb-b0aaa6eb028e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b56ed1d-2188-4bea-8c54-7b50e945f167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdaf69b9-12ff-4ede-9813-972f6ab1e043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a9313c-975b-481a-864a-84c5e25b2b9a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2756c32-0564-48e9-aad8-173a0e617689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566abdcc-2ec8-4c1d-b835-53177d353954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125366df-f502-4cef-ae25-be9d49a94a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1734946f-23f3-4977-93fc-864fa99b4230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb4048-dade-424f-b055-73905dd2c3e1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d97adc-8e64-458d-a4b2-08998b4e7c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f32252f-7397-4123-b928-fcf2ffa9d1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a15bf3-4197-4f8a-8ae4-700e3e5e4c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "344f904f-9ddd-495c-a666-7a828695d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d905155-9a5f-49e1-9e92-a6a90d2330fa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d424c-e64b-4b0e-b63f-6044c5fdbda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ce812c-a7a4-4f3d-9bd9-4d51fd22ae12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564f9402-1d71-4ae7-bdc0-4d52f70efec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d689391f-4b3b-4513-b148-8e5c6cba2ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcde7e06-1363-4365-aa03-cf2a59c5028b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8020c0-2a7a-435f-8284-6f23f5b3483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0343e23-0f1e-443a-b588-1042c237fac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7bf5b-9101-43a1-b1d2-aaa281998359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee48500-9152-4d67-addd-6f7581a36bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d95b3-0172-44c4-871d-cceb1b8b0926",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074efb01-6b50-402c-b314-77cb372e5c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c006a22-2948-447d-99e2-7561a6c45a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00e7112-d912-4772-afe2-3fb311ac6a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7f035e-83a4-41a6-8f5d-ecaefa4be0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef442af6-dd12-4619-a9ca-f694c2005004",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfeb159-4acc-4ef7-8aaa-4a555143b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdf59bf-7fdf-4f06-9210-4b48e5d3599a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7eb987-c32d-427b-8e48-e3c0dc957780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1bf4a1-c672-4d93-848a-8f29c6f8cf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e904e99d-8b87-4998-816e-23facb940ac3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee716f3b-c211-4f73-8c95-dd3db4e4840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77b1a25-14b7-42fa-a237-60ddeec46035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50642eb3-c58e-4488-896e-61d3c1994c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e6c567-6c61-4832-8e37-05f37e2161b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6941569e-a822-4220-869a-b530851ef7bd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2c4e86-ec1a-42a5-acc1-7db8b4640927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699b935a-f848-4a3c-ba81-c0d0083ee17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a62b96-dc7e-4f61-87f6-4c32969f2fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11f3aee-78e0-43e8-a702-9419ae3cb2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17777a4f-eb62-4dae-8d1f-a6f51bd470e3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c509b1-be11-497f-b9d0-ca1cff427580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed7aeae-4073-40a0-bb18-4c385fe64df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eaa02a-ff07-4f14-9f24-21177fdee142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "caa52d62-62d8-4758-99f1-088567be124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0280280-9995-4419-aed6-e27a5dd07b6a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7564463b-1668-4fb3-b664-824bb474e268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76632ec6-01fa-4569-846d-e085d64aa3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7acc02b-8aee-4928-a3e9-ec9524a1ba66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8d489b-eb8a-4d45-8671-2dd9520fac17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09063acb-ec10-40cb-840f-74d344e14106",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c220a8-1147-4c4f-b044-4dedb15f52da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebd736b-50c7-4ec5-a710-8e089ea72fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8587f0-653a-4dae-828f-97b2dcde1d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d03e992-7c43-486c-a4ed-2888596c0496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf843ee2-965d-45f7-b31b-c7f5fe1de680",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b209cef2-7eb4-48d9-9188-49139f95a649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cabcd9-a2c5-4993-9fcd-449fd8c5942e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2442ab25-f1ad-412e-a864-b61fcf4282ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57bd6aef-29a6-4b30-b658-77f58d3dec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61816258-704b-430d-9239-c7e7680458b5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9dfa31-5e6d-4870-93bb-278599afbd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e271c5-4e4d-48d3-aea7-438c1cda5d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc0e29c-2480-465a-afa7-f35d2aeb5893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23708ba-9daf-4ab1-831b-9cecd2e301e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7726c61-6e6c-4795-8e2d-ec19d7c2c264",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c2e517-9512-4ec1-9e85-1858d8efbd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521fdc3b-9661-4754-88e2-001f1c8712a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027905ac-db52-4828-8dac-be69b1dd4d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5e9e46-5124-4ba8-a5fd-0092ea1ca4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab75f1d-650f-4cec-86dc-1921efbf50ca",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbac2a8-a103-4e6e-a79d-b89f87e7014d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9bcbd3-4943-4d61-a3fc-9f40adf9afe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db622c6f-824b-4a58-9c3e-b81207dd4024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f88cc2-2567-4fa7-ad1a-92731cafa79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9790cf-0fe7-472f-a311-b3c7b91a8bda",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d469de0-87f3-4d7d-9c4e-cad27ee6045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c2a5de-223c-4bf5-835f-4e20e26a0218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf9bf64-480e-4c68-beeb-7a6b297a84e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c95978fe-ce38-4f50-9428-baee3adedef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077ae950-ffaf-4257-83a9-94e25b003a5f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5790b0b3-8145-4bb6-8ed9-ee98aac797cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b78d826-9592-4f3c-b29e-49753387ecfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a9602e-a4bb-4fd0-b40c-62f2a2577502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d78d48d-e4df-4897-b5f8-5f6c5ecf6de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9aa2ea-a9a4-41c5-b21b-2c24e9dff552",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ff77f-4f98-443c-8ab0-490c49a9b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cc65d3-7d04-4ae8-835b-bcee17791f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a2205-d790-4ff9-b7bd-e5de32284fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54536506-fde0-4806-b60e-1fb1c40631fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009a5148-d156-4730-b0d0-fb89be21180f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80b3ca5-22a2-46e8-9e6c-91a73d831bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e781fc-0a4c-41de-b19f-489d0f5f9bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e6e9eb-2754-4f06-97b3-17d2bc5857e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8f17c0-9fa5-4d67-b41a-75ff42a53dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebf48f6-1ded-4a59-9ab7-150317720b30",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2729611d-0167-4871-ae3b-1a27b8130374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be898c57-6b95-462e-8327-59004a026531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ca5f58-f401-4d47-8e85-77d9127cbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9e54eb-cda3-4518-be1b-52dc59d054ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2590158-baa4-4c8f-9840-e6a484c8fe5a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9ae7e5-59d9-44c9-9b51-26a5a2bb2670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dbf968-7b50-4658-ac73-122ff86b9916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9a31b5-ef76-462d-ad0a-a07f23b1ffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26db4a3b-3197-4b75-a6b8-c19fd78efdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c848067-3fd8-4718-9292-51e2e7b675f1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768b2f12-7d2d-4aa2-9d1c-ff5a48a0b9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fa6122-3b68-44b8-8d22-0cc37e9af72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860bd568-9871-46d0-8b0f-a745649b5fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aadfde-c64e-457a-8ef6-2586bcac7c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5a86e5-d109-4e73-bbfc-92cb52b31ff1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efc5117-fcde-4376-9c18-e3e14cd828cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe726d2-cf6f-4527-bc8d-73f5688068e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73a24ca-a166-400e-a3f2-260d4c200c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad35e30-5370-4d7d-b50d-24ecbcbf02fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4949d0-8ecd-44ad-945f-067c3cc2bcb4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34486aa8-2acf-4131-84dc-09bdd4072661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f821237-73ad-41d0-b097-3a4754178718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1fb986-463e-4c17-8f96-878bfa115d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5809c02b-f0a9-4a16-9ac8-8a842721883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e014100a-8b0a-4152-8b39-1eba1db83ab6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121232b9-6598-4821-a48c-02078260b018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea87b002-b419-48f6-9254-9772bd2d2ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff6cb7b-3c74-4716-a004-3f816b155b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b167ed-0503-4ada-b54a-54e44a3399a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1caa2e-57f4-4f74-b8bb-a7c2d6b94d2d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fb8c65-8a3c-41dc-bbf9-3c0f8edef114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40f3fd8-be14-4af1-9b9f-d46761ddd1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dff562-1ae6-4910-a493-2f975e60fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddd0cc3-da48-42d8-89d4-a2c82570b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bee3cda-d82b-4a58-85d1-d0d8a162aa87",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8deaa84b-4850-445d-a6e8-06ab6e77ec65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fecec1-8bf7-4393-98ac-4b35ff75c430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad232180-f80f-45f3-a5e3-9ca1510a3ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "260232aa-51b5-4d1f-a9da-f755200b0c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b276ef-6c30-450c-8523-cf6129c773a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6336b2-06dc-4f86-a208-fc8fab723900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "054846fe-b218-4871-bc0a-6f0c85cf72aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314b8fed-b132-4325-99ca-b208671129cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "758bb23d-4402-4003-aa36-5e04cd57f218"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "559ec346-9ca8-4770-a645-bd6cc4cc0301",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c333ea8c-b968-4878-948a-818b45646c2a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df3ef59-f042-4607-8cd4-e097d7a8dd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d701c3e-f570-4815-accb-e340fc78f59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc24a8c-f73e-4f89-adc6-0a9720bf167e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6576e508-a0dd-4c94-a20b-34620646e5e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d5b153-7454-4af0-afe4-41b64e999844",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d2f0ab5-c5d2-4541-9c32-b37e3b9205f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dc7a768-9fae-4cd0-8d4f-138b6924e7e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91d7bc74-50a8-40ca-ab1d-d8c7478a1308"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50c5e00b-03b1-46de-bc7b-4068b46c731c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e0af591-674f-4b9e-8546-c46f214a9202"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c16672ef-fa7c-4549-aade-ae5a85defa07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f84567c-c876-4d96-8a22-4b79aefb74a0"
                }
              }
            ]
          },
          {
            "id": "9b277d94-5464-4910-825a-10664efd0c86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00531d66-dc31-4a7e-966d-83cd6f936ba5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fdac5d6f-8462-4287-b811-b5546c90a10c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d2ccc-eb09-472b-bca2-d370c87cb6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0cc0c03f-3bbd-415f-b543-208a06efb675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3a9d5e-3226-4d94-85ef-7ebbacf877b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e80bd2-a81c-46b4-ba4e-d67714b7806f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c89809d3-64ae-4bd8-a54e-dd21a3ee90ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc60774-5678-4b99-81f7-a1d65940fade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc6f976c-6ac6-4f84-bdea-cc7067d154f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1144f974-ce30-4ac6-b21e-01e160614e69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8a18b4d-a79a-4a69-9ef0-eec29a195955"
                    }
                  }
                ]
              },
              {
                "id": "fb0e29cd-680f-408b-be41-4d86f5bb2d6e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc4239b8-5ebf-4505-b32e-b505d0afba12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c25b1a26-1e66-45c3-8583-8bd201c1596b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec828d3b-c8be-444e-a557-c92c14c354dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c235b03-a31d-4e19-8d9d-338e294d7a52"
                    }
                  }
                ]
              },
              {
                "id": "2c989157-3549-47f9-af5b-c74693c06bf7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f1bbbc-bfdb-455e-b411-8da462b105f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f14f1a41-9099-4e82-995f-ef8fccadba1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "881cd7ec-b6dc-436a-b169-f5f1f4f3678c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "282fb027-57f3-4ad4-8bc8-5a86b1d6ba17"
                    }
                  }
                ]
              },
              {
                "id": "7c27825a-3aca-428c-8bfe-98cd5b955902",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "badace2b-64fe-407a-9971-d57bac4f165a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fd04a4d-19af-49ef-b351-891037e7ff45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c6dbfd3-0725-4de2-961a-fb52bedee36b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2d8a559e-f454-475b-aaf0-5920f37d5414"
                    }
                  }
                ]
              },
              {
                "id": "24848d59-9688-4171-b41f-e26304a5a836",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1deea16-6d57-4e69-aaa1-cb95f503edd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "277d4b36-0cd1-4d7c-b9d9-fe68d80b8174"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8a6a1a5-2365-4742-9ab5-3d552600a733",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6eb2668f-4435-4cf3-ace1-393cf95c93f0"
                    }
                  }
                ]
              },
              {
                "id": "802b5962-0147-41db-a761-337d13bd9265",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27f34d01-defa-4c9e-8268-8fd3e3177d5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0971a19-bbb7-433c-bf26-987674b308b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d5b684d-7aa4-4128-be98-236249f49531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec067a7c-0a1e-426a-920a-062b2c8b4554"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2246d049-016e-4861-9f8d-883da6a70de5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52728399-cfed-4949-9f5d-c7585673400d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e068da47-f4b6-44fe-a0d8-fbc388293c03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfb0fa0e-2ae3-4d8a-a981-f366038c1675"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae54f283-8f38-407d-813b-f5ea7b7d912c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "449b87dd-80cb-43b4-ad84-2d4245abe063"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce7ad8ed-4159-48f8-b7f6-42d8ad47bfa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e92827c-e8eb-4a04-8f09-c43100ae8ff9"
            }
          }
        ]
      },
      {
        "id": "3370db67-7647-457f-9390-e6a4d178fba0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2b7ceb47-af14-486b-b562-579c0b4c5a2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49151a6e-a009-42cd-901f-8472fd191b84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71b1a250-604d-4363-88ce-d5525836caff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc02362d-0340-407b-a308-8e56ad5ec8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7419baa-068b-47d0-bfa3-263cdbd7c145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86002534-5238-4f7d-a20b-620bfdf583cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "adff0a67-db95-49d6-9e4e-b7c549252a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b91153-ff15-402e-8f76-4f1c8b62b5cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c11703-9608-42a1-b736-b58da06eaee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc1b9cd-b406-4b7e-87e4-cbe9a91a0576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bd4591-950c-4775-9625-aae9edca6d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb36b98-6511-4030-bd6a-32dbe6a3e7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb3f01e-8014-4e97-b7f7-ab99408cd3cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3634ef4-5a36-4c94-b3c0-e5c994152759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fd25e5-f953-4fa0-ba27-7248d9fc3f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4396cbd0-f19e-4d70-97ea-817a84b77991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50b261df-279d-4688-80d6-a2c5e3441d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf31c5a-ecb0-4ddf-ba71-f68dd11b5e06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8114d5e2-0c5b-452b-9b26-1c2d22f6f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1792f01-0835-4a2f-b76d-e54b9cf5fccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a628f821-2aa2-49de-9592-cdd534408abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f2d318-7d20-42ab-8fd3-75591aabfafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f98a72-cf2b-4c3a-a12f-5821cfe6e106",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea6c9eb-95c4-4084-b687-6102b78b5157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d06423-339f-4d0f-92d2-1962d727c52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a54e068-3b0f-49c3-8612-eab2564df3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddebc0f-27d9-41b4-8350-82d3160c6eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b45f9b7-3a5a-4356-b3dd-9369981a24a3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12512f97-ff54-444a-af0f-4ab057c61bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59abc97c-53fd-444d-b7e8-71cbdf8720ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba63d23-1688-4058-a507-344319fd85bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9c36cc-52f5-455c-b155-e6e95fa6ed03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2269257-e6a5-4887-b1d0-23ac250d5c46",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ec0e0-4985-47cb-b187-78b89530e897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349572ce-46de-4d58-8203-4f33f318ef7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cef1f11-6518-454e-b369-eddad9d44c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ed67b3-6198-428b-a1e4-d5d54a9c3dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589be039-c362-4b37-b785-ca0b5ddf84d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26654f64-5cb8-4bca-a357-4f66efa95937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc8de03-e91a-4c23-8f85-3d28c5ab1052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32116a29-888f-4fec-b413-ee53a34d1a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d027dcb2-7e0a-4244-960b-ddd4318cca83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5cdb55-ab8b-4573-bb00-3de15764a845",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7ab91c-f0a5-4319-a180-35fae1de1872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aa57f8-93ee-44ae-9023-846928918efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bee977e-80d7-47ab-965f-fe99109a4e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc91403d-e5d8-48c6-b40f-e62b9a853e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f52062d-18bd-4f5d-80e4-861d98e20344",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72eb640-114c-4fff-8770-aa7c83365b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a43f03-02b1-497d-ba97-3c02c6d6c628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c4445d-b955-4044-a2ce-82f0d4a83774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1f8fd3-f1ef-4e9d-8522-4c1e12cb6de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2deee9-246f-4494-8c75-d730fec9c171",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082dd7bb-f07d-4e79-8f2b-a399cda813ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd05e9e-37e9-411c-82f4-88a5d7a35a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa18737-163e-469d-960c-972c37a05231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e03949-aee6-4cfd-829d-68201d21a1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e711d5-5e51-4aa4-8f03-e790a00511b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743819f6-d656-4ad2-9f26-9fed97c94785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde473e3-5885-4a61-b08a-03ded8ae7402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558bea39-8c13-4c75-8428-8e687c233f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df119040-c00b-4618-acad-911895dc1b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9991192e-9bbc-40f6-bb51-c25380ad0f30",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c933b22-f86f-4b15-9f9e-66e79e3d9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0783d691-fdd6-4118-a42f-5afe16f8fa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a5b64d-af85-4535-ad6a-e78acb43c36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a935aae-8b1a-4768-9371-ba45768725c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2289c697-9992-4448-8111-1de2eca911c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d90d89-c134-4881-9021-6c75ad434ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0035ea-fad5-4914-8612-b74b348598be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724a4eb7-4cc1-4c32-9933-7940b0d2ca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9ed910-6f1b-40fb-a77c-143ba44beea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1d6fa9-5fd2-4678-a1a2-cbf61ce41817",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9be1a70-2a93-48d4-8297-22602f3c71c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec271f9-c395-4beb-b8ef-4756492ed8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6685b4ce-cb55-4adf-b259-fbf1a0576343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb0f0ea-eee1-468b-adf6-3657a90ed315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f10a2b0-5c2e-4ebe-9637-6a0ad8cc9e9d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c8f0a3-f93b-484f-9d16-7f43a7ca4309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f42a5f2-12ac-4392-a38e-e7be00b96414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc78e8-712f-4dcc-96d5-a17860c3ed1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "447b1ba4-d7bd-4be8-acdb-f13f88d86eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e27eec3-0493-440e-98c4-1b6c76d86b96",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451e684a-a6bb-40f6-ba6d-7ee68cb6b6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cc5c11-23e2-4f94-85a6-b866af65f32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177d47bc-7b67-47bd-a9f3-a0bcfee1557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce23a07-753e-42b1-88ec-2a40c60b144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f654cd3-512c-4eb5-ae1e-6c856574a6e4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fc9e31-d673-469d-bd8c-e6e9ba08cc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d75fe0-2c35-4fcb-b69a-7c72f3a67731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d84a9-190f-438f-9000-2fd2607d3032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "019e0025-69fb-4c88-bdd7-53c6082b122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f40e88d-0542-44d8-8092-d65121f9c790",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9b5cf9-4cae-4809-a6ec-bbdfc8f941d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286842bc-1334-4b34-9144-acb0f95d370e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e2ce9a-da32-4794-bef9-3a44793e9aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9912a74-26a0-4d99-b1fd-650974e9d78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22efb01e-bd1e-45c9-b2c6-af38bd0477db",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffb12e7-5f11-478e-aae8-a69e63bce90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637021e1-c5ac-49c0-a8b6-e05fc2e3ab8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0749a7-adde-4ec3-b64c-08fd26dacc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29010417-0657-46a0-b47a-996eb64de9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6416e6-26ce-4b11-8671-12a126a34dd4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79de3fe1-42d9-4d9b-b8d5-ff7579c1df8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76abeda2-d085-4e24-ab0f-4d452e3bc779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d3f484-df58-4031-a209-c90f007efd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb81582-af59-482c-83db-60cce916080c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4ede09-3ca6-4393-9ba6-c2ba506c5fc0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87292443-966f-4b28-bd1a-eec672b1144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bb765c-88e3-464e-a1b5-68ddb37e86fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba63af5-0f2d-4533-8131-71ed6fd7dfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdf5507-a911-4297-9f90-1bdef4924691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b966eefb-5154-461b-8404-1c7a43b00586",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f3abe-8a3c-43d0-89e4-3485b9c5a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0b37f6-e066-4dac-8846-3219564ec6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab5b6e7-6928-4070-b6b1-6a7b31caed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8eeea4-bb67-4858-97e1-01e085776b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026ec0aa-cad7-44af-99ee-28f7731fa819",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741a8ab0-5db1-46e3-97c6-d23f5f94da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72a3e83-2052-4900-8963-ce008cee1512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef92d584-068b-4b90-81d4-bb5ad960bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dd234b-df48-43ef-ad53-ea3746d57a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4606eb-abc3-45bb-a953-bbe666dc116a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab87d2e-bffa-48c0-82e0-4a205eecc82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb5d39f-5756-4e3c-8592-78413eeb5035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640f7c90-7df0-4998-a74e-3c99be91692d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb97417-dcd3-4e6f-a4a8-0748ca5a1c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a8ff3a-3647-405f-8113-eb36ff387c56",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9d421-55c6-48f2-a8f4-44f599813632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cbe25f-271e-450a-8ee9-187f1248d5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c81b7c-faba-412b-9765-fd29842007cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1574f0d-2f7d-4126-9418-a531ca09e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb334e6-e829-4cc1-a6cd-5b9b33772e04",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba086652-6187-46bb-b59f-3ac76e6a9b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0052d0a2-800f-4be2-8b05-0831695e362e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd154c-0340-43d8-ac4e-0b1747b805ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0602897a-33df-46f7-b91d-64938417d07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9901dd-9838-4482-a926-2789898764b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f11a789-022a-4099-9409-d278b9244a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819f3efe-a21f-42d9-9100-83a9179cffd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3645c9a5-7234-4b24-81d4-fce0367b7dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2b388b-cf34-420a-b8ef-8dda45865035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea35fde-5325-45bb-b14b-aeb916355c8d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f324dc84-ed2e-493b-9f8f-6d8fa5eb7415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a4c18d-9d69-4bf2-b40b-4e19c9e331bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65fdf88-f504-4419-acb5-e35ef262ee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "622e60b2-310c-48a5-a0c6-a90e89d604b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96685658-179c-4704-9734-de2298e49173",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20824ab8-d50e-43b6-820d-8717083020b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fc1047-5846-4d8a-b888-4e6628e736c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa024f2-9136-442d-8de1-c70477d87efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce80694-b7fb-484b-9614-a41f79e44daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3813eab8-5777-443a-a8e7-43c858964d6f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aef407-c014-467c-9aaf-400cec88f42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728d79ef-4bde-45a2-9f0e-dbdb144bf620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0541f766-fff2-429b-b5f3-07e6d2c3b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d958eaf-27f8-44ac-aa86-6ef07ebbb030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941b8f27-2ea1-4e18-bd69-819d0eb43797",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335b3984-74e4-422f-9d81-56e6ebccbeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c5adb1-13c9-41d8-b376-d81ad9a95bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999c8c8e-9d93-4406-952b-89ddcee8694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa66e4da-fa63-41df-9874-937e71c9bfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf75260-c375-49b0-8399-d11254b9ffbd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7671089-f37a-42a8-b212-71191c5c89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ca8d12-ed4c-4c97-8741-e57dc5236c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa8047c-b769-45ec-a057-a8f579c22fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c196cb57-7f2c-4569-9074-2a4fb2cc2bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdecfb50-a8f9-47e2-966e-29572600f797",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643be9a4-6d20-4016-a721-11c1704b1ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb9fc66-f938-40c8-ac1d-5b09c972e664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7336c315-469a-4b76-b350-b80feada29cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6512a6-9da7-4af3-8e83-8dfe620cda17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b2566-2d65-4c37-945a-5e7cb2d0594f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a12182-8963-4720-83ef-0ea2a703f6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc51d0c-4077-405d-a4a1-34a51a5f4dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67b3052-1249-4789-9d91-40731b16f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659bfb21-5e61-474f-a265-20d51ee005c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3428fb-9ea1-44d9-91e4-defb6c9a560d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b2123-f456-45f6-8837-22b75d41fc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e603eb0-82a0-48cd-91f3-bd4df99daccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eb4093-d3ed-4cd0-8f76-4532701d246e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8980ed-32f6-4da8-b54c-b5248917db74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bac5c1-e524-429e-b846-5bb655238dd5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf84690f-7049-48c0-a3e6-af9d8921b7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2a80e7-6fec-4099-b0ea-4c9e59aac69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72af51a4-c055-4bd7-bf42-53e732c5baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "598c3a07-0077-418b-8910-a4cd0e14f8d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09e677fd-e0a4-49c5-a959-a6bec576311a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2c2970e-23bb-4772-aae8-9cc048a4f1a8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0ec3c4-f1ae-4f35-b07c-1a82f84006d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb5eefb-4a8c-4838-8f6b-fd55fe90ce13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b0aaf-939d-4839-9227-7e9e92f3281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79fc4d2a-c9c0-44fa-91ef-b64102b63e3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c02eef4c-c04f-48cb-a793-c299c595d916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0d670fe-69cc-4647-968b-1cb23c35470b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9baf046-0b0a-4324-88ee-32d9b61bd3b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cfdfa12-348b-4d39-9b64-d444e4c9a6d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1272345c-5e4e-494c-8588-c38d7dcbc882",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3e627a7-29cd-4661-ba07-9b354fd67122"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "854fcd7e-4356-4419-b9e9-f0e6825e5a4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b0ffc74-5be2-4480-af81-2a961328ad2a"
            }
          }
        ]
      },
      {
        "id": "3dd288dd-5088-458e-ab80-dd9ecb357d81",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "78baf534-4c05-429b-b130-88c5e4b7bc5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "294ef62b-e63f-415d-b896-dfe57ee1b9a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ddda4c31-c413-4b61-bf17-2f76ba59f19f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d975c6-f347-4664-9bda-ba1393512f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ded09d2-f6a1-4098-a4a2-d920ee429007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc7be53-6cb7-47b5-82ea-fff0ce105118",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8363e614-91e7-4292-bb1c-21ad452d3c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3675a85-d523-4346-98db-47b98596447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770b8286-6f06-4991-b6b5-7c2adb016a7b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f6c189-fde2-4565-b715-cebc37729559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6289460a-b6e5-4d78-9667-7fa80f5b8e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e58910-bbe5-40a0-85cf-3a94fb0d3779",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264be7f7-98f4-4ae8-b7cc-84021bf611fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dd2d8e-0ae0-4bff-97bc-0ec49c5c1ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c4d25e-d46a-42e0-9689-dfdf5c75dc77",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9570717a-73c0-4cd3-ae18-bf842fdd66fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9737ffaf-5032-4e2c-90a3-c3298184810e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15289f6-396d-4e93-ad2e-81ea784619c1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622ddabf-67c7-4d0a-99f0-6809e2da8418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626165b3-783c-4860-bde4-b641cf7372b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ae9f73-f012-494c-ac10-30ad93987660",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01c0869-74c4-468b-8bf4-2decf489dfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c484be0-d095-4c28-a7ad-adadf0f59412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914da14c-e17b-4441-bd68-b34429c910d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110b5edc-abf9-4bf5-9eb9-7a205ec22a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650c447a-bc01-415b-9418-27d116a72e11",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7237add5-8b1f-4b42-a3e8-e5569c6ad354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514523ba-f079-400d-849d-2285a8709871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eafb1bb-9117-478d-8b4d-d18ac3cd83ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b24e16-ab8e-4da6-8f58-719dfbae1137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a22f9d8-b0e0-44de-b64c-b9965ba72a1b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e34d4b-42db-4135-b448-1c864f4af46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867151f1-b22c-481d-9d8b-8c3af761ef44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdde315f-5b9e-4c39-a67f-e454ddd6e3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb19425-795d-4f5d-a15d-2e47fb11d106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d59303-c68d-49e1-9ad7-d832c395cf88",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578e604c-7725-45b8-a770-df2b780d531e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "628dd368-6d05-4ce2-8453-9ab64b21f012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5587c83-6064-4640-9497-64188da4c311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da63fb8-453f-4850-bb3c-5b876dc9b842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9985a20c-9040-426b-b94d-ade0b0daa2f2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b4797c-8008-4359-b2b8-ab0472e7c5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b103988-e067-45e0-bef3-b84c4f3ee0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd8a0d7-e7b8-402c-88c4-16c0539cceba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671f689b-f384-4fb7-bf37-50003ac40ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e167d00b-ae04-4e13-a8c6-f687f79a4870",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed4b5ff-68af-4b5a-b780-014417031535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6083ed-21c1-4714-b3c6-61a48040f95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094b14c1-1616-499b-98a9-63cceadd3703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87166305-086d-4c4e-ba62-11f4ec363ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab94c6e-f2eb-48d8-98fe-daa5d6e36d3b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2ef138-6210-4bb0-b169-218350cb0638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1aa7965-b81b-411d-abf9-4532e7c3953b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d0149b-c6f3-4f09-93f3-33aba217e2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af91939-b07e-49d0-9d4e-c81c8dc11c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d2612a-c7c0-425e-bf75-1d6f244ed487",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf694903-12cb-416f-aeec-af2bcc66257a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696c77d0-b236-4278-8605-164027dd3b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a775ef-d370-4fd9-8d75-7eb35cde0864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad886d5-7cf9-4d6c-a234-dd7f866d836e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53acc091-d5fd-41ca-b8f1-c94b1b8c59c9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878f06cc-c855-4465-a281-50748ef0eb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6c0c92-e3cb-4828-b82d-252df3b9d76c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a4c60e-4327-4d87-b276-5a1e15d66f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ecb5be-a61c-42f9-9ca4-c54f040c8447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d204fdd2-2484-4d6f-bc7f-9927391e7100",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74abe110-dcaa-496a-9327-9669a3d3ac5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb47e621-2f70-40e0-a811-57ad4a164b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9676e1-a387-4586-989c-a92ca58354db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5347099e-900d-42f6-84d2-2a82861c4c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf5729e-50b0-4492-ac2f-1b6bd5d56173",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063dea54-2429-45d0-afc6-9a00cafcc253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dcf185-e6de-4bb4-bd54-d93f5d8b2a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d05b37-962b-4803-b824-1b32f3290b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6673ecba-3525-4b31-97ac-469ac5448a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd9d998-e5e9-463c-9002-cbb31a8655f5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830f5288-7fc6-4937-9097-345e1c2b73df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee4d3ee-af26-4887-bfd8-b085718022d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80607d15-ec2f-4b8b-8614-9cdef0b1e035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bacb2af-ef85-4f17-97b5-aec6494b4fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356a66b3-e093-4cc1-840d-54cdcb57684c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73f6c28-c374-4476-b9fc-7f3b9eb6e9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b035b3-37a3-4599-99a7-e80f3cd911b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7a6ded-99ee-44a7-b78a-7407d21990b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c5bf2f-6233-45e9-8332-00f3d50d4130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0816fcb-db19-46f1-9a8e-0b2cba5c7dfc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0921dd29-8ca7-45f0-8a0c-9b7f24a3ed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62af7d4d-be87-4ee8-94f7-0393eaaf1056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227e5322-f25a-4573-8dc9-53ce5645bfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47f2d1b-a8ee-470f-91c6-21ebbfaa5f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f0514d-2cf1-4849-9034-7511fafeebe9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d786faa0-034e-485f-ac6f-8bf0c1fabd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa717be0-1056-4855-99b6-1e5b04b304d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7a432b-07e3-4c86-b55d-424fd928e081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1947ae-b45c-42fc-8927-42d354d5e743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a20cf9b-d5da-454c-858c-cf97ac3480a5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3515569f-c527-4920-9f64-1a6452baf4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d25bec-9b99-4964-aa77-4d969a4edc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d5a0f7-646e-43ec-8487-e558a4d6ff55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db222da-7d0d-429d-ab67-095bc09ab470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa99aca-a047-4b7f-b3cd-bd08bb4de7c1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d80812b-aedf-42c7-a5fb-093ad29207d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2d4cfb-2536-4fe7-a970-04fbc98d1581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a71520-a5f9-49b4-9f8b-e01ff709d8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785a9f9f-0d3f-44aa-a7f3-fea36157d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d064852-232e-41d0-9494-3b2305796918",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1685491c-b599-49ef-96dc-438348f97c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33bd2dcd-fb50-45df-a7a8-bf24fb0790a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc4624b-7c3c-4962-8455-7b44e9dda990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cb983c-4ad1-4908-bf9f-b0bde972c33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f11567-77c9-4e3b-b896-7e0581925ba6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a3f1e0-12ee-413c-8842-249005706baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf044394-e38e-4f87-abf8-df1cebbd08ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4974833-849d-4196-9564-500c5cd50f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38bdd12-5f88-4691-aeca-eff740af006f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5743375d-6697-40ca-b55b-f22a89f9e1f3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddffbf5f-6e11-49da-a73c-d1e855dc715a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708f7711-03b8-4dc9-b35d-086fd039560c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b400c6-9361-4f25-801a-e3193922d579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d080fd-47da-4e15-ae45-9912456c52b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f53bdf-736c-4d88-bcdc-f5bb57da3f1b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52be215-77e7-4297-bfbf-84e74a85321a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a566977-7561-4533-992b-957daa367c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f30f41-8f37-4223-87da-aa33b2492f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68da1a05-9078-4763-aea0-e0169ede9b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf719ea1-532f-421b-8e6b-ae73fcd7067d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa8ab16-9ff6-4cb0-95b9-e4c17a85f22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804fe513-18c5-4b02-ba33-1ae678722c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ac016b-c07e-48a3-bee0-0cd97fa12ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6ca832-e667-468a-b9f7-d5b2c5930f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cdc919-bc8f-49d9-818b-613c0cfdcd24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67782aed-d363-4a7f-9cf5-7c611eba692a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa12d0d1-996f-4417-997c-d14d8241fcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99c6405-3f71-4758-8ed3-c77372162da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d082e363-e35b-4afc-bca7-27ef70f6be6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e48aeec-7f0e-4380-b894-734a64a9243b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad3ab97-5dc7-454d-b3b7-e63a232e92ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b51bb9-2ecc-43f4-a8a7-7296a14639f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242a94d6-d49b-40d8-8891-b684cff27e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2281aa3a-d7f5-47d3-bd4d-2d0e6aee6d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cda898-af18-4889-87e1-0aa866986c02",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f5967-9b34-4bf2-bb1d-ff9dfddffeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b092cd-55f6-49d5-b883-1dec1ba32bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54730003-9f2a-43ae-9781-fd68aee9e721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac64fabd-49aa-42ef-afb9-7e015b76d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a07fd-221f-4620-90de-0a08789d2388",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c600c088-d6e1-4cbe-a5e7-19ed07bd2e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae8a7a9-4dd5-4ffb-b5ae-afb18e4af8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f76fc6-da02-4be8-941b-deeb64e79e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb11b89-d1f2-4b9a-be7f-1a9e7d28b483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b865c343-b6ff-4ab3-9995-39de1309d9fd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6039821e-e782-438b-b3b1-04d2a22e0faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "654f2d5c-d6a1-496d-abbf-dada0428595f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98124223-7d57-4b0b-ba7c-847babe9c45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fab533-de9d-49ee-ad13-43e9d0c286ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c96417d-e07a-43fa-9b6a-0fbe0530bfba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f7f5f9-6cb8-41ce-a47a-e84767e0f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f80db30b-3767-48a4-9875-c7912bdb9d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4643e1c-8b95-4480-8b0f-dd75abf9546c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4235d9d-a5f3-4c27-8bfd-09c53f761de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf2f16a-b907-4d94-bbb2-b48b0427d88f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5755b9-2133-4f21-ab23-8c75c729f28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7031dc1e-6033-4b68-b852-39b0cfb78a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a527ff2-baef-42a4-b97a-b789ad8da02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c84df4-8306-4567-85fb-65e6ddf75bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4372453-da35-4549-963a-5d4d7cd08a40",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5766b0-fa72-4fe2-b349-d35bd02972da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a5b6e7-3e9b-4745-8c9a-c0ede994b646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff7a540-f5f2-473f-acd2-af514331d149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2818f6-4fb2-473d-b109-d3d24a21948b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d01cd7b-c950-454d-9d73-e9c7c4a2a536",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bf97f2-3724-4476-9e33-ea82caa72393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a6fd6f-e277-4741-82c7-1e6a060c7fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d280e-f18a-4ac7-b295-6e20b355e454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a109375-d82d-40d5-8de2-428ce484b084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97c5653-fbf0-4bb0-a6e1-314dcca4df81",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d8c63-a021-44ed-8251-83454fa360f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf04ab2e-e03a-476a-af8a-bfbc5f1319b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c78283-94d7-4757-a849-25eb0f0f5201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4a8f7a-bd72-4160-bf54-ee3f145ac2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754df76d-5164-4aae-b304-8d9b07be327a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040ac4bd-9e06-48b3-a339-ad5a30c650f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a385615-dd46-4048-b438-3f364de9025e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9507a86c-d5bc-4419-9b56-839600adcc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53193a4d-a7bc-4ca9-b39e-afd7508c2e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fc10ac-5101-41b6-8923-21667afca40e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f5f425-e6b2-4528-95aa-6b6d6418a0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bf21d9-9d0e-4648-bea5-5ee97d8d42ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c864ef58-febc-4f59-bc22-6784f420b2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e884710b-4a88-4260-9001-f9316a67af6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd51f79-a1ca-456d-aa7e-583ee1473c7d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e42ae1-f07e-4375-b16c-852065b43d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ddb0e2-9165-4610-8601-d942cfb3232f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb48180-bd7c-405b-9a95-7c6dd8cda05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f4070c-115e-4990-97be-951d846ec7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32184ef-24d4-4b3c-998b-448d48ac27b5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cc696c-6201-46da-abc6-d103e4b06ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf390c27-5d8b-44d6-b982-5eb6c174d98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6677b7d6-e77e-4e17-837a-237c424e5d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e3c4d5-b5d8-4f21-81e4-0edb60a5f64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decea804-ed4c-4811-8d37-ec4ff746c681",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f31bd5a-b747-4ff3-8f25-e75bc8ec369a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859fc25d-50d6-49d6-8e51-3b619fb83253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1723f4c7-4be1-4fbc-8330-83836c2a84b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dad8937-d5c4-45de-8bd8-59f1ebd0064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b921f3f-f0b0-41fc-94e6-4dc4f31ff80a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f650611-5100-441f-b8b6-76bfe71a69e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888bff03-c1b3-4b58-b7a1-fdacab706dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969d0a7a-831d-4b5a-bbeb-29e1cde8cb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475d290d-0bc9-4599-9f64-2b739289be27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df033e02-b651-445a-91b9-26f2fb41f40c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be82c8a-e94d-4718-be35-cfe0005f8aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfa7e2e-98f0-4dbe-8a5d-384f66d4b804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1d6b4f-201c-4c79-ac4a-3559f1f1c337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a47f8d9-f4f8-4c4d-b496-42e06fd970bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e32fa59-1d81-4c2a-84a4-3682c0ce35ca",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b53046-733b-4da0-b3ee-b0f8948a5cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ceda278-43a7-4054-8a41-939580fb1395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13aa987-e81f-4b5b-a363-f2ba47662882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3635976c-47ff-493d-849b-23e494e92bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77faca0-0f4f-46e3-a3e2-cd2fdabeaeba",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e61965-94c5-46bf-9534-f2d51f1fa4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c339741-609a-4690-a7f4-44e0a21ff7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b1540-35e5-4199-8384-07db9e60dc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae6f621-02b2-49ac-b8cf-2ef10edcb04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab41238e-ea82-4ae4-8baa-a28b5a9cc35f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57419ab7-3793-4595-96a4-22d9ac59302a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b09dcbb-1dc2-4116-af45-4e46e42856a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e713315-f9ac-4c43-9e5c-0d0db204a86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18651c5-aea8-4220-b2ad-89d5f329e6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2b1c1c-edd4-44a8-98bf-e87177f94b70",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c9ee58-fcaf-41d2-8d6a-d6490309b085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b656f6-c3fd-48be-b0ce-aabdac3d6773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96d234b-5578-4b78-8344-df2a28750e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63278a69-e9e5-48fb-acbf-cd9deb4d35ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05efeb66-3d51-4456-919b-bc283d183fc9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ac22c2-e213-422a-b0d1-2063a0726a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b84af7-e7a8-4cb3-9c1c-e245874b410f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2b58c3-e692-4018-a751-c92cd643c0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cf8b2c-5697-4317-a00b-38b35b5badf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e9dd89-9925-4f54-9f0e-ed1d4f42547c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4330be8d-42c2-4e01-8782-37173404e657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a18930-668d-42eb-9094-3d7c83b95479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4680e-c986-4fc1-b6dc-3a55a321adf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a609f9e1-e7ac-45ee-bd59-f131fddd0d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3f1165-a104-466f-8f6b-bf5bc748565c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e218ba3a-07b2-4e51-84fa-d5d7ce2da3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618c154d-0fb5-4087-968d-4237e907fc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa5608-1d5c-4759-9b41-97b842359f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f466db5-fce7-4fee-a263-623cd1ea95ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eded8c57-a50b-4652-8c7b-dbd481a532ef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5790d75c-8284-48f0-a2fa-9e5a073d12f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d1ffb8-b1eb-4405-a702-e757bed49e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00048c2-f882-422a-91c8-ede324623172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f016dd3b-240a-482a-a71d-1f3f7d3fab33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11af42e8-796a-4724-b557-61aa0a444cb2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881d0fe4-a536-4db7-acc4-43e71e59af9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14f2b76-6444-4732-b616-34f863d7957f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32803dfc-eb86-4287-b007-e274db8ae891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d697f6fc-7a2c-45e2-bde8-16aa8c5d13c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd8503-c421-4373-85d5-26370e49d694",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fd5a03-3e44-4361-ae0e-cc1912291b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7facc49-079f-4fc7-bbe0-1363295911bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db62786-4d67-45d5-b39c-ce717966ab7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b76ceb-a8d8-43a1-8e68-d4a8238ef691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40375142-89bb-4eed-8157-717ed103a013",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ecbad0-234e-48dd-9749-f3ce9f6e73fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99418adf-3072-430a-85a7-05d3ee0603c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd7133-09f7-4d8f-b3f2-28929baf3d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb65be31-bcee-4c98-86bc-f040d4647832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693ac88a-4c3e-4375-a85d-5866a4b0eb27",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b603e1b-7e9f-4ca4-b770-a89abbdf383c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1fc80a-0cf1-4232-82be-cb17a7ba50a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5127f8-710b-4994-8ef8-2e1becc08c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16ef6ab-e2d6-4efa-a1ee-3db42afd0150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2476d73d-c9b8-4496-80c9-967194e18af0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1efb1f-8f04-4bca-969d-17e489e74cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff7094e-cf5c-435f-81a6-3a06e4902d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a241a87-1fad-4387-a566-4a72d02d7c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195cc698-46a9-498e-a751-25b6bc65124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0ae550-1112-427c-a4e9-355d6fbebe69",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de390bab-c689-41c3-9598-85a9b70a043a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86a4b8e-1e4e-4770-ab8e-57f05649adb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b733409-b46d-4d25-8867-ccf16ba07f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de59da49-7bdb-4868-896e-81f38a34c461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebbeac3-f4b6-44cd-b895-81acfc672369",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ddd85b-44a7-4156-8618-2ffe123c468e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd990d6-d924-4ec0-b7f5-2ec999ab0d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af6e514-da4a-4bf8-bc13-a2d34b20e15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fde40fc-63e5-4032-9456-e1b0daa3825a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25489218-c14e-4926-ae79-794cafdbf11c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efe11bd-3071-4755-bac8-c9d922a2e586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1886f7c-db07-438e-b7aa-b04b52d94ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e8fe1f-93e2-41c4-94b5-47032d0f0afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa42794-fd4e-4e5d-802c-1b05cb5cb50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afff8fac-de9b-4e4e-b515-bb8b8a4ebd3b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4f1129-bc41-416a-8d42-e0fa5ef46e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fd566f-0a6b-4a14-a558-ab97bc27da99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bc3cc4-4192-4490-92cb-d410b55df60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ac12d0-cbcb-4751-8470-d56798b2c5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68b9cbc-8a37-413c-bd4c-2568bea9fd3c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6405e1-e744-48ef-a594-19d643d4c741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf83a575-89bf-4e6e-b572-0a320d70e860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea27656-6b99-4d4c-a58d-2e7d619e1a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2ffe50-bec1-4d6c-973e-aca31994831b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5500565c-5378-4023-907b-09fa6237a1f2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df709923-e64d-43ed-ad67-42e85511c362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2ebf2c-83cf-45fa-ad6c-dd1a66ebf1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad1a0f-955d-47a7-8423-c6c139b0e21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a5078c-f9b2-4e4a-afb9-ef08777a0c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beee547-6eee-461e-b86c-f7c496ed5a5b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca27f22-bd14-47ef-9265-2f64cb5088a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b794d00-b5c2-49df-8ebe-f787e4cbd37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c08a18f-977b-43cf-850d-a85211e86a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b578ab23-5fb5-4072-abb2-7b4c1a08baf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81988d25-a23e-44ff-ab3a-96a0a46fb027",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cb5eb3-fd9b-41da-a25c-3b51ca34a62d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7c0f8e-8802-4e48-9d20-647b18ad480a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc4a6b5-3b65-4e5a-8a4c-b4c8a42eca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383d4da5-cdd9-45bc-99ab-860be3b15867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac6363-87cb-44e3-bda8-bb9ba5bf3772",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235052e2-17b7-4091-9666-eeabacac93ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131a57b9-93d7-4ce9-9a5b-896384d6b3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5d92d2-1dca-42f3-852c-7d2e3975e933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab5d1dc-b019-4827-ae1d-e2eb1d82bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44694fff-a3cc-4b8a-a7ae-5c0553644514",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b32a6eb-019d-4847-ae28-417d2fb4f466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5860f0-d83f-4286-8be8-87b91bbd69e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1032b85-d060-4c86-bfb2-1bee1df3d7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1453ef2f-5c48-4c53-a2e8-c81560579093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a6338e-0fc3-45d2-99e7-a128f58fab32",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c51aba-bb83-4c5b-8363-073b0b671c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e300b7-5aa0-42a0-9342-cc2596ace7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b08828-f71b-43e0-b229-53305b7273be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950ff136-7782-4bae-9d2a-67068f903247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d482f02-f74a-432b-85d2-0fb0c97a0e8a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe779924-d5bf-4588-bac8-acddfc4f39d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f6ea13-b599-470b-b61e-75db10406cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35759ccc-0915-4ff2-881d-132b4dfa6ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ade71a2-7c07-48a2-b6db-c399459d7039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f3850c-83ea-4406-be79-b3b15c655ce7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbcc627-9fe8-4247-adc6-09739ac591c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a3bbf57-f2ff-4113-91d0-596416c80f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e947bd-0614-4c20-b0be-5c99f91c7099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9365497-6812-44ce-af00-0557caa939d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f74e9c-2d36-486c-a1e6-99e51fa1f503",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68cef9e-cdee-4a54-b034-c821ac408d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8f81fb-ef3c-4434-8ed9-b1bddcd4192e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31b91e9-5e61-4db5-9318-828f737bc949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846c7ead-1a76-4adb-b78c-4fdf5b917894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69591624-5a85-4e25-a8ad-679dc738cb9e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e211d2c7-651f-4495-b4ef-278dc81941a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d7183d-de38-4eae-b1ee-f29da1ee21c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673df129-3d2c-4a6a-8c0c-ca8547bc8b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eb78ad-6a23-4eb7-a597-e8d9183458bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4267e7-08ac-4853-b15f-7351293739cc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aefe93f-762c-48ae-8418-8839e8664cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379ed241-873f-4890-b0f3-0b8975601d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012be02c-c5a1-48dd-a313-b9f40969c5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899549c2-5a05-460b-871b-9a3091ff1338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add53d94-284c-40fd-a576-8694d3b2a78e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918ba0f1-cb69-4e2e-a03f-8ef949a20c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf7d5f2-6aee-4f82-9ba4-c0487d890e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2ac61-4eb7-4724-aafc-d10c1ecbf064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6152091-f2af-41c0-997f-f36075477e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8b831d-ebcb-4e17-a61b-f1bd2a8ca8fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874609af-d3f0-497a-80a9-00a9184a092c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5545b2b1-b130-4546-90eb-eb5bd979e097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13431c40-4d27-44ee-9694-d0c02e4835c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f51ce39-b7f9-4b09-afc8-404f62545bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0a4b2-fbf9-4da9-834e-7bd0eed7f9b7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dcd3b1-e087-4d9a-aa4f-d20454c27742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ead0546-b84d-40ef-8d6a-63b10bf662ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a2358d-f1ec-4f87-a703-a5ec9818cb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef61658c-6165-4efb-b048-2ad322232103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec2ed51-356e-44a5-ab34-0491a44cad06",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0c6c52-8760-4428-9a53-fc5dae10f001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3047980e-36c5-4856-b841-02d0830a0383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db870928-7ae9-4d6e-8704-9873e3d7f074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c397fdff-bdc4-48aa-bf9e-dc6c4e6b8f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11378219-d6cb-4bcc-aa63-d6d0aa1583b6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd349d2-dd47-4c91-b40b-6c627582137a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a5b162-ed3c-4de6-95bc-0f21d23bb04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb778a9-f0a1-4177-bb3a-5e1a12d356a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50654be3-c431-46b3-9e90-5e4d1a67ceb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf3cebe-a49d-4566-9866-d4086b3509dc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54d6e72-b783-4eaa-971b-b01f42d6f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e867f74-32f0-48a4-8928-279500f7ea23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f632a186-107d-446d-8b9e-c9a9fefe06a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a118d77-a17c-4bfb-83df-1906e81feb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7419a3ed-4726-4a53-b190-a8520230933b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2a9c93-09be-4fe5-8ee2-a57c381aec6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66e8875-b5e3-4520-afac-1c700feb11f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336d7cb7-520c-44cd-9be2-adcd62064deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb6dd54-376c-489f-9489-7e4761166d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8e3208-1fc0-4225-a42e-d47b85c0963d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d2784c-0961-41eb-b14d-afb0f4662374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26ae2ec-3377-43ac-834c-5f59277d2d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70897c8-39fa-484b-a9e0-3d3be74fca38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13b7435-6ba0-4ac5-bf03-6039875a2041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c8941-4a9c-4e54-bf9e-590f0a906b39",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2282c8fc-a5f3-4996-9622-2644ecde251b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b66a9330-0ffc-4f69-822c-0c2904a0391f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7816163f-1443-49ff-8c5c-93e7307127fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5120212b-7bbd-4647-8067-224d284b71d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e246335-b961-4c6c-b11a-f5afbc47a2ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84ac11c-8abf-4e66-a645-c828b4db324e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2b3e79-0e3b-498b-a6f2-d6010907f9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc74ef3-0bb7-4e98-b8af-9b19b77a687e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc202907-d93e-41f4-b4cc-2f5840f4b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fab04a6-322b-469b-90e7-67c67f8531b7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96e356c-b529-4d5f-93fc-3fd7e15182d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c440121-4dd4-4843-928e-4797c3b7b014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38799b8-b611-406c-a82c-4c9aa0c4d88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09831dd-79cf-4896-b5ee-805cbd67f338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37049c06-6d59-4799-844f-d070c167ce6e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1814b978-e5da-4d1c-b91e-65c2a51bdee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d1e4a4-75da-49e9-9635-0fd04c0cb60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be6178-a4d4-42bd-995e-623d27c079c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42fe1dc-5add-441e-b013-c2e566b6d36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8030f529-e463-4dc4-a00e-3a9b0cde26a0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14855745-67d5-441c-bbc7-89799fe1e049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d892d1-6b4c-4cf6-990e-f24fcfc175e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdc3126-392f-464c-b63a-3f0a1767f5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096461d7-c201-4113-9109-9ff1b6ba208d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f39703-a13e-4161-96a6-42f314f57b6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b239be1-bde1-43b8-ba33-d865aa4d02c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8224ab-c494-4ba6-8435-7626da5ce8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356b5503-5707-4f34-8b68-5a15f6dcd7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfde73b7-a6b1-4f89-873a-9726a5ffdc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4cfab4-dacb-4cd4-9d06-b10e848dd1b0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cf949c-ff16-47cd-b424-9f031242e91e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10139bac-4f2f-428d-94b3-da1b6b23df63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b622b0e3-5aaf-4139-9e63-3c34ffe5d7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b01cee1-9c71-4896-90b0-9c189cf0a561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa27621-2097-465e-a020-a77fda818578",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364cd701-2b8e-4391-ac50-7be4a255fd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c637462-e0d2-4285-9396-cc29f3c348db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edf30cd-099e-4b4f-8743-153dd44cce08",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a39252-c870-4df2-89b8-d4a7f5694b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ca4f27-b83b-48b6-b046-2a34f2dba7a4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af68aed6-94da-4ca4-9bcc-fa4477c34686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc671bf-ab59-40f9-91f8-c0e86a80dbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6555f9-bc96-47de-a175-ad2173ad74ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9ce135-0603-481e-905e-fbe1a0075669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f5ab54-470a-4ad3-aa99-62d9d2a7cb09",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1052976-6e4a-4778-b4da-0f2678ad66c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fcb8c35-2350-4a2b-b8d1-1fae78d207bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2d4596-ff6f-47e2-b660-22b5a94040bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef54ad0-d901-41c3-92a2-c7bc77fcea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7409ff1-caea-49af-b9e3-a594ed28281c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc9a04c-b1b2-4752-b0b2-47f2de0f5f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e957fe-5026-46e3-b243-e3f7910cdf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f0abe0-deed-40b8-a864-d2e185dc828d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8dbead-bf01-4910-b900-da933f9bc3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852de5ea-48c6-4715-bab2-7d52712892fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3287887-7254-44ff-a778-e9355a7f19e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7a3ef4-d706-428f-a67e-64b88ebc91e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c453eba-2bd8-41db-bb07-e3dda0bedab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badddb0d-bdd2-4b57-8c8a-c73b753fef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39390f9-0ba1-4d7e-991a-ca561078420d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cbd3dd-937c-48b8-8bf6-2c32e422ebb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eecd1c9-5342-4f4c-aea0-4d199a096ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16972f-1af3-4b3e-8433-394cbd13de8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0b479a-a7e1-46d7-aad6-d12fbfc074f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e02cda2-c9df-4baf-b50d-40cb68c6371a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046a3915-e807-4d30-9a2e-855c40594f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0597fd1a-e8f4-4bd3-8831-9186d7d70135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e75b79-a5bb-418c-b3f9-1a7839e82d69",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ae683a-152e-440c-ac3f-2dfb67bb16d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dc47c4-2384-4b65-ad8f-1334d7dbf4be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc96c320-efd6-484b-b425-bcc8b4f4155c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13253e23-3f7d-477a-a582-5d73c2926db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549775f3-ac0d-4323-9af7-9980e5d16994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa8b1bc-c642-45a6-af9e-7bce8f7b38ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21670ff6-761c-48b6-9274-febd20483567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e37b202a-f4e2-4dd4-b355-7dbcbf80095f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44237aeb-4fe4-4314-9eae-40cf15f3db81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8970eb5c-fc9a-4b33-97ab-a6b0194d65f7"
                    }
                  }
                ]
              },
              {
                "id": "15136ddc-e65d-4e42-8d3f-9cb1e9ce4c25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb46a66c-50ac-4b11-8d80-69a804782002",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae11366-5536-49d2-b42e-0efe7841c0e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d2d3e5b5-8987-4775-8baa-722705854166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d2b2e1-62e3-46af-abbb-429b2144a0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cbea062-63b2-45c7-b280-df3021503d84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60d54cb6-64ce-42af-beda-ec4ed6fee784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce9682a8-2c96-43e5-87f0-da7cf70df881"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ada9fafc-35f2-4223-a491-b6d90a232574",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f25b2bf6-bd19-4d11-9ff9-f15de1f3afbe"
                    }
                  }
                ]
              },
              {
                "id": "1f072502-5419-48d4-be36-331f320d0897",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "59e753b0-15ed-4202-b9dd-6abc2f0065ab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab691d1f-8904-4142-aad4-b4e40cbbe841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "348c471d-b73f-4ece-bfec-29b3bf860945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f667650b-3ba8-401a-8420-0008068df822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42032266-617b-4c6c-bb36-0f28fd19305e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88dac992-32da-41f5-ac07-907b96275a40",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8040b360-ef06-4c89-ac94-cb1bb3dee2a9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40cfd90-177d-4251-91c1-ab5ff4aa9c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fe5170b8-d320-42d0-8e69-91ddb57acf07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2d2f4ac-c18c-4b44-a7c0-e1f6579456d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60da6a34-7037-4944-a5f3-98c60bcb9d4c"
                    }
                  }
                ]
              },
              {
                "id": "1176b355-6f87-4cb2-94f9-161911dfa6dc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec07a3ff-384e-4cb2-b88e-95fbb6e03034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f9670bb-4fda-4299-89ff-9fbee0e88e28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a31f1a1-dd10-401d-8fea-e16f99bdfec5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "336b1c25-1f6a-49b7-9a00-088aec05dd8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c774b37c-4542-4b58-aa24-c5795e280820",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "79009eca-243e-4ca9-b6d3-6e09e1089cb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7b8abdb-6a66-4f96-b5fe-e8491b32273d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74bdd46d-720f-4a6e-a114-2cdf54e5e9f3"
            }
          }
        ]
      },
      {
        "id": "0bd08295-1f85-487f-a7d7-9a77346bea1d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "21bc56fa-8e18-493d-bfe0-bcdfb16c2ddb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bbc6c73-c48f-40a4-afaa-06ee0ef6deeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5f9837d-34d2-4a47-9192-9388b91fa14c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d53d34-b20f-4923-9c6f-035503f4b72a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5b1b51e9-1827-4053-8e1a-6f5b5910fdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2daa286-1eed-4c07-9502-2f46250f8d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd9a6154-0db0-4de2-b5d5-c7825f1f5f93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e930ffd7-25ec-4730-81b8-dac0c15d2132",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c9f67b2-d3be-43d1-807b-3b02392ebb28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12b3f3b0-b342-4069-8c0b-966882106bc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9da662b9-07b2-435b-a346-cf05d223b915"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef5f36bd-0a99-421f-bcdf-a2889b88042f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "06a9b6bb-6c59-44f3-ac87-fa2b04157b9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0894566-a852-4293-a84e-9e96aa9eec1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a077521-780b-42d7-9eb5-c879086ddfb5"
            }
          }
        ]
      },
      {
        "id": "afee8bf8-0b33-4d25-96c3-4b7b041120c7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "87f1bda7-623d-4fa7-a73f-2542cc369160",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df9e15c3-9f6f-4fab-a760-1f50d32a7a96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57a047cf-8d98-4d97-9258-eed4d8edbf46",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d4b005-942d-486f-8425-ffbd6ea61173",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71e220ee-f9f3-4ea1-a006-54624799dc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b45aafd-f68d-45dc-aa6f-7f7a60ce748e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519dddfe-adf3-4af4-a7c3-2e8b268a84b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eae4c6c-6550-4feb-aa04-2489342f1c68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf5e3eb8-f55c-4314-b63a-738d4f09f252"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23467565-db2e-4c08-99e0-858fa7b681df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dcce129-9cbf-4bf9-a990-b8f476352e90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "330e2b0b-57be-46a5-9cac-0639ce1537a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc061fd6-f90f-49d1-bad3-a5be3b3bf5cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cece583-a600-4092-b0a1-b33f1df89f18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a191a33-29e9-4c91-b94e-71407b302926"
            }
          }
        ]
      },
      {
        "id": "639e5327-3519-4190-b4b6-67565b185b25",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "35ff006d-c4a4-4e7d-b6ce-fb33f633cd8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1b3cb95-f536-44f4-a7f8-ea9352317a80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d71259f7-8b75-4131-8d9a-48058a222530",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff1b0ca-605a-4d1b-bff1-a005e8bb774d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea454fbf-ccc5-4266-a4b4-ca64b1318d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994265d1-bc23-44a0-9a4e-19cbc7b7ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a451b40-b899-44fd-bfce-608c0780ff7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52473bb9-699c-4709-9169-57d21fb9da98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a10d4882-085d-4f4f-bbab-88bf57548909"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b657f43-a081-47bb-81b8-87ca1a466dac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "278b877d-089b-48c9-8846-8a0be8d82b4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19041842-0c83-45aa-897d-dee8c817e6d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbe4a300-e7bf-4e5e-a60a-c6936088431d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "709c2060-95ac-409d-8ffe-fe8c94fa56a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56d082b8-72a0-4f32-99bc-9db6351f1ac3"
            }
          }
        ]
      },
      {
        "id": "d9ee3eff-6108-491e-9905-cf0df1fe0fce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6e3bc59-0528-43cf-bcfa-d92c03b38301",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bfd9917-494d-4b98-a6ca-8ee3d2be89f5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cd1736cb-6e4a-4b25-8c49-383e7fd3366f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21983f41-0cb8-4774-9647-86bb06f2b70c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55a567e4-4d10-49bd-a1d3-4618f30d309d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 337.452380952381,
      "responseMin": 7,
      "responseMax": 10881,
      "responseSd": 1563.6005056865442,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720571981039,
      "completed": 1720572074267
    },
    "executions": [
      {
        "id": "4f9f99ba-1a48-4101-8a97-e6f97945610f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e99c128c-5043-4295-99f4-8687ae3ffe76",
          "httpRequestId": "60a1cc3a-5254-4d95-9e68-deb3d00d8dac"
        },
        "item": {
          "id": "4f9f99ba-1a48-4101-8a97-e6f97945610f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0d1c31e6-e7e8-4edc-8b80-5d585c1bb474",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "7fe8df04-3d46-43ec-b052-6c415d8d461d",
        "cursor": {
          "ref": "f0ad5ce2-3364-49bd-be53-2a3b732ca117",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fa931f02-b4a5-4e48-adc0-48ad10433a5d"
        },
        "item": {
          "id": "7fe8df04-3d46-43ec-b052-6c415d8d461d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45344a37-83ee-4658-ae2c-58093808dbd2",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "669cf976-7696-4882-9de1-2dd51b41ced6",
        "cursor": {
          "ref": "72e9b51b-aad3-48af-a62e-8dafcbef55f8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "85505ba3-7310-42ef-8515-2e193d639cca"
        },
        "item": {
          "id": "669cf976-7696-4882-9de1-2dd51b41ced6",
          "name": "did_json"
        },
        "response": {
          "id": "8dd2f7d1-21bc-48aa-a08c-09af48baeab9",
          "status": "OK",
          "code": 200,
          "responseTime": 350,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88109f20-4529-407d-b075-36f50675aea0",
        "cursor": {
          "ref": "b5247be4-6760-4836-8343-eeb048b53d22",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d76f6105-68d2-4077-aeed-23baf8b9fe6d"
        },
        "item": {
          "id": "88109f20-4529-407d-b075-36f50675aea0",
          "name": "did:invalid"
        },
        "response": {
          "id": "e916ba61-9452-43b3-aff1-eb28da94cd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2027,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88109f20-4529-407d-b075-36f50675aea0",
        "cursor": {
          "ref": "b5247be4-6760-4836-8343-eeb048b53d22",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d76f6105-68d2-4077-aeed-23baf8b9fe6d"
        },
        "item": {
          "id": "88109f20-4529-407d-b075-36f50675aea0",
          "name": "did:invalid"
        },
        "response": {
          "id": "e916ba61-9452-43b3-aff1-eb28da94cd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2027,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a14a39b-158d-49bf-8af1-5fcbc5538a97",
        "cursor": {
          "ref": "3c88fec5-4316-4852-97bc-a9991c73122d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0f7cbf9a-e57f-4e55-beaa-7d815e44f4ca"
        },
        "item": {
          "id": "1a14a39b-158d-49bf-8af1-5fcbc5538a97",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eaaf5add-fb04-4efa-ae3c-08de5461d40f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2597,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3036d49-bcf0-4dc7-b865-1413b7ec0d9a",
        "cursor": {
          "ref": "7e055118-c415-48fe-9897-47c3ef74e094",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "47c4af2b-4f56-4109-ae52-0718e837d95e"
        },
        "item": {
          "id": "b3036d49-bcf0-4dc7-b865-1413b7ec0d9a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4a47c8c5-387a-43d3-8a02-3467e31a6914",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2253,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5573908-e6f6-44f6-930b-6afa05706edb",
        "cursor": {
          "ref": "097ade01-e9c5-4b25-833e-7b3732ab33ff",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42479026-1278-4fbc-9bff-bc9ffcd73e5d"
        },
        "item": {
          "id": "f5573908-e6f6-44f6-930b-6afa05706edb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "56b22915-60e6-46e8-96e6-499b4447a391",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d4a8dc-089d-4dd6-935d-c90e8c8d2eac",
        "cursor": {
          "ref": "b9988456-0dbf-44fc-ad35-f5a69cd122c7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1de04674-03fe-49c8-8076-f324f0b37b0c"
        },
        "item": {
          "id": "c4d4a8dc-089d-4dd6-935d-c90e8c8d2eac",
          "name": "identifiers"
        },
        "response": {
          "id": "aaca315d-c9f2-4215-bb73-ab7d0881ae58",
          "status": "OK",
          "code": 200,
          "responseTime": 2111,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3768595-8336-4bf9-afd5-60428fb40270",
        "cursor": {
          "ref": "9b099ace-3a16-48b4-8f52-c284c46ac769",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "16c0b50c-d2da-4458-872b-13704a788bb8"
        },
        "item": {
          "id": "e3768595-8336-4bf9-afd5-60428fb40270",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "816a193a-2174-4a7e-88b1-470a9940a6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec8631c-70eb-496d-a2d5-5bbc58e9769d",
        "cursor": {
          "ref": "06af969b-299a-4ec9-bdb0-e78cbd0ad8c6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2f849e99-f180-412a-b570-fbf2dce57ff6"
        },
        "item": {
          "id": "cec8631c-70eb-496d-a2d5-5bbc58e9769d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bf6d9e15-d626-41f0-8132-071d537ba6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f2b002-e1d7-427d-ab4f-eb247bf44875",
        "cursor": {
          "ref": "19347e95-dcf8-4ff5-ad72-2a5d4279f420",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9ba314bf-0aa1-4a5e-9259-7fb91b384500"
        },
        "item": {
          "id": "d8f2b002-e1d7-427d-ab4f-eb247bf44875",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f1b2d5f3-8dd3-4201-bf40-2d5c5231367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96568661-22ae-408a-8b20-5904d0f03089",
        "cursor": {
          "ref": "ddfaa862-caea-4301-8332-a2fc1c4d41d3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "affa6276-beb4-4c9c-8346-6c10a2c6b912"
        },
        "item": {
          "id": "96568661-22ae-408a-8b20-5904d0f03089",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d3c5ddf4-1554-4421-b966-d614d73d12d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec6a350-cd2a-431b-94bc-e4c1bc4cd8f1",
        "cursor": {
          "ref": "b32838e1-3896-4309-bed9-95402da08f57",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "126be79b-642c-4693-910f-58ef843c2dc4"
        },
        "item": {
          "id": "7ec6a350-cd2a-431b-94bc-e4c1bc4cd8f1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f22600ad-1373-4cf4-b994-f8c9e9984aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e2bc49-7137-4531-b661-d87eef88f0cd",
        "cursor": {
          "ref": "f232875e-3ad6-4147-8e4a-358745d3edc5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "60b8c6e6-e0f0-498b-b3ef-2af625ea5741"
        },
        "item": {
          "id": "10e2bc49-7137-4531-b661-d87eef88f0cd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "54751df3-e331-4f1b-98b5-4643c99148b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bacb4b4-ba51-461d-8ab4-1179a0f02116",
        "cursor": {
          "ref": "717cbef2-af6f-4ecc-825b-d14cb533fce5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b15cf877-dcbd-4e80-badd-5ed46d36319b"
        },
        "item": {
          "id": "3bacb4b4-ba51-461d-8ab4-1179a0f02116",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4b49689b-b7f5-470a-a301-8bb66b9527e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbb89f7-ddf4-45ee-ac9a-5289e87e6e69",
        "cursor": {
          "ref": "eb2da728-340a-49f2-8e9c-8fa9734d3187",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7c574c43-cbca-490d-abf8-9519da1c4c6d"
        },
        "item": {
          "id": "2bbb89f7-ddf4-45ee-ac9a-5289e87e6e69",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "706291d7-04c9-4cde-8bca-e3dd1f6f86fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2a224-656b-493a-b5a3-b3d5c057754c",
        "cursor": {
          "ref": "0584ac8f-53b3-4c7a-8117-85e0f555cad6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d55f59f3-134a-4744-9f55-30676bac52e3"
        },
        "item": {
          "id": "d9d2a224-656b-493a-b5a3-b3d5c057754c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "00b543c9-ea6f-4cd4-a147-defe560802e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0609e0-7b6e-4017-afcb-866563d2ebd0",
        "cursor": {
          "ref": "fcfa6260-6a40-4449-bf24-19f4f6c3993d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "625e9062-6f27-40b4-bd0e-52b3eb80c745"
        },
        "item": {
          "id": "6b0609e0-7b6e-4017-afcb-866563d2ebd0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dd88d9fd-bfe0-4bab-8049-5696332b9735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7beec5-d6e5-40a2-b525-76ece3431c8b",
        "cursor": {
          "ref": "20a4a388-c0df-4266-b5d0-1801d8c7e342",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8edfb665-84f1-4a71-8093-7bd1bd981e70"
        },
        "item": {
          "id": "1f7beec5-d6e5-40a2-b525-76ece3431c8b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "63615b9d-b022-4cfe-bbff-69e0937d2a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccdbb70-5e7f-49c8-9231-bc6c033eaa4b",
        "cursor": {
          "ref": "ea1c38f9-420f-4861-b81a-f650eed28564",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e855a760-d36a-49cd-8872-9c29fedbc26c"
        },
        "item": {
          "id": "3ccdbb70-5e7f-49c8-9231-bc6c033eaa4b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a0599560-9a3d-422f-bab5-372fd5fb46da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2429af6-72ce-4de1-a909-e383733ad7b9",
        "cursor": {
          "ref": "e9c72550-39a1-4317-9e92-7e980152a013",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "726072eb-db6f-46b3-8070-85ea7b114d82"
        },
        "item": {
          "id": "e2429af6-72ce-4de1-a909-e383733ad7b9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "adcf0134-01c0-430f-91ab-2da2895494e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e5cb30-ff29-40b7-972d-7d46a02b58e5",
        "cursor": {
          "ref": "b812f707-a79b-4ec2-a7db-6097ba1e98b5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10eef67a-3f5b-446d-86ca-8d67a60e0176"
        },
        "item": {
          "id": "55e5cb30-ff29-40b7-972d-7d46a02b58e5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7366ce0e-aa98-4c83-a516-df9733418800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99c25d-a3be-4fe1-add5-b24e22fa97b2",
        "cursor": {
          "ref": "43955e97-d101-4de9-8669-2cd7529e132d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d698e96f-a1a3-4f90-ac4e-490b2b73753d"
        },
        "item": {
          "id": "0e99c25d-a3be-4fe1-add5-b24e22fa97b2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d1a2733f-f302-4109-9010-bd8fb30c61a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171ef20-12bd-4ebc-88c5-a205e016a4a7",
        "cursor": {
          "ref": "101f286a-70c7-4d3e-839b-bcfba6a02a8d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6cdd26f-3a73-4e72-ba5f-e7c9febf40d9"
        },
        "item": {
          "id": "b171ef20-12bd-4ebc-88c5-a205e016a4a7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cbc72cc1-eb56-4181-9f28-aa1e4500cfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb74a6bd-29fd-43e8-a787-d60c5f4b859f",
        "cursor": {
          "ref": "e8cf0c59-c645-4031-8029-d6ca4570b2a9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b9fad7f-bc76-40a2-bc6b-4e18bdc70045"
        },
        "item": {
          "id": "eb74a6bd-29fd-43e8-a787-d60c5f4b859f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "134dae3f-407f-4191-a0d2-f05c5d0762f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e429aede-5e0e-4a8e-9f14-3127b756a676",
        "cursor": {
          "ref": "33aa7425-cb39-43e0-8582-489250f90d91",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a26b115b-b68e-441a-aaac-3d7feea34534"
        },
        "item": {
          "id": "e429aede-5e0e-4a8e-9f14-3127b756a676",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "211978d9-619a-4a66-bf7d-ea45429ca1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95e3c03-6a67-4cb4-afa2-a2d0ddecc147",
        "cursor": {
          "ref": "b3e54030-6f69-4de4-80d2-08f0b34c6591",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "88ce032c-802b-4cd3-88de-5a487bbcca7d"
        },
        "item": {
          "id": "a95e3c03-6a67-4cb4-afa2-a2d0ddecc147",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8ef3e5c9-257b-4e1d-b82e-9fdc22ca2d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cd8171-708d-41b1-a659-682d2bae2bfa",
        "cursor": {
          "ref": "a3d812fc-dd93-4380-a00c-6cc567da1bf1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "47349050-a655-45c7-ab72-eefef65c561c"
        },
        "item": {
          "id": "24cd8171-708d-41b1-a659-682d2bae2bfa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7a1ea90f-a1dc-4fec-b753-d27494e90dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba2797-b8f8-4849-9ff8-95f8546595d8",
        "cursor": {
          "ref": "6dbe27f2-6cac-42d0-b055-2ae1d4cb55eb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7852d5f9-5aea-4e3a-86e7-a6e72249d25d"
        },
        "item": {
          "id": "19ba2797-b8f8-4849-9ff8-95f8546595d8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5c3ee917-ade9-46db-9676-1c365d5504ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0d888b-8a52-4324-907b-e6d37fb31b7c",
        "cursor": {
          "ref": "8cfd412c-fab1-4209-ad68-743fa4119ac6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31c1f7c5-31ed-411e-a00e-534eaba182d7"
        },
        "item": {
          "id": "5d0d888b-8a52-4324-907b-e6d37fb31b7c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "41e63943-24e0-45ce-9ec7-84bfa9ea8132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee9c3b0-09af-4f79-8e49-67fffdb452c3",
        "cursor": {
          "ref": "69af4f40-3c60-4e26-be81-1034720d8e6c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a006d69e-5318-4d94-b0e9-3105088f47fd"
        },
        "item": {
          "id": "6ee9c3b0-09af-4f79-8e49-67fffdb452c3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e3b1f6ee-c58c-4d1e-811e-a03ccdbee192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700ba612-b519-4ddd-8965-2698bb814fbd",
        "cursor": {
          "ref": "afb8a5d7-8469-41c0-a695-4738e04f36a4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "51609eb2-4c88-4bc7-871b-5ea691a6e07e"
        },
        "item": {
          "id": "700ba612-b519-4ddd-8965-2698bb814fbd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3609ff9a-1998-47c3-a68b-7b255bcac60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5778b6b1-f69c-460e-a6ff-d0d9f8b0ef6c",
        "cursor": {
          "ref": "ac22d0a9-6f62-4bd5-99c6-4eb5d75768ea",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "37030171-6ccc-432f-9a15-abc3de8cdb00"
        },
        "item": {
          "id": "5778b6b1-f69c-460e-a6ff-d0d9f8b0ef6c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "16d24a55-4b1c-494a-b3fa-5f106b19ae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624c0dbc-938b-4099-bbd8-80da33dc6da8",
        "cursor": {
          "ref": "3a5d72e3-1291-494f-94fa-6a86e0d5b196",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1b4f41df-570a-41e8-a31f-964aa07711b8"
        },
        "item": {
          "id": "624c0dbc-938b-4099-bbd8-80da33dc6da8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ac70ddc1-f615-4d0d-a45e-851bd42bb338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c41ad5-8b37-4dcd-b799-0eb7db8b4318",
        "cursor": {
          "ref": "a9f76100-5f6e-4461-b453-c98557d8b8af",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3effca4-dd95-4bee-a0a5-535800fba69a"
        },
        "item": {
          "id": "c4c41ad5-8b37-4dcd-b799-0eb7db8b4318",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ceb2a257-a503-4714-b100-b5f04bf384ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b954cb5-b5c1-4246-bbaf-5888b21dd454",
        "cursor": {
          "ref": "7359b5d8-9951-4f83-a19b-c085fdcf0cd3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c08904ac-eda6-4eb3-add8-ec0b91e06ce1"
        },
        "item": {
          "id": "5b954cb5-b5c1-4246-bbaf-5888b21dd454",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a44f8826-d6af-44ac-8801-35d38e4b8a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08aed35-f4a0-46b3-a794-0e178fc4329d",
        "cursor": {
          "ref": "3717c660-efe7-4214-903d-e0dceda1333e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7436e549-c1d3-4e6c-915b-6572256498be"
        },
        "item": {
          "id": "f08aed35-f4a0-46b3-a794-0e178fc4329d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b064939f-4bb5-47b3-8eb0-fec7120c8b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85bda3-35fa-4bb1-8dc2-700746adeab0",
        "cursor": {
          "ref": "b8f75884-6802-42db-baa0-1ab29a9f8c83",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "54780e08-aea8-4727-90b9-bc6bd62ecb85"
        },
        "item": {
          "id": "ad85bda3-35fa-4bb1-8dc2-700746adeab0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d4857200-e50d-42f7-bb67-e2e13fadaca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb30b0b-e5ab-484f-8f6c-050e46e07606",
        "cursor": {
          "ref": "75e0d36a-5bbc-45c6-91f2-8a7d1fb6d423",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e2e8fcc2-d03c-498e-a24d-e9a20e91a387"
        },
        "item": {
          "id": "ecb30b0b-e5ab-484f-8f6c-050e46e07606",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a9b94484-a8c4-4e13-ac32-9416875f311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9f1f2-d40c-4cd7-b7c0-13af53df1da5",
        "cursor": {
          "ref": "dfbc8e15-9f88-48f1-86bf-8314318f6a23",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "74ce45e4-8f4b-427d-a4c4-ea306e719411"
        },
        "item": {
          "id": "cbd9f1f2-d40c-4cd7-b7c0-13af53df1da5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "720da78c-7905-4fb9-a316-6cab09570b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29bb89c-af00-473d-9cba-dc3698c236bb",
        "cursor": {
          "ref": "d30605fb-06e0-4f1a-b0d6-4a05092b0221",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2b87682b-4c8e-4291-85df-050780d1df58"
        },
        "item": {
          "id": "e29bb89c-af00-473d-9cba-dc3698c236bb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c128dd89-412f-432d-802d-9575c6d5baa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63a71d7-af03-4b1c-a5bc-2a9339722e05",
        "cursor": {
          "ref": "ecaca52f-fea6-4121-ad68-c46a82cb6002",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2ad6004c-fb07-4d00-8b4e-fbd2e0ce6eca"
        },
        "item": {
          "id": "f63a71d7-af03-4b1c-a5bc-2a9339722e05",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de2a7c4d-dedb-409c-be00-c8e8ef646058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aeb18f-19e5-491f-a260-a20667eeca2b",
        "cursor": {
          "ref": "05c8b4f0-84fa-44d7-97d5-c56dddaf866e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "32a73da0-d2f3-4769-b366-1373042ce968"
        },
        "item": {
          "id": "97aeb18f-19e5-491f-a260-a20667eeca2b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cc4a92ad-1d2a-47b9-83b7-dd3498fa2427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e98280d-8311-4cfb-9ab0-45ef4597a866",
        "cursor": {
          "ref": "3abb848e-97bb-48e9-a41f-d701a8fc33df",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ec322aa8-58c8-49cc-a296-378c7e9839c7"
        },
        "item": {
          "id": "4e98280d-8311-4cfb-9ab0-45ef4597a866",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "27005786-6558-4eee-b064-1d0fba21ae67",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17709d0c-42d9-4d18-9985-4a6953f8e401",
        "cursor": {
          "ref": "362d2989-a847-4c88-80c0-4ce40abf0ad7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5efb6bef-f90b-4d24-a4d2-a5db387b9395"
        },
        "item": {
          "id": "17709d0c-42d9-4d18-9985-4a6953f8e401",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dc2274a0-abdd-481d-8243-bce53848796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed6004d-0b43-4d44-a4e4-0d82770393bf",
        "cursor": {
          "ref": "34421c08-efdf-493f-a616-b7d59901bf3e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bf10aa3f-023c-4913-90e9-45262f74af5d"
        },
        "item": {
          "id": "5ed6004d-0b43-4d44-a4e4-0d82770393bf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cd251cd6-a6fe-41e2-bb02-a98dcb1892bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e7d7a-830b-4dee-a8cb-63672aaf9b84",
        "cursor": {
          "ref": "e4746676-65f0-4e04-8229-92c4ac874285",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "726c30e7-45b4-46a1-be72-6d0f6a967f51"
        },
        "item": {
          "id": "df4e7d7a-830b-4dee-a8cb-63672aaf9b84",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "84e09c95-4ef8-4f02-ad38-98e62f1fa121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13fa1b8-8fc4-495c-bdc4-219ec412cdff",
        "cursor": {
          "ref": "ef145ca6-9d78-4b28-aa46-c2d7936fc623",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "57d35ae4-0c0f-4ee8-a42c-646f5d8c4184"
        },
        "item": {
          "id": "f13fa1b8-8fc4-495c-bdc4-219ec412cdff",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "73fe3fb1-fc58-4388-ae71-189b97e20683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74061ab-d2a4-42d7-81bf-b562921012df",
        "cursor": {
          "ref": "ca6864bc-6d21-4453-a444-8f0eac3e0450",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "db261341-44a2-46d5-a09b-8b7b340d1f6c"
        },
        "item": {
          "id": "f74061ab-d2a4-42d7-81bf-b562921012df",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "798640f5-0a39-4a87-add6-2c087c98126e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4504f1c8-3c83-4a80-a2cc-ff669a500806",
        "cursor": {
          "ref": "a2b0a7fc-7ef1-4fa1-95be-e2face573150",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fe67842f-fea9-4a83-b9b6-531b098b1e93"
        },
        "item": {
          "id": "4504f1c8-3c83-4a80-a2cc-ff669a500806",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9fe139c5-da85-4840-80c6-18b8652922ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaee6465-1bfa-4020-8384-301fc101e3cd",
        "cursor": {
          "ref": "7843a482-60b5-4dbb-82f7-1c7efeafa7d5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc0b000b-81ed-4170-a137-e3065cc630a0"
        },
        "item": {
          "id": "eaee6465-1bfa-4020-8384-301fc101e3cd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "69d5daf6-8cc9-4554-8319-d312708f4484",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f51ed2-6ee5-4a1b-a9a5-fbeb48282961",
        "cursor": {
          "ref": "ca59fce9-728c-46b1-adc4-02b3c2c1488b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "78a115ee-e9d5-45d8-af77-ca125bd81098"
        },
        "item": {
          "id": "e0f51ed2-6ee5-4a1b-a9a5-fbeb48282961",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8d7c3d9f-0629-4cdd-8e70-782455f42f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd7b076-8ab3-45c7-ae04-078b1045619a",
        "cursor": {
          "ref": "a1e519dd-bc33-43dc-80a0-7db588e41838",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8a114b19-dfb9-4dd8-9f0a-119c770f8146"
        },
        "item": {
          "id": "4fd7b076-8ab3-45c7-ae04-078b1045619a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "988d7f55-392a-4f7a-a9d4-e6e07c2c1e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833d9275-2a77-46c0-8ea1-5f5cbb81d90a",
        "cursor": {
          "ref": "bf1cc1b1-556d-4497-beb9-3df5faaad7f5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "60945a2b-ba1a-4cea-9c95-36f0be7204a6"
        },
        "item": {
          "id": "833d9275-2a77-46c0-8ea1-5f5cbb81d90a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "874bd9ab-daa3-44a0-93c0-555f544f149e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0785db92-6e68-4062-a65d-cb894555ca4e",
        "cursor": {
          "ref": "4ce84e8e-c218-46d2-81de-ed81a18b5804",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "70058f12-edc3-4625-b7d7-477323d6d9fa"
        },
        "item": {
          "id": "0785db92-6e68-4062-a65d-cb894555ca4e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c2bb6e9-a887-45f0-9a33-5e2ff44bc74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2932c26-8b8d-465c-9f0f-7edf7176d962",
        "cursor": {
          "ref": "9e547986-4986-4956-abfd-0bcd1efd2e8c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2161deb9-1a1b-425b-935b-2b6617f5f9b2"
        },
        "item": {
          "id": "b2932c26-8b8d-465c-9f0f-7edf7176d962",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fc73d565-319d-4b4c-a303-f4c69867f04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64802b3b-75cd-43a7-bf5a-3d731f0349ce",
        "cursor": {
          "ref": "1bcd7550-6cc7-47e1-92dc-f1c759569c64",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a09e9cd-0df9-4070-a6c9-fdf80874b938"
        },
        "item": {
          "id": "64802b3b-75cd-43a7-bf5a-3d731f0349ce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d9136b94-b476-43c8-8e64-5154eb889d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b971c39-5088-4650-8cd9-5f18b891ab77",
        "cursor": {
          "ref": "cf85c89d-6e6f-49ff-8a94-bd0484df8c85",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "788d57ac-b025-43de-ae62-3a9fca3fb294"
        },
        "item": {
          "id": "0b971c39-5088-4650-8cd9-5f18b891ab77",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b1620c58-f79c-40e6-bec7-75d37c3cca2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feb1cf3-a60b-4e9b-8dbe-cc8bdf89ac27",
        "cursor": {
          "ref": "d85a62d1-5dd2-40ef-8e42-ab7d56621fca",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "56889ab5-8cc3-462a-bbae-1bfafc2d38f1"
        },
        "item": {
          "id": "5feb1cf3-a60b-4e9b-8dbe-cc8bdf89ac27",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "94154638-651b-49f2-ae93-6f0f695c4e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc79cb76-b652-4580-9133-720b440ba925",
        "cursor": {
          "ref": "eedab967-6cd7-4bb1-a512-9a2eb595db33",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0a5ef185-d435-43da-9e2a-eee9009a1279"
        },
        "item": {
          "id": "cc79cb76-b652-4580-9133-720b440ba925",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "20bd0f69-d9a8-40a2-a612-c4dd198bbbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b2d701-5697-4cad-806f-24d018884c9e",
        "cursor": {
          "ref": "165e62d0-0af1-4d99-a9c1-a002ac8fb1b5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "07fbbe28-6d6a-4874-b14c-7102552e39a5"
        },
        "item": {
          "id": "90b2d701-5697-4cad-806f-24d018884c9e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d5f674d8-3d14-4172-acba-d8f00386262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d776242d-ed6d-49f4-a9f2-f6aefe7429cf",
        "cursor": {
          "ref": "33d7b311-3ffc-46a8-82d6-056fba840676",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0def98ad-f522-4872-bc5e-9d695a0db072"
        },
        "item": {
          "id": "d776242d-ed6d-49f4-a9f2-f6aefe7429cf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6ad6b4ef-f1e8-4769-ae80-f392308d2ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a8b58f-4ff9-41c8-98d6-2151dbe7abf8",
        "cursor": {
          "ref": "5a14ee4f-f1d4-4902-ab28-f86ddbfee0e6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ebbb1a57-7a30-46a2-940b-b1a504647f73"
        },
        "item": {
          "id": "f0a8b58f-4ff9-41c8-98d6-2151dbe7abf8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "295b1cea-fa6e-4555-a9fb-99fb4ac06aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de09297-750a-4dfe-b63a-7e44a46ebb0f",
        "cursor": {
          "ref": "182c92ee-9c41-4971-b470-b55815aa103f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "00ca2997-feca-4a5b-a8ce-195e7f5ade7d"
        },
        "item": {
          "id": "8de09297-750a-4dfe-b63a-7e44a46ebb0f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b25321e7-8ccd-41bb-9822-92d64c650927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10473f7-f6a0-4deb-b461-38f2937b415f",
        "cursor": {
          "ref": "a589c86b-ab34-496e-8c5c-12d32a006e60",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db45f2ed-a161-4c67-b009-361cae4b54bb"
        },
        "item": {
          "id": "d10473f7-f6a0-4deb-b461-38f2937b415f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "176d5bf8-976a-4bde-89ce-592b1c466e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917f2998-592a-431b-bc65-a00cab81233a",
        "cursor": {
          "ref": "38c7d3a5-a29b-49ae-add8-fb64e5492e01",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "07acd046-088f-44db-be56-b7cb35d85dcb"
        },
        "item": {
          "id": "917f2998-592a-431b-bc65-a00cab81233a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "428331ba-eb20-4be6-a591-4d41e4b0456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e6432-2150-4f3b-a79b-81419b5775f6",
        "cursor": {
          "ref": "510bb838-31b4-488b-bd6d-d0927cdf0082",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "71419f54-e1bb-4cef-ae69-1be757e9de83"
        },
        "item": {
          "id": "1b5e6432-2150-4f3b-a79b-81419b5775f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cc687594-6f09-47c5-b24b-e70b15460002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18ac85-f729-43a7-8cde-0429cf2c4b88",
        "cursor": {
          "ref": "71096825-b351-4e89-a4dc-bf73c823222b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7729874e-4b87-4bc9-bf6d-4c397b979a4b"
        },
        "item": {
          "id": "2f18ac85-f729-43a7-8cde-0429cf2c4b88",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2a902fe8-74e8-40f2-aedc-b8571c54e52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da4271e-bbb4-4431-91f8-569170660220",
        "cursor": {
          "ref": "582f84fd-8a81-475e-916e-d5cce6ee1ced",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eab16b07-a01e-4968-a740-ba6c79ad0495"
        },
        "item": {
          "id": "9da4271e-bbb4-4431-91f8-569170660220",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8dfd460c-c81f-4200-9217-6cdb90ce1e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98772022-3a69-49ca-aa3b-001f569c59a5",
        "cursor": {
          "ref": "20e85642-cafa-41bd-8923-68a2a60923e7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "89333e36-6ecc-4748-add7-1496e8bb246c"
        },
        "item": {
          "id": "98772022-3a69-49ca-aa3b-001f569c59a5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8a79aeb9-177c-443c-99ca-c3bf4a80a898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f66a3b-ca1c-4d81-87f4-23fb53e6af79",
        "cursor": {
          "ref": "e367abcf-6f7a-4f26-848a-c5c643fddd84",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7012aca8-9c67-4f25-86bf-1b7dd984c34e"
        },
        "item": {
          "id": "16f66a3b-ca1c-4d81-87f4-23fb53e6af79",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "06464364-b619-4740-8a56-bf3fe3fd5764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed9b5e1-9b24-4f78-9704-314b9bf5da6e",
        "cursor": {
          "ref": "c8d11254-6642-4829-b6fd-88669da5fb8b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c50a2077-c807-407b-98e0-4bdd44d106bb"
        },
        "item": {
          "id": "4ed9b5e1-9b24-4f78-9704-314b9bf5da6e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dfa22b2b-da7f-44aa-a89e-033784216647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a9313c-975b-481a-864a-84c5e25b2b9a",
        "cursor": {
          "ref": "2c8a41e3-3e32-4af8-a6b7-cac364d99a61",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eb985e21-9d5b-4631-b0d1-0ffe0549d893"
        },
        "item": {
          "id": "14a9313c-975b-481a-864a-84c5e25b2b9a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3e7467d3-44dc-4894-aada-7484d0919be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb4048-dade-424f-b055-73905dd2c3e1",
        "cursor": {
          "ref": "c4ed3205-9012-4ff6-b1b5-66b2f32f1ec7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b278e5bb-38ea-4529-af37-eff373423332"
        },
        "item": {
          "id": "61eb4048-dade-424f-b055-73905dd2c3e1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1dbd0500-a988-4114-b5c6-0003fc619c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d905155-9a5f-49e1-9e92-a6a90d2330fa",
        "cursor": {
          "ref": "b29fbcef-80fc-45c6-bf74-f1eb4f999880",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7acae546-fa11-4212-ae03-3279c5715f0e"
        },
        "item": {
          "id": "7d905155-9a5f-49e1-9e92-a6a90d2330fa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cd175d2a-af10-4c87-8e02-c88a55bc07e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcde7e06-1363-4365-aa03-cf2a59c5028b",
        "cursor": {
          "ref": "7d420411-bb97-4d85-b8a6-7970f264b06a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c49e8205-c1b3-4c14-980e-70b0176e7b4f"
        },
        "item": {
          "id": "fcde7e06-1363-4365-aa03-cf2a59c5028b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4742425e-e8dc-480c-b629-b525d01eab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d95b3-0172-44c4-871d-cceb1b8b0926",
        "cursor": {
          "ref": "14e6f0c4-627d-48f0-b4ca-62d415b90ece",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "650e6218-2c0c-432f-b370-76c10f4647cf"
        },
        "item": {
          "id": "1e5d95b3-0172-44c4-871d-cceb1b8b0926",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6467d5a5-08e4-4f80-a8a6-cee12c861073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef442af6-dd12-4619-a9ca-f694c2005004",
        "cursor": {
          "ref": "069bc087-63c5-4a2f-adc3-0ace02c2f70c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a4bb56ad-8180-40b2-a56d-0a327d8ec1df"
        },
        "item": {
          "id": "ef442af6-dd12-4619-a9ca-f694c2005004",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b512f543-72af-4805-b0a3-716bf8060e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e904e99d-8b87-4998-816e-23facb940ac3",
        "cursor": {
          "ref": "d0b28a4d-b296-4f10-bee5-904887f1bde2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d90e505b-9009-48a0-9a4a-5551a0d3fea3"
        },
        "item": {
          "id": "e904e99d-8b87-4998-816e-23facb940ac3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4b25e2d3-4ed9-44d8-8baa-33fe2d2b305d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6941569e-a822-4220-869a-b530851ef7bd",
        "cursor": {
          "ref": "14c33e72-57d6-4f41-89d4-6139feec9930",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "160bd25c-cbbb-453c-9956-dd7259b66b99"
        },
        "item": {
          "id": "6941569e-a822-4220-869a-b530851ef7bd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "476c3f69-4d62-4d74-808c-ce4b9810e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17777a4f-eb62-4dae-8d1f-a6f51bd470e3",
        "cursor": {
          "ref": "5e977833-62b6-4e63-81be-0a6c02df4014",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "def2916a-6ae9-4f75-b441-f3121c15d685"
        },
        "item": {
          "id": "17777a4f-eb62-4dae-8d1f-a6f51bd470e3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4789f563-7727-4167-b264-321783b78b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0280280-9995-4419-aed6-e27a5dd07b6a",
        "cursor": {
          "ref": "011711f6-f2e1-4ff8-bcb4-a9be6ba0f1e0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5ce6fb52-0f8f-435a-bb94-b6c0eccd31f6"
        },
        "item": {
          "id": "f0280280-9995-4419-aed6-e27a5dd07b6a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8007d6cb-e214-4a08-adb6-5c66d00f026e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09063acb-ec10-40cb-840f-74d344e14106",
        "cursor": {
          "ref": "58c9d6ae-5910-4c18-bdae-18ad68f59aaa",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a9f54ecf-7026-46ec-9c0c-827e5a3c9219"
        },
        "item": {
          "id": "09063acb-ec10-40cb-840f-74d344e14106",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7f2be22f-4b8e-46ac-8230-39ae2ecf7799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf843ee2-965d-45f7-b31b-c7f5fe1de680",
        "cursor": {
          "ref": "ac3d4782-88ce-42b7-baef-9229d28d2646",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09e12342-cdba-4bf0-b8cc-76725218a251"
        },
        "item": {
          "id": "cf843ee2-965d-45f7-b31b-c7f5fe1de680",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6c81332b-af5c-4f3e-81a7-3fdbc72e9d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61816258-704b-430d-9239-c7e7680458b5",
        "cursor": {
          "ref": "060c8549-5d7d-4dc8-b4c4-538dd2805194",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d696edb4-546d-48ef-8494-cd900eee6a2b"
        },
        "item": {
          "id": "61816258-704b-430d-9239-c7e7680458b5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2b870e85-e09f-4905-86be-660d0f24450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7726c61-6e6c-4795-8e2d-ec19d7c2c264",
        "cursor": {
          "ref": "54fcb71c-db87-401a-8b4b-6cd0e2073148",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ce50c838-f535-4b26-8fcd-ee466b9c01d1"
        },
        "item": {
          "id": "b7726c61-6e6c-4795-8e2d-ec19d7c2c264",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a36f220-aeee-4e3f-af6b-9960ad4f157d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab75f1d-650f-4cec-86dc-1921efbf50ca",
        "cursor": {
          "ref": "bd50b4e5-5063-4046-aff7-7129256b2baa",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2ad2123a-b1d3-45d4-9b54-13a678f7baae"
        },
        "item": {
          "id": "bab75f1d-650f-4cec-86dc-1921efbf50ca",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "21e99977-4cf6-4bc7-afde-7b46519e283c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9790cf-0fe7-472f-a311-b3c7b91a8bda",
        "cursor": {
          "ref": "fe534a7b-6771-486b-9d49-6ed3636b5b67",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b9933818-2a1a-402b-9ae4-59dbbda083ec"
        },
        "item": {
          "id": "1c9790cf-0fe7-472f-a311-b3c7b91a8bda",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9a7bd22e-b2d7-4aeb-a0d6-1adaf53820fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077ae950-ffaf-4257-83a9-94e25b003a5f",
        "cursor": {
          "ref": "3022f590-e6dc-44d5-a9e7-082ed47c1390",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d46dbb81-4fd3-4c08-96a5-b43ae3bf38a2"
        },
        "item": {
          "id": "077ae950-ffaf-4257-83a9-94e25b003a5f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bce5014a-ff2c-480f-8cf7-91d6a4d39182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9aa2ea-a9a4-41c5-b21b-2c24e9dff552",
        "cursor": {
          "ref": "6b2b333a-6172-4e53-9d53-7344501030ff",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5e897515-d912-402b-ab62-9fd29032771e"
        },
        "item": {
          "id": "dc9aa2ea-a9a4-41c5-b21b-2c24e9dff552",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "299e9a99-bc4b-4d16-ba36-62ea318574bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009a5148-d156-4730-b0d0-fb89be21180f",
        "cursor": {
          "ref": "86df1e1a-f7ed-4809-b101-9dec7b26558a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2968fcf3-97f6-4b80-839d-d6f8b8ac7da3"
        },
        "item": {
          "id": "009a5148-d156-4730-b0d0-fb89be21180f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3ef60178-d348-4d5f-8400-cc2714f11900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebf48f6-1ded-4a59-9ab7-150317720b30",
        "cursor": {
          "ref": "ebe378cd-59e7-47a8-a61d-620e719e0bc6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e5a9a64-1bd3-4a4b-8bc4-7e211ae7a1da"
        },
        "item": {
          "id": "7ebf48f6-1ded-4a59-9ab7-150317720b30",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ae291719-63ac-4129-83b0-a573c68e051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2590158-baa4-4c8f-9840-e6a484c8fe5a",
        "cursor": {
          "ref": "10af215c-1932-437d-a134-8ea142b9ba0e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "733b2c74-c7d6-4e60-b09c-5d95d08aa2ab"
        },
        "item": {
          "id": "d2590158-baa4-4c8f-9840-e6a484c8fe5a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ec8efcf-8742-448d-b0b2-3184f13a9534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c848067-3fd8-4718-9292-51e2e7b675f1",
        "cursor": {
          "ref": "850315ea-1dce-40d7-927b-678f7486f122",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e5fecf2b-dbcb-4de5-8d56-9f64814e3f8d"
        },
        "item": {
          "id": "9c848067-3fd8-4718-9292-51e2e7b675f1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7388a79f-0aaf-42b1-aa8f-06a551f30da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5a86e5-d109-4e73-bbfc-92cb52b31ff1",
        "cursor": {
          "ref": "d7b11aa0-9e08-44f4-ad1d-ef7c8580d087",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a31a80c-4115-4a38-b88c-4bb5346f0127"
        },
        "item": {
          "id": "7b5a86e5-d109-4e73-bbfc-92cb52b31ff1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "88056bb1-58dc-4e69-8727-c17cce4547b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4949d0-8ecd-44ad-945f-067c3cc2bcb4",
        "cursor": {
          "ref": "1ca30bfb-d0ce-4d36-a0df-7903bc1fbd46",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "45d3e58a-59bf-466c-be1a-6589200ba1fb"
        },
        "item": {
          "id": "6b4949d0-8ecd-44ad-945f-067c3cc2bcb4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "041115e9-0d01-4535-a2e5-a4dc660c0295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014100a-8b0a-4152-8b39-1eba1db83ab6",
        "cursor": {
          "ref": "d0adda85-e0be-46b7-a687-aadeb77b96a5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c310d2d8-3aab-4eb1-a899-eb94002dc65f"
        },
        "item": {
          "id": "e014100a-8b0a-4152-8b39-1eba1db83ab6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7cde4ad3-fe98-4ef1-bbd9-4df973023023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1caa2e-57f4-4f74-b8bb-a7c2d6b94d2d",
        "cursor": {
          "ref": "4f1602ee-8be3-4b4f-88a7-ea6dbff364f5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3f5c6de7-433f-4e95-a655-c770301550e8"
        },
        "item": {
          "id": "8c1caa2e-57f4-4f74-b8bb-a7c2d6b94d2d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0fd04b9c-5ea7-4ca2-be16-0ca6c8fd42d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bee3cda-d82b-4a58-85d1-d0d8a162aa87",
        "cursor": {
          "ref": "0eccab8d-5313-4ab3-9aef-a3bc3c7b0903",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "48914215-e78a-4c52-93eb-20c88bce718f"
        },
        "item": {
          "id": "2bee3cda-d82b-4a58-85d1-d0d8a162aa87",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8dfbe000-72ff-4a73-b401-30e7ed8282f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b276ef-6c30-450c-8523-cf6129c773a8",
        "cursor": {
          "ref": "e0e6a256-d413-4ee8-8f02-06ee4dd1e81e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cf8a1012-f916-4b71-80d2-dbd792c4ac8c"
        },
        "item": {
          "id": "d9b276ef-6c30-450c-8523-cf6129c773a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1f0ba32c-1e8e-4aab-9d3d-6085d005a8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c333ea8c-b968-4878-948a-818b45646c2a",
        "cursor": {
          "ref": "32cdded8-f246-4e12-9fb8-690ad966ad4b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a78fb437-a8b7-4348-973f-37ab80697baa"
        },
        "item": {
          "id": "c333ea8c-b968-4878-948a-818b45646c2a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "67e34a52-d2a3-46f2-a01e-96be77a581c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdac5d6f-8462-4287-b811-b5546c90a10c",
        "cursor": {
          "ref": "1eb32f34-8ee3-44e2-b33b-02adc5a84a55",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "36aff978-8723-4e05-af0a-ea06549292fa"
        },
        "item": {
          "id": "fdac5d6f-8462-4287-b811-b5546c90a10c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4467287e-321c-44e8-aaf8-b99f99db7031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c89809d3-64ae-4bd8-a54e-dd21a3ee90ce",
        "cursor": {
          "ref": "593fc10c-a624-46dc-8623-889f939bb892",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "14e2e779-2be5-47f1-9849-e54bbeeaa067"
        },
        "item": {
          "id": "c89809d3-64ae-4bd8-a54e-dd21a3ee90ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "95001831-b659-4d47-b0c0-613deb75262c",
          "status": "Created",
          "code": 201,
          "responseTime": 10881,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0e29cd-680f-408b-be41-4d86f5bb2d6e",
        "cursor": {
          "ref": "9aeee2db-0c64-4fbd-97a3-a5eb6e7aad48",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b61c117c-b32f-4cca-9fc2-89f4b058de9b"
        },
        "item": {
          "id": "fb0e29cd-680f-408b-be41-4d86f5bb2d6e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f04396b7-eccf-4d91-a7de-930a59784d1a",
          "status": "Created",
          "code": 201,
          "responseTime": 10145,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c989157-3549-47f9-af5b-c74693c06bf7",
        "cursor": {
          "ref": "73ade7d3-d1b2-4c5b-8f6a-587573417813",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "20a1f64f-f03c-46eb-affa-dfaad43c66bf"
        },
        "item": {
          "id": "2c989157-3549-47f9-af5b-c74693c06bf7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3a66cbdd-5bad-473c-9e3c-254a9baf48d0",
          "status": "Created",
          "code": 201,
          "responseTime": 10242,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c27825a-3aca-428c-8bfe-98cd5b955902",
        "cursor": {
          "ref": "f4d4da27-cfa7-44af-b0a3-f1087e2e6f04",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "218cc6ab-88aa-467e-a67e-b4cd682e3a20"
        },
        "item": {
          "id": "7c27825a-3aca-428c-8bfe-98cd5b955902",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "038fe7fd-4cb9-429c-ae05-1a248e967d28",
          "status": "Created",
          "code": 201,
          "responseTime": 9688,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24848d59-9688-4171-b41f-e26304a5a836",
        "cursor": {
          "ref": "e66693ae-891e-4849-aa6f-2921d1ed83b6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "64286237-22fd-43b4-b1a4-ed9bd2955ab8"
        },
        "item": {
          "id": "24848d59-9688-4171-b41f-e26304a5a836",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "14124ccf-49c2-4ebb-a703-995df4ff8d20",
          "status": "Created",
          "code": 201,
          "responseTime": 9565,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-10T00:40:47Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-10T00:40:47Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "802b5962-0147-41db-a761-337d13bd9265",
        "cursor": {
          "ref": "20c48320-c128-4b13-ad82-f17c95a1d281",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2a9990b2-46d4-44fb-a17d-1df29da7078e"
        },
        "item": {
          "id": "802b5962-0147-41db-a761-337d13bd9265",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "31adcfe6-6dbd-48a8-81a5-6c4987c68988",
          "status": "Created",
          "code": 201,
          "responseTime": 9639,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b1a250-604d-4363-88ce-d5525836caff",
        "cursor": {
          "ref": "ed162e10-bef1-4b89-bc31-c15220daf52c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a19f036a-4d0f-44ad-a142-9783d9ca6ca2"
        },
        "item": {
          "id": "71b1a250-604d-4363-88ce-d5525836caff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4c89362b-93b1-4518-aa4d-40c0fb82c366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b91153-ff15-402e-8f76-4f1c8b62b5cc",
        "cursor": {
          "ref": "8759deac-23fc-4fa2-ac88-f82072b686f0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a1fc7415-d91a-44a0-a90c-c9c12143896f"
        },
        "item": {
          "id": "a9b91153-ff15-402e-8f76-4f1c8b62b5cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a40a655f-e9a5-462f-8742-98978f52557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb3f01e-8014-4e97-b7f7-ab99408cd3cd",
        "cursor": {
          "ref": "5b93dd79-7143-4b7d-b451-e9d9a8293937",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8e80e95f-7172-459e-90b5-939c7d2a15a0"
        },
        "item": {
          "id": "bbb3f01e-8014-4e97-b7f7-ab99408cd3cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7591b2fb-ebbf-4af4-bb86-5f7c20dd981c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf31c5a-ecb0-4ddf-ba71-f68dd11b5e06",
        "cursor": {
          "ref": "feb85a14-9e1d-4aee-92a9-0929cbd5a847",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "66a37d6d-6ddb-43fc-b2c7-a51752b83367"
        },
        "item": {
          "id": "3bf31c5a-ecb0-4ddf-ba71-f68dd11b5e06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "404c020b-1245-4c8b-a4a6-85a9e0925940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f98a72-cf2b-4c3a-a12f-5821cfe6e106",
        "cursor": {
          "ref": "6b0e25cb-75eb-4ac5-bfa3-323c63edbdba",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "04bf6125-ce94-4dc4-8f46-93f9499ebd3b"
        },
        "item": {
          "id": "51f98a72-cf2b-4c3a-a12f-5821cfe6e106",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "159eaa25-1696-48a3-a519-313f3904623c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b45f9b7-3a5a-4356-b3dd-9369981a24a3",
        "cursor": {
          "ref": "c6c43b0c-291e-42c2-8361-6b6c7832217c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fae39c3f-1db3-48d6-947d-0bedfbde70fe"
        },
        "item": {
          "id": "2b45f9b7-3a5a-4356-b3dd-9369981a24a3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c111330d-d21d-4e90-b2f2-bcbdf2762144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2269257-e6a5-4887-b1d0-23ac250d5c46",
        "cursor": {
          "ref": "e78a2ba4-170e-4cfc-a3ec-33ae2feab5e1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "17479e51-be21-490b-a95f-6f28a1351b02"
        },
        "item": {
          "id": "e2269257-e6a5-4887-b1d0-23ac250d5c46",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9a3ba55d-aede-466e-8d91-066e8ebbb5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589be039-c362-4b37-b785-ca0b5ddf84d8",
        "cursor": {
          "ref": "507376e7-1d31-4696-872a-8f9e4e6cde46",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b83b67bf-f288-43dd-945e-6622a57d04d9"
        },
        "item": {
          "id": "589be039-c362-4b37-b785-ca0b5ddf84d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eafddb4d-48ab-4859-846e-4c502b878804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5cdb55-ab8b-4573-bb00-3de15764a845",
        "cursor": {
          "ref": "3ddb7fec-00c1-4cfc-9d68-6c39c2e5e239",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "21bb48e1-4025-4347-a273-a7e88c72de17"
        },
        "item": {
          "id": "6f5cdb55-ab8b-4573-bb00-3de15764a845",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e07213d-cf9f-4e7b-a620-3a1dfaa5dada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f52062d-18bd-4f5d-80e4-861d98e20344",
        "cursor": {
          "ref": "c01bd916-debb-444c-a035-1b2df2753433",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "83ca8866-83f6-439a-a7c8-905ee9cac9e2"
        },
        "item": {
          "id": "0f52062d-18bd-4f5d-80e4-861d98e20344",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "db5af6a9-82d2-4a5a-9d6f-ef360cf6fac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2deee9-246f-4494-8c75-d730fec9c171",
        "cursor": {
          "ref": "7f3e16a9-25f8-4441-b835-100e09bafc1a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b7ac536-b2ad-436b-bdd0-3c0313b118f3"
        },
        "item": {
          "id": "ee2deee9-246f-4494-8c75-d730fec9c171",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b1f49d4b-2680-4339-a202-c73ce0d0546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e711d5-5e51-4aa4-8f03-e790a00511b0",
        "cursor": {
          "ref": "42906a61-d591-4c4b-99c2-e6ee7b3ffd3b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5fccb5f4-c8b5-4e81-a9ec-2635849136de"
        },
        "item": {
          "id": "d8e711d5-5e51-4aa4-8f03-e790a00511b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4825c932-c0e7-44b4-9473-e596b6ae6506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9991192e-9bbc-40f6-bb51-c25380ad0f30",
        "cursor": {
          "ref": "704bb18e-23c9-4877-9c83-7e2f4e026b94",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "877e643f-d46a-4208-91ed-11bef7b99eb2"
        },
        "item": {
          "id": "9991192e-9bbc-40f6-bb51-c25380ad0f30",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2311e88a-76ac-47b9-9166-7495efc3f05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2289c697-9992-4448-8111-1de2eca911c1",
        "cursor": {
          "ref": "54db4c5a-5879-43b8-8c97-9294f940a1b7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8045e019-20d5-496f-99c7-24edbb077628"
        },
        "item": {
          "id": "2289c697-9992-4448-8111-1de2eca911c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a2e1083-a044-47ac-ad52-133d8a8ebbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1d6fa9-5fd2-4678-a1a2-cbf61ce41817",
        "cursor": {
          "ref": "848c35d6-1432-4d2e-a990-0b5d2c597d26",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1142f381-70c6-4ab4-8dfd-db8635dccc3f"
        },
        "item": {
          "id": "1c1d6fa9-5fd2-4678-a1a2-cbf61ce41817",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3650d0b5-bce3-46a0-bc2c-2d64ec8435ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f10a2b0-5c2e-4ebe-9637-6a0ad8cc9e9d",
        "cursor": {
          "ref": "59777e4d-d171-43ac-adfb-0e272e531473",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8351aef7-7faa-4bb2-8f4d-7766b64bf197"
        },
        "item": {
          "id": "7f10a2b0-5c2e-4ebe-9637-6a0ad8cc9e9d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7aa5530a-ab57-477b-abf3-538dd9aad018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e27eec3-0493-440e-98c4-1b6c76d86b96",
        "cursor": {
          "ref": "407f4de4-0556-4536-8cc2-019272a1cb7d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5b2ef56f-d7b6-4bf0-944d-fc1ef47d2035"
        },
        "item": {
          "id": "5e27eec3-0493-440e-98c4-1b6c76d86b96",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b0d4cb6-707e-49dd-a320-2c2e4ef40c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f654cd3-512c-4eb5-ae1e-6c856574a6e4",
        "cursor": {
          "ref": "69259e41-cf3f-4d1c-b22e-e8f3c6dca134",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c67f45cd-86c0-4df6-96f0-0bc3fba3240e"
        },
        "item": {
          "id": "6f654cd3-512c-4eb5-ae1e-6c856574a6e4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "10142db4-98a6-4275-8107-debf95035b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f40e88d-0542-44d8-8092-d65121f9c790",
        "cursor": {
          "ref": "83ad0c29-d83f-48e9-8ebd-f77826f34c75",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "05a94947-dff8-4ac8-b8af-e7aae248a0f2"
        },
        "item": {
          "id": "6f40e88d-0542-44d8-8092-d65121f9c790",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a71105fc-ce66-4b88-99a2-0212e8a953ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22efb01e-bd1e-45c9-b2c6-af38bd0477db",
        "cursor": {
          "ref": "da0eda78-7db7-4a32-bf06-1953cca5286f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "41005c90-9ce6-43f0-a7b3-b1b43dd45819"
        },
        "item": {
          "id": "22efb01e-bd1e-45c9-b2c6-af38bd0477db",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6b255eaf-78bf-4385-af07-f2d2c7014f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6416e6-26ce-4b11-8671-12a126a34dd4",
        "cursor": {
          "ref": "c658b02e-d734-4117-9ba8-884add5878fb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e6947647-ae6b-4816-8abb-ae396788417a"
        },
        "item": {
          "id": "3f6416e6-26ce-4b11-8671-12a126a34dd4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "03e0128b-7be3-4261-a445-244c4d2df323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4ede09-3ca6-4393-9ba6-c2ba506c5fc0",
        "cursor": {
          "ref": "d8587c38-206e-4c25-8492-11d1f926cd48",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2b13cf58-505e-4867-a05c-7699c3d0e1ec"
        },
        "item": {
          "id": "fd4ede09-3ca6-4393-9ba6-c2ba506c5fc0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52d37ac5-8dc3-4815-b3db-bc5ae29607ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b966eefb-5154-461b-8404-1c7a43b00586",
        "cursor": {
          "ref": "cda28f5f-000e-4c3e-93e9-784f62c02cc9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4b9e26df-dfb3-42eb-9258-398251e639bb"
        },
        "item": {
          "id": "b966eefb-5154-461b-8404-1c7a43b00586",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc6c3df5-3156-42a7-aa15-1c96e1518b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026ec0aa-cad7-44af-99ee-28f7731fa819",
        "cursor": {
          "ref": "3b26f857-d1f7-4273-93e2-92ccc4125cbb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1b49b2cd-e375-4e7f-8596-c5609fa3714d"
        },
        "item": {
          "id": "026ec0aa-cad7-44af-99ee-28f7731fa819",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "46b23f6d-b0d3-44d9-b355-255b38bf17f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4606eb-abc3-45bb-a953-bbe666dc116a",
        "cursor": {
          "ref": "ced4c89b-65b0-4a7d-9ee0-97d745852aa5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e839ff30-69ee-4ab8-a76a-4774b4e7ab7e"
        },
        "item": {
          "id": "ab4606eb-abc3-45bb-a953-bbe666dc116a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2d7b6349-0e13-4174-96f4-7d564cb387c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a8ff3a-3647-405f-8113-eb36ff387c56",
        "cursor": {
          "ref": "e78d2b9b-681e-4531-ae09-24c8548210f0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c33d767d-413a-435c-8768-8b6ebde59eeb"
        },
        "item": {
          "id": "75a8ff3a-3647-405f-8113-eb36ff387c56",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b2b45ca1-02da-4f2e-a417-b8c7a37b13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb334e6-e829-4cc1-a6cd-5b9b33772e04",
        "cursor": {
          "ref": "ec9fa1c2-13ef-4d5b-971e-e7c0610dab73",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fdbd643f-9112-49f2-815a-427a628101a1"
        },
        "item": {
          "id": "1bb334e6-e829-4cc1-a6cd-5b9b33772e04",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "45f99042-00dc-4092-99b7-6c0eb94754ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9901dd-9838-4482-a926-2789898764b2",
        "cursor": {
          "ref": "97857ebb-afe5-4318-a121-ef650653e45f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "39129835-144b-4dd9-91cc-7a36bcf739ae"
        },
        "item": {
          "id": "5d9901dd-9838-4482-a926-2789898764b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e279a0e5-fbb9-4735-a3eb-1b49063315a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea35fde-5325-45bb-b14b-aeb916355c8d",
        "cursor": {
          "ref": "ba19b685-7be2-416a-89f8-370754fc581a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "939c3bf5-e5f7-4bf1-9461-21f754f56b92"
        },
        "item": {
          "id": "4ea35fde-5325-45bb-b14b-aeb916355c8d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fb401e19-d313-45c3-9394-9c98abf10a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96685658-179c-4704-9734-de2298e49173",
        "cursor": {
          "ref": "2ea0c88a-f420-4a85-a204-5f4fa7039467",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "60805d97-6ce2-4d47-8a4c-c13ff41186f3"
        },
        "item": {
          "id": "96685658-179c-4704-9734-de2298e49173",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0eb0777a-c019-4fa8-a4e4-12aa6da12c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3813eab8-5777-443a-a8e7-43c858964d6f",
        "cursor": {
          "ref": "4ad7c404-3068-43ce-bb00-cdb982146cbe",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eff48abb-3c14-446b-a61c-b30089207f47"
        },
        "item": {
          "id": "3813eab8-5777-443a-a8e7-43c858964d6f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f68d3e90-1a65-4dd5-87c0-7f7119bc1891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941b8f27-2ea1-4e18-bd69-819d0eb43797",
        "cursor": {
          "ref": "8c98abbe-44a6-4ffa-8b17-bc0e7989243e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7730f5f9-bd8f-47bf-a9d3-5e2b3c73080c"
        },
        "item": {
          "id": "941b8f27-2ea1-4e18-bd69-819d0eb43797",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "08850da8-3bd3-4f93-81cf-55270149df33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf75260-c375-49b0-8399-d11254b9ffbd",
        "cursor": {
          "ref": "5dea53c7-9a62-4390-a908-4ebd53720cc4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a1215c15-0dcb-4f5f-9078-49493f9d70a1"
        },
        "item": {
          "id": "caf75260-c375-49b0-8399-d11254b9ffbd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f58471cb-4fc2-409f-8f50-10fda2c91db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdecfb50-a8f9-47e2-966e-29572600f797",
        "cursor": {
          "ref": "3b845f2e-1951-4e95-8607-a74f429df9c7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6bed884a-8bf9-4081-992e-14ef0a3181fd"
        },
        "item": {
          "id": "bdecfb50-a8f9-47e2-966e-29572600f797",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ec04ff49-b31a-40ac-a67f-920b96983838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b2566-2d65-4c37-945a-5e7cb2d0594f",
        "cursor": {
          "ref": "f5d0a5ac-1fce-49c0-bde5-6186cdf1b06d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e4b47e8-d82e-49ba-89f3-0c9e80ffeea3"
        },
        "item": {
          "id": "2e6b2566-2d65-4c37-945a-5e7cb2d0594f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "747f97cb-6a3c-4f94-ae0e-3eb739477f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3428fb-9ea1-44d9-91e4-defb6c9a560d",
        "cursor": {
          "ref": "b8cb3ffc-b5e0-4b21-ab6d-7c4bc22a0064",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "16f518b9-26da-4a54-85aa-6a2448939e25"
        },
        "item": {
          "id": "1e3428fb-9ea1-44d9-91e4-defb6c9a560d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fd8739e2-6d06-4c4a-a3e5-72e5834b68d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bac5c1-e524-429e-b846-5bb655238dd5",
        "cursor": {
          "ref": "06a1b157-dfa3-46de-a492-ae59ee2eb67b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4af43a63-0b78-48eb-ba05-915afe05f14d"
        },
        "item": {
          "id": "92bac5c1-e524-429e-b846-5bb655238dd5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1b57032a-2024-46ef-bff6-2b20f805979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2970e-23bb-4772-aae8-9cc048a4f1a8",
        "cursor": {
          "ref": "d4e06a2b-43b2-4e2e-affa-372b0b5dbf32",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7d8b7b32-bd30-4cd6-9f9b-a615d9e49103"
        },
        "item": {
          "id": "a2c2970e-23bb-4772-aae8-9cc048a4f1a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "502f173b-13a8-40ef-8d3c-44e99652aa40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddda4c31-c413-4b61-bf17-2f76ba59f19f",
        "cursor": {
          "ref": "ea7327d8-ed5a-424e-8547-b9870d972f97",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ac71935-1a80-4ede-a2c0-3205eb6c17f7"
        },
        "item": {
          "id": "ddda4c31-c413-4b61-bf17-2f76ba59f19f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5cef64e4-1950-43dd-b2fb-6cd455c8d04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc7be53-6cb7-47b5-82ea-fff0ce105118",
        "cursor": {
          "ref": "6d5da5ae-10e1-4c83-9443-36686351f94f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e19348fe-8fe4-4dc6-a0f0-66dcad97c95d"
        },
        "item": {
          "id": "fbc7be53-6cb7-47b5-82ea-fff0ce105118",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c0bd8da5-1ebd-4004-aa70-1ff4aaf3bd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770b8286-6f06-4991-b6b5-7c2adb016a7b",
        "cursor": {
          "ref": "a9e3dec2-0b56-4bdf-b4a7-051ee51bcc69",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8729991d-ce67-4992-9b87-7bcff227d822"
        },
        "item": {
          "id": "770b8286-6f06-4991-b6b5-7c2adb016a7b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bff9fc9f-4b9c-47cc-a710-cbdd28d0bfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e58910-bbe5-40a0-85cf-3a94fb0d3779",
        "cursor": {
          "ref": "7bcae925-af86-4ce2-9484-2be4258a399e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5565807a-a4f7-4aba-b57a-72f809a96074"
        },
        "item": {
          "id": "29e58910-bbe5-40a0-85cf-3a94fb0d3779",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe96408e-e589-425c-adcd-3943b58867f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c4d25e-d46a-42e0-9689-dfdf5c75dc77",
        "cursor": {
          "ref": "a3f4d49b-3d85-490b-aacd-b6c47a035baa",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "08ebff89-c288-4d21-879f-bcdfcc2dc109"
        },
        "item": {
          "id": "02c4d25e-d46a-42e0-9689-dfdf5c75dc77",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a4942936-3553-4d80-8160-57d97fa8f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15289f6-396d-4e93-ad2e-81ea784619c1",
        "cursor": {
          "ref": "d71c0fed-86bd-4faf-8f7f-79828b208410",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2193512b-fe1b-4063-a55c-e57b6d6abd43"
        },
        "item": {
          "id": "b15289f6-396d-4e93-ad2e-81ea784619c1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f5865833-afd1-4ea5-976f-b59be29f5172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ae9f73-f012-494c-ac10-30ad93987660",
        "cursor": {
          "ref": "0ee39b3f-3665-487f-a76f-ac6716eb3a23",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "895f7392-333e-4b14-ba5c-fbc53fba075b"
        },
        "item": {
          "id": "04ae9f73-f012-494c-ac10-30ad93987660",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bf8a8444-4700-481c-8bb5-52a9f42025e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650c447a-bc01-415b-9418-27d116a72e11",
        "cursor": {
          "ref": "f0b940bc-b563-4193-8076-7605b7f6fc88",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b8bc6830-93c0-4470-aefd-709059d8cb69"
        },
        "item": {
          "id": "650c447a-bc01-415b-9418-27d116a72e11",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9f637aec-e65b-4c81-849c-86022c6db5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a22f9d8-b0e0-44de-b64c-b9965ba72a1b",
        "cursor": {
          "ref": "07c5f595-4a13-49a6-91e7-a84279f7fbd7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fd4adb4c-135c-4a92-bf7e-25bab7a2ef27"
        },
        "item": {
          "id": "5a22f9d8-b0e0-44de-b64c-b9965ba72a1b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4a078cea-7aa9-4403-b5fa-8885e370a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d59303-c68d-49e1-9ad7-d832c395cf88",
        "cursor": {
          "ref": "9dfec2d9-a730-43b5-a46c-e42ce87d8049",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f93cddcd-738f-402b-bb1b-9e17a8f0c255"
        },
        "item": {
          "id": "21d59303-c68d-49e1-9ad7-d832c395cf88",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ad5916bf-e0c2-4467-8390-266cb64ead27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9985a20c-9040-426b-b94d-ade0b0daa2f2",
        "cursor": {
          "ref": "ee563fe1-60ad-4eab-adc4-5f326c9dc9b8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0ffb0631-810f-4bb2-a278-8986bb0faedf"
        },
        "item": {
          "id": "9985a20c-9040-426b-b94d-ade0b0daa2f2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "21faa389-96e5-4ee6-83bf-9ac198718c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e167d00b-ae04-4e13-a8c6-f687f79a4870",
        "cursor": {
          "ref": "298100c1-bbb4-4ae2-90a5-356ce9db9520",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "12df50a9-4628-4f37-9eba-fca88902bbff"
        },
        "item": {
          "id": "e167d00b-ae04-4e13-a8c6-f687f79a4870",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed8a7eea-1cb1-4c0c-9f13-deb8386727fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab94c6e-f2eb-48d8-98fe-daa5d6e36d3b",
        "cursor": {
          "ref": "e15bf5f3-8482-4a5e-9a98-2e8a4fbb888a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b1d6f68f-caf0-4118-be9b-b19e460a0697"
        },
        "item": {
          "id": "4ab94c6e-f2eb-48d8-98fe-daa5d6e36d3b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "31868662-de66-4209-ad72-7084b063b1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d2612a-c7c0-425e-bf75-1d6f244ed487",
        "cursor": {
          "ref": "ea10405a-908b-4f7a-a43f-c8d684c70b5f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0841749d-cbf1-45de-a401-bbdabd123422"
        },
        "item": {
          "id": "00d2612a-c7c0-425e-bf75-1d6f244ed487",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff14c93d-1754-43b0-893a-2e8719d7c2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53acc091-d5fd-41ca-b8f1-c94b1b8c59c9",
        "cursor": {
          "ref": "85250959-dfc7-413e-b9d4-7ff3dee9db5a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fb04a1df-2ae4-4113-9e1c-520ef61e08f0"
        },
        "item": {
          "id": "53acc091-d5fd-41ca-b8f1-c94b1b8c59c9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "56c51d7e-928b-44a4-acbd-2def15acfd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d204fdd2-2484-4d6f-bc7f-9927391e7100",
        "cursor": {
          "ref": "3d59271e-d128-44f3-8d9e-6f2d7689bbbd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "84bc1c32-b3c9-4521-aedc-7430832494e1"
        },
        "item": {
          "id": "d204fdd2-2484-4d6f-bc7f-9927391e7100",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "235b9a30-ef35-4e7e-9506-b7f9c9f486cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf5729e-50b0-4492-ac2f-1b6bd5d56173",
        "cursor": {
          "ref": "08af50ba-db8e-4771-a973-b957ac4506cc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c6d43131-008e-4321-a315-b514c822066f"
        },
        "item": {
          "id": "8cf5729e-50b0-4492-ac2f-1b6bd5d56173",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dbc070b7-6973-410e-baa8-3900c1ac0842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd9d998-e5e9-463c-9002-cbb31a8655f5",
        "cursor": {
          "ref": "0ef2b3cb-c8c8-4c89-a909-cd44c7dce06a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d8730430-c914-4f25-8c98-9b90ab1a94cc"
        },
        "item": {
          "id": "0dd9d998-e5e9-463c-9002-cbb31a8655f5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "af56b5c1-4eb6-4790-a309-6c73f36d417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356a66b3-e093-4cc1-840d-54cdcb57684c",
        "cursor": {
          "ref": "0fd9a3a9-e31f-444d-8cba-fa6263bd8902",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ef772ca8-b6d6-4762-b8c7-bddad6c60007"
        },
        "item": {
          "id": "356a66b3-e093-4cc1-840d-54cdcb57684c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1941368c-1e25-4e61-ad3d-195bacb2e5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0816fcb-db19-46f1-9a8e-0b2cba5c7dfc",
        "cursor": {
          "ref": "125e5ba1-4fa2-432a-a60b-b50954a776d0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c31c52a1-aed6-478d-8849-a1a069e77cca"
        },
        "item": {
          "id": "c0816fcb-db19-46f1-9a8e-0b2cba5c7dfc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc645ab7-e464-497a-b75c-df7559dd6cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f0514d-2cf1-4849-9034-7511fafeebe9",
        "cursor": {
          "ref": "f4d1f753-695a-4b60-9a16-ddfdeaceaf9d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "02a14f17-b072-4002-8c8e-0e3eccb95494"
        },
        "item": {
          "id": "d3f0514d-2cf1-4849-9034-7511fafeebe9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d6f1c4be-01c2-41d2-b9e7-d6769465105d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a20cf9b-d5da-454c-858c-cf97ac3480a5",
        "cursor": {
          "ref": "cc5c9988-0dc0-4433-90b8-51a196bd0bfe",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e155ef1c-d8ad-44a4-b23d-c6b814b91606"
        },
        "item": {
          "id": "6a20cf9b-d5da-454c-858c-cf97ac3480a5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "483b9320-0cc3-47cd-9c3a-63282b1dd67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa99aca-a047-4b7f-b3cd-bd08bb4de7c1",
        "cursor": {
          "ref": "cf159e9e-c50d-4788-9606-4dcfadaa5e22",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bba5e44a-3e41-441b-95bb-fdc4eebeb8f4"
        },
        "item": {
          "id": "daa99aca-a047-4b7f-b3cd-bd08bb4de7c1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e85144ee-6541-442e-8773-06f76f75e1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d064852-232e-41d0-9494-3b2305796918",
        "cursor": {
          "ref": "38494f5d-62da-4fe0-bd61-5ea8525f4782",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "08155b6b-5d23-4ce1-bdfa-890567c3eed8"
        },
        "item": {
          "id": "8d064852-232e-41d0-9494-3b2305796918",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1fb0ac31-5cca-4dd2-8817-ce464ec21b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f11567-77c9-4e3b-b896-7e0581925ba6",
        "cursor": {
          "ref": "1976eaf4-1191-48f5-9073-a14eabeeca0e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "28b99860-6535-44e2-aa53-c8b6f9cf474a"
        },
        "item": {
          "id": "41f11567-77c9-4e3b-b896-7e0581925ba6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "05d7b24d-fd3d-46ef-a64b-1f38bcf487a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5743375d-6697-40ca-b55b-f22a89f9e1f3",
        "cursor": {
          "ref": "bb329b1b-4f3a-45b8-8dbd-a2e3d5d1c06b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b0d2e204-3636-4407-8e62-5e22bf00e3f1"
        },
        "item": {
          "id": "5743375d-6697-40ca-b55b-f22a89f9e1f3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b60cb5f2-afcf-40a9-8852-2eaa857e0cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f53bdf-736c-4d88-bcdc-f5bb57da3f1b",
        "cursor": {
          "ref": "5550d2b1-3e5a-489f-89e9-7b0d2a3904a6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7688b44f-d54a-45ce-bea2-5ed7b7348ebe"
        },
        "item": {
          "id": "30f53bdf-736c-4d88-bcdc-f5bb57da3f1b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "222a50f2-71e7-4a1f-bb9d-fb29d7f4d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf719ea1-532f-421b-8e6b-ae73fcd7067d",
        "cursor": {
          "ref": "470724dc-edef-4266-b857-c4ace22ac127",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fa3c18fb-8b20-4e03-9bec-5a5dbf823d2b"
        },
        "item": {
          "id": "cf719ea1-532f-421b-8e6b-ae73fcd7067d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "49dab710-deb6-4fcd-a521-98278cd158a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cdc919-bc8f-49d9-818b-613c0cfdcd24",
        "cursor": {
          "ref": "84195d62-3c4e-4395-849e-c14e9bc859e9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c3525d1c-079d-474c-992d-297c5fd368da"
        },
        "item": {
          "id": "17cdc919-bc8f-49d9-818b-613c0cfdcd24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "923a9ff5-7024-4746-a687-23b6509a015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e48aeec-7f0e-4380-b894-734a64a9243b",
        "cursor": {
          "ref": "f1f55cdf-d3f5-4a32-bee5-6c6923937849",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "50104d7c-b597-4129-af26-dc310c853e5d"
        },
        "item": {
          "id": "5e48aeec-7f0e-4380-b894-734a64a9243b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6e5559f9-cdcb-4473-a62d-74d5abbfefa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cda898-af18-4889-87e1-0aa866986c02",
        "cursor": {
          "ref": "0ebb7cc4-08fd-492f-81b7-0d1ba20f29c4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "77848925-3384-40e3-8859-85b05697dbc1"
        },
        "item": {
          "id": "71cda898-af18-4889-87e1-0aa866986c02",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "691b2644-99e0-493a-b4c9-421ac714c2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a07fd-221f-4620-90de-0a08789d2388",
        "cursor": {
          "ref": "42ae2597-3137-44ca-abeb-316c80add3a4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d28edab4-66b9-442e-bce1-1ba2756eb1ff"
        },
        "item": {
          "id": "ea5a07fd-221f-4620-90de-0a08789d2388",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03f9ea09-2df3-4c2d-bdc6-95138fb20e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b865c343-b6ff-4ab3-9995-39de1309d9fd",
        "cursor": {
          "ref": "3afd9f53-1453-440b-8f42-c8e4bbfa4c07",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15113921-8433-465a-ab3c-97170d7d6c41"
        },
        "item": {
          "id": "b865c343-b6ff-4ab3-9995-39de1309d9fd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "887e732d-9a3c-4afc-9dd0-861c91d8e8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c96417d-e07a-43fa-9b6a-0fbe0530bfba",
        "cursor": {
          "ref": "db7eb048-5b6f-41b1-aae7-a99d95446db8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ed4739d5-0c34-4737-949e-810fd4495d18"
        },
        "item": {
          "id": "9c96417d-e07a-43fa-9b6a-0fbe0530bfba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3c39c816-22a4-4b35-87d8-a122283731ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf2f16a-b907-4d94-bbb2-b48b0427d88f",
        "cursor": {
          "ref": "92ab7b85-8ce6-4312-b2f4-8fabda4669ee",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d829ece8-3341-433c-a919-88e06809dc5c"
        },
        "item": {
          "id": "0bf2f16a-b907-4d94-bbb2-b48b0427d88f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5992e279-b1e3-469f-a8fc-40b4f65e1394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4372453-da35-4549-963a-5d4d7cd08a40",
        "cursor": {
          "ref": "96785fb1-cb43-413f-aa22-d3607c1c7f51",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "df51b4b0-57bf-4358-8b66-2e9c9ceca438"
        },
        "item": {
          "id": "e4372453-da35-4549-963a-5d4d7cd08a40",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "37ed6862-7e19-4fd6-896e-9424f60e710d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d01cd7b-c950-454d-9d73-e9c7c4a2a536",
        "cursor": {
          "ref": "87927a0c-511b-4b07-970e-ad5912a0efca",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ccbbfa28-98bc-42be-aeb2-8d761009d485"
        },
        "item": {
          "id": "9d01cd7b-c950-454d-9d73-e9c7c4a2a536",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "880a14d9-c389-4313-bf43-af8fcef36dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97c5653-fbf0-4bb0-a6e1-314dcca4df81",
        "cursor": {
          "ref": "23cfee50-70d6-4037-a996-ffd799ec2074",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7d1f86d2-2845-4e5b-b0e2-84ad16ef35a2"
        },
        "item": {
          "id": "c97c5653-fbf0-4bb0-a6e1-314dcca4df81",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "14afae04-1bd8-42eb-a494-8d3e95cc9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754df76d-5164-4aae-b304-8d9b07be327a",
        "cursor": {
          "ref": "c8a2c671-c447-4105-9456-3d35324c114d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fe463842-1f93-4e08-ae61-310162b0450b"
        },
        "item": {
          "id": "754df76d-5164-4aae-b304-8d9b07be327a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8c69c8c3-e953-49bb-9509-7d8e2788032d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fc10ac-5101-41b6-8923-21667afca40e",
        "cursor": {
          "ref": "6d4d0d80-ba2a-4354-a388-a8e868a7d7fc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c28f644-e773-487c-8a94-a61db1b1eaf3"
        },
        "item": {
          "id": "00fc10ac-5101-41b6-8923-21667afca40e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a22d6c2c-5196-4894-937d-c5024f125cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd51f79-a1ca-456d-aa7e-583ee1473c7d",
        "cursor": {
          "ref": "56e343d9-aa1f-41a3-b806-27d110fb0088",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "59dc706a-06ac-4813-b219-fe5bad3e775c"
        },
        "item": {
          "id": "0dd51f79-a1ca-456d-aa7e-583ee1473c7d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "102e0930-1d15-4e7c-82c7-15ed18c4608c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32184ef-24d4-4b3c-998b-448d48ac27b5",
        "cursor": {
          "ref": "6129278e-787d-43a1-8137-d7da5af6cb3e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8e8705f8-a66a-46bb-8672-7047d3354b01"
        },
        "item": {
          "id": "b32184ef-24d4-4b3c-998b-448d48ac27b5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2ab6a2e5-5beb-4848-8d0e-ac71d745b611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decea804-ed4c-4811-8d37-ec4ff746c681",
        "cursor": {
          "ref": "c40e2b5d-bd2e-4ad1-96e1-c9c8642ca0cc",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0618d982-f83c-4279-933f-0fb6ca827336"
        },
        "item": {
          "id": "decea804-ed4c-4811-8d37-ec4ff746c681",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ae265974-2218-42ac-9f65-4ff9b3df289f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b921f3f-f0b0-41fc-94e6-4dc4f31ff80a",
        "cursor": {
          "ref": "f11b5d71-deab-4e0a-a6d4-735118f8824a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "04bebea4-6036-4547-9a75-6f7c3a6f7998"
        },
        "item": {
          "id": "2b921f3f-f0b0-41fc-94e6-4dc4f31ff80a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d98ffc30-b012-4b4e-a974-e8a4420d101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df033e02-b651-445a-91b9-26f2fb41f40c",
        "cursor": {
          "ref": "92290f84-7139-458f-bd78-c87dce5b575b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cf51d0f1-ff43-4071-9846-f819598f2108"
        },
        "item": {
          "id": "df033e02-b651-445a-91b9-26f2fb41f40c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5920ce42-8fa8-4ad5-9514-dd53ef233c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e32fa59-1d81-4c2a-84a4-3682c0ce35ca",
        "cursor": {
          "ref": "bf62b140-761e-4990-9618-ebc4d3f8f8b5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3f5d9e5e-cbac-49bd-afc3-9728900b1745"
        },
        "item": {
          "id": "8e32fa59-1d81-4c2a-84a4-3682c0ce35ca",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "398413ce-7574-4cd6-8a5a-3d81cf3de7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77faca0-0f4f-46e3-a3e2-cd2fdabeaeba",
        "cursor": {
          "ref": "c1f6d469-bee0-44cd-8e71-9c0491ba7b61",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b309a386-f8ad-4bde-be78-288a21926422"
        },
        "item": {
          "id": "d77faca0-0f4f-46e3-a3e2-cd2fdabeaeba",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "98616914-3712-4064-adec-d5e954b8e716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab41238e-ea82-4ae4-8baa-a28b5a9cc35f",
        "cursor": {
          "ref": "e25e91db-1a3a-4969-8d46-62f0cdfc2f92",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5c422502-f53b-496c-91ec-5f53952cad7e"
        },
        "item": {
          "id": "ab41238e-ea82-4ae4-8baa-a28b5a9cc35f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "52f5508c-f952-4883-be2b-8bd283c16ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2b1c1c-edd4-44a8-98bf-e87177f94b70",
        "cursor": {
          "ref": "c03ababc-14a3-43a8-9a35-e75c55076c52",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b50ba7b2-a363-45ba-a9dd-f454ecf9f312"
        },
        "item": {
          "id": "ed2b1c1c-edd4-44a8-98bf-e87177f94b70",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "02a4234f-621b-4a56-8841-147561985180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05efeb66-3d51-4456-919b-bc283d183fc9",
        "cursor": {
          "ref": "5d1a6217-6cd4-4101-82c9-c890eb34c4e5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "25223f86-ee95-4c39-a484-12a6487f520d"
        },
        "item": {
          "id": "05efeb66-3d51-4456-919b-bc283d183fc9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1ca565be-a580-49f4-a3dd-002cdee0e216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e9dd89-9925-4f54-9f0e-ed1d4f42547c",
        "cursor": {
          "ref": "47521373-91c1-41ce-94ac-93dbdf2d54c0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7086bd63-e27e-46b7-86d4-106ddad8dea6"
        },
        "item": {
          "id": "59e9dd89-9925-4f54-9f0e-ed1d4f42547c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5d15ed21-cf5c-41fc-bfb9-55a8f68e8ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3f1165-a104-466f-8f6b-bf5bc748565c",
        "cursor": {
          "ref": "6b517ddb-07d8-456b-b468-b87a59730c51",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "07c6239f-dde5-4342-8ed0-b8a8cd55faf6"
        },
        "item": {
          "id": "bf3f1165-a104-466f-8f6b-bf5bc748565c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f30e05f-ecb8-4248-9335-67d406f692be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eded8c57-a50b-4652-8c7b-dbd481a532ef",
        "cursor": {
          "ref": "67dd48a7-ecf2-4695-920f-6ce104f426eb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2adcb3d8-5534-4649-9f21-6fea3f0c42f9"
        },
        "item": {
          "id": "eded8c57-a50b-4652-8c7b-dbd481a532ef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "57a3e101-1c77-4cb8-8d96-776d96c32448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11af42e8-796a-4724-b557-61aa0a444cb2",
        "cursor": {
          "ref": "ef62a14a-68b2-41b4-a91c-b0722101c694",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a4b077d3-b149-4de8-b42d-2a72201d806c"
        },
        "item": {
          "id": "11af42e8-796a-4724-b557-61aa0a444cb2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af08c20f-7bc1-45f3-a41c-f5b163ff3963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd8503-c421-4373-85d5-26370e49d694",
        "cursor": {
          "ref": "c58eb7c3-9ed5-4e1f-91ec-65f905ff6399",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f7e4096-d170-4018-961d-600208f247aa"
        },
        "item": {
          "id": "c4fd8503-c421-4373-85d5-26370e49d694",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3ccfb3bd-0faa-4598-97ed-acc9719f6cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40375142-89bb-4eed-8157-717ed103a013",
        "cursor": {
          "ref": "3b05d893-fa0d-45fe-9454-f33b5cc2d2be",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e7f2fe2d-95da-4455-8ca0-b35b235db4cb"
        },
        "item": {
          "id": "40375142-89bb-4eed-8157-717ed103a013",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3982507b-f01e-4723-9e0f-9065478526d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693ac88a-4c3e-4375-a85d-5866a4b0eb27",
        "cursor": {
          "ref": "4598d4c2-81d4-4166-b031-93194112add6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3809661a-e256-4f5f-9aa0-74e0380680f3"
        },
        "item": {
          "id": "693ac88a-4c3e-4375-a85d-5866a4b0eb27",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a3b21de5-f774-4bc4-9073-d268958a8d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2476d73d-c9b8-4496-80c9-967194e18af0",
        "cursor": {
          "ref": "ee250506-a831-4bad-9553-e3443a4d07e1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d7fe750a-c1af-4c29-87a3-35810650f1b7"
        },
        "item": {
          "id": "2476d73d-c9b8-4496-80c9-967194e18af0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7a5ba2ad-1695-4eec-be94-c1fc58b45923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0ae550-1112-427c-a4e9-355d6fbebe69",
        "cursor": {
          "ref": "3cacd901-9c3a-4f35-bca0-38d75cbed13a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3fd3b953-73f3-4c64-9820-213c892be43f"
        },
        "item": {
          "id": "1a0ae550-1112-427c-a4e9-355d6fbebe69",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32279858-a36d-4e20-95e9-516aabceccb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebbeac3-f4b6-44cd-b895-81acfc672369",
        "cursor": {
          "ref": "b6a74c94-e4ce-43d9-98a1-4226ceda13c6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d30f1efb-17bd-4d08-815d-8d0fb948d519"
        },
        "item": {
          "id": "4ebbeac3-f4b6-44cd-b895-81acfc672369",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e7f41072-edc6-43d0-b3f9-2251fe7b1da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25489218-c14e-4926-ae79-794cafdbf11c",
        "cursor": {
          "ref": "6f35bf79-c088-4a3c-8b53-e3aeac60bf1e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aae9ca08-44a3-49f7-9144-3d25af098fb6"
        },
        "item": {
          "id": "25489218-c14e-4926-ae79-794cafdbf11c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6ee705bf-0c92-43fc-b797-337660465759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afff8fac-de9b-4e4e-b515-bb8b8a4ebd3b",
        "cursor": {
          "ref": "8f9eeaca-9262-40ab-8acc-19c609810218",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4cf57e00-fe73-49ee-8334-68235f792702"
        },
        "item": {
          "id": "afff8fac-de9b-4e4e-b515-bb8b8a4ebd3b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "df5b3d9a-f81b-4892-83a2-6f59d59a56f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68b9cbc-8a37-413c-bd4c-2568bea9fd3c",
        "cursor": {
          "ref": "32bb8e4c-74fb-4a6a-87c4-9843bafcffff",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f1b9dc79-a746-4147-b3c9-ac5ab72e9799"
        },
        "item": {
          "id": "a68b9cbc-8a37-413c-bd4c-2568bea9fd3c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "93db3d26-cfa9-4c78-855d-e2bbbaafa0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5500565c-5378-4023-907b-09fa6237a1f2",
        "cursor": {
          "ref": "8eff9edc-8634-444d-9bc6-b911db7ccdf0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ea7aec04-6676-4a76-945b-abe6855f8b63"
        },
        "item": {
          "id": "5500565c-5378-4023-907b-09fa6237a1f2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a4b2b8e8-f4f7-4639-b82b-f3891a9afba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beee547-6eee-461e-b86c-f7c496ed5a5b",
        "cursor": {
          "ref": "87cad610-1d99-49a2-839b-27a4878ab416",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "83e2b788-74ce-4f3d-a83e-8ebe4c45502b"
        },
        "item": {
          "id": "5beee547-6eee-461e-b86c-f7c496ed5a5b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "399fdb85-af5c-47ed-a2ea-f9b10f53ec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81988d25-a23e-44ff-ab3a-96a0a46fb027",
        "cursor": {
          "ref": "d284df6d-f038-40d6-a38d-17257ce35185",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "21a1e9c7-1f6d-402c-9b6a-d576f12c37ba"
        },
        "item": {
          "id": "81988d25-a23e-44ff-ab3a-96a0a46fb027",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3a4f5a04-6fb7-450b-a8a7-382904a9c0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac6363-87cb-44e3-bda8-bb9ba5bf3772",
        "cursor": {
          "ref": "43832c14-91e9-44f3-b8cd-56958fa42ef3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e5dd05fc-3b03-4c96-8d2c-4abe3287d1b2"
        },
        "item": {
          "id": "5eac6363-87cb-44e3-bda8-bb9ba5bf3772",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "923382d9-3c4a-4a16-9907-af8e6312cdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44694fff-a3cc-4b8a-a7ae-5c0553644514",
        "cursor": {
          "ref": "8214fcf8-9d45-4896-b5af-f9d2cccbb31a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cadfcfc3-fe35-407e-965a-b26d2d5ca95e"
        },
        "item": {
          "id": "44694fff-a3cc-4b8a-a7ae-5c0553644514",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bbd00077-1419-40b5-a53b-44e38feba2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a6338e-0fc3-45d2-99e7-a128f58fab32",
        "cursor": {
          "ref": "4e9ef7ba-6a13-4e0f-aa15-6d6103a78fc4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f00e99e0-ea9c-47c0-8a03-64fb00950298"
        },
        "item": {
          "id": "d1a6338e-0fc3-45d2-99e7-a128f58fab32",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5c92dc95-6501-41f4-8336-01bf13e5683f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d482f02-f74a-432b-85d2-0fb0c97a0e8a",
        "cursor": {
          "ref": "88659768-3e98-4caa-bde5-d868a44bcd3a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7a579a7c-890c-4545-b1aa-e95092ea9b3c"
        },
        "item": {
          "id": "0d482f02-f74a-432b-85d2-0fb0c97a0e8a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4faeeefe-c539-49ce-b88f-542d39e20da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f3850c-83ea-4406-be79-b3b15c655ce7",
        "cursor": {
          "ref": "c30bb998-6b08-41a3-a1ea-18f42163b765",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e5f74d3b-81ff-4af8-9860-f32f64829b36"
        },
        "item": {
          "id": "e5f3850c-83ea-4406-be79-b3b15c655ce7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0551ba21-9966-4dc4-9dc9-b4ef7e835589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f74e9c-2d36-486c-a1e6-99e51fa1f503",
        "cursor": {
          "ref": "274da650-2b62-48e0-840e-ebae837646e5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "782abb26-1c26-4de8-b08e-6fc7401a7647"
        },
        "item": {
          "id": "f7f74e9c-2d36-486c-a1e6-99e51fa1f503",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "55fa075b-3d10-45ff-a360-ef4be6298876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69591624-5a85-4e25-a8ad-679dc738cb9e",
        "cursor": {
          "ref": "2d8f7606-ca08-4eb7-96c4-de812cd19047",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d18a74e-4bce-4323-9655-399f7d91c039"
        },
        "item": {
          "id": "69591624-5a85-4e25-a8ad-679dc738cb9e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c483d988-644d-4829-9e54-886b101343cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4267e7-08ac-4853-b15f-7351293739cc",
        "cursor": {
          "ref": "66f965c6-5f9c-4950-a0fd-95cddfa2e8da",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d301c477-4854-4728-9771-20df3655ae64"
        },
        "item": {
          "id": "ee4267e7-08ac-4853-b15f-7351293739cc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "adc76d42-b962-477c-bd42-963b2d016c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add53d94-284c-40fd-a576-8694d3b2a78e",
        "cursor": {
          "ref": "c1caa14f-5b12-4428-9eef-e08d88aa6b2c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53999bd4-730a-41ed-bc9a-579651cd1908"
        },
        "item": {
          "id": "add53d94-284c-40fd-a576-8694d3b2a78e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "350aa912-5802-421f-b1bf-96f1017812e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8b831d-ebcb-4e17-a61b-f1bd2a8ca8fd",
        "cursor": {
          "ref": "49c16e8a-a922-4161-a157-8ff1e5bfdb29",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0a6620df-bdac-4d83-b557-f0c8f58e53bd"
        },
        "item": {
          "id": "bd8b831d-ebcb-4e17-a61b-f1bd2a8ca8fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "99ad993a-c96b-4546-8e55-6a3098c8841f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0a4b2-fbf9-4da9-834e-7bd0eed7f9b7",
        "cursor": {
          "ref": "3d8ac76a-5a8a-40fe-b9f7-b49b79c5696a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be71a8a6-9c23-4635-8ef4-4a84d401e2be"
        },
        "item": {
          "id": "88f0a4b2-fbf9-4da9-834e-7bd0eed7f9b7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "916f6781-7ab4-4866-9014-a53bf2119e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec2ed51-356e-44a5-ab34-0491a44cad06",
        "cursor": {
          "ref": "27fc9170-9021-4298-ad27-aa260325ba88",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b6e1cf9b-1043-4fe2-a939-79bb2f004ee4"
        },
        "item": {
          "id": "dec2ed51-356e-44a5-ab34-0491a44cad06",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9925c08f-38ba-4151-8cf8-55ef4fcefdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11378219-d6cb-4bcc-aa63-d6d0aa1583b6",
        "cursor": {
          "ref": "731b825c-7483-4533-a80f-cce09efe1730",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3422e83e-2372-47db-b24a-9a7f06c0e9cc"
        },
        "item": {
          "id": "11378219-d6cb-4bcc-aa63-d6d0aa1583b6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "58b5f991-c977-4404-a40a-ce6a1fac009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf3cebe-a49d-4566-9866-d4086b3509dc",
        "cursor": {
          "ref": "ced7eb94-de0e-4188-b6c0-16b3c60b148e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "18b3b579-9237-442d-b768-4d8bedd353d7"
        },
        "item": {
          "id": "5bf3cebe-a49d-4566-9866-d4086b3509dc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1307f2e2-c855-4bf4-b148-ebf246bdba31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7419a3ed-4726-4a53-b190-a8520230933b",
        "cursor": {
          "ref": "b7b529f8-a2f5-4554-ab48-ba1bfd5b60ae",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4605c2e0-0d66-47e0-ba8f-bf6e3e8a8bc6"
        },
        "item": {
          "id": "7419a3ed-4726-4a53-b190-a8520230933b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d0b41bd8-29e2-4d94-9beb-829bb60748b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8e3208-1fc0-4225-a42e-d47b85c0963d",
        "cursor": {
          "ref": "a3c79387-7fb7-4caa-98de-d51ee66fce88",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "160b848f-e804-4d6e-8471-335053965e1b"
        },
        "item": {
          "id": "7d8e3208-1fc0-4225-a42e-d47b85c0963d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fe0677ea-3407-4c2d-832e-4bf06040ad5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c8941-4a9c-4e54-bf9e-590f0a906b39",
        "cursor": {
          "ref": "5cb997ec-b1fe-4aa6-8a36-d48c43bf842c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4bc817fb-0578-417b-873a-93d36dc597a7"
        },
        "item": {
          "id": "e48c8941-4a9c-4e54-bf9e-590f0a906b39",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2aa04b52-b7fa-4d79-b0a9-596c3ffa6ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e246335-b961-4c6c-b11a-f5afbc47a2ca",
        "cursor": {
          "ref": "ac432faa-622f-442c-9bda-a17afe093073",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9b843769-8d1b-4e60-8bf1-934aaff3e07f"
        },
        "item": {
          "id": "3e246335-b961-4c6c-b11a-f5afbc47a2ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aafd93dd-2e6c-454b-9ce4-1b214c4bee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fab04a6-322b-469b-90e7-67c67f8531b7",
        "cursor": {
          "ref": "4c8da2d0-6f02-44f1-9416-e37ebf328f0d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c39c0b71-819a-44ea-8ef8-1cb68481373d"
        },
        "item": {
          "id": "3fab04a6-322b-469b-90e7-67c67f8531b7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c5be5243-5454-4475-a0cf-feb033b37710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37049c06-6d59-4799-844f-d070c167ce6e",
        "cursor": {
          "ref": "a3b6efe8-4e9e-4fbf-a522-5025f17ede2e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07b43eae-bc56-412f-b5d6-4353eaab4277"
        },
        "item": {
          "id": "37049c06-6d59-4799-844f-d070c167ce6e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "052ff2e5-7905-4c73-8651-790c3b517bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8030f529-e463-4dc4-a00e-3a9b0cde26a0",
        "cursor": {
          "ref": "a75deb51-bca5-4d65-b254-624302b7f696",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cd55ca14-d7e9-4c9d-adb8-41c437b62ace"
        },
        "item": {
          "id": "8030f529-e463-4dc4-a00e-3a9b0cde26a0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9ebb6702-a8ab-4ced-8fd9-5faeb69bfed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f39703-a13e-4161-96a6-42f314f57b6c",
        "cursor": {
          "ref": "cf620813-5350-432d-8709-4a0cae58aeea",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d8a27311-6cae-4200-b760-a48a23e33a09"
        },
        "item": {
          "id": "77f39703-a13e-4161-96a6-42f314f57b6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "251d34c6-d6df-4c8a-9bf0-ab204799f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4cfab4-dacb-4cd4-9d06-b10e848dd1b0",
        "cursor": {
          "ref": "9ef5e89a-0255-4bda-bcc9-65354d0915f1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5760bf52-ffc6-43e7-9e29-52ef0158855a"
        },
        "item": {
          "id": "cd4cfab4-dacb-4cd4-9d06-b10e848dd1b0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "71c46975-9bbb-422f-aeb3-47490cb51167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa27621-2097-465e-a020-a77fda818578",
        "cursor": {
          "ref": "65d6660e-85f9-438f-b47d-104eeb394875",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cdf2ad4c-9020-4b93-83b8-45f0a0c08906"
        },
        "item": {
          "id": "bfa27621-2097-465e-a020-a77fda818578",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4923f096-6f3c-45c0-8e9e-3b00ed3512be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ca4f27-b83b-48b6-b046-2a34f2dba7a4",
        "cursor": {
          "ref": "01507c95-f190-47c2-84c2-867d3b2dc2b9",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "af9adeed-ec21-4d42-8895-4d8d7cd5157c"
        },
        "item": {
          "id": "c1ca4f27-b83b-48b6-b046-2a34f2dba7a4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12a4723d-c2ec-433c-a62b-020a54396bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5ab54-470a-4ad3-aa99-62d9d2a7cb09",
        "cursor": {
          "ref": "b301713e-2d96-4441-a55d-11b423994f72",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f5e49aae-a6ad-48e8-93bd-e700d80c0560"
        },
        "item": {
          "id": "99f5ab54-470a-4ad3-aa99-62d9d2a7cb09",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c8015d43-6a14-448c-854d-e99c08365e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7409ff1-caea-49af-b9e3-a594ed28281c",
        "cursor": {
          "ref": "30bb06ff-0a5a-443d-96f6-9e46da64a842",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9b9971da-162a-422d-8eca-c8a8096817d4"
        },
        "item": {
          "id": "e7409ff1-caea-49af-b9e3-a594ed28281c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a17fb4a7-84f5-4b51-a947-ac737af31b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852de5ea-48c6-4715-bab2-7d52712892fd",
        "cursor": {
          "ref": "35794272-b507-40e4-b73d-1fa5ebf322ba",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d1235c5f-f993-4fa8-aa9d-6a1d9e34a599"
        },
        "item": {
          "id": "852de5ea-48c6-4715-bab2-7d52712892fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "595254c0-fe81-4390-9744-812aa9d00264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39390f9-0ba1-4d7e-991a-ca561078420d",
        "cursor": {
          "ref": "23210a6d-879e-415e-bd24-2119ecde78ab",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3e65ce57-f309-4f4d-9452-f724a0d67c6d"
        },
        "item": {
          "id": "b39390f9-0ba1-4d7e-991a-ca561078420d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a2700171-4d14-4c2a-81bb-4f2c3e8255e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e02cda2-c9df-4baf-b50d-40cb68c6371a",
        "cursor": {
          "ref": "5966240d-676e-4f3b-aa10-4d314f390b6d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f7682006-cc3b-4fec-a6a6-166a5eb2e160"
        },
        "item": {
          "id": "9e02cda2-c9df-4baf-b50d-40cb68c6371a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d077be7b-622e-4ad4-b48d-7132fdcc9258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dc47c4-2384-4b65-ad8f-1334d7dbf4be",
        "cursor": {
          "ref": "9cd3a388-8c01-4171-a508-636527f9f6c2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "137b6c23-713c-42ce-bb79-b3c9bf69d285"
        },
        "item": {
          "id": "69dc47c4-2384-4b65-ad8f-1334d7dbf4be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e90e142d-a689-4fa8-98a7-35aacb10c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb46a66c-50ac-4b11-8d80-69a804782002",
        "cursor": {
          "ref": "22a6505a-3165-491e-a93a-d1903af62c13",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e29940f3-c155-4ec5-9632-13b51b465c90"
        },
        "item": {
          "id": "fb46a66c-50ac-4b11-8d80-69a804782002",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d37796a4-909a-448f-8e32-763a4f14cd50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e753b0-15ed-4202-b9dd-6abc2f0065ab",
        "cursor": {
          "ref": "55246f99-868a-4757-b497-983fc994cdd3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f7a0a52c-ddcb-4309-8998-987ffb946238"
        },
        "item": {
          "id": "59e753b0-15ed-4202-b9dd-6abc2f0065ab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e87fca0b-b165-4606-a2bb-0b17dfaf15b7",
          "status": "OK",
          "code": 200,
          "responseTime": 2035,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8040b360-ef06-4c89-ac94-cb1bb3dee2a9",
        "cursor": {
          "ref": "556fe0c8-0e2d-4ec4-a617-ad87304f2b49",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5ca4658c-955c-4ea5-8dad-cd76260b1c07"
        },
        "item": {
          "id": "8040b360-ef06-4c89-ac94-cb1bb3dee2a9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a6a3a29a-b922-4512-9952-f8940c68bf31",
          "status": "OK",
          "code": 200,
          "responseTime": 2900,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1176b355-6f87-4cb2-94f9-161911dfa6dc",
        "cursor": {
          "ref": "aee41a61-bbd5-4130-9a03-6853ac0c6456",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bb6c9075-4577-4034-b1fd-0a5196616314"
        },
        "item": {
          "id": "1176b355-6f87-4cb2-94f9-161911dfa6dc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "09a21d51-3403-400b-9f3c-358a21e42b06",
          "status": "OK",
          "code": 200,
          "responseTime": 2642,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f9837d-34d2-4a47-9192-9388b91fa14c",
        "cursor": {
          "ref": "26da4028-3dde-4032-bcbd-e6a0d0b7a0e7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "780e7921-1a40-462c-b89e-6dd20ca5496b"
        },
        "item": {
          "id": "d5f9837d-34d2-4a47-9192-9388b91fa14c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a61dd471-46f5-47ec-b6d2-5e030114cc23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f9837d-34d2-4a47-9192-9388b91fa14c",
        "cursor": {
          "ref": "26da4028-3dde-4032-bcbd-e6a0d0b7a0e7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "780e7921-1a40-462c-b89e-6dd20ca5496b"
        },
        "item": {
          "id": "d5f9837d-34d2-4a47-9192-9388b91fa14c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a61dd471-46f5-47ec-b6d2-5e030114cc23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a047cf-8d98-4d97-9258-eed4d8edbf46",
        "cursor": {
          "ref": "077314f0-06a5-4894-b0c4-d0c4bbf753f5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "16ee4e58-d547-4f84-8379-312d22e05b68"
        },
        "item": {
          "id": "57a047cf-8d98-4d97-9258-eed4d8edbf46",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "911aa9a5-8e97-4981-87bb-2493b9229780",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71259f7-8b75-4131-8d9a-48058a222530",
        "cursor": {
          "ref": "db1053ae-336a-4521-80de-ceab66203ebd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "42a0e64a-f94e-4987-904b-49fd69173009"
        },
        "item": {
          "id": "d71259f7-8b75-4131-8d9a-48058a222530",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e09128fb-3d50-4dc9-90f8-1a9796f89875",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}