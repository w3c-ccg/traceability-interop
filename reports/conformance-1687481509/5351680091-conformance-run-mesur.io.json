{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "413dbbbf-e530-4c5c-8e1e-c81e39ceb8bb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "688c3ee9-e799-4b6c-82e1-e337d125e2f4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c18c1a2a-efb2-4e31-9019-d2699ed43119",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4fa9ed0b-be4c-4916-80da-7e1251b19581"
                }
              }
            ]
          },
          {
            "id": "d25b0306-d231-4d97-b4d5-3c3fd5b0b561",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ea971c2-0de5-4265-995b-f983170ac8de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "637a7db0-4fe0-477e-a969-2352b708adf8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e474f7a5-2fcc-4f2c-b6b1-3f3cf4a42100",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "58daa851-4165-467a-8907-fdbbdcdef914",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91091383-95b9-490b-93bb-b56dcd26e8aa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4b2001e-d104-42bf-a2e3-74ebcd4ea171",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91ec9a72-5baf-4b5d-9502-7d5c3260e060"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7c605c0-6b72-48f4-a61c-26829b9a6c62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fea0c9b-5899-401c-86a1-accbaf89e326"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c01c18d-12b2-409f-99e2-c2afdd68ed50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16f952a7-3d65-4d9f-a6f7-42c7977faead"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3ae0313-d91b-4293-a88b-74ed31d0654e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fd1422e9-1549-4ee8-82a7-f44e280ab112"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad5784e7-ed9c-4181-81a7-4f100bcd4d46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e92de6f-99a4-43c8-aa2d-6f38c2799f8a"
            }
          }
        ]
      },
      {
        "id": "6985e64a-9f6e-4c64-a366-f5a73dfa4efb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a9559f00-802f-460f-9553-778fa358a8ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0a34cea-263f-46cf-89d8-668f1adfe6ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54bee199-7796-43eb-85c4-91caf951e39e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75cd5da-3c8a-4e26-87bd-05ed2c5d093f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "069dbc39-aeb1-4697-b2b3-629348de818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4d5a81-fd50-4843-aa60-e0c8a029b319",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220c5ea2-4453-4fce-9b01-d7aaef0ad63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba282c4b-b9bc-4945-8eb4-e280999eda66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc3a36c-3699-4400-a8fc-d6f10e65c68b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0b00eb-eccb-4eb6-9773-f627b4fa1c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90b064ca-7c34-4360-9a02-3ea98984178c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ecd6c61-e022-4b5b-b57d-2db50e077919",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48512868-49d8-409d-8ddc-f21662cd38a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfbf12b-7512-4ac4-bb71-862f84d2b1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70ec553e-f8b9-4a48-9867-bd1f9ef7e05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2d2e55-6040-4ff5-994c-84c336520096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb877622-0d59-448e-94ac-f186474ccf47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a848e4be-2630-46aa-af28-c27523f62f14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f487d7b-6a9f-4f35-b96b-6b6d33cf579d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b950a19b-577f-4954-9c55-4ec9d142fc0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "92e3170e-2d83-406c-b79a-bd93e01566f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ed313df-fe9a-4912-8802-a898c36213c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d9521b40-eb75-4d59-859b-53f25d81029c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9881ec86-7f9f-48c4-91c8-3745b9878459",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d88201e-05c0-4a93-bb65-12e2b704199c"
            }
          }
        ]
      },
      {
        "id": "d99ca1d4-bcc1-4c4f-96de-aefbcb6ff2ec",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1c2e6aa0-786e-4b08-85f2-e68ff9c718f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87a0ec8e-695e-4fe2-ad64-8e81819dd65b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bc2e5745-464c-435b-b334-537b30edc24b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b44b65-52d7-4cf0-ae4e-76ba13bd0cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85d298d-a342-4714-bd8b-8d82f56112e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bf7f87-a6e7-41d8-b246-d1bab8407612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acfe2928-d7ec-42ba-bda2-c0701299587d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044f541a-422a-4306-891f-7aaa8db7c014",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bfa0b5-cc09-49ae-ab04-7e9f888c5518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a83bc-08a4-4451-989e-8c17d64a23d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917b55a8-bfe7-4caa-b10e-c98088a84b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ddc264e-770f-4e55-9a5e-859583a0ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e7161-89b8-4947-99c7-4c913c33a90d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a562df6c-8989-431a-ba35-999bcc5d965b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d73be5-7d13-49cf-ada8-d178255aac7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c333c8b3-a347-4fd3-820f-a3d34c1fd325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eac1cc61-44fe-466f-a4fc-90fa4db3a145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089d43a2-aed4-48f4-93bb-f4a4f96ae7a2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069bf7ea-2f6e-4320-85fc-5152cdca1a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dec8da2-177d-4a22-9312-cdd0e4699d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d014c33-582a-431f-ba0f-25729581d69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d57ec8a5-60a1-44b8-b98c-5eb2e2595274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9b231d-628e-4ed6-bbe1-9c8896969e3c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea455e02-fcf8-45b0-891d-f5eaf0e15eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1426462a-a359-4025-99e3-ab852543b645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baa7b8e-0334-4896-a928-3b1ba4eba047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c96c9b1-da15-4955-88b1-6f62c74d0606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b89910-1394-413d-a190-bc5f1880a7c3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf317be-175a-4a2a-acb6-d6bbbf38dc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207329a1-7ec4-4f80-a32f-8d4f025ae1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f853b5-b3ec-47ab-900e-2044486abfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f7db5f9-c7be-4fc7-aacc-1ef750ef2d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c96a9-3804-4bf8-9b76-9b4c3336b7bd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ceee1-9593-45b1-a245-8752cbe51b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a47c065-40f2-4ab6-971d-c4b6726d55e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc01df73-990c-4f47-80bc-32efdbeca351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5896130a-d600-444f-be94-9060c75d5230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64746d61-a023-4bf8-bd89-814626d94872",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bd147a-6016-420f-8431-2c70e81b8f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef309e6-8e5f-446e-a3be-da49095369c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6603a8d9-60c5-40b7-862d-0bfd54760a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc0705b9-f00d-439c-aabe-424ae1003b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497fa64-a8ab-482b-816a-a408d4fd3b9f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eece86-a1f1-4742-8770-54b6d0d16ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e56a811-3f8e-4760-8c07-65eade7d9040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8a0ad6-1788-4b76-b908-228ee42e15d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ecc6522-a723-4934-b29c-5599f3c4fed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325e280-1e03-4c3f-b4f5-a4c51363d9fc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765ecd4b-5911-4d2e-9f7a-85e6e904332e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f12473-9274-4daf-b5b3-0ea19f471415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db3728d-7d74-4716-bb11-6d13aeca6024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f53eff-2405-445a-b7cd-c16c9d7e73e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa44589-18e2-4b00-ac7b-705d92913c16",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811d88d7-d334-484c-bff5-a2a8b8466c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0a17cb-f3a9-4303-9dff-9cf14de41482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee0e350-90de-412f-b4af-bde62c478527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac973f9f-9a6e-452f-99d4-3f7d4c987444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9030c9-7cfb-400f-a9ba-788208b04673",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdbb79c-77d5-41f8-9f7c-a94f07eb1d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc79ae3-7371-4aa7-8b2a-e0fb25db8c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3223d-0e28-43bc-9fab-6a11b79c6628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b082b2-4312-4321-9ecf-d5830c87fa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50059f88-74a5-4800-8bea-c8119e512dd4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f782d-6b68-4b1b-938e-5717da1846bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746e44df-375c-4aa5-99ac-ca3850a6ac30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1999088-ea90-4a10-9393-28d1c4486ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e59c0cb6-ff20-40aa-a2a7-6806e3add678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bdf172-0b6e-4ead-8cb7-9bc1bfb3e9f1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c43d66-763a-49ed-bca9-ee95a32771b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef27af6-c712-498f-b6e0-c30f5327aaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3892871-b40b-4f95-bc17-9604d6e08ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3bbe089-563a-4ab2-b1e9-879d4e27e816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51d7a4b-64ab-4b5f-82f3-8b60b2f65299",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0453ce11-82da-44ad-bd4a-4b7466a4da41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523ebc0d-ffc6-4238-865d-464f422c2f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d4621b-f0bf-407d-b3fb-abb88af34e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a84d1132-b391-4bd3-8d14-50e5fe8e5fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f697360-0ea8-4beb-a677-94fe8f007687",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fad9a54-3e96-417e-abbc-50bb05bea8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba90ffe-36cf-4aea-b443-17ab481a30b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699a8798-22d4-4198-a601-a2b1e2a21d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c761ae0-85ff-434c-9fd3-1576b0c5368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3936c5fc-f969-4303-808b-55d8f60668dd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d68847-b5e1-4baf-b47d-42bf7f4e5229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dad57c-862e-43e3-b12c-0a9d83cdcda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375323eb-4630-44ab-80f4-37e5a5607e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e83a04bf-957a-4d7a-b07b-528262c82a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb8b4f-2b50-43b8-969d-ed7acebf5a07",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40212fe-cf45-4031-873a-3ee25d660a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a490bfd5-8ace-48e8-91c2-ae562a7195f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc459c3-8dbe-416a-8943-bc8670b5019a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a177cfa2-19c2-4ee1-a636-9ed0cef1fe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7ccfcc-7212-4043-8687-7dc4ccb3589c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6b7f9f-9ee1-42eb-a4a0-460d7e7a8ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c662236-fcfc-4a7a-8a64-cbab645f3d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e4b967-b73e-4104-a750-c27c3c792a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "880e8318-a1ec-431d-a336-af8b2ea4a3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3d3e74-dac2-4de9-963c-f3e109395b54",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f2d85f-90f0-4a06-a1f9-f1de8b37ed69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80bff49-bbf8-46f3-b890-723dd930df91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03610430-3a68-480f-9a85-a5e402ef57c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "723364dc-bcc3-4c10-a33c-8acd7e659149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4fd059-a3ce-43dc-b97e-06148ab966bd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c9cced-dc56-4e6f-99a4-424b70fed839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611d2296-694a-4767-82a4-8dcafe0aef07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fc558c-c2c1-4657-a9f9-f24c663558e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3740b5-a732-4f3c-8ebd-b6766eed1ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694521ff-84c5-4df0-add8-09732c434738",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56461a9-1074-4d3a-8d81-74859ba9936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96bfbce-2587-42d5-9ee0-12b3889cbcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42184158-fe10-46c3-958f-1d1dc243fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1bb73e-5cf9-466d-8422-ee3b5b5484db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06464e1a-e5fa-4013-a2af-5f36b7d4254a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f95e0b0-0656-4046-aac3-54b05a21472f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0947ed5a-1ab6-4c88-90af-7ab00ffa310e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02499be4-6245-44e5-b4e1-5acbf3e7d56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ff9703-935a-4301-9d82-fdf7ca897d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f714db-f368-4fdf-8f42-6fa4d0eff4be",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4559b9b-4c28-4310-87e5-863dcc806c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a6bdab-f17f-4d32-b854-295b1db247ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee07dd1-1c48-45e1-9707-54dc52ffc607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee0a534-2fc0-4bbf-90fa-afc79a85f88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d272bded-bb65-4b33-8fdd-ccf86d1820da",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bd2fc1-2e0a-4572-a2a9-1ff2725ee45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08bd4fd-70b4-4a5f-9afe-a83cdee61902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5726c151-42cb-427a-b3c7-240a2de6f1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a054b75b-32c9-40c3-a1d7-1e45126dd45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0dadca-d386-4f8e-8c5c-a95887475ba5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a87371-92be-4da7-8714-ee6c31c3970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d843fa1-8dac-4f4e-bdd8-00fc4de78f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95674aaf-0e55-4220-a757-19d896ef615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d03a5f58-5210-4dd5-bf42-0491530d33bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208ab4c7-20a2-4dd8-ae6c-e1867b4c6728",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48b5911-cb00-4bf7-a4d3-b0e0f549aa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d48e6f-0fef-41e6-aa40-f7c51d286bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31efb202-791a-4982-b5c8-c0b74e62127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "487bebb0-677d-41b3-9ad9-ffc977c0de74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20c7d2-5974-4fc9-8c88-1d6bb97d01b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587d1641-ec43-4836-aada-998af11106ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9702230-3dd4-48fa-88b8-54d61deb659c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b3a30b-94b2-4e93-8332-95f06089292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfa83e8-81a9-4804-bead-38e67efb0d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43c075d-8a7f-4bce-91f3-f6587eb90aef",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee53227-4d5b-41e7-a410-1ce98c5fc418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8a4055-8905-4c3b-9647-1af01c5c6e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8ed81b-0394-465c-bbf5-bc5728892632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a65d34a-7edf-48bf-9de3-afee4a239984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d53cf0-26aa-4779-a8a0-8f443740a941",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6bea0-a7fd-43ce-8931-922ff8c6ec34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d36582-8c2d-4066-b63f-ead30686fe21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae21878-3a96-4021-9b0d-b7f97ba2fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "216ada50-6dc6-4f2f-8f4f-816659840ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2010f574-4e55-44d6-8c06-e29067cf171f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a63507d-161a-4f07-b740-2076ca108edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6371ac-4649-4c57-a8eb-8be750a7dcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd09e85c-42f4-4547-831a-97c94a6d3a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "530e67cf-fab6-4d68-b9c5-529b02e4da84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0068048d-479f-47f3-92fe-dfc89ffe5172",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e308e-adfa-4350-9265-e2acf1b9a81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f3e8de-25de-41a8-bfee-f0b64e992732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0964c208-d279-45ab-a8d4-4a8df61113d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aee9f709-432f-45bb-937a-c5e8aea56160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42ce920-97ab-44b8-9d8c-6781a023052e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19b7a7f-3784-4a81-89e1-2c7ea6f3b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3930e9c2-b51c-478e-80e7-44cda619a2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff61fbb9-769c-4e8a-a266-f4726a752157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "930dc365-cd5d-40a0-b817-a6d706b9a815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83edf1d3-6e90-4171-85fb-7111378cf235",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2113a210-6a1a-4a6d-9f43-834583b71569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82426dbe-e74b-4a43-8f7b-c167081b1a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb5c370-c6ca-46d0-9fa4-a8c875fe0cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "babf479d-2d70-40da-a201-50348ad87e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9fed78-a88d-4b73-afb7-ea2b815a1acd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3c576e-8010-49c6-b21d-88acdc27894b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89ccc1a-8075-419f-8969-4be2edcd15a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a0a902-7ddf-4d43-b8e6-aee1000527c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "60cfff61-c360-4ae3-ace3-d4c4b4802c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f387e3-75ef-4da6-b7ea-2d7634e87a89",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8898265-bc12-400e-b2df-f4eacf7c7357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58fef67a-c446-4955-856a-e17493f4c76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9780e0e3-db2c-497e-97a9-1cba5665b711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "660df0d2-9dba-4215-acf2-a2934b233275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ef6e53-f5b2-4874-b2e9-495b526dd120",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e382eb-83b6-4ab6-bf93-82627dbf1fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69056124-ce06-4eb0-98f4-7a1535febc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc7bb25-499a-4d84-8c35-728166e54751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ae0d65-9f45-4ab9-a13d-c48582a41948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a91bcf-34fe-4aa5-94a2-cb28526a68de",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ead21b-7d35-4f3a-a4ae-6d057349640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad105aac-af2e-4543-b06b-7db010e6a57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b71c9bf-d9de-4ad7-bf17-d1c94791700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "321d616f-7aac-4e72-a5ae-9253c238309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fcc6ff-3adc-4ffa-ac9e-41fc8de18aa5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a83a7e-d80f-4a94-8d57-cd99ecd1adf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929ccd3e-ff3e-487c-a749-78e2a3ff438e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dab27e9-8668-4d13-9050-dc5e5593b485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09d2765c-4664-4e0a-ab98-7ff2328ce717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d77590-12b7-4a8f-a078-d2cce1f57f8b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db6b67f-8d79-41a4-a99a-bdbffda4a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e63bef8-b2e4-49e7-ac47-f8543bb91f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc34138-abc6-455f-beb7-0afe858fcd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e00874e-a0c2-4c29-9fa8-2beb23280d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a2bf4d-4125-4676-bc06-3639a5209ecf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4160a9c-295c-4b02-8c1e-1caefe771891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523b56fe-9a59-41a7-a61d-7c7ffdb84370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7293c0a8-2837-479c-8bec-983a335780c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9206d1-636a-48a4-a5ae-570428f0c824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedc04c6-f537-460e-a17f-bc1435e700a0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8682c6ed-73e8-46ba-b296-b23fd94bdcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce55461-460c-4c3f-9aa7-ddf58c4ed738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2340f7be-99d5-44b2-82dd-368533886e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "083f96d8-a347-433f-acbc-1e6718501bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8428dd5f-7566-4378-a178-ee2979a67c23",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a287a5-4237-4b5d-8e18-9b64b76302f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4445f8a8-3537-46c9-ba5e-52f272a1bb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7053ab-ed06-4bf4-bfb9-11e086695225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9368117c-c8fb-41cb-a459-7269b0197c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daeb576-641f-46f2-84a3-a80e4398f7c2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d92ab2-9771-4484-99bb-ef9defef596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ce0f4b-8d0f-41d0-b31f-0cbbb86dd3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9aee93-6b30-420c-b953-9576decd7f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b526c59-14ec-46a1-b962-6b6e75bee191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c78c06f-80ad-40de-8c18-0682e109d502",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38983c-e017-4ac8-8a9f-e61fcc9c9e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05c2f93-548b-4e81-bb6e-c95d88e1be3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701209df-efb9-4a56-be59-7a1d44fdb56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "726b2e24-af9c-4c92-a05d-a0a1ee27baba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fa42bd-ccf5-4d4e-ad08-75f0cd09e339",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6252b5e3-efa9-49d9-bd9c-7345098ec512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006af629-4abe-4d45-a66a-8c4ce70df5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf7404-f5ee-4b75-b884-7ee90448ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73dba989-7538-49be-9a31-bb27fd30bf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec64d83-ea31-475b-b8f8-464d934fc19e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7649e99-0942-4c35-9ff0-e556602d62b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4de064-6b54-4846-8333-e1cbc441a8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5666d44-ccad-4d9d-83ef-73d5a5401879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b85b871-17ac-4072-beb1-668cffd45eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2697bad6-d444-4658-a692-6ad26dc36140",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3d0e1a-9156-4b6d-ae46-618abf2584de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e166f18-efdd-4382-a55b-72d9e497d52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162fdb2c-47db-4b07-96bf-30a428d41fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d29a829d-7fd3-4b12-aa31-1391858be949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca0da93-f143-4d76-af41-96277fe3dde0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f7a809-9d61-4eeb-887a-5cfa92da3adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03d3f37-b2b0-453b-a3ce-bb383f82daa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2f88e7-695a-4dda-bb1a-727ea519354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba48b492-b3f6-4ec3-a1a8-aab0052c1dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ca927f-1b64-4469-aec8-7af4fada2b7d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2d8294-e9d1-4dc9-9339-7fb59b247349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957423af-86fe-45c8-8843-f812a2aa7a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66e97bc-015b-4464-af44-0d7162291777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25e69a60-7005-47a0-a25c-7d4f04bc4835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf2f466-ba42-405d-8005-260f501b8616",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1709ed0-857f-4e99-a9e6-7703dd4ed65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a892ae-207c-4090-bc62-b00a19632071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b4c960-c75b-4645-a06d-b10c12db6eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "29afe6e5-3051-4ec2-bd4b-0c9a367ea17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b613236e-9fbd-484a-9f40-1dd82ccdf73c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e5a02c-9e42-4f8a-bd7d-c05ac625f2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b062385b-5f3b-4d93-98d4-85bbfb5840f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b5ecbe-fb37-4888-8ed1-66141ccc5e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af97eb85-6878-4bfd-9cd4-a137de88f85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf664933-c969-4d93-b47d-df871b76065e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e588ae-3869-49fc-acdc-63ca6641e655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8bb98d-9f8e-4287-b5d0-74c143e6e7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e920381-27e0-4033-b717-e025dd0f9bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aae56a3-a8d1-4eee-aebe-744c7da57729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bc37b4-aa5e-4b25-9ba2-446057fa1134",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6de46f-a55d-45a4-a0a2-923e9b020aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48086b04-95c6-45df-b687-40bfbd06dfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3fd723-063d-4abd-8bfd-25080a5aa960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9049ab9c-70f0-4c6c-87b9-5620a7b16325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d29be4-d657-484f-8659-20bc976a408f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba45f4c-3087-49e3-8381-ffe5092e7192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da108ee5-a9a6-4da4-abb3-715c7a03e9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befd054f-75a9-4f66-b873-07b0b72a7af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "276cf3db-d1c3-45e1-8c15-b3dbbebfdaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6b27f4-b1fd-4b35-9c56-1ddb13929940",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77ff492-b894-45e4-801c-0c975e43ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a010dac-8e89-4bd1-930e-1a2ac7e3212f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3269d10c-7aa8-422b-8cc0-9f2b7470dc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9c585499-7507-4e2c-b627-707301120151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6127a12-324e-4191-a0db-42f7921b2050",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55559ba-2ecc-4829-924f-710bdd8f63cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df2b875-d945-4a70-bf5a-3b1f7a37f3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc750f6-4105-42a0-a99a-8cd48d97c5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9734dfc3-7126-44c4-9cc3-e6828cb258ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a734632-51e1-4e62-bb4d-1b1002dc4a83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efee16d-3ae7-453d-a3e5-915a0f2fdbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461661ae-f34e-4b84-a411-fc4453c22505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25d6f0c-1ac4-4a14-ba52-bf672e42d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff972af-ac0e-43a0-a938-f4bc6cc575c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39582e7f-cabf-4ccb-8d45-e6dead42076f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c26685-58e4-469f-93df-3650d98dd0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f57764f-861f-4bba-9998-6302dcf3a51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b900039-df39-46f7-be97-9d058cfabbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6ec2b0-d1bf-4da0-9d71-5a6a806f5f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71579473-70f8-4418-9c86-44d1afd305d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d906cd7-fb63-40cc-9d2b-9f17c49876bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d576572-67f0-4a54-b992-de5e30c43545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4873c3-9138-4242-89b6-282742413710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3764a7-a61a-44d6-a56b-e3ac0b4fa805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e416e-2cbd-40e5-85ab-cfaafa137466",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88998034-757c-4e51-a433-5c16d72f11aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94f6ab1-deb9-454f-a96a-9725f1e4f515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a23ce86-cb46-46db-ae84-c3b1cd5d994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "33614b70-3d58-4b92-a266-b61ce1f9961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67896a59-02fb-48ec-8ede-10b70d4e9ce0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975eeefc-68e4-4288-a2dd-1ba6ae02d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b258ddc9-36e7-4ed9-8c0c-93b597c3a3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b35a8a5-50f5-4943-8caf-a0fe61720270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5635e5fc-a4ba-4fe8-9182-3fc4a535886b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eea1b4-47dd-46a6-8a8a-20f3d311bc77",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49bee1a-a862-4c7a-afdc-60d0a96d74ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c161d5f-c3ef-4fb6-9634-15575bd4c6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedc7507-1ae0-4819-8284-35d9e493c48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f0193f-7e00-48e1-8d35-5d5db328ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b664f3-9127-4f0a-8b00-dc700d599d6f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e8cca8-4196-4a96-a597-b666c7733462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e131ce1e-d7d2-4430-9de6-578e4faa3eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e9e595-133e-4085-a1df-b6f38599b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c213fc2-205a-41b1-a989-53016fc49274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb9b42e-91cb-46ed-88c5-4ca541ee6d1e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e52c34-dfc3-465c-a629-c685a15142db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ac808d-913a-487c-8a7c-1949944deb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503832dc-bca9-4ff0-a7c8-d41f355437e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa880f5d-7f5d-49f7-a754-048def11a28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c0680a-5599-4b3a-850a-c07f2412b560",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86a7967-aade-4644-9610-98693062073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0737e214-fe17-429f-aeef-37259f491b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cd324c-46dd-4bd6-9b58-7555d7bf5f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c43f95-1b43-451d-918e-3e33a868b389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe0c135-a1f7-48a3-90f8-770965c0a129",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3e4542-fb0d-4072-bac2-cdde97cb8555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69ad296-6427-4365-9eae-777eb31ec761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c914405d-5531-4ab2-aadb-ea19525a271b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd52dee-5c93-4f40-9f66-229cb969532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5951f945-9b8b-495a-944a-b70912d03db2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd6b904-b754-4d49-a853-5c80727e4d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e01fff-8820-434c-aab8-3728cc00e133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98e4a8c-d619-499f-b771-3c55a8ae74b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "598014c1-5a09-4a9b-aebb-9f9df4e70252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59353520-e566-423f-9439-a06f23529c34",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859568ff-c55d-4de4-9517-3804d3dac946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c365d6-1b9a-413a-9bd9-fffeb21b6be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1962b83c-bc45-4c0e-883e-cfb824459b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a052e663-6dab-43fd-91b3-5257f47a8b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef5a3db-b25c-4f0d-be70-ca383a0bb0b6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8e6b47-a3d1-48e5-afa3-11d9bc2422ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6ded8a-93dd-40c2-898d-f30aecaab137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31220970-3fbb-49ea-bd7a-03fbfd9c699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4d7c17-7faa-4bf0-893d-71c8a7214de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5932cf50-48a5-4796-ac6e-be07a9cdc524",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a48279c-e40d-46ad-b7f1-555ba36103d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bdaca5-baa4-4a31-95d5-53dae4229f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a612008-61e5-4ef3-84e8-4278190dcf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24442a7-26b6-4d67-8fda-f9acb38cde46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320dea5d-e6f3-4d45-8f0b-4d866adf4ecb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed48a74-17d7-4ed0-86e3-016fe7ac787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cd3619-8499-48b7-b5a5-5ecebcf5ceb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcb5324-319a-480f-ba56-7b8b818ce3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27bd5d3-fe2d-460f-a6a1-69a4f0313447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa23c65c-5d40-45c9-a951-e350ba7a7bcd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b92a77-11d7-459f-92ec-bd7245d931be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2277cc-3cbc-44bc-82af-722ed8344bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf647e0-0b3c-4220-b585-e454a255e86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76986a4c-0493-4b6b-a11c-7a3734a31cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b1221a-418f-4130-b64f-091255db2552",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc665e09-8e0f-4e3b-9983-b8d5dc6367dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7f0466-9c10-45bd-aef8-66d4b3d7f4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89214f7e-4fbb-4a09-8921-2e52892201b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35f3288a-0ef8-44bb-82ae-60fe35061fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bfbb3e-79e4-4d65-b605-b8801e235be8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c14e74f-ff28-4e13-837e-7866a30099a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5479ad9-dbd6-4bf4-9d3f-de6945fdb307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cd37f4-e707-4ce0-a11f-1494d8763eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63cdc76-29e1-4802-8ce5-e788b1a80742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f575f714-4a6f-450d-8591-d343ba8cd7ea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c22963-e8dc-4eb5-92fb-6f255696624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b60bd0-51ac-4b3e-a19c-627671be9b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c542d0f0-6c42-4a61-af15-5f20d272daf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c55d4b3-3cf5-457b-9a3d-04cb5e33c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c193e23b-6d01-4c98-9cd2-cbd11c8bf4c6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7113685-bd88-4049-acb8-e4d6e13c5609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955ec977-e5ee-472c-8fc0-2d78d5993e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d1959-10a9-42cd-af6c-9674db420e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b544d4-7a13-47b9-8acb-3a0cb73e2f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deba9bd-8b69-41e2-bff2-96a7525385e0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bc0ce8-f246-4a46-9702-93566a6f99aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a65549d-6717-4c33-9d26-5dfa3c04cc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e575af9b-680d-4e0f-ab9a-0159a709e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc3411e-dffe-49cb-b156-8e91f033088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7ad21c-f911-4cdd-8cf0-75d446ab5c30",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694d2c5-99f6-43e6-8dac-554173a59405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64f19c9-55b3-4c7e-b305-c6af84553e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7191914-817f-4480-ad33-f8d7a15f7586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf28c853-eaa4-4b3b-ac2e-01fa0ffab1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c510effc-b9c6-4670-a023-18023f275fd4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905f0964-022e-4fa4-b8b9-7494e504ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c46d1e4-0989-4db2-8565-97a33db84500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c712e09-ab8b-414a-b165-fa61a78bea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37d4cadb-a3ff-4e5d-b83c-a981a0a5d301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e48675-d4bb-4211-87d8-751d95326b59",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44159ff-d361-46fe-8d56-702fad1cb59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3133982-14ab-4b19-90de-7b2a72356108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03253471-7771-475e-bbf5-03a970eae3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f80ded-ba55-4477-bdd0-47ab6855e07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d79232-fa4c-4a4e-940a-5fb4c726d379",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22288aaa-de1d-43dc-b31f-7bb9cd989171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63092853-7825-4b47-8e5e-206eb772b2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ea54bc-1298-4921-9b81-a2f9979d56b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23671751-8714-4456-9031-ae69b5a32660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be334a4-dbf7-4f5d-a717-3bf6688d60b5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05991eb2-f374-493b-8730-5bf64f606fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c5f586-861a-4484-a1cd-01b716a40ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5023f6-c5d4-4de9-87d5-e66b93637db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b46cdd-9045-4ed3-9073-32ca8682a3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7191809e-f0c8-430b-b789-08b51a84ddfc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320cd1ae-9da6-4f69-97cc-fe23f2a7fed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00392634-b391-47d6-91bb-52721df62626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83be730c-8fad-4ca0-a071-b2e466068194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c7a440-587c-497e-a79d-d24880dab6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646df328-738e-4382-9ede-2ff53f25bfe3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517fd00-6336-4bd7-8775-6f6a2c3c28cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94b81de-6082-424e-824d-7354b16bc367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb0367e-6ee6-49f4-ab32-17c3ad7aca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3729db02-fefb-4e44-be05-75c8c3b8631c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae41852-5714-4276-a2a0-0336f540df15",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8d4e52-6509-4f14-bfcd-d66009dbe977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baffc71d-f936-4a84-9e13-8a0018f72a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42aa64c-e5bf-4297-b767-d46b44964307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c117ab-8de7-48da-8251-1679b369d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32a0dd6-4941-4cce-b8c0-d256e0e6db6c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e157c3-5808-4bd0-860e-894ff1cfc136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddc8158-9d05-4fb6-a114-672f944c86ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444bfa8a-3470-4984-beff-8b2ab47d7398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6efa729-fc0f-469f-b397-e3846d53f52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de231ab-1cb4-4ed7-af04-312014cdbfe5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48960f-dd35-42bd-8f93-f8ddbe87cad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd28ba85-4a64-4c5d-87f3-0a7bd3aaced2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f3dfdb-9607-4ddb-9bf6-130563c61bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "410162da-01c9-4a9b-a799-da3931224ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8ec7b6-60b4-41c1-964d-895858c50a3b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f967b-d957-47c1-addc-853e4f1df1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c310373e-6f36-4613-8cc6-94b3bc250db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4cbefb-6f5b-4771-970f-2338b01c9fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71883cac-8383-4872-a177-a3d288dbad4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bed37e8-ddfb-49e7-8d52-7dd7b1f94093",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003edaf8-586e-4b0b-ae37-272e0813ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c3e58b-f484-4786-a087-6bf8dd0432cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc5631a-8a3f-4bf5-a036-eef155fad6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab61de56-5648-44e5-98c5-7e0a35d0a32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c6451d-93e4-4cc4-b369-b3fd8de80917",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cf36f7-1482-4111-bab0-ff273af4f166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce97333-bd51-47e4-bc7c-7b2d3db0e25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a050206-83ce-46e9-9cee-d410c3d20fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35959ea8-d083-428e-b249-467131dd46a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa886007-a29e-4c6b-80c4-dedc329b0316",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ef3f31-34d4-424a-aaae-d0fdfd7be02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "602ec90e-8f29-40b9-bdc3-3382349e77e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a8171d-292a-4cbf-baae-23b7b834bcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "57fd9c72-f1fa-4e4d-b082-e7f01870a771"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6529695-0792-490e-8f86-c4d30a38a0ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef3151d9-54e0-428e-8825-a7e141d1569a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ad6b6-1b79-45f6-b36f-a326813108df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c4a36df-a781-4e71-b23b-92aaf786af46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8696001c-89b2-49dc-9a1a-4ab19180db49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ed9a652-e290-4081-8a37-d66a922174ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8a915a0-25c8-416a-9acc-b2f222886932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95295c14-4bf4-4e92-82f5-fc5216075926"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d483145-8aa1-4e98-a9bd-d5814afa5698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c35a02f7-2a40-4ff6-b26a-0a85d99db9d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "429156a5-dca2-45d9-8d29-be326f922901",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fed6765-592a-4750-8ab6-571278c557b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7bb9ee3e-cdc3-44ee-8400-e5eb6648524e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bb6527b-4ed0-40a3-b7de-0da9be264f88"
                }
              }
            ]
          },
          {
            "id": "2071eb20-be93-4fc2-bc23-08cdce5a379b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee10c76a-8100-44d0-a6f4-167d6161a713",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d962ec45-9a7f-4444-b9d8-82f503c7f6d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d947a121-dfae-4fd5-9e8f-d921535559b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "464ea6bb-4b57-4b59-abcb-8525458f4682",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee98bd32-291e-4504-a377-cc33e00b5193"
                    }
                  }
                ]
              },
              {
                "id": "a53ea841-9db3-4a95-8fb8-bf80e3a49c1b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7853688-ccd1-44d9-81b0-dd8152b7ba68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cc63f1c-5548-4ce8-bf4f-ef63cddafc7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7a6b00c-89f9-45bd-bc6d-ceeb0be4084f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "889b1c85-f8bf-4055-8295-e7cc3833c286"
                    }
                  }
                ]
              },
              {
                "id": "2b02c516-d7ba-4e27-88a0-22a58445e8cb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2b18228-01d8-4ae4-b659-166cc6c240f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d5278d4-19f2-4ca7-9a29-65b6d67a3728"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76f193b4-920b-4d13-aefc-119b97673d71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7ec26be-5049-44df-8930-59196d83f899"
                    }
                  }
                ]
              },
              {
                "id": "30a7e9f0-5f52-468c-827c-8d8db9d2c418",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee675c52-3f15-467f-a032-f1bd90033ff7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd24facf-3e2e-47dd-8f0e-e4869e377b5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7020e2a-2e03-4508-83b5-4b2d2a4499d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae8bfe5c-d0d0-41d2-bb89-9bcccffa201c"
                    }
                  }
                ]
              },
              {
                "id": "a42f82fe-dc37-4281-b6c5-40be7f9951ef",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cb54fa0-644d-49ed-b9e3-75fea593d06d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad535d51-311c-47d0-988a-ccb20c2b01d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24c31c07-8a2d-496f-9a21-17a2effce764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e9d2c655-1be7-422a-bc71-0b53f94b677a"
                    }
                  }
                ]
              },
              {
                "id": "5fa40692-5090-44ef-893c-952d211f0f00",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "250f0302-c4a8-40ce-a623-44a9761c2b56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4754233e-d344-4f53-a065-fd9c2ae61693"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c37ebe0a-8922-46d6-ac69-a3f1b46d4e2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7f64fa3-a153-4fd0-9ff7-495108fe1ac7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f3c9ea6-526d-4a07-9a16-bf39054da19c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b3c0757-bfdf-4484-a6fc-43021368d602"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3747e5bc-b901-4046-bb2d-84ffedf5ac7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00b521b3-e237-42fd-b920-87051238094f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1686904-da4d-439d-b267-a5ac60b947bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f5575cc0-9ff0-4c8c-abd3-1f83d4b803bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb067b03-e6d9-4443-ab48-d00a4f1dea22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecad28c4-d282-4877-87c2-607f75b510c4"
            }
          }
        ]
      },
      {
        "id": "41d6ecdc-6c13-45da-bd44-c0b21bb63786",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3ccb7e83-4dd6-4aa6-aadf-bc6c80e6c4ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55552561-66a5-48c2-adf5-832608154807",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47a3ebdf-3d69-4715-94be-3514171bd02d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e821db-a1ef-452c-92ed-20efd8e05322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb2bcf8-83be-49f2-bf0a-db19151a606a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7114080f-9fe2-43b4-9d3e-c1b018954ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6388bef3-6691-4514-80ac-a60cb8ba7811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfdcbe6-c0d9-4623-b674-e220a395e93a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121c37da-e3b1-43d3-a65b-8b7c1a6fb3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ff182b-1cc4-44e0-b23b-115b6f315210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90917662-466b-4fb5-ba2d-ae3ebb1f4c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c839d32-2671-475d-a830-b5fb1f166d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8c014f-331b-4e51-b94e-c2ca3a1e3db3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b6ad52-4b94-4cab-975b-2d754f6c3c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0434ee11-596b-463a-8dbb-0b03a9162931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206735d1-943a-460a-9f41-d9ebf9cc8caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f51fd26-1efe-40d4-99b8-1bb6b93d7b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aaac4d-a97b-49b9-8b1c-de47ae09263e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0d153d-6469-448e-a04d-82b31b9e90cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27162f2-f3cf-4e70-a91c-c838e6b96113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1cfe1f-bd40-4df8-a5da-33e764092bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b24cf0dc-e3b1-4f8e-846a-6a77749584af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c725286-f8bd-4909-b135-d6ba9a910fda",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a7332b-55e4-4435-acab-f0542552a9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1a133f-48a3-4921-ac8d-ec2edd8445bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8805eca-8e05-4e33-b9f5-0f106fda46c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dadb81c9-d8f2-4a6c-8b06-2cbdb0eb586f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94d529-c789-4f17-9e80-447dc6a7bd87",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d03d9a-36c5-4afe-8d15-7571353b4175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b634b67-7de7-4620-9e98-db9f5ef44525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c39877-51d0-42a2-9359-811a2cd1b0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73a3abd9-09cd-4bba-8877-81fd2b09a5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30640f78-5add-4115-a859-5cebbeb7c91f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26595e9e-db0c-40e5-864a-e33a11d860d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cb78b4-da53-4ada-842b-3247fe56662f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee560d9-662d-467f-8917-a730ac73262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4c5c8a-4313-4c44-9f7c-d5e98ed411f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d75e90-07c1-40e5-aa03-aa1f1156bc98",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ded6470-81d2-48e2-ab46-2cce473056b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b067a4-8a71-48d4-af61-0099b7d1b6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf35f3af-8bca-40f4-9930-7ec8820d7b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b88f66be-7000-4790-adbd-29ab0e18c0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d397c9-a448-463b-8edb-927874f294a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea06151-0ec1-4931-981c-e8658e14c145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d345faa8-0aff-4452-be47-2c07e1e92155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4d6d85-f79e-4b07-a0ab-05eae355a853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af956210-a630-4cd5-9a9d-c5014d02028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5465f22e-ada7-4694-ae2d-eae241a4a0b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03be710a-3c14-4a40-bbea-cf374617b1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47bb812-3a5f-4df7-a6f1-601c86f03c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ea59ba-8d9c-4a3d-a03e-59b0b10e4336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c7785a-b857-43f1-b9f9-f7e1eca18a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88684541-91c5-4ba6-b1fe-ff428dade944",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30badeec-a3c3-435a-9c70-7d0c9606510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810f0948-9dc8-4b3b-8de9-07d6fc29f01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa1d091-23ad-4f58-84a1-b65a08cad9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca0233b-3da6-42ca-a827-1c9ecbe6750e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbdbe1d-728a-45e7-b240-c31648f9ba63",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1873ac2e-c819-4d94-8bc8-7d57228dc2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4d04ac-ef87-449a-84fc-9c0bb2e4c318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22761baf-3505-4eca-bbbd-de01d949f53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7004798f-f7bf-4fe1-bc32-73e96a0277c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f6810b-c0e8-4cc4-9a73-188e837a38de",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0e33aa-fce6-46bb-a51c-b991f3c4f131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fb9dc8-178c-4520-b1c3-a74e723d13ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7cc9e5-349f-4f81-b02d-4dd0c9ce76c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb7dfb1-870c-4710-92f9-42dba3bd6921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43721f61-f970-4e0f-90a2-f0e33c391e02",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e4ae40-4dc7-4121-8995-e11e3870ecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9547776-dd90-40cc-9eb2-35cf1e21626f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78616fb1-a5c3-473f-906e-b3ebf8029e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "50dc91ed-1f5c-48c5-bd00-4a3cf8b60532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe7a5f-1b4f-4557-8f0c-b99c14371cf1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4449b7-0aca-406a-a58c-7fe67552278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa36fc2f-dc86-4ae2-a04d-38b8ee6a8f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd09ce-34a1-4ab7-89fb-cbfe80bb0ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0082e491-6b10-478f-a1bc-0cd8d70f987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a8dede-6068-4b71-821c-f5fc236f46ab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540baf6d-1b22-4ee6-a9c6-bf098080eae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c9ac19-c167-49d2-bb43-4a2952888b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d5c5df-1288-4038-84e6-94680787bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0b6672-8e33-4936-8197-0d66bf8a8ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b174cbf2-87a8-4f45-baa1-d78826d0c7a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f17bc0f-a921-4943-bef4-1b3a07876f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8057854-f6db-4d0b-8cec-3accd62cfda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93365ca7-dddf-4297-9321-0bd7f0481b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75912829-6241-4fa4-8e98-7836f7b6835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926c3950-3015-4673-941b-e7068064ec7a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf493c0-2998-4a0a-b370-c2c657f47d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df9dae3-33c5-40fc-8403-bcb5ba9dd1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b0c3f4-9f5f-4691-b7a3-83e14356b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b47b12f-cf2c-48d9-b090-a98f3201589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ed7eb8-83c7-4bcf-a468-5a07495d9bb6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4ea13c-1df5-4eb1-90f2-52d059b28512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ad3360-369c-4511-b933-a0e7db2e4d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c66439-a615-4d61-8245-dfb58c7e65cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f19bf8-923a-41f8-bd51-298d199a22fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7bff78-c894-402f-8aee-6589ce2e8128",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07fcf25-bbd1-4a18-97ed-095fd2223493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ca00a-4e6d-4119-822e-30d84357a0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b023d9f9-71f5-4389-a083-93172794128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "969a763b-f7ec-42c1-b69a-c964982682d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e599523-14cf-43af-a4d0-84f301bb0f7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5622de68-0535-4cf3-83f7-dd6f23148c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b342dffb-611c-42fc-82d3-ea78d08852e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb2a41-e6b5-4deb-b38b-e2d301d217f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69051879-0702-4e15-8181-81f391aedae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e498ad-5782-4dd6-9126-10e683be5ba2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9584487-09e3-4788-ade9-3cef7a739a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c54437d-a1c1-482f-8dd5-dffb5bda85f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd158da0-f173-4cf0-9321-cd92c7efbb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98ed0741-b4bc-4198-9621-3456d8e2da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fc56a5-8892-4247-9fd8-98a80080f263",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6335c1-bfc7-49c7-a7ff-78af987de3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0f7ef2-03ca-4a95-bc1d-1bcc5a1f7d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4ba45a-bda9-4392-bfa6-70ab8ee4dd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec39be7-8a58-488c-90e4-0386e5202413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336eddd8-ccde-4630-a89e-b3a2599d4e5a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a73e2c-cd6f-4781-9e43-2844dfcf1698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf5e287-83a9-45b9-b01e-814dc916afe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd63d84-3999-4b45-9156-7da7b257edf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8868d8-fd69-4076-9a5e-c554d09d9b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc6b372-08f2-438c-bd86-989af0ca0ac7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b0d3b5-9b24-4db0-b420-8d7a71f3eb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecf505d-3410-4667-ac1e-c2b923b4a5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d2e908-7266-4aff-b577-295455cf5362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e9c199-9fd3-4ee9-a431-a6f5bcd37ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173b193e-6bfa-44fc-8b36-750e79efe8cf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398a260b-cb7f-428f-bef6-1f26ca16d15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12769a2-b90d-4e14-9b22-4fbf14557cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe5ae9b-dec6-447f-89f0-2d8a5c2d196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b517a845-c1eb-4cf0-94ac-f4e1de37b2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f474aa3f-31dc-466d-aa4e-4b2d2ea2359c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd31a4-0229-4943-ae74-393388e48cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6ab8ee-24f7-4373-81d9-36185a7540d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e41a8ef-d215-4a5c-98b3-bfc66432ff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04fb58b7-60d0-4391-bb68-def4719f0495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a74bb3c-86e8-4bae-a839-81f0ffe2905b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8056c38f-ce09-497e-8fac-d8f016613790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec269f74-e005-4eeb-a583-cf115367e61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6f2cdc-7757-4126-8fa7-6425a40a494a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c492f76-eeb3-4690-9ed4-674d7a958bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45797c01-3bb5-4451-ba78-03316e3c256a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfef85a-a217-456d-b7a7-f033f0f9f84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a995125-af40-45a0-9611-183c6aebe6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439d2b2f-7c46-42ae-bcd7-af6052ca8fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2271556a-0a9d-4b7e-881a-843e542152e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7513eb-a988-4a1d-a644-fa154cc6e0fc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c0ecdb-e7be-4792-bc31-7a326bb7728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10aaca2d-ea28-421a-ad3a-98dc68133da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc0bf01-ec46-4397-8610-c69a777ced7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a7c3a7-191d-42ae-bff5-a87cb65c1acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3380493e-9a2a-465b-877c-75f4e1cbdc9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f59f532-5abe-46ba-949c-92c5eec0d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71773746-32c0-4a55-9931-4f9111399041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be91c911-e5ec-4059-a95d-2d678602e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ab05c1-df16-4704-88e9-5ea01b1afcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7a3a4d-3503-4858-8493-874cd214789e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e99a09-b261-47aa-8814-73f0c690b067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b3525b-ed81-4139-8aa2-32c501eb7a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae14e0-7522-4c4f-86f0-1ffdbde86d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b947325b-6737-423c-a589-fe4858619ceb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85baf264-d0ba-4f31-8092-8a19ffb92feb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "005fbbf6-fb23-4766-9075-303870ed20c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afff5865-c423-4539-8415-c5295420b52c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a4dc18-a1e8-4e8b-95f2-bd5009af313b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37abdf5e-cc28-42a6-a8ed-4067ff730104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0704cf5-9fde-4c42-a20c-8364daa630e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99dab323-ed24-47a6-9691-aba09b353e7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7650e1f3-a301-44c1-842d-da46cf091e39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd9beed3-c8b3-4731-9be5-4c04e0951583",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5634616-e7ce-4028-8514-aa2719193f93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cad1de6a-b82b-4341-9998-28212ad052ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f80d243d-190d-43ea-aedb-e33afef02e04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f669efef-c7c6-482d-89f2-6deac2828a2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7898d82f-8999-4026-a8e3-3204a3ddab64"
            }
          }
        ]
      },
      {
        "id": "3ee8a284-05e7-4e0e-a8c1-c285c737c8ac",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "24a3709b-f7a5-4394-93f7-3e49558b2566",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42d26db1-f766-4899-a15f-a41a0900f243",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2ffbd12-e503-4086-9514-3eb6b485d89c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc1758b-9bde-4fbf-8f77-8f83fed8b8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b9e26c-694b-4fc4-a5e3-2c20b51b8e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23df481-6285-4226-8121-c73efd620095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94b1efb-0ac2-42fc-a7d3-e15a3ce2cfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f50b3f-1dc8-4207-a314-6e706e0e0aac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b0f8a-8504-4953-aca2-1acc92f100da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31350e9b-9256-4723-9032-bfac5a0252dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af660c-b0a1-4e25-a72d-1410e21cd5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6647eb72-66ae-4087-99df-3ccd7bf6bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691e1a22-f899-4235-959a-bc9360098681",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be79143e-e6d7-4a5c-9bdb-b99ca65849b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3f95c2-1304-4db7-a589-5a6f73c10224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eba0ae-f64f-4fc1-8a09-1c7dfa6ef4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e426b2d-18a5-49bb-aa66-05788d66705d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d560ab3b-dbba-467e-8f6e-04780fd1e219",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbf9d27-2331-4bb5-af98-519fb3f9db83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daba17f-3e9b-4956-a0e8-8d11a7d55fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa331b1-ccef-441e-82e8-fcaa800ad795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b76272a-b010-4e4f-be9a-d0587903c85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3742b42e-5d78-4fd9-a1cc-6e0505de1718",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdea285-a60c-4996-9e80-d3f0f56f7ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4e0410-37ec-4157-9326-d543b67adf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed98eef-dbe5-4966-8450-6b2bc39899c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a421a9f2-02e5-4ae1-a005-eb551da65641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdae46c-5bcb-4114-9293-a8ddc187682b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df4a7af-4268-4eb2-9d55-9816b3ac9632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a37da8-bba0-42f7-9b60-e99815ef9edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a7d975-9451-4253-8139-9b42fcf5c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b93d35a1-9e60-4157-8b8a-4fc172000fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075b37df-e240-43b8-bc24-2cd5c88eafb7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd505053-2b29-48e1-b2fd-cfdbe084e912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2f8eee-5d36-439d-96ff-46b36280a8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac42f2-e308-4f37-8006-f32cd2abd5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd76ea44-0da7-42cc-afa4-3387e08bccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9754e0e6-a2ff-4928-b9d8-32f6e5a672b5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515f7d4b-808f-4415-b770-4b2361eea424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdaa35cf-7602-4bd6-a0b0-6f253d9a4a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d21b70-636c-4ca3-bb70-f95c50d3c683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab3a7bf-c3b1-485f-aeea-bb7b6c6be8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27063c16-da26-4e6b-a0cd-23df9d02328a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc8757c-926b-4fbb-be1d-05ce4da36e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342a87e2-3320-488f-ba47-10d3c45b419d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36318bde-8584-45e8-9884-3a47394de97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5f9a21-ee76-480e-b766-9c537af58ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d43cd9e-2946-4a3e-aaeb-535592a37f94",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ec3715-29f1-408f-8ed7-1f02cd992798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccbaf67-334a-4465-9c3b-a90c9f720a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c39aaa-317c-4a9b-978e-0a97562230e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ca0211-2f94-426e-9985-9a6bf385bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868f4916-04a6-40ab-af82-bdbd3f981341",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1f5281-d025-49f1-9452-cb79b88c8749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd55bb4-f625-4a5d-8e2a-ba27dfea12fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae6f897-da47-4f93-ab93-84d10ecabb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d7bf19-8688-4dd6-adec-b4e727300599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdddf0e-ac1f-4741-a980-1bb6a972bc77",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb65b4d-beee-44dc-bbed-9be04365ee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9328cebb-dc93-4495-8b38-3e2ae51bb90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea35c62-c175-4e90-bf09-26fd07d4ff7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae5670b-aea4-4422-a50e-a869d06b4135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6045300-412f-4d95-8008-7bd0c128d222",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a1008d-fc63-484a-a40f-feaa0c9462e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652f2e38-3718-454b-996e-c3352f67b8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e141ac-6699-44a0-b799-744f7932a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11846bb2-2cdb-4e1a-965b-213d232d0f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923c1d91-4be4-4301-b9b6-0181aa203340",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb835f25-ae3c-4135-99f7-ecdf271d1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc61dbe3-f50d-4680-b2b2-e6b9273aa153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90590253-099b-466f-a490-d9687cccc807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e62f7916-e57e-49cd-b1e4-55cbca832998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b4ddc2-8e78-4e0d-b50c-c4e2f48c2a42",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08576044-5d99-465d-a38a-a97c822ae061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d923a0c4-5d70-489b-abfd-b18fa10623fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da6e6ff-c22b-48ce-9eae-1b38ed0a74b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "19df71da-8ab8-4c10-90e1-d7fba7496131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4203c7e-76fd-4b7d-b0b4-0b5cf2759afa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b30bc-2af9-4130-a7e3-b5075824693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bc9b56-cd45-49ec-b77b-794838f23606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a30c8d2-9940-4cdf-9cca-9cd48a747c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd52bb4-7d83-4a40-a164-353e65cb2fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1864cb1-bcbd-4cda-a9ab-cfa38c7c2dce",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab374f62-c30b-4760-9d57-5f307405d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6769b6-556f-462e-9569-13df12023795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990e9557-7746-4174-8a0a-3292a4efcc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0feeea74-266c-4551-8167-06d0b6d27bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7379ec40-ee01-4f99-8b2a-8c737fccb02e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e02936d-6c41-4c14-a613-bff2be926e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f25afb0-54df-433e-9541-38bb120a1d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d205f0-0b82-4308-b6a9-625dfcd92dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be12dd13-3e1f-4e3d-8858-1a86d4fee6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8685f67e-f8a2-4e4d-bef3-34221dafca08",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ca2c99-4a5f-4eee-aa22-224c186ac81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65f6495-3016-40a7-bf46-5799ebd43756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d424cb-8b98-4ee1-9ece-abe9be033d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4765995e-d747-482e-bc95-92b0b27032fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c22dd5d-9616-4cab-8213-b5cc38463583",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8777d1-07ca-41bb-a099-c9593ee9de5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366ab1f2-0429-49bd-9a06-b3b675fce347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de9eedc-d59d-4b80-b344-81f289955979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "675efa85-9b0f-491f-9f5b-b1bc1b96bc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95802f80-5906-44d3-b86e-0cd10e13ae5b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ed2f63-6db1-47d0-bfea-bb0bbcf59c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04c4a5f-09d3-4eae-ae9d-32a2840057f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c12b8de-3075-41dd-9194-bf88e6d62df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2e581e-c1bd-447e-9756-6da6625f778b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42227d8d-b605-4d75-b11b-b46c1cff9cc5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccc3662-3ab4-42c8-aa2e-f458311f87d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64686f80-1827-412d-acdb-402b55dbbde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46664d5d-35b6-4b4f-935f-2169e4c8229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae6610d-cee7-4779-b8cd-042f27a7dd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2bcf6e-6c6d-4b7e-915e-1abb2b80cd1e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a604c43e-50c4-4ddd-805f-913e197489ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01475a15-7716-482f-a66a-fbd655fe66df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3097d8-8ce7-4f31-9441-450b634f0244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5446cbec-f2a1-4d23-8cda-1865fb9cb45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bce3165-9116-4425-bb13-b13f50a0f867",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4a6ffc-42ac-4539-a799-9b435232b445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f560f98-5ce8-4c06-b45f-39a07539965b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0f7921-3c3c-4649-84c8-ba04f4d271b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ef2583-fafe-4899-a50f-8c134aada67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5797a1-d81b-4d9f-92c6-78f5312469b1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a6a54-b74c-42bd-9cae-dcc3f536d564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64902f73-dbd9-46e8-8c32-3eb7231a72cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f92182b-1d8d-4eef-9022-e503600cc176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631be741-33f8-4888-b0ea-a6be23a0274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024093a-40aa-4455-a13d-a2aaf4107841",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84defb91-5395-47e8-bfd4-16b3f51f874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eab820-4ab7-4a13-b537-d8979e68f148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fee8ac7-719b-48ff-8bf5-4d73ee60c011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87017d82-0252-4216-b788-7b45e7d78ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b6b86-1b87-4bc0-ad3d-346ff44e4e71",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdb4adf-e5dc-4e9a-baef-fcc0d4e0dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f558cf-5905-44ae-b9a4-65a008676e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaa4d26-d75a-48f3-8f31-a8ac2b4e2107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee791d6b-6875-499b-8b6e-4d60fd787d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9f51b-f26b-4fdd-b216-1a04acefc5d2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbe5f10-5fc6-4254-89be-298699f8d7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1d5e08-2cd5-49e8-b077-e074d797000d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c94ac52-7131-4afe-bfbc-03c66b93481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcb24b3-f052-4508-87d1-a5d325484236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b18fd31-908a-46e5-8421-a72f24100ede",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d5b93d-65e0-4646-8ab8-76a26f21ee38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9050fcb8-0a2a-47c6-b6b5-30178a8edc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127e8339-24eb-4bee-9e50-f51a8d65a188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7523f41c-1f05-4ee3-a186-f37725e98e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8d1480-e20d-4279-b0f3-5143de2c3945",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eb8b25-7011-465a-bd4c-ddb94644971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a091f8-5f6a-4168-af84-f48ab4ab0bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0148c631-acba-4f95-b895-291cf999f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b513481-b25c-4f65-9dbf-0745329f6cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9abe96e-e11b-416e-ab60-aca9748b055c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2938fbf1-6592-4889-86de-4d2509296165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279566e2-f209-4e09-9afe-fe3892294985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596aa796-385c-4c97-a85e-7e4a68f1bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5553a95d-aa37-453f-b48f-42b0da8263ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5079e2-85c4-49a1-8652-9fc5ae447b7d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba45e3a-68be-4a59-8bad-c1b784f80d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0166ff7-3856-46d9-a449-21b41542999e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4adb0d-e6da-4146-a431-11747a54fecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2304cc5a-33c4-44cd-babc-5b68e8a4bc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b291d6e8-3c43-40cd-8af7-89dde3ed9cd4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54089f36-bb7e-458f-b78b-dc204bfbbeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcd41cf-a4b3-4828-a518-8cc96b816939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e1009d-45bd-4315-9b98-7bf0d4d9cc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4682b9e2-a57e-498e-9ae0-fb9655146de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9996992-c6a2-412d-b852-cf8beb504e1e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03af7ec0-713f-47e0-8fb1-2daad0719efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5b86e4-af2b-4ef4-8147-585fd1c8084c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ab6395-a585-4e15-aacf-d99e25a4476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cff9c1-8432-472c-9f3f-6a475d9fba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba7d9a3-7adf-47b5-a5a1-75ddf5c9905d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c21c26-9ed0-41e9-8bc2-f8d810caac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfd5d0b-a310-40f3-94b9-c7ccae6110c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e93401-171a-464f-8eec-d6f63d573240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ac1d17-771d-4969-87db-1a51ddee307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9edd84-ec39-4aba-9789-1b840aa8cb1b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82353c18-018a-495c-a1bc-0501273b3a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdc49de-4e4a-44b5-95de-38b0e1494cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474f2757-5e32-4598-b7f2-76059b775bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f81851-247f-4ee8-8896-1c7624a4d6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2dc9c4-786b-4ec0-b0b5-5579682c34a2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc85d3d-f9d1-4666-99b9-7bd471dd556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dad030-85a7-4a9b-a16a-1970b496b1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdfbf20-f165-46b5-ad50-b8d9fd7b1533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40b2cab-6426-4e65-af28-e9f009abf376"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1d85f4a-479d-4ee1-949e-b3b60a975fe3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8876bbcf-3c1b-4629-a311-d7ddf615e5a4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63209700-2b9c-4ce2-8b93-6d68f1807749",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb4c2cb-099d-4417-8bd6-aadaadd58651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce794aac-6ce3-47cf-8376-060ad54bb3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b35690b-422a-4460-9672-04464fed35ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "140806ba-a124-4467-970a-41a61f65dd68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc580186-d1b3-408c-9f0e-bd0d3a4fbaf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c9cadc7-5e29-49dc-a822-1b25a6edfeb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff5eda7e-498b-4c01-a58f-71a1244f18e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00217d18-64f7-4050-a9eb-a3b84df82844",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ad9b711-faf2-44c0-a293-ab34bdb67420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7d12676-effb-4497-a932-df7bde98a77a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db9046af-514b-4cac-af38-2bc7520790bd"
            }
          }
        ]
      },
      {
        "id": "71cc5be7-df12-4550-a723-9c01d502236f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cfcc8669-91f9-40ed-9698-bf650bf8952b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c47f004-2b87-42f8-af0b-f2e0017a7346",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b3fba5b-2e70-4f28-88ac-3fa40ccfbb38",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e812502b-7cbb-44b9-90cf-ca89af4c114a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca56ea7b-81e5-42c0-ac4f-0a3c0dc9fc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3967c520-4e9c-46f8-91d7-f581c32b7325",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf5351a-c8d8-4748-825e-c80c2826a108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3560d0-3e3c-43fd-9a85-bd81155981be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f970bb-8daa-4fb4-9436-448b0034bb08",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae97058-1709-47f4-8a73-ec8ba7917e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38675240-aecb-426e-baa9-64072cd135de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631667f3-bc49-4d6e-8c93-331f65ee080d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a05b21-d907-4ccc-a01b-9fe3f00b9723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca4d539-4639-4a82-8701-8b37d2f6b305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addfdfa8-14ac-4bce-aaf0-2c84d2b12038",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ecc38c-4e11-4ef5-958d-f464de3429f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75d4b5c-a827-4d30-898f-5be330717d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d433b8dc-5865-457c-9817-3263c837d814",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112fc7b5-8c03-49a6-8981-29ada38d891b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b208f77d-ecae-4510-a7e3-7450c11489d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6276ac97-d335-46b7-afb7-eb34c991ea40",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4885e37b-7323-4c75-bd90-3558a0307cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d604948c-482b-41ae-8be0-bae1e5587fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0e2096-07d0-4e88-a7ba-7316f38fa5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a187904a-e13f-4d04-a421-301b89da8cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c202437d-a2e3-418d-8828-bf21d26114a3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99e3bcc-6935-4d84-914f-2ddeac3153a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c63af9-4c1f-4411-aa9b-d0a91183aef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f62fe9-f74f-49d8-ad1a-ebe99d4be392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90ec7d6-e69e-4b80-8f79-a8beea5475ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ece98d1-b62b-47fc-8981-0e6423cf449c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c413063-2726-470b-8811-ea95668e8ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041557bc-a0e1-4b41-b906-82ff8ff46df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c95e1-e3c4-436d-bca9-545935301a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88eb926-6317-411b-996a-a2b4933db05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c28f7b-f5db-4055-8fe5-df90fd653ddb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a99eff-1d3d-4c02-a69e-e2509d443116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e4f3f9-2686-4620-b545-13a76a295cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c52cef7-eda2-48c1-8bc0-21a2ddab4a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73dccfe-eef1-4264-ba93-40bd94b6ac45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9996a6-b0e6-4b4f-bee6-5974bacf97a3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3aabcc-738b-4bf0-ac0a-5c723e4adecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1715e8a6-b75b-4468-ac13-96daf4913ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c1e0ad-1fda-4ec9-9fa1-38c02b7fef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22667bf2-d291-40fd-9084-0aabf903a481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111762b7-2125-4c68-af27-e100c3d206ed",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8122378-b514-46e1-81db-bf9e337236db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e2ac40-312d-45f5-bde3-0f739e21e422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f4422-2f91-406e-823a-62f65b4b4f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7350b2-f797-4891-8f36-648b2803f138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6767f4e1-d72d-4842-b4b5-e4726f879232",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2630129e-52ef-495b-ae9d-cbcec1afd1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae6c871-6bdf-4967-a6c4-140300bb9403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839a05e0-fc4a-4f07-9013-5af2c145cf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cba548-ffa2-431b-82b3-3d495885464e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b1a0ec-9ab2-4437-b57b-fb0da84090c6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05aef738-9394-499e-9b54-b2ae64942759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8adcd3-cb93-4869-b9d5-a13c5c9f249d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a801f6-ff55-4c36-92a4-d9e0a1e20d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d5ad92-e627-419c-b6df-e84faa201c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aa84aa-811f-433a-b88c-1a8b9a6585d1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c7b1cd-749b-49aa-8c10-3e5ed7832a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372e1ec0-27e6-47db-87ce-91986999af4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb142e50-ba00-46ab-b031-70e3830afa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f644ff-7c22-4228-95d9-db503ff0a65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534a5f50-cc01-4042-81c8-8d70bc699775",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d7957f-06d1-4f83-8332-1b1e42e5bdad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37824ea-ae4f-44f1-a0d8-b6b1ddda6743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4028cb90-e1d8-466f-b4ff-8d1c8c47e726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeebdacc-646d-4294-a934-e1b9e7902d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a23351-9d55-4b3f-af7f-8237aefaa868",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7306f0-01d2-4a28-b33a-6ebd4a5b8135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9526b5a-e678-49dc-b837-99cf59d51d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08c7a51-3847-4378-b8ee-df4216ee5c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca1a0e4-45b2-4e79-a2f6-57a57659a9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834d2233-10c5-4b60-b6e1-f3e0bb20b029",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f27231-33c7-4bd6-9b7e-121cbafcc8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a85031-ddf2-4b7a-a261-6d999284f82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dac6df-365e-4d5e-9026-a25a06e6b378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb87839-8c61-43aa-91a1-1bf3dbfc2137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2267848a-960a-4ee1-97d5-4982171db954",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8cf9ce-f169-48ee-a757-039bd2a4e62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b220a0-65f0-46ff-a274-5093f103e8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65df4e2-a3bc-4e84-a772-762743cd1f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b276c315-441f-4ffa-b95a-e20d7479831e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dac5933-bf00-4418-bac6-0efecd0b57cb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25afcd57-99ca-48f4-885a-fc3254fa0ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce5b92f-189a-4e69-89a3-cbf1d47b42dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce146fef-e978-4064-8a15-d3feebcee322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5e9bc2-1c9f-4a1e-b0e2-3d740e1f9cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597deab8-8b79-4c79-932b-617ddd636c3a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bd724e-a94f-425b-884a-a1458703cbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992ef0a4-ef91-4062-be55-41d75e4adcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fa51a4-1689-4b8c-b9bc-463f1c82e387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f742e5-852a-4be2-ba36-5bd2b2e2e412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc953b9-8ee8-4061-a8d0-388aa133647f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1aa6e5-5f5b-4223-acb4-263615994193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2875218f-88d9-4266-a5fb-c0141106f91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e20fc0-d398-4012-b12d-3c6c9f7fb85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442e01f4-6af4-472e-8275-d43ef3a54556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46847f59-c957-48ef-bb1c-e3f1598651f0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef49476-a70d-4114-ab5a-1c592b375444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd75f7ad-48cd-4712-8fdb-fcf126bcffb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd6e4f1-7c62-492c-9d46-0c1142e03561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396fa938-ad3e-4f78-8a73-7772f84d7a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889dc2a7-9c07-4ca4-94d8-d457a61fd27a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0394be3e-7eca-4dec-bbb9-5ecc2047d414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f76164-2420-4117-b623-a7681001f529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a6f2bd-c9a9-4d9d-bf1c-a90af86256b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffd53a4-a0c5-45fa-8c7f-fc4ed8cd1eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b32de3-0567-4d2b-ad36-59b580ff1c6d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362c4af5-b6b8-41e2-8e6e-ca48fe4476b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b901a33-2581-4aeb-9899-4311ec01442a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5278808f-c237-4cbe-852d-80718dc0b741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35728efd-e4eb-4799-b8bb-d3dc21f54d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965bcacd-4dac-4dd7-bb19-861334266e37",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87274d77-09a6-4e37-b437-60120452a7c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2521a7-31bb-45cf-a6d3-2e332c941a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c543206c-b04c-4b97-9b65-9bc9af97a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e2d1e5-48d4-42be-a7e4-42666539f92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c9a989-8bee-44a7-9e90-50e59b6f982b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3557c7-9d47-4720-a382-76d872f1a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a716faf-ab11-4aae-9d4e-960352574614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97b1265-ec0f-472e-bffe-8ab70e9e00e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42a315f-e68e-4898-8a51-495cb5ef0e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a9fe8f-ce17-41b8-b510-b451f79d197e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c297e4f-b371-4a4a-9cc7-a3ff64dedafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715b96c3-c287-4587-a328-248c1ab1864f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9034b38d-8ca8-4da3-a8ea-91b3e1f41504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf81749b-393b-4f64-8624-8cf158cc9075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f55d24e-ff21-4186-81b9-7a1e67ef2ed5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e30364-bb35-4d13-b48f-f43031bf66d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b9647a-3060-44c5-8eaa-5416266aa7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d9970-1651-4b6b-b32e-3371cb658fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed879289-f838-476a-ae5b-9d3c7b22774c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09167f5d-4af2-4894-8128-ff0afadf065a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ca02d0-8534-4fef-a2d2-bbdfae74d264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a338f94c-2b52-4d81-9e99-65c7ddd36d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc3c447-78a7-4a0b-b120-d9d5ab12d8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc540c6-c42e-4325-be40-7bd37b8db39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8222c6d-e52e-4158-9828-b7f4525db38a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dd2471-8b69-44e0-a7a3-32ff2d914893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4183911b-18dc-4229-99c2-f51d60b1cdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1718bce9-ee56-4388-9072-86d677de9d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab16466b-2568-428b-ac5c-514bcedc3773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825ee65c-dab3-40a3-a5ff-24d981489bdc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243a914f-6ab7-4369-be2f-abf9e7db345a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba78b26-a8ab-4330-b70b-2345e0296a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1303b22-75d1-447e-bf0b-0770101271dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87137d93-fa6f-46c1-abff-5239f66bcfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d732ed-4194-4381-87dd-0a45d7cc51bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809af201-c598-4a87-93f5-8203ec98da05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c4f69bc-60c0-4e0a-8762-7d2b1d99939d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b53fff-97d9-4cb1-b1b3-6808d3b1e8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac06b98e-16b2-4e4b-b14b-110c78ebaba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac05bf-7345-4743-af4a-28386f4000c4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f85055-1a15-4ccc-a427-8d7186d608ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f58e6f7-2127-4307-8e99-d06f48bf7bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c0142e-1410-4c2f-93f9-96dfa27b9076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7618cd67-b288-4683-bbdc-bb03f4a6c05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24c1110-b262-4382-a8a4-3231f883b218",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58567549-ae7a-43bc-aa2f-ec3254c5cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e909f8dc-9aa4-4719-8fb7-c3b81dca75ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bd2456-c568-4c4a-8f9c-25ad7c2c428c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1971ce-39c9-47dd-a71b-d09094feb08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ec2b76-fe95-46e3-b6f9-8c2cdf7e4fe7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50c8fb4-7985-4263-81de-454b184dc5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd9853e-6f49-4cc7-920e-bfdff953a514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59fc0f-6698-46b7-8940-5fb6a939749a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc1b8b9-e602-4077-802b-375636497a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3f91a3-a5ae-4183-ad65-a762b5387d67",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bee24ba-0c04-4837-8875-cb0114b477bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d12be21-77a0-42c4-be60-ef2a7502b9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aa9b96-ab20-49a0-9dce-92828ef34a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb56e1e-0ce6-4ded-b9e0-f29bdcaefc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e860400-9eae-4c33-b852-8648e37231f5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97ba257-7d1e-45aa-b880-711c7a0ebdfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cb447f-663b-40cf-953d-8b8174278b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74b5d57-f4dc-4922-b662-0e06c175adba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdb170c-7fed-4f9d-b88a-db896c4a3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dff7bad-8979-4bc6-b950-deb73834b989",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736ad55f-352e-4e55-a08b-521446e082bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8039cae3-33be-4fd7-bce2-9e57d172c2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31827bc-8927-4936-aa13-c09c7145ef6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcf82b7-f9c9-41f5-9291-b68a0149b79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f23c1c4-685a-4059-823d-3f307d65d9ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58139d4d-b859-42e6-b97b-80a61028c3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7670749-4b6b-497a-b4ed-3708479ba8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4909e2ff-2dd6-4d1c-a82a-fcf447370082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d4717a-3ea6-4b0f-bd80-f2108619c14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f8d7af-946f-4456-95de-ed5675e8e9e3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f08e6a-44b6-4185-bda2-5a09245c9542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8e6afa-8948-4762-99c1-61f40b0b3c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed06c633-34d7-497f-aa7c-84dc738bb541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee3211d-84f3-4232-8d47-f95acdb9e6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe029ef2-93d5-4a46-93c3-00a9f6e8d01e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a196698-3519-41f1-9411-0091c7399f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fff0cb-1cf8-4a0c-aa21-8750ad784c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f6a9d9-8154-4d93-8307-cb1e1f75b578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f14be6-3e18-4e1c-8326-8dc281ee4be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d284042-977e-4e0f-9776-e89b86ac87b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25131326-168f-4133-a8d7-4fc8b4d2865b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e72423-624e-45d1-a2b2-7dc7cdcd94da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abbc723-dc68-41f6-b390-7e5616c67afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740e6a86-1811-42b6-8f1b-0a9a850c0aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcc16cb-bdcb-4500-946e-22014e5d1743",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96671d0f-9926-46f1-9af7-46b791aa2bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb54b8d-eede-4a30-80cf-2a3ae6ec9770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c12a710-ad84-4012-8e60-f1adc8d92061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4470666f-fc9c-41e6-907f-8cab84244002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a55c3a8-5e7a-40b1-aadd-4db30588efd0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c26c465-6785-4905-a921-1956f18c4914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f3b36b-770b-481a-a126-d1a8b3290e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4eceb2-7348-46c5-ba0c-b0938328aa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f28b0b0-1c1e-49cc-bb62-9d8ec8d31cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff81c06a-f566-48d7-9ea0-88cc4b938ae4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8d66fc-2027-478f-98d6-61f1b1ba1d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7476d6d2-c032-4dd7-aeac-7194fd773cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f6e0cb-120e-4228-bdcc-aad0ed23fa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674ae267-9847-4275-b084-769d270168a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dbc964-0a1a-4a9a-a389-8cb10d498832",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f9bdb-5271-428d-bca9-0c1502cbdfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905dec3e-ec1c-4dc4-beed-42e1ac79791c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc58abb0-a2a4-4ecb-8a70-b170cb4f73d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d39d5c-99a7-400f-821a-6a1f2e6089e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdd3b5f-3d76-4952-ba59-6273f5b30511",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95b6082-d034-42bd-adf0-baeea04de3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12692f68-0502-454d-be42-23e4eb42e379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57181fe5-a527-463d-8e98-30e19074d18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99321c3-32f1-41c4-840d-50110ec1a89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0571638-1ffd-4b20-ac8c-93d6efc39d0f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220e7b19-b974-44ef-b365-77e50f432c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6b5b25-953b-4f5a-a578-ef174a58e409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99256962-4cce-4db2-a4ce-e91c0a244d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0de36df-c9de-4b77-bfc9-349c6ad36904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db447d63-f402-48af-95b3-cc48d5d1b10f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4f7bbc-ac45-4fc0-be93-24e9476060ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09a9ac4-cfd1-4f50-8aa8-1d50966cf3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015ef7ae-16aa-449a-b39c-c08384713e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5825581a-eeff-4af7-9506-970d2973f86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8784d183-a2ea-4dc5-9e7a-17ed3faf70b5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668c3d0e-951f-4064-a7b3-51c78eb60833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1b5b4e-e8e6-47ff-9bc3-585b060598e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a05146-ba9e-4277-bec6-dfa167a1cf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474b4573-0202-45e9-a6e7-7beabac3925d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30452340-055a-4138-b7da-bc365c4cd21f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726c1ac3-0cad-4dae-846e-44d531241e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29f3209-10d0-496c-8ecd-3cbd3ddc4d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cc8592-3bfc-4d0e-be21-3b2bf72ac357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cd6023-00cf-4e53-87ae-12402caf9fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc4f4a4-a7d7-4610-a92a-d5bcc8e4d991",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d1a93-45ca-46a2-882d-be07f8d8185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3541e690-15c0-4c15-a2a5-b4e0de0458ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33180d35-a506-4658-8f69-30841f69177a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46cf72a-e936-4a45-978f-79dd47957d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adad08f1-257f-4967-8727-e27a36a0cfa3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89753bcf-ea81-4609-b48b-5d72e39bd383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2496bd7-66c6-4736-8205-fd561f76528a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e5b88f-e0e3-4652-bc2f-bab112c333e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b21141d-7ed5-4607-be8c-2b7c8f9b2e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce7aefd-6f94-41d1-bd1d-d4087ef8fb8a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7b8fe9-53e1-4724-a2c0-01e8b3925e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a1b73d-3e8a-4ef6-b118-6f3a73ba1059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7165636e-552e-4ea6-93a5-7a51d4bae3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb6e637-daef-4f88-80b1-c239b23e5758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b292f41-4f46-4205-8f32-14e222153ef6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ebd440-5f89-4130-a620-596dec0013b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec479d1-49af-4cb6-86b8-066a82f6931e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23c49f4-ff61-4696-be70-2f1c53c6d382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8d1169-66c4-4f30-a09f-5753543b2ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f1aa0d-7db6-4d65-af32-ba05f56fb5bc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60605ea6-57db-4dac-89ef-68c795ed0fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fd10fc-c117-41ea-be27-db9728309da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a17f84-56cd-4501-8c22-21946e498dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4768e41-bfb8-4c63-98e9-3a88f27a6c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e76dc73-4fa1-43c3-bb52-ff895bcebdfb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85b10f4-50c0-4d6f-a053-c5c6adcbd80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf1ebab-4a67-4882-8262-5f14aaed15ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84312dbd-8026-450f-be9b-941530ff185d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b576987-a598-4a31-b0b4-03e95843f62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d1c024-e780-4dee-b2c7-275bfb36d2c5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5ea8fb-4818-48f5-9eaa-de524afdcf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f0ac6d-c401-4b17-a1a7-a7b9c75c152b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85242fd-b8d8-4011-9e78-533759ee1454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4edb700-da90-4d47-81dc-65603a34ebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f854d6-0eb2-49dd-9a90-c2e0c771dc18",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d346c1e5-a237-4090-ac1a-7a8743a5cea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af0df13-152f-4253-a26e-3f8881db8411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623bf4dc-831a-4ead-80d7-0ce52aefdf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a245f2-c03f-4561-9453-5baeea67f3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fd7b27-5f02-4bd3-87af-e83804b3dd9a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457e4369-8e03-4095-9225-f5322d72a7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a584b1f9-0311-46c8-8b78-d1bc5946076f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35429c8-21a2-48fa-ae58-5c25ea864d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4b1662-878a-4d22-a63b-f81c994bb2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3795e6-834d-4833-b8ab-1fc7305933fc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fa8999-5cd8-46a6-a9cc-23ab98a7d0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04b3cdc-6ea4-45b3-b74b-b50d9fad59ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c39fdd-d7fc-4c1f-9aed-43e54fc9e0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaab7a9-c5e8-48bb-a4d6-150924ee529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdb8515-c4a9-4174-83cf-2d8793fe2130",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272f56ff-d340-4be4-875a-b1d18e770368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b736a72a-7d14-47be-89df-02e7ce4bbf1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9d489d-9387-4fe6-90d7-201a7ae386aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763986f8-2710-453c-a36d-b6103a41a16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7563d6-e642-4848-8fcc-e6437480f582",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22743f7-4ade-461c-b688-a20a050e0901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3402467-36fc-4a24-9b1d-e17813070afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369c01c2-76f3-45a9-97ad-e2061d7875f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e08cc10-426f-4210-b00a-58d016c78728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f0734-0aaa-416d-8306-aa4ed59021eb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495d965a-bffe-42d6-9af1-7cc7343abbb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a08cf5-4398-4e03-a6fb-8f3b4260e0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c003f3d2-b4ef-4fb5-ba76-1ef9dd4d1d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dd29a1-40e8-4d53-94e3-1e6a7e124cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aedb59f-c092-432a-9db8-eb20ed8eab2e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf34535b-0d00-4399-b323-094b1ad9e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae10cbd-c677-44bc-8a8a-a976decb35e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06245714-6f48-4c1d-bff3-2375d0291d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d97afe-0665-4b93-a376-2db675250425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25d726c-3ca6-4a0e-95b6-c96adb4de32b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b90823-f215-4929-a6f9-2f7ba82547ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "031504b4-2c14-4648-aa21-4187257461ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de41bd7c-a789-4989-b219-fac7c08b992c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0207a7c-c9aa-4938-98d6-730c81e2d7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74299f32-cbfc-401e-b0a8-44abefa9567b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16fce32-0b19-4800-915c-3f938b662c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10d21a5-1f6d-46a6-900c-6c464ab061d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2864cf5-33a9-44ed-a997-eb5ce082eabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def9f9c6-97c1-49ee-8050-33b7085dc115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79045ce8-d72b-439a-82f8-b7dba4852725",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979a27c5-7b70-42cb-b619-96d2ca8f9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1427bd48-c8c9-42c7-96e5-1441f7ff5a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcbd3f5-8c11-400f-a628-c2f75d8cc059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3dd5a1-9547-4869-bb02-c57d3f47749b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ac2de0-deaa-4ad3-899c-56fb8783a3c0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8155345-6a6b-4c32-ba9b-996cf1bf9ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4deac51b-d9f6-49b0-ac1b-f66ac06f5d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c5f426-11c9-4de5-b030-e0f3e82950aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8137d1aa-ca4b-4164-b35c-767c64e583e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4581a8a-d1f7-4582-8824-d08f462f1e16",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab78527-8de7-4dbf-97a7-3c38ee227bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31cb6e0c-7a08-405e-8f66-fcacb25bd951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd047644-ecbe-4aaa-8849-1b54b7bb1f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662abe94-16b3-4463-b56f-eee2a20c97ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d328b2a4-aa52-4b7e-a43c-a4e8ad3ae329",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594c7b33-e3eb-4291-8c02-8df245823859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85a3ec43-27f6-400f-95bc-15cb5327b87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b84c63-bf39-4fbb-a04e-1c39249ce8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863933ff-a90d-4aa5-b340-22724c0e04d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fdad0b-d532-472f-87b0-156d60f32cb3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b46ddb9-9b53-4f22-91cb-d53c94edbe6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e39bef-6249-4cec-ad17-b76880153e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cd8635-46a9-437b-b117-57294b7aacf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954b0554-8555-4233-9784-dff605fcf553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ccde29-11ef-46f1-be88-b442fdfa0d03",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88757fdc-f3e3-41c3-a27c-4ed758de1389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "675da02a-488f-4712-b8c4-fcd5d531b3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111a8dc1-a1f4-447b-adbf-84c7670d3f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8983ad0-9eeb-41bf-8e69-6b96bbc47317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ad3c81-1e15-4846-826a-0577f96f69df",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c12b288-9485-4216-a305-e4b7319c9501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ab0ac5-aec4-42c9-b6f1-073478915c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d872cb-1bab-4998-984d-42bb3fb0ae8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02af277f-17bf-4f2a-98ce-e970cf00ec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b297194c-1094-41fb-bdf5-060d3c42a4d9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95d1e87-fa86-435f-a52d-76baf31729ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7d8195-a25e-475a-ac46-818b448596bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d70cd4-95c8-4beb-975a-5318de8e2811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2852f39f-f6c4-41a2-bfa7-4029ea79c7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577497e2-37ac-4fc3-b0b9-954d315c335c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29130649-1d53-4c1b-88c9-329ed27ed9ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34a9154-9500-49e1-8fff-26c49bdfa01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a3e6d3-c115-4f92-86fb-01773bd3e2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc81ee5-38bb-46fe-a04a-d72568468719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafa40ab-d4e5-4b52-b0cc-bf880525d78b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1b0b43-6cef-4db7-b65f-03a79a2db6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd420b1-7b10-4fe1-a239-c42dd0900a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ee666d-2fe9-4253-b507-732b30d5f542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76657df8-1e77-4857-92e2-0ed774dae779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ea6f43-b096-4f9f-a3d9-2def9d46c59b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220988cf-9c32-450c-a164-56fc4f4c9426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c4e4da5-cd62-4c07-a924-2f8f119c32b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2668e9-bc6b-4323-8d59-eeaa021c514a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4013a0-da82-455f-b6af-86a9cc742c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3632f815-1234-43e6-a5a4-ff00f9870241",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c3d77-a3dc-4a40-bc30-db9672dc7b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68572d61-728d-4b44-8a7f-6349274e7fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386d5f65-6786-4f8b-9b81-c9da4a949c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0a3751-b449-483b-aa1f-ca09fd2e7b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98ca9ff-a54e-4b54-9c9d-aeb2a99e8370",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0676f85-98cb-4b91-ab5c-ee0866b9fdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eac2f6c-1cc6-42a7-8cbe-213e59a1f050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e95b567-cf0b-4c32-8388-1b5cc53df713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e5b0e2-fe45-4d9f-8f0d-dbf81abff184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e2babc-3809-427c-8d3f-f6494b0ce2c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a8f8be-3595-4932-abc2-a038ef7034ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10daf834-9f2c-42ef-885e-de74829db13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa027e92-9204-4515-a83c-cbf58c45d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d062b6c7-f416-4574-988b-f08f2f44feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5732b0-a05a-4d95-a524-aec22feb5c92",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dd2070-e7d2-4bd4-a072-dcadb29917b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48237667-a57d-4081-a010-7da8a56c13ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a685cc-44b2-47e1-b168-5e8494907416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5694f2ba-8c72-48dc-a216-ef75e5f9fe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa854f7-2ea4-4735-b1c6-fe47dadf8638",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995c4a74-6159-4baa-b50c-9a7cbca06870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20620f2f-ef0f-4b40-a532-e04c1760ee7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ce73a-280b-40ed-9a9a-6ef307b3b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b99a9bb-751d-454e-ac1c-ab871117a6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50563509-afaf-4e77-a1f0-4d80bafb7378",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c8621e-3531-4ae1-8cbf-c126b57a777d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091d2673-3db0-406b-bd3a-c5cbf070181b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704fd4cf-8e59-4cdd-9466-b7e21b954229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a657729-33bf-4e06-8396-40280d47f21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a846d0-b610-488d-80b0-45f3cbac04ab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d24b105-5cf8-43f3-a606-40039df90f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40bfc53b-004d-446c-a41e-80f62d3a006a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69afe9b8-4304-460a-99bf-e068c596b94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc437e-28ff-4866-968c-ca1ff104448c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3ac751-89a5-4ebe-9ad5-85c8df632629",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4645bc14-4a81-4005-b53a-f1e314f6fe80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48fdc6d-62bc-443c-86d7-1d921a9854a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faca3c4-53fd-455c-bb34-e92e3226e82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1889a3a-e00f-4886-94b2-826b10115fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7c3cee-b5f5-40a6-bfa4-aac675798de2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce582dee-361a-43ef-9ff9-fc13c72b6b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5628d474-dabb-4420-83cb-aa733afc1e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a67f4b-b310-417c-a019-e0ea8ee519f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c351efc-76ac-4317-88d0-7d55b8eae2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e33b412-b7dd-45b3-872f-671f076589ce",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587d774b-ed5a-4215-b7aa-291fc21337d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5523d07-0625-4c76-aa94-e6f911196b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7cf39e-81f1-4353-a202-2da210b5b06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f69057e-6142-4a2e-9a52-583ff45821f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da99f71f-abb6-4c90-9aa9-aef65fffb833",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6bce4c-6c61-475b-bbb3-f2953afc824c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e148e6-a3d9-4878-bfbf-c021592af14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee6a4ae-cabb-4750-a0f2-06e8f15819bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b076cf2-9a68-4ad3-b7e7-573ed1ff62d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d599cf7-417a-49d6-aaa2-64e3c12c418c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaaf36e-6d1b-48f4-84f6-aaa47f1a0cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936dc26d-23ce-4144-ab5a-cb065294ca51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9733a5da-4717-42a0-8e74-8c26e38afba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a7d22e-ec94-47ae-8209-b79697562a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cdd967-e63d-468d-b62e-0c55d3643582",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2251429f-50f6-4eee-b49d-f9372807e20c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e45a3e1-b33f-4b60-b047-4288677c7f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff6a9cb-dbee-41fd-89b9-4416731c842e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9a8fee-d3ed-41e4-bae1-ba54204fc16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb6e97a-816e-4854-b01f-69bb32d7bbf0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f27e5e-91e8-447d-9e3e-cf0382d47c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba35ce7f-e745-490b-bd85-fa9a767f4467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a75f4e8-7267-4c82-a39a-75a091894b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56ec6e7-8682-4796-9895-ca9726077fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bd7f23-3058-45c7-a419-ab71208964f3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ef41e6-d9a7-468c-8381-c32cfc613a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca31546b-72e2-49ba-bdd9-ef87fb794ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fcbc12-a779-4896-9fcc-cc4399ecbf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bef51c4-2462-488f-8039-c9c611a10ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3de1d9c-d460-4574-83c1-2c61697756e3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a786b7e-0498-42a0-b7af-af1b38a18cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3c7e1f-5511-4eca-9975-02f936cf886a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d79b23-7637-4b1e-9109-2cee41fd45b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fad5a6-4c1a-4a0e-bb0e-16168664d7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dc8d17-923f-4b65-ae6b-4f23cfec6f4c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598b6aa6-df88-4794-b58e-35fd10ddc845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1567e8b-b519-45f5-9cbc-993c8c069f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b8416f-9e36-4cd4-90e5-374655c1af29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e824ba7-1f12-4a0e-a55b-bbda4863357d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a063290e-5ff7-497f-bd46-3e4b12509f58",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a464d20-5517-48a4-95b8-e57b41d98d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f01e1e-932e-48b5-a60e-bf2f0f8ac8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426b6f1f-bd5f-4ae5-b192-ec1c3660b6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2174e17-ec74-4bba-a8de-9a58004085a2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4bd2ff0-36d9-4b74-a529-f677dd44b459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bbc439a-d5c8-48cf-8736-20095497b2cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83ad758a-198c-4f1c-8b7d-570d35d03bba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a01a5be-1339-4ea5-85f9-b077449b7621"
                    }
                  }
                ]
              },
              {
                "id": "0fea0faa-673d-4786-b534-d8eea2b5f544",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03db8226-0644-4660-878e-d9111c21a72e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a3c41d-206e-45b4-a08f-c505d7362791",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ec2f472b-9a74-4106-89fd-bdc1f3418dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b82958-3aef-49b5-9b01-817ef1e2d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdfba1ff-2b86-4aef-ba6d-89e378a8af64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ddeffd8-78fa-49eb-8234-8f021a5c7354",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a70fc735-2efa-442a-8b0c-c79e8870e58f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b962021-4b7d-410f-9613-a678cefc91c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c3f9405-1aea-406e-803a-bde171810047"
                    }
                  }
                ]
              },
              {
                "id": "f479d10b-c4b4-4ca6-a78d-7d274a7e91cc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "41e708d7-86d9-44e6-88e9-4a06cacc85b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4069bf4c-48fa-4183-9ada-a105c27c4ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "abff54f4-11dc-4246-a854-8efd8d1030d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99ec11c-5e18-4243-a015-a7e99c71abc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308696b7-00e4-41ba-89ce-dff64a3634b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83e7881f-48e2-4fb4-a059-ea8855a4ba63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6989bae-d75d-49e2-86e4-68adede6c54e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5d862f9-2e01-4eb5-a46f-9cc0ebc7c253",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "478a9914-ad2c-4ca1-a9c5-d074c9316ab0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9d169ad-8782-4190-ae72-bbd0464f848a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e28f89-6329-496e-81d3-8cb2c8dd40a3"
                    }
                  }
                ]
              },
              {
                "id": "fb3f5a62-3311-465b-bd1d-25c5e6ecd4c1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7461b3d7-8ebf-4579-9072-86cc0035d29a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5786273b-9030-4655-9918-9356c7f29897"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "336e67f8-3e43-47f1-a4d9-ff3eee9fbd4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1abb2d96-6891-4cf7-9850-c7162c12b2f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8162d723-9afe-46a8-8c1e-fdea7ac25226",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fbdc03d0-831c-41d9-8b9c-e6ff1029c87d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f19bf98f-2792-4627-94ae-859ed763e828",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e05909f-8c94-4f2c-9f66-554619e6f748"
            }
          }
        ]
      },
      {
        "id": "03640fda-d834-4c2f-bef9-7ed63342c278",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fc356544-374e-4002-a35a-be82c7131644",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1de1d460-f2a5-4634-bafd-cdf98becc9a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c961b67b-a95a-4d41-8d2e-e45677be7363",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c5124d-2a3b-4ceb-8a6c-561cc0351d7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c446f453-dc81-4f9b-8607-952399e1a9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4082332-8272-43bd-be52-e24a769802b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21e442cc-ca4f-4e86-8cf2-35806b4807e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9d54269-1f50-4b61-9b0e-ff20e7398048",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cd1229a-ae73-426b-ba71-eabd2c2aeff7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeced3b9-7169-4b93-b4d6-16b51f848f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a147eadc-bf25-4c67-9fd7-8c5795dc808e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72e41de2-cb63-450e-9033-95e1fef79296",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6bcc7356-10a6-4a7e-a23b-569e601c1f4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68d4e98b-1f3d-4845-8971-e289b93ed9bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3c018be-c14f-4e34-b6d1-bfca49a9f72a"
            }
          }
        ]
      },
      {
        "id": "4962391e-d69d-421f-b432-1924fb97c9c1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "61b7f383-20a1-4bed-9bcb-1df7da9231c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98ec2f91-4eb9-40bf-88e9-d6eda0cacd3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5601820f-08bd-4b6a-bf2c-c2977dd20dc4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b9ac5-a58f-4a85-ac0e-b3bf5eb96004",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27d324d0-8b14-4305-a901-7d0ed548b6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28881df9-e825-4436-9184-e08733078d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b56f0b8-cf8c-4fa5-914d-4b569a80cc18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c81d1425-5c31-4943-9b6e-38f00400c258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cf9be7a-9490-4b3d-b8ff-4e646700d936"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e29e24d-8931-4891-b047-12b9cb8455eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "510ccddd-6f07-48cb-ba66-607d23b60ac0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b951038f-cdc4-4441-a267-36cf2d23a634",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fea0824b-c45e-4f13-8a39-161d6a48cf51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdd762b3-7c91-44a5-9adf-507091fc48fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "444ede04-c006-4448-bd77-e69ec05291f1"
            }
          }
        ]
      },
      {
        "id": "8d9f8533-b27e-4f53-a4a1-44e43d7b4698",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "61ed6cc9-cb50-4ba5-a166-66b26fd46ef5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb1e0ab8-f621-452c-8dd7-42f69ba57160",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ee83123-ab9c-4c4d-a028-08b62fadc615",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414edd1a-9b51-477d-a0a5-eb16f72bac2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59df1a2c-22c3-45b0-a21e-110f474bc5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e400df-9a03-46bf-b11e-86ccf46854bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebfe7ce5-709b-4b76-a6db-b22863f00109"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8a1712a-7045-40df-a2b9-f57cd2735c11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac4760fe-a05c-4979-aa90-0f3f93d0db75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db97a804-5f40-40b4-8048-7850b9dd028c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4210a56-03c3-4024-853c-a5eafa40e721"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbd1412b-53f7-4bb0-872c-ccb3104fac01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60911b02-fd6b-45f1-96d8-3c9f5507156e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6848f755-8fe2-4c90-8a83-5df46128c6a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82d33e20-d7fe-4eee-bc6a-a782ec504829"
            }
          }
        ]
      },
      {
        "id": "8e381cc6-f24f-49f0-8144-0c9d1cc159dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "292a4797-f1cf-4e91-a54d-e1c9e73c49f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b3e061f-e880-4817-bf15-0186a502a0a7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0a23c971-2bbf-4e6c-8b4a-5f8317fa9c26",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "455592b4-40b8-4498-a94e-bf92de499760",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4d223f2-7df7-4546-bc70-94795c2798d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.57746478873243,
      "responseMin": 8,
      "responseMax": 227,
      "responseSd": 18.137900535239027,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687481165369,
      "completed": 1687481197766
    },
    "executions": [
      {
        "id": "688c3ee9-e799-4b6c-82e1-e337d125e2f4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1b0fca5f-8a4d-48a2-9e1f-13e9587e82a6",
          "httpRequestId": "4a6e6517-92de-42aa-9d68-392440dc0725"
        },
        "item": {
          "id": "688c3ee9-e799-4b6c-82e1-e337d125e2f4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "61c6a07d-84de-4e06-abd0-4d33e511475d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "d25b0306-d231-4d97-b4d5-3c3fd5b0b561",
        "cursor": {
          "ref": "dc39921c-6903-48eb-8ebc-9d1f1a344a0d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de196cb5-7402-4812-83f4-8e6681fd7c24"
        },
        "item": {
          "id": "d25b0306-d231-4d97-b4d5-3c3fd5b0b561",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "282247c7-af44-4d01-92a0-db9083727e41",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "91091383-95b9-490b-93bb-b56dcd26e8aa",
        "cursor": {
          "ref": "0f9134ec-99f5-45a6-a753-f9ef784a0b69",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fb28101b-effd-4afe-beda-1a0953ad75ac"
        },
        "item": {
          "id": "91091383-95b9-490b-93bb-b56dcd26e8aa",
          "name": "did_json"
        },
        "response": {
          "id": "69e1d652-52cf-4415-9410-5cfa732de9ce",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bee199-7796-43eb-85c4-91caf951e39e",
        "cursor": {
          "ref": "175fe1e2-a47b-4ec3-9b4f-bfa8ccae0e24",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66bdfc5a-b052-430c-8784-b478da20bac1"
        },
        "item": {
          "id": "54bee199-7796-43eb-85c4-91caf951e39e",
          "name": "did:invalid"
        },
        "response": {
          "id": "86bc7fbe-5729-4487-93e7-0628ea3feac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bee199-7796-43eb-85c4-91caf951e39e",
        "cursor": {
          "ref": "175fe1e2-a47b-4ec3-9b4f-bfa8ccae0e24",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66bdfc5a-b052-430c-8784-b478da20bac1"
        },
        "item": {
          "id": "54bee199-7796-43eb-85c4-91caf951e39e",
          "name": "did:invalid"
        },
        "response": {
          "id": "86bc7fbe-5729-4487-93e7-0628ea3feac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4d5a81-fd50-4843-aa60-e0c8a029b319",
        "cursor": {
          "ref": "ad6c64ef-28a3-4a44-97fa-5929e688cdc1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2c35cbfa-10cd-403a-9e1c-f84569f8b74a"
        },
        "item": {
          "id": "7c4d5a81-fd50-4843-aa60-e0c8a029b319",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a413c3a9-5b79-42ad-937b-c9628f9e067a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc3a36c-3699-4400-a8fc-d6f10e65c68b",
        "cursor": {
          "ref": "4339f95a-ce87-426c-a828-2b9c77a6e84c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "262e2ab5-d303-4045-b10e-7c3b849e2169"
        },
        "item": {
          "id": "9cc3a36c-3699-4400-a8fc-d6f10e65c68b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "62609ba4-5955-42c4-9cef-aef2fe064b39",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48512868-49d8-409d-8ddc-f21662cd38a8",
        "cursor": {
          "ref": "73387c1e-5c5d-4951-87b0-4d20c25c74e6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a0956b9-2a13-456f-9760-ca3f4b0daad9"
        },
        "item": {
          "id": "48512868-49d8-409d-8ddc-f21662cd38a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f457e112-5282-469f-b413-1b1e9e1d10ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f487d7b-6a9f-4f35-b96b-6b6d33cf579d",
        "cursor": {
          "ref": "c0d9d8c4-df00-487d-b40a-a6af1ec06abc",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c59d7005-9ba5-40be-9204-4c22c0c91455"
        },
        "item": {
          "id": "9f487d7b-6a9f-4f35-b96b-6b6d33cf579d",
          "name": "identifiers"
        },
        "response": {
          "id": "705280b5-f64a-4c5e-8f00-004ae4acae7e",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2e5745-464c-435b-b334-537b30edc24b",
        "cursor": {
          "ref": "f309afa8-6564-496f-881f-98bff72e7a34",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "52bab7b4-6027-4936-8a48-ac33c8fef4b3"
        },
        "item": {
          "id": "bc2e5745-464c-435b-b334-537b30edc24b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4c8e541f-0887-4ae0-ba22-4d26fd2bf246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044f541a-422a-4306-891f-7aaa8db7c014",
        "cursor": {
          "ref": "a9343b92-678a-48a0-84a2-032f7b8b8762",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "60b3da94-03f2-4c4c-8163-779e4247fd52"
        },
        "item": {
          "id": "044f541a-422a-4306-891f-7aaa8db7c014",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "30cd5bba-6bbc-485b-b950-5372e7fd8a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e7161-89b8-4947-99c7-4c913c33a90d",
        "cursor": {
          "ref": "8e38cde8-2710-4b70-9b93-24d9fb3bd13d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "24dbcfae-1c2b-4ed8-8dea-9ce678ab8411"
        },
        "item": {
          "id": "d71e7161-89b8-4947-99c7-4c913c33a90d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fa362d1a-0573-4f8f-b0dd-a43396d5afa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089d43a2-aed4-48f4-93bb-f4a4f96ae7a2",
        "cursor": {
          "ref": "ec503e95-0620-45f9-824d-74db1fb67bab",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae43843b-1a5f-4b70-805d-d31c3e7b8535"
        },
        "item": {
          "id": "089d43a2-aed4-48f4-93bb-f4a4f96ae7a2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b13528f-aadc-435a-bd17-739b46650fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9b231d-628e-4ed6-bbe1-9c8896969e3c",
        "cursor": {
          "ref": "6bedbcdd-4789-4d24-8bb7-ed1c799ab320",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c37ec3de-1a82-4d56-a881-490bb361e4ef"
        },
        "item": {
          "id": "4e9b231d-628e-4ed6-bbe1-9c8896969e3c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "74cb60e0-703a-4a11-b216-edc28fe6aacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b89910-1394-413d-a190-bc5f1880a7c3",
        "cursor": {
          "ref": "f8dd8a9d-c514-4d0f-9309-f5f460f565f6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c62237b9-0edd-4b65-87e0-6a7fba915d1e"
        },
        "item": {
          "id": "94b89910-1394-413d-a190-bc5f1880a7c3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3f9d5005-83d6-4a89-8d4f-8fb5b2f7bc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c96a9-3804-4bf8-9b76-9b4c3336b7bd",
        "cursor": {
          "ref": "510a9f7b-a13a-428e-9fde-47ff584d24f6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8faf3d73-38bc-456b-8e22-4e1b085468e4"
        },
        "item": {
          "id": "f41c96a9-3804-4bf8-9b76-9b4c3336b7bd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e7528c48-eeb1-49d0-a486-52400e04b673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64746d61-a023-4bf8-bd89-814626d94872",
        "cursor": {
          "ref": "05557e73-2a7a-4143-8744-4502b6f7ffb5",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5fa78613-455a-42fe-a56f-69568bc94874"
        },
        "item": {
          "id": "64746d61-a023-4bf8-bd89-814626d94872",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b118caed-c65d-4b62-a4fa-7699625f3cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497fa64-a8ab-482b-816a-a408d4fd3b9f",
        "cursor": {
          "ref": "d89d940f-1181-4280-a6c5-7f63758fcb67",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2b44d31-38ed-4038-8d70-eeaa68e52a0b"
        },
        "item": {
          "id": "c497fa64-a8ab-482b-816a-a408d4fd3b9f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3fe7f2ef-8f6a-4e3b-9e21-ba7e659681ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325e280-1e03-4c3f-b4f5-a4c51363d9fc",
        "cursor": {
          "ref": "5d2cbdf3-357e-403d-9a10-bf1fb5742ea3",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2e0be452-4313-41c9-8743-9dc4c5e79c3b"
        },
        "item": {
          "id": "f325e280-1e03-4c3f-b4f5-a4c51363d9fc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "379b1041-1b6b-47ac-85f4-0f7112d139c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa44589-18e2-4b00-ac7b-705d92913c16",
        "cursor": {
          "ref": "307fb6c6-a533-4f14-80fc-6bde21095372",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ba529100-b756-44d5-a17c-519ef50372bd"
        },
        "item": {
          "id": "3aa44589-18e2-4b00-ac7b-705d92913c16",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6400f580-a008-46c8-81a5-8bd8e1c1df49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9030c9-7cfb-400f-a9ba-788208b04673",
        "cursor": {
          "ref": "f8128e00-3406-43f0-843a-2ddf757481b7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "39ae2a72-5974-488f-80ac-bc397deb3602"
        },
        "item": {
          "id": "ed9030c9-7cfb-400f-a9ba-788208b04673",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6c6deb06-9a2d-4af9-abea-cbcec9dbf6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50059f88-74a5-4800-8bea-c8119e512dd4",
        "cursor": {
          "ref": "811e70b4-2f76-4776-9dd0-10b530b84ba8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "06a36eef-018c-4dfb-ba5d-b013d50da965"
        },
        "item": {
          "id": "50059f88-74a5-4800-8bea-c8119e512dd4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb9ef5e4-3597-42a2-abc1-c88849b8a8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bdf172-0b6e-4ead-8cb7-9bc1bfb3e9f1",
        "cursor": {
          "ref": "4c6471cf-2d51-4b25-b920-340326e54ba1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e76eb697-306d-428c-a998-8aa4daba7d48"
        },
        "item": {
          "id": "d8bdf172-0b6e-4ead-8cb7-9bc1bfb3e9f1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3e5b6b0b-5c65-4464-9255-44adfb4d93dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51d7a4b-64ab-4b5f-82f3-8b60b2f65299",
        "cursor": {
          "ref": "7ce6a545-88dd-4883-b33b-0491cc51f833",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b881a7a4-6d58-4330-b54b-cad68747743e"
        },
        "item": {
          "id": "a51d7a4b-64ab-4b5f-82f3-8b60b2f65299",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "46a9f2ab-f591-4b00-a222-eeee7842c2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f697360-0ea8-4beb-a677-94fe8f007687",
        "cursor": {
          "ref": "2d5b255c-189c-4f60-9c7e-d57d92434c12",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "60eea780-e517-4a3f-b9b0-aa8e1d5453a1"
        },
        "item": {
          "id": "2f697360-0ea8-4beb-a677-94fe8f007687",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e18079bf-ddd6-40c2-a004-2b22e91e38dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3936c5fc-f969-4303-808b-55d8f60668dd",
        "cursor": {
          "ref": "e9c48782-747b-4ed6-a565-df58038db729",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d479a889-1c5b-43bd-8b49-24f395743859"
        },
        "item": {
          "id": "3936c5fc-f969-4303-808b-55d8f60668dd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f69e642-dd0c-4139-bd22-a3197cb69530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb8b4f-2b50-43b8-969d-ed7acebf5a07",
        "cursor": {
          "ref": "d0b40865-e944-4125-bcea-1f00d864e217",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "270c68ba-357d-4bd9-b4f1-ec4cc3788c9b"
        },
        "item": {
          "id": "d8cb8b4f-2b50-43b8-969d-ed7acebf5a07",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8f474d18-f1e2-4749-87b3-866245217b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7ccfcc-7212-4043-8687-7dc4ccb3589c",
        "cursor": {
          "ref": "c338ea51-9005-4d12-a6b6-0d00230db213",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "18466878-9ee2-4c82-b7d1-3ce5c633a265"
        },
        "item": {
          "id": "1c7ccfcc-7212-4043-8687-7dc4ccb3589c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5af834b0-cf0e-4614-8429-3385cdd9cb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3d3e74-dac2-4de9-963c-f3e109395b54",
        "cursor": {
          "ref": "82d5971d-1fc6-4367-b0e3-a8b5c007cf2c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2e2304ac-7fb0-4b4a-b4f5-f5852cfdd509"
        },
        "item": {
          "id": "cf3d3e74-dac2-4de9-963c-f3e109395b54",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5399db65-a73b-4142-97d5-e28b2b0c9912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4fd059-a3ce-43dc-b97e-06148ab966bd",
        "cursor": {
          "ref": "2be53c1f-0a28-4622-b62f-7c389b07806e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "33877d18-d612-4f4f-bd24-d8239e9b22d8"
        },
        "item": {
          "id": "7a4fd059-a3ce-43dc-b97e-06148ab966bd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "36279c7c-4e44-411e-bab6-7d0a5da701e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694521ff-84c5-4df0-add8-09732c434738",
        "cursor": {
          "ref": "74098a42-42aa-4953-b884-3604ab769073",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "35c83e5a-0ea9-44a1-b29a-4ab735b1d67d"
        },
        "item": {
          "id": "694521ff-84c5-4df0-add8-09732c434738",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db1aa29f-b4bf-44ee-9a48-fa9f7c5c8653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06464e1a-e5fa-4013-a2af-5f36b7d4254a",
        "cursor": {
          "ref": "491ef062-30af-49f0-ade8-692c4553be59",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1f234faa-8092-40a6-a4a3-5090e8234d93"
        },
        "item": {
          "id": "06464e1a-e5fa-4013-a2af-5f36b7d4254a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "99afe702-4ec9-40eb-95cc-faa70b2a2b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f714db-f368-4fdf-8f42-6fa4d0eff4be",
        "cursor": {
          "ref": "12bd92d2-1220-4721-8b78-d31a42683544",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4aeb80da-7501-459c-b70e-d97d3fd33987"
        },
        "item": {
          "id": "24f714db-f368-4fdf-8f42-6fa4d0eff4be",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fc6b9d54-3e7a-4896-9824-a4ddce4c360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d272bded-bb65-4b33-8fdd-ccf86d1820da",
        "cursor": {
          "ref": "1c3344de-604c-49e6-b984-769661cc8879",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ebeea223-4ed8-4b8c-a6c3-1c4eb6a3729a"
        },
        "item": {
          "id": "d272bded-bb65-4b33-8fdd-ccf86d1820da",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "66dc8af0-1497-4bee-952e-c73932e968af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0dadca-d386-4f8e-8c5c-a95887475ba5",
        "cursor": {
          "ref": "5ab20cc8-9212-41a2-907c-a95deefd226b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5c8c000d-c23b-4d6d-8594-000c78e7353d"
        },
        "item": {
          "id": "4c0dadca-d386-4f8e-8c5c-a95887475ba5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "30c406a3-0cfd-4e7f-ae95-0a32706c7817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208ab4c7-20a2-4dd8-ae6c-e1867b4c6728",
        "cursor": {
          "ref": "55d5ff14-2745-4dff-b9a1-77d6977b0d00",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4dc84fee-9d55-4876-83a6-5948f210bdb9"
        },
        "item": {
          "id": "208ab4c7-20a2-4dd8-ae6c-e1867b4c6728",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f6f53cc-3137-439d-91f2-543437b207b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20c7d2-5974-4fc9-8c88-1d6bb97d01b1",
        "cursor": {
          "ref": "dbbb1899-2c11-4d42-907a-b7b0e4ec4cd3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b4e1b96-c8da-4134-bd05-e868a64d63e0"
        },
        "item": {
          "id": "1f20c7d2-5974-4fc9-8c88-1d6bb97d01b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "556ec964-3aab-4430-8591-23051e4ef8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43c075d-8a7f-4bce-91f3-f6587eb90aef",
        "cursor": {
          "ref": "823b8c61-ff60-4fae-8656-2ef6388ec45e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86dc6181-dc95-42ee-a898-214070d71005"
        },
        "item": {
          "id": "a43c075d-8a7f-4bce-91f3-f6587eb90aef",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1ba5589e-d017-4c33-b442-e039b137614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d53cf0-26aa-4779-a8a0-8f443740a941",
        "cursor": {
          "ref": "7851b063-291a-452b-9d2c-33ee911d18dd",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f6d65b87-5898-468d-ab45-2da338f998c9"
        },
        "item": {
          "id": "f6d53cf0-26aa-4779-a8a0-8f443740a941",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "66921d65-47ef-45ba-bb03-10c81fb2beed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2010f574-4e55-44d6-8c06-e29067cf171f",
        "cursor": {
          "ref": "8f41688d-f80e-4bb2-b4d0-fcf8e71c4f28",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "31d94beb-cc0f-49f3-a278-11baf6032f59"
        },
        "item": {
          "id": "2010f574-4e55-44d6-8c06-e29067cf171f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5234dda3-5ab0-47a0-8a82-40338291c17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0068048d-479f-47f3-92fe-dfc89ffe5172",
        "cursor": {
          "ref": "b5e97338-1e7e-40d3-977e-d002211d1784",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "84b98c25-9e94-442d-a726-fb3c17531ab3"
        },
        "item": {
          "id": "0068048d-479f-47f3-92fe-dfc89ffe5172",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "953d766d-3d21-472d-90aa-0304a214df1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42ce920-97ab-44b8-9d8c-6781a023052e",
        "cursor": {
          "ref": "30ab8a8c-0edf-4b3f-a832-95cf5f19ad19",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8862f309-bed4-47ec-8d25-a693ddcaeed2"
        },
        "item": {
          "id": "f42ce920-97ab-44b8-9d8c-6781a023052e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f8cbe380-a214-42d8-871f-ba1f41d46396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83edf1d3-6e90-4171-85fb-7111378cf235",
        "cursor": {
          "ref": "60e02268-862f-4838-a029-e9d5a7e258ab",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0ef95c2f-cb1e-45a6-972a-8efaa9a35260"
        },
        "item": {
          "id": "83edf1d3-6e90-4171-85fb-7111378cf235",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3a152c32-1290-4678-9a28-ec495c668fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9fed78-a88d-4b73-afb7-ea2b815a1acd",
        "cursor": {
          "ref": "3fff96db-8aa3-4c4d-84c5-7a89d6f8ec27",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9a8d5ff-c6e8-49fc-8fd3-6af4e2d3fae3"
        },
        "item": {
          "id": "ac9fed78-a88d-4b73-afb7-ea2b815a1acd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32b41cf3-c33a-4764-9e0f-fbeda525e329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f387e3-75ef-4da6-b7ea-2d7634e87a89",
        "cursor": {
          "ref": "6be61728-6d24-4428-a565-5bb2e1742df4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "35b58301-54b7-4085-a874-8b874f314472"
        },
        "item": {
          "id": "26f387e3-75ef-4da6-b7ea-2d7634e87a89",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7c98cfcb-66b5-407c-8ea2-6765fe84a7b1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ef6e53-f5b2-4874-b2e9-495b526dd120",
        "cursor": {
          "ref": "ddb51ff5-ade6-47eb-a2c9-4a7f99665b0e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a8b45d1-f1b1-4596-b1aa-5450d31385ec"
        },
        "item": {
          "id": "44ef6e53-f5b2-4874-b2e9-495b526dd120",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5d60d4bd-983c-4179-9d7f-f6b1f385f6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a91bcf-34fe-4aa5-94a2-cb28526a68de",
        "cursor": {
          "ref": "1f0c4995-953d-4ed5-96c0-edb9d3681adc",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8352fcc0-e713-4cdc-b75a-59ed1b2a5148"
        },
        "item": {
          "id": "d5a91bcf-34fe-4aa5-94a2-cb28526a68de",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b6446d2-6260-4089-afaf-e635dadc021f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fcc6ff-3adc-4ffa-ac9e-41fc8de18aa5",
        "cursor": {
          "ref": "6de12eb5-731d-4926-8aab-50b4c2fb6907",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a0b6f51b-df69-4e1c-a9e7-443e43e4769e"
        },
        "item": {
          "id": "78fcc6ff-3adc-4ffa-ac9e-41fc8de18aa5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1e5f99ce-2a44-459d-99fa-e0a91bcbc6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d77590-12b7-4a8f-a078-d2cce1f57f8b",
        "cursor": {
          "ref": "6d3e5a2e-7f38-47df-b8ba-d25bd4eae5f0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d99e30af-7c00-4127-9bcc-a837f35e3a90"
        },
        "item": {
          "id": "78d77590-12b7-4a8f-a078-d2cce1f57f8b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c3ce072-0bea-44df-b083-ada00c6e8527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a2bf4d-4125-4676-bc06-3639a5209ecf",
        "cursor": {
          "ref": "27cd3b76-c9bf-4ea7-995b-978a353202e7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9b9d013b-d146-42a0-9fe8-a9c9c924d5a9"
        },
        "item": {
          "id": "f0a2bf4d-4125-4676-bc06-3639a5209ecf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "095a23b7-b1dc-46b9-8c61-9259f689f5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc04c6-f537-460e-a17f-bc1435e700a0",
        "cursor": {
          "ref": "eeaea407-12e2-4a90-aa77-10430f085136",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "207f85ab-0987-4b15-940e-428c59bfa57a"
        },
        "item": {
          "id": "aedc04c6-f537-460e-a17f-bc1435e700a0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cd8cf60f-4027-40e7-9447-bd945c825ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8428dd5f-7566-4378-a178-ee2979a67c23",
        "cursor": {
          "ref": "e8fec958-8643-4707-a987-a38b758f5eba",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3d68db73-488e-48b1-b09b-f3e830ff4c6a"
        },
        "item": {
          "id": "8428dd5f-7566-4378-a178-ee2979a67c23",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1880355d-29b2-44f2-b399-8b15350b5f10",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daeb576-641f-46f2-84a3-a80e4398f7c2",
        "cursor": {
          "ref": "047c7adb-e129-4951-8226-3e0405f765ce",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ecc92102-793e-41a6-967a-7db92a26f01e"
        },
        "item": {
          "id": "6daeb576-641f-46f2-84a3-a80e4398f7c2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "87589f44-15e4-4551-85aa-3d67703a0d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c78c06f-80ad-40de-8c18-0682e109d502",
        "cursor": {
          "ref": "9c2d4b30-ca38-4266-b54f-5998126bc5d2",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1571b6d1-2e9c-4fbc-86f6-59bf29f3c379"
        },
        "item": {
          "id": "9c78c06f-80ad-40de-8c18-0682e109d502",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "93453545-1b4f-416d-8f5e-fc2e839806d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa42bd-ccf5-4d4e-ad08-75f0cd09e339",
        "cursor": {
          "ref": "1445738f-2f07-426d-ad39-dd998dbd0e08",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "42108799-00a8-4aac-9f24-304ac2b8d06d"
        },
        "item": {
          "id": "d0fa42bd-ccf5-4d4e-ad08-75f0cd09e339",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "40dd047a-418c-46fc-abe7-c48b497ca704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec64d83-ea31-475b-b8f8-464d934fc19e",
        "cursor": {
          "ref": "12312584-2e03-40b3-b714-ca13285338e2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c68ab5fd-f931-455b-9693-4ced98f049b8"
        },
        "item": {
          "id": "1ec64d83-ea31-475b-b8f8-464d934fc19e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "89996290-2d1c-460f-be86-801553c65827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2697bad6-d444-4658-a692-6ad26dc36140",
        "cursor": {
          "ref": "c96fe9c0-8359-4335-a0e8-9afb87b2fc18",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1dec40af-9d54-4b4e-b371-000d1652bf59"
        },
        "item": {
          "id": "2697bad6-d444-4658-a692-6ad26dc36140",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "50921d88-9798-476f-ba4d-1ac975f5d561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca0da93-f143-4d76-af41-96277fe3dde0",
        "cursor": {
          "ref": "2afaa031-9bd2-4116-a4c5-0cb3487962b2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "17fe242f-2f99-4f9f-b99b-8f73d2039ad0"
        },
        "item": {
          "id": "8ca0da93-f143-4d76-af41-96277fe3dde0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "58e1ceb0-701f-4bb5-975d-2f3f73e7d73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ca927f-1b64-4469-aec8-7af4fada2b7d",
        "cursor": {
          "ref": "6d6514d1-c400-4774-bbbf-7bd5accc0c89",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6e8979d4-12f3-43dc-892d-1bf10061af6b"
        },
        "item": {
          "id": "62ca927f-1b64-4469-aec8-7af4fada2b7d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "796b4e2f-b4cb-43d4-b78c-cc1ab9dc6883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf2f466-ba42-405d-8005-260f501b8616",
        "cursor": {
          "ref": "7d41fd29-6ca6-4651-b171-258c83c79056",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "49b6dde8-4066-4fbb-a9cf-a4c276707485"
        },
        "item": {
          "id": "3cf2f466-ba42-405d-8005-260f501b8616",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ac8f3ca2-d37b-4a54-af24-cf720122bb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b613236e-9fbd-484a-9f40-1dd82ccdf73c",
        "cursor": {
          "ref": "45e8cde2-5d68-4738-87a8-51f955c8781b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "793c32b2-2c9c-4e94-8925-a4aeb0523056"
        },
        "item": {
          "id": "b613236e-9fbd-484a-9f40-1dd82ccdf73c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ac098e66-bf24-4c83-b14a-8110d41be351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf664933-c969-4d93-b47d-df871b76065e",
        "cursor": {
          "ref": "ff16e04a-9715-4eee-8cad-fcfbff9be86b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "93d3dc76-9a48-4866-b86e-0d4e7692822f"
        },
        "item": {
          "id": "cf664933-c969-4d93-b47d-df871b76065e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "41827fa1-bd85-4d6d-a5fb-385126a08a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bc37b4-aa5e-4b25-9ba2-446057fa1134",
        "cursor": {
          "ref": "3da69fb3-d44d-48e8-9a03-1ce0a5cb4c4d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7a4cb1ee-e781-40cb-87b8-76eb99595951"
        },
        "item": {
          "id": "61bc37b4-aa5e-4b25-9ba2-446057fa1134",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "58900054-643e-4eea-be27-baf4d283781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d29be4-d657-484f-8659-20bc976a408f",
        "cursor": {
          "ref": "7a08371a-070c-4f80-924a-c8dad185c513",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c65408a5-e9ff-4224-81f3-ab461775a094"
        },
        "item": {
          "id": "e8d29be4-d657-484f-8659-20bc976a408f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0fea2b43-5908-47d5-b88c-518a1b33b149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6b27f4-b1fd-4b35-9c56-1ddb13929940",
        "cursor": {
          "ref": "9f4ac55c-4964-4301-836f-11dff7d427a4",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4f1a623d-1d56-4888-a519-4bf4a3914b0e"
        },
        "item": {
          "id": "7f6b27f4-b1fd-4b35-9c56-1ddb13929940",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "283ce779-8a71-4e35-bfaf-1501849db475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6127a12-324e-4191-a0db-42f7921b2050",
        "cursor": {
          "ref": "b0e1251c-0819-4379-8933-2041537952d5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d174b412-308e-45da-93bd-c361193e708f"
        },
        "item": {
          "id": "f6127a12-324e-4191-a0db-42f7921b2050",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "260455d6-a2a7-497d-aab5-88bb115cf84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a734632-51e1-4e62-bb4d-1b1002dc4a83",
        "cursor": {
          "ref": "60f7538b-b513-4e6f-b11b-7d111c663e72",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7c6790e7-f524-4ff2-9082-a5ed81a82023"
        },
        "item": {
          "id": "7a734632-51e1-4e62-bb4d-1b1002dc4a83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b86c3f4f-80c7-4d21-be6e-b834680b6bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39582e7f-cabf-4ccb-8d45-e6dead42076f",
        "cursor": {
          "ref": "fd7e0eea-8f05-4310-a9b5-c4ee1420c50c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "864a5739-e3bb-4ec5-ab86-d90e179ccdc8"
        },
        "item": {
          "id": "39582e7f-cabf-4ccb-8d45-e6dead42076f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6010d7c0-6ccd-42c0-82a0-90bb9fb97731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71579473-70f8-4418-9c86-44d1afd305d3",
        "cursor": {
          "ref": "6e8c3640-171e-4595-b12d-51ec89cedbf4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a9f39c2f-128f-41a6-bb74-9042756c7592"
        },
        "item": {
          "id": "71579473-70f8-4418-9c86-44d1afd305d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "afb6a0a7-32a1-405a-a18f-39a0a90bd3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e416e-2cbd-40e5-85ab-cfaafa137466",
        "cursor": {
          "ref": "57099730-6bba-4b86-a69c-81fe5d89b507",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "49a77cf2-5d27-45da-9504-5c20ce1ceee9"
        },
        "item": {
          "id": "e81e416e-2cbd-40e5-85ab-cfaafa137466",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "50a910f1-e363-459b-ad6b-7407a773ad69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67896a59-02fb-48ec-8ede-10b70d4e9ce0",
        "cursor": {
          "ref": "775b4ff5-368c-45be-af5d-48ef94a4a7b4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f765629c-f699-4450-a414-15233831a754"
        },
        "item": {
          "id": "67896a59-02fb-48ec-8ede-10b70d4e9ce0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15f47b7e-b165-45d6-b29d-422f1f2c8689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eea1b4-47dd-46a6-8a8a-20f3d311bc77",
        "cursor": {
          "ref": "95561c56-9ea9-4710-96e8-03588dc5bfb6",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "42021b2f-3a95-48b4-91b4-d2ef111d4296"
        },
        "item": {
          "id": "b8eea1b4-47dd-46a6-8a8a-20f3d311bc77",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b6a3bbf3-f4b6-434e-9021-0f4edecac1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b664f3-9127-4f0a-8b00-dc700d599d6f",
        "cursor": {
          "ref": "b1af7feb-bf31-4143-9b4d-61d800a51462",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "526fec5c-2086-43b0-a036-32cc2b11a152"
        },
        "item": {
          "id": "a3b664f3-9127-4f0a-8b00-dc700d599d6f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3ac4b29d-697f-40ae-9131-d33da6f04cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb9b42e-91cb-46ed-88c5-4ca541ee6d1e",
        "cursor": {
          "ref": "2e5dfc64-5c74-4a9b-b955-8056ef6905d5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6620f5cb-f9da-4597-8b3e-7ed886dabe27"
        },
        "item": {
          "id": "5cb9b42e-91cb-46ed-88c5-4ca541ee6d1e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4181280b-02da-4e5a-a3ac-cfbdfec0704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c0680a-5599-4b3a-850a-c07f2412b560",
        "cursor": {
          "ref": "82edb6a5-73c0-492a-9ea8-511cff2ead50",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e0e4135d-1d16-47dc-aeda-df8a8ebab4fa"
        },
        "item": {
          "id": "e9c0680a-5599-4b3a-850a-c07f2412b560",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c426af83-2be5-4ec0-b9bf-4758c913083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe0c135-a1f7-48a3-90f8-770965c0a129",
        "cursor": {
          "ref": "e8d789b0-a3be-4a19-979b-39d92d8d234f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e3d72983-88ce-4ed5-a0fc-fcb998f60419"
        },
        "item": {
          "id": "ffe0c135-a1f7-48a3-90f8-770965c0a129",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0915792a-8b96-47c5-8cac-1339a23bdbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5951f945-9b8b-495a-944a-b70912d03db2",
        "cursor": {
          "ref": "e824750c-1b43-48a7-b4c1-56aabf9416d0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2617901f-153e-46ce-a833-c403e9cc3e18"
        },
        "item": {
          "id": "5951f945-9b8b-495a-944a-b70912d03db2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6849387b-f556-4bfa-92a7-566f64a5d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59353520-e566-423f-9439-a06f23529c34",
        "cursor": {
          "ref": "00e20c17-9613-4857-b176-c5d7acc9350b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e431a0f2-b222-4e60-948b-b795b31526f1"
        },
        "item": {
          "id": "59353520-e566-423f-9439-a06f23529c34",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b7b21c35-87dd-4630-ae4a-a32869631dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef5a3db-b25c-4f0d-be70-ca383a0bb0b6",
        "cursor": {
          "ref": "8d4a9d1a-efec-42de-8542-bd5e3f61e2c9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "74618742-0a0e-4f3e-a0cc-11f152ec06e9"
        },
        "item": {
          "id": "cef5a3db-b25c-4f0d-be70-ca383a0bb0b6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d99174a8-5be5-49a5-b7d0-112cdca9c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5932cf50-48a5-4796-ac6e-be07a9cdc524",
        "cursor": {
          "ref": "8d20603a-d4c4-43d3-8f47-f7b34b36a268",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "806243bb-2d57-4db3-9843-fbf3e9c0c88c"
        },
        "item": {
          "id": "5932cf50-48a5-4796-ac6e-be07a9cdc524",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "68266429-00ee-40da-a91e-5dd9f8aa1daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320dea5d-e6f3-4d45-8f0b-4d866adf4ecb",
        "cursor": {
          "ref": "521f488f-cd0c-4383-819a-8495112f4946",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "338a6d6d-7ee3-4187-bc18-85b4e796c3b8"
        },
        "item": {
          "id": "320dea5d-e6f3-4d45-8f0b-4d866adf4ecb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f056a3b7-a7fb-440a-82c6-f660b7647a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa23c65c-5d40-45c9-a951-e350ba7a7bcd",
        "cursor": {
          "ref": "a091e7fe-ab99-4641-b517-c92d7dd3e3aa",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "96b9294f-fc9e-4504-931c-d0c7931f44ca"
        },
        "item": {
          "id": "fa23c65c-5d40-45c9-a951-e350ba7a7bcd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "82317d8f-bcad-4215-9a42-a43f4c40581b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b1221a-418f-4130-b64f-091255db2552",
        "cursor": {
          "ref": "a1f13f4d-f41a-44e0-b291-fb173d993b4c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "30c51598-f180-4dab-bd46-635c3c2dbc01"
        },
        "item": {
          "id": "c9b1221a-418f-4130-b64f-091255db2552",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "55834c91-84ab-4208-9040-b82d24fc2614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bfbb3e-79e4-4d65-b605-b8801e235be8",
        "cursor": {
          "ref": "55f5295a-eb2b-4b00-ae21-ca41fab3778e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0da784a1-4ab2-40c5-b1f8-c5825b2827e1"
        },
        "item": {
          "id": "61bfbb3e-79e4-4d65-b605-b8801e235be8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0d73684a-b758-4061-ac4c-a89b4889e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f575f714-4a6f-450d-8591-d343ba8cd7ea",
        "cursor": {
          "ref": "711d1369-f22e-4964-af10-277e5ab6d110",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6af6ce74-8395-4fd6-be52-146ca01bb304"
        },
        "item": {
          "id": "f575f714-4a6f-450d-8591-d343ba8cd7ea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a87761aa-511e-4ac6-a081-7f8e971e0910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c193e23b-6d01-4c98-9cd2-cbd11c8bf4c6",
        "cursor": {
          "ref": "c4497f48-00f3-4eda-98b9-bf498676bc5f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3c5192ec-a958-45cd-9e95-a481c19fd8b2"
        },
        "item": {
          "id": "c193e23b-6d01-4c98-9cd2-cbd11c8bf4c6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "908cfcf7-c07e-4212-a149-4e85bcb6f87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deba9bd-8b69-41e2-bff2-96a7525385e0",
        "cursor": {
          "ref": "399ebb68-00e9-41c6-9686-0938c4e9e163",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d4e1a43f-a8f4-4358-b595-25470c59a7c0"
        },
        "item": {
          "id": "9deba9bd-8b69-41e2-bff2-96a7525385e0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "36c5f4f0-f3eb-4210-bc89-47a891e0036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ad21c-f911-4cdd-8cf0-75d446ab5c30",
        "cursor": {
          "ref": "da640ec6-776c-4a9d-8dfa-1bf8bd7312ea",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cd36a9fa-ece5-449c-ac7e-2c5f3dae0b7b"
        },
        "item": {
          "id": "9c7ad21c-f911-4cdd-8cf0-75d446ab5c30",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2e224d58-0cf6-47fa-a4cd-e2b57969d0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c510effc-b9c6-4670-a023-18023f275fd4",
        "cursor": {
          "ref": "58b3c4ad-db45-44b7-be98-77329cc8a90b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6b92c3e8-88cf-4482-a5b7-5cecfc337e93"
        },
        "item": {
          "id": "c510effc-b9c6-4670-a023-18023f275fd4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "92fd06c1-ca79-4efb-9ad6-c909c6ee3db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e48675-d4bb-4211-87d8-751d95326b59",
        "cursor": {
          "ref": "155b7b4a-32fd-4b99-87a0-ad583ca26117",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "91113c9b-5aa3-4c61-a330-caa677054438"
        },
        "item": {
          "id": "c9e48675-d4bb-4211-87d8-751d95326b59",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b16b685a-46ee-43b3-b428-f4d3ad4af1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d79232-fa4c-4a4e-940a-5fb4c726d379",
        "cursor": {
          "ref": "c40ff762-6261-4e0c-ae99-9a69a8d4f4ce",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82c30606-f790-4075-841a-d89e404e5129"
        },
        "item": {
          "id": "19d79232-fa4c-4a4e-940a-5fb4c726d379",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2e7d6ddd-38f7-4c56-9bb2-b820797fea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be334a4-dbf7-4f5d-a717-3bf6688d60b5",
        "cursor": {
          "ref": "08d873b3-b907-4636-b4ec-faf5aa386351",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fb517574-26c1-4489-9c6f-dc6835efb02a"
        },
        "item": {
          "id": "3be334a4-dbf7-4f5d-a717-3bf6688d60b5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "77b649e3-9389-4634-ae6d-8156ed1da765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7191809e-f0c8-430b-b789-08b51a84ddfc",
        "cursor": {
          "ref": "1ac8c84d-9efd-4862-9977-2bce45d4085c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d18de8a0-d26e-40d4-8cd7-6dccb4029bc6"
        },
        "item": {
          "id": "7191809e-f0c8-430b-b789-08b51a84ddfc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4706c622-74e1-4e5b-a59f-cc888e005f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646df328-738e-4382-9ede-2ff53f25bfe3",
        "cursor": {
          "ref": "5a30272c-1250-4c87-95e2-81c025ef24c3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f31a28cf-0ec1-4b1d-82e3-37a09a932cd5"
        },
        "item": {
          "id": "646df328-738e-4382-9ede-2ff53f25bfe3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2a15b353-df7f-4b93-8412-39468e161541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae41852-5714-4276-a2a0-0336f540df15",
        "cursor": {
          "ref": "e4b43c6a-d347-4bba-9bd5-11b229e28358",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ed927c89-f120-4d16-808f-65c507f23dd1"
        },
        "item": {
          "id": "6ae41852-5714-4276-a2a0-0336f540df15",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6f363852-cfa8-4805-9fcd-277576ce1faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32a0dd6-4941-4cce-b8c0-d256e0e6db6c",
        "cursor": {
          "ref": "d8bb808d-3971-4ba2-8934-b8caec3f2f2b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "87c8fd8a-cfd6-4647-9005-7feab2854772"
        },
        "item": {
          "id": "d32a0dd6-4941-4cce-b8c0-d256e0e6db6c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e130854-7c83-4786-a5bd-790ee3615f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de231ab-1cb4-4ed7-af04-312014cdbfe5",
        "cursor": {
          "ref": "cdd67b8d-aeff-407f-9783-414503bc58bf",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "42a05d10-9bc1-4cec-be9c-c8269886a120"
        },
        "item": {
          "id": "0de231ab-1cb4-4ed7-af04-312014cdbfe5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3e38d922-fe02-4921-9763-48e5f6a272ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8ec7b6-60b4-41c1-964d-895858c50a3b",
        "cursor": {
          "ref": "3cef1391-267e-4a2d-83bf-7601a6828bf9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ba53caa-a6da-48cf-95aa-911e117a7d48"
        },
        "item": {
          "id": "0b8ec7b6-60b4-41c1-964d-895858c50a3b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "da631b4c-b57d-4356-aa71-fbb42116bd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bed37e8-ddfb-49e7-8d52-7dd7b1f94093",
        "cursor": {
          "ref": "aff93e34-1692-429b-a630-f84b02ddc9b7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e0db1582-5395-4396-8852-e3625e28d08c"
        },
        "item": {
          "id": "9bed37e8-ddfb-49e7-8d52-7dd7b1f94093",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dd2b8fcd-bcad-4b85-89b5-78d627fc1c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c6451d-93e4-4cc4-b369-b3fd8de80917",
        "cursor": {
          "ref": "814def01-3b40-465b-9858-6aeb816b30a7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b40c3e0e-b97e-4d72-b598-48186c7c398b"
        },
        "item": {
          "id": "f9c6451d-93e4-4cc4-b369-b3fd8de80917",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4e802cb1-dd0f-4862-a483-ad92a864993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa886007-a29e-4c6b-80c4-dedc329b0316",
        "cursor": {
          "ref": "533b2af2-b0ca-4997-b6c5-2f7f28df02e5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "354fd537-6292-4c8e-8177-1eb0d1e47b07"
        },
        "item": {
          "id": "fa886007-a29e-4c6b-80c4-dedc329b0316",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "06f72c89-b33e-42eb-9aa1-478a43dbf881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3151d9-54e0-428e-8825-a7e141d1569a",
        "cursor": {
          "ref": "6f469708-2db4-4601-8de4-5829681b6fb6",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "831bc5da-9440-412a-9501-1ece2e095ddc"
        },
        "item": {
          "id": "ef3151d9-54e0-428e-8825-a7e141d1569a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "289e4f67-e35c-4f17-ba68-8026751c1586",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee10c76a-8100-44d0-a6f4-167d6161a713",
        "cursor": {
          "ref": "1f4fafa4-9260-4c35-8f00-c67e5597719f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6665b3c2-d370-4d05-ac13-069a90c135c3"
        },
        "item": {
          "id": "ee10c76a-8100-44d0-a6f4-167d6161a713",
          "name": "credentials_issue"
        },
        "response": {
          "id": "abd5bd74-b250-40f3-bc10-9a5b1d45ec81",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53ea841-9db3-4a95-8fb8-bf80e3a49c1b",
        "cursor": {
          "ref": "7214d00e-48bd-4e7d-8a6d-1f47e1903067",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1fee21ff-a8f5-447f-8778-0d1e35b0de3c"
        },
        "item": {
          "id": "a53ea841-9db3-4a95-8fb8-bf80e3a49c1b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "79ba94d1-8822-480d-86b5-5190d5332fa2",
          "status": "Created",
          "code": 201,
          "responseTime": 210,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02c516-d7ba-4e27-88a0-22a58445e8cb",
        "cursor": {
          "ref": "838193fc-1750-4180-8965-18c4cbaf01d6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "72aca65d-c8f4-44d9-9a48-99c7737f1154"
        },
        "item": {
          "id": "2b02c516-d7ba-4e27-88a0-22a58445e8cb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b00ffbf6-6ec2-4825-a36b-7238c70535ab",
          "status": "Created",
          "code": 201,
          "responseTime": 126,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a7e9f0-5f52-468c-827c-8d8db9d2c418",
        "cursor": {
          "ref": "dd84fc6c-627c-4916-b723-a14e5201f78a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d327818b-dc57-437d-8d3b-10fad3049747"
        },
        "item": {
          "id": "30a7e9f0-5f52-468c-827c-8d8db9d2c418",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "db315a57-6d34-4c51-88db-3b9ff018d1a7",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42f82fe-dc37-4281-b6c5-40be7f9951ef",
        "cursor": {
          "ref": "22248ca9-a090-4d93-bf13-3b3f8205ad82",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "10fbb439-9225-42be-8f30-efb916f42083"
        },
        "item": {
          "id": "a42f82fe-dc37-4281-b6c5-40be7f9951ef",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d558d5e8-2e45-405c-be69-b64d0effd9fc",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa40692-5090-44ef-893c-952d211f0f00",
        "cursor": {
          "ref": "79b87abe-4c29-4b19-86f8-7c61ed3e4531",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "53190648-208c-4279-a7bb-4f682e0367a1"
        },
        "item": {
          "id": "5fa40692-5090-44ef-893c-952d211f0f00",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c997d043-9adb-489a-a21d-e96ec77c0b6f",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a3ebdf-3d69-4715-94be-3514171bd02d",
        "cursor": {
          "ref": "3b14b57e-7b95-4f6e-a744-996495d501e4",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4ca7ea99-d242-4125-bbbc-3737e4a34bfc"
        },
        "item": {
          "id": "47a3ebdf-3d69-4715-94be-3514171bd02d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8f8db2d-1193-4bed-a61b-583fc25433dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfdcbe6-c0d9-4623-b674-e220a395e93a",
        "cursor": {
          "ref": "050d145f-22ab-46b4-8c3d-aef65f29a071",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c7e6c4d7-0b51-47c5-9afd-9aa03176c1a2"
        },
        "item": {
          "id": "8bfdcbe6-c0d9-4623-b674-e220a395e93a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f62be089-ac45-4b48-b4ec-a8913d82b94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c014f-331b-4e51-b94e-c2ca3a1e3db3",
        "cursor": {
          "ref": "ee8f9f53-0c46-439f-a2d7-7dd91d009f6c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9cd4f2c9-57d4-4f06-a2d3-4bdde73f5504"
        },
        "item": {
          "id": "2c8c014f-331b-4e51-b94e-c2ca3a1e3db3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8fb1bd1-4c91-42bf-88df-193c6499e9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aaac4d-a97b-49b9-8b1c-de47ae09263e",
        "cursor": {
          "ref": "b8469653-02a5-4b28-b019-3c3ffdf0de45",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2fb4adea-5ce5-4f5d-ae4b-ee1c40da52d5"
        },
        "item": {
          "id": "35aaac4d-a97b-49b9-8b1c-de47ae09263e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e6a058f8-fea4-484b-83d3-58f1905feaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c725286-f8bd-4909-b135-d6ba9a910fda",
        "cursor": {
          "ref": "7b78bc7b-c9ce-4b35-8d96-2453e817154c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dbdd8592-fbc5-4266-9112-51f8c006435a"
        },
        "item": {
          "id": "1c725286-f8bd-4909-b135-d6ba9a910fda",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ab66bdc7-fbf0-421d-ac74-1144635e4df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94d529-c789-4f17-9e80-447dc6a7bd87",
        "cursor": {
          "ref": "c8108aee-279b-49de-8175-f0165c258de5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8976185b-7fc6-4e7e-b0e7-3b418915cfe8"
        },
        "item": {
          "id": "2b94d529-c789-4f17-9e80-447dc6a7bd87",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a9d141c0-6f9f-4429-9ba9-4188d3fe1ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30640f78-5add-4115-a859-5cebbeb7c91f",
        "cursor": {
          "ref": "3578a19c-7cc6-41b7-a8f6-bb2352f2cb3b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a37f76b7-aed7-4ccd-a5d7-94a14c8fd8db"
        },
        "item": {
          "id": "30640f78-5add-4115-a859-5cebbeb7c91f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8849d3e2-c72b-4e8a-b2d5-5f8b47aaa2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d75e90-07c1-40e5-aa03-aa1f1156bc98",
        "cursor": {
          "ref": "287c0333-c781-47c6-958c-e7368dacc6e3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a8d6f09d-8ddf-4909-b59c-507b96c17d5d"
        },
        "item": {
          "id": "b6d75e90-07c1-40e5-aa03-aa1f1156bc98",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d90d3ea5-6c77-43cd-84f1-e49ce644bd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d397c9-a448-463b-8edb-927874f294a3",
        "cursor": {
          "ref": "d8629825-d0ed-4923-ac24-1e2cfa4c38d8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a71fddf3-530a-427c-b241-d07ad8ead0c8"
        },
        "item": {
          "id": "62d397c9-a448-463b-8edb-927874f294a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c021a3e3-b793-467e-861a-f0af07e3cf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5465f22e-ada7-4694-ae2d-eae241a4a0b3",
        "cursor": {
          "ref": "60ca6ae4-da27-41b0-b66a-11893e61de1b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "368bfd2c-d106-4fb7-aea7-78e4e74a99a9"
        },
        "item": {
          "id": "5465f22e-ada7-4694-ae2d-eae241a4a0b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e51a0f69-2436-411d-a0af-abf5d4a9020f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88684541-91c5-4ba6-b1fe-ff428dade944",
        "cursor": {
          "ref": "6acee279-b11b-4949-97e6-b26173606828",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b89e0423-f271-4710-b2ae-8875f5a69915"
        },
        "item": {
          "id": "88684541-91c5-4ba6-b1fe-ff428dade944",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5f168e3-0009-4f41-989d-0c11279a633c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbdbe1d-728a-45e7-b240-c31648f9ba63",
        "cursor": {
          "ref": "806e51d3-5a0e-4e1a-8b3d-fc2721a5e590",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d6ab16c0-07a0-42c5-8e0e-4592f2f9434f"
        },
        "item": {
          "id": "8cbdbe1d-728a-45e7-b240-c31648f9ba63",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24230957-20b4-4745-9c7a-712aa81deb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f6810b-c0e8-4cc4-9a73-188e837a38de",
        "cursor": {
          "ref": "ee8b6e93-f82c-474f-89de-c7eb95bb9ecc",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "06a06c63-cdd3-4671-aa35-bf4505d775cf"
        },
        "item": {
          "id": "82f6810b-c0e8-4cc4-9a73-188e837a38de",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62c300d4-551e-42e4-9ce5-1f98decd2afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43721f61-f970-4e0f-90a2-f0e33c391e02",
        "cursor": {
          "ref": "24f10e38-32fe-4d82-a368-624eee65e99a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "19309de8-787c-47a8-b626-344827cce909"
        },
        "item": {
          "id": "43721f61-f970-4e0f-90a2-f0e33c391e02",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a632ff4c-1047-485d-b01b-d78f76a3b3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe7a5f-1b4f-4557-8f0c-b99c14371cf1",
        "cursor": {
          "ref": "2a2d0313-b6be-45dd-927a-eea22b7eb1e3",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bd01117f-3231-46fc-b098-fe7e07e69994"
        },
        "item": {
          "id": "7fbe7a5f-1b4f-4557-8f0c-b99c14371cf1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "46047c53-3c7d-457a-8320-38f18ff7dbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a8dede-6068-4b71-821c-f5fc236f46ab",
        "cursor": {
          "ref": "54ca253e-927a-4ea7-a188-a4752498ad22",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "742394da-388f-42fd-8c00-09bbfd84af6e"
        },
        "item": {
          "id": "34a8dede-6068-4b71-821c-f5fc236f46ab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0603bae-b099-49df-aba1-19eb1c1d58db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b174cbf2-87a8-4f45-baa1-d78826d0c7a9",
        "cursor": {
          "ref": "26b49284-0695-43f3-bc42-7c6712505536",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ab29138b-7eaa-43c9-abb2-ecd0727c8209"
        },
        "item": {
          "id": "b174cbf2-87a8-4f45-baa1-d78826d0c7a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31778124-96d1-464d-8534-0d19f800cb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926c3950-3015-4673-941b-e7068064ec7a",
        "cursor": {
          "ref": "2e924b48-4509-45e1-b8bd-5f88ecc39ffb",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f9acd3c7-2739-46dc-b993-900b46d0c0b1"
        },
        "item": {
          "id": "926c3950-3015-4673-941b-e7068064ec7a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6725197e-5f87-4e15-a441-8ef99e79c788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ed7eb8-83c7-4bcf-a468-5a07495d9bb6",
        "cursor": {
          "ref": "6900d439-fceb-4a22-b619-7313fdf5bc49",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d354c77d-e417-4a67-958f-ccd521a533b2"
        },
        "item": {
          "id": "15ed7eb8-83c7-4bcf-a468-5a07495d9bb6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "482128e5-36f8-4b41-aebc-b5bf73f2a15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7bff78-c894-402f-8aee-6589ce2e8128",
        "cursor": {
          "ref": "7aa2d361-b4d2-4b30-bf57-bcd2ce1dad3a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "482f7b1c-0d1a-4409-8d2f-0dc4c1c4dd88"
        },
        "item": {
          "id": "da7bff78-c894-402f-8aee-6589ce2e8128",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "37643a22-590b-4982-bada-418f7ab0f712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e599523-14cf-43af-a4d0-84f301bb0f7d",
        "cursor": {
          "ref": "4df03e0e-4e8f-4eca-9049-407ec75619d9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7dae6644-a3b6-433b-9f5e-f39c524e84c0"
        },
        "item": {
          "id": "6e599523-14cf-43af-a4d0-84f301bb0f7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dba30223-7897-45f5-b7ad-bcf4295c0789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e498ad-5782-4dd6-9126-10e683be5ba2",
        "cursor": {
          "ref": "8594ef96-27c5-49c1-b966-c1292c1ef67c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a74fe71f-15cc-41d3-8a4a-ad38cbbfcec5"
        },
        "item": {
          "id": "c0e498ad-5782-4dd6-9126-10e683be5ba2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "979b2aae-9e45-4a52-93bd-843130454f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fc56a5-8892-4247-9fd8-98a80080f263",
        "cursor": {
          "ref": "16a3d366-e109-4e8e-ba3a-7baa882ed5e8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3262171f-ff5b-40d4-9eea-59137b41d19b"
        },
        "item": {
          "id": "23fc56a5-8892-4247-9fd8-98a80080f263",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "08ce3772-6a71-4151-bfee-5ff45246a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336eddd8-ccde-4630-a89e-b3a2599d4e5a",
        "cursor": {
          "ref": "304656bf-4a2b-41de-8367-c03a22834d28",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "98c7ef03-caea-4a2f-a861-6c13addd7b16"
        },
        "item": {
          "id": "336eddd8-ccde-4630-a89e-b3a2599d4e5a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0ba5e34-8e03-4583-8e8e-1d07453d4c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc6b372-08f2-438c-bd86-989af0ca0ac7",
        "cursor": {
          "ref": "1dbe5806-6686-4459-a6e4-7592baccb7de",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fcbb99ff-dd01-41c1-a53a-de37c698cf91"
        },
        "item": {
          "id": "9dc6b372-08f2-438c-bd86-989af0ca0ac7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f7a7057c-dcd0-4bbe-9915-5a992f96afaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173b193e-6bfa-44fc-8b36-750e79efe8cf",
        "cursor": {
          "ref": "3b04f1c3-0afa-4171-9d48-03aaad8b89da",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee71d3fc-0ff5-47fa-9c75-51033c7f32bf"
        },
        "item": {
          "id": "173b193e-6bfa-44fc-8b36-750e79efe8cf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82f14373-8774-4e3f-a79e-0e5f6cc2300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f474aa3f-31dc-466d-aa4e-4b2d2ea2359c",
        "cursor": {
          "ref": "09748049-af5b-45a8-89ce-d0c7a802c380",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "df0d1859-792e-4419-8381-61b93ea458da"
        },
        "item": {
          "id": "f474aa3f-31dc-466d-aa4e-4b2d2ea2359c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "13c048a9-8a44-4b11-aa27-af919da062e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a74bb3c-86e8-4bae-a839-81f0ffe2905b",
        "cursor": {
          "ref": "e26acc38-182e-41cb-9ad6-3bcb247a8594",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dcc96f3a-6cf8-46f8-a843-4ceed48cd06c"
        },
        "item": {
          "id": "7a74bb3c-86e8-4bae-a839-81f0ffe2905b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7883d1e8-288f-482b-9abc-ab90212648f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45797c01-3bb5-4451-ba78-03316e3c256a",
        "cursor": {
          "ref": "f89cb780-447a-486c-917f-fa38c11de2fb",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "45fd53dd-1e32-49b5-8066-32b9de961627"
        },
        "item": {
          "id": "45797c01-3bb5-4451-ba78-03316e3c256a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bc8df087-1fff-4f30-bcda-4667f8847992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7513eb-a988-4a1d-a644-fa154cc6e0fc",
        "cursor": {
          "ref": "ec873caa-3640-470a-b333-2ecd5305d803",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b5b435a-cbcc-44db-9380-1b2242f51cd5"
        },
        "item": {
          "id": "cf7513eb-a988-4a1d-a644-fa154cc6e0fc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "977707ee-561c-495f-8411-8dba806bc362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3380493e-9a2a-465b-877c-75f4e1cbdc9e",
        "cursor": {
          "ref": "01078cb9-2aa7-4f1b-bd3d-c36ed88af404",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c70ab851-e0af-4a3e-b714-9be637190711"
        },
        "item": {
          "id": "3380493e-9a2a-465b-877c-75f4e1cbdc9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b49a2aa6-cb3f-459d-9eb7-fb45d95544e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7a3a4d-3503-4858-8493-874cd214789e",
        "cursor": {
          "ref": "d86b62f1-de4f-4a42-b805-57bc5d2ec11d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e4da64ee-45db-4dd9-a906-3724fe885412"
        },
        "item": {
          "id": "dd7a3a4d-3503-4858-8493-874cd214789e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "de356910-bfbc-4421-b4cd-3d0c7f9d0b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005fbbf6-fb23-4766-9075-303870ed20c2",
        "cursor": {
          "ref": "13b3f37f-8a2a-4a6d-9c85-4f246e12a14f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ee67c086-273e-4f60-beb4-df96b8a002e9"
        },
        "item": {
          "id": "005fbbf6-fb23-4766-9075-303870ed20c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8b23c7b-8761-4fc9-9001-b73b467f7f9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ffbd12-e503-4086-9514-3eb6b485d89c",
        "cursor": {
          "ref": "86156232-9f82-476b-9890-f4da7d773cd8",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a323e13c-ba20-41af-abe0-6f468be361b5"
        },
        "item": {
          "id": "b2ffbd12-e503-4086-9514-3eb6b485d89c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d8b114c3-417a-45ca-baad-1b713464fe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f50b3f-1dc8-4207-a314-6e706e0e0aac",
        "cursor": {
          "ref": "62492d1c-6ccd-4f05-bdaf-489fac585492",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a2cdb60-e4fe-43c2-8270-ca0cace6438b"
        },
        "item": {
          "id": "c9f50b3f-1dc8-4207-a314-6e706e0e0aac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cf916981-67aa-473f-9cf9-06ec03a3bdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691e1a22-f899-4235-959a-bc9360098681",
        "cursor": {
          "ref": "6832f8ee-0e2d-476d-94bd-78cfd743c5f7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "df0fb0ba-d1d9-4e00-bc00-8682a6c38c50"
        },
        "item": {
          "id": "691e1a22-f899-4235-959a-bc9360098681",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0108bab6-0e42-49d5-a68d-07ae54181164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d560ab3b-dbba-467e-8f6e-04780fd1e219",
        "cursor": {
          "ref": "7aa5cf1d-3820-42e4-bf02-870c3078f1f4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a67e81f5-5f81-476b-afa1-a6d2df4e1971"
        },
        "item": {
          "id": "d560ab3b-dbba-467e-8f6e-04780fd1e219",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "55c3f5c2-5ba7-42a1-bee9-25ef72a2fa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3742b42e-5d78-4fd9-a1cc-6e0505de1718",
        "cursor": {
          "ref": "baea1e37-4222-4ba6-a88a-7f557127f846",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "45c7f262-0316-4aff-af65-24c8f17240dc"
        },
        "item": {
          "id": "3742b42e-5d78-4fd9-a1cc-6e0505de1718",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "24b3d2b4-d50d-42c9-acf1-c9d203b103a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdae46c-5bcb-4114-9293-a8ddc187682b",
        "cursor": {
          "ref": "35c77caa-bdcd-4bc7-b42b-b2ef3160fd13",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8f004296-a7f1-4d1b-964b-b4cc4b52b219"
        },
        "item": {
          "id": "1bdae46c-5bcb-4114-9293-a8ddc187682b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a095197e-b0ba-4b98-90a8-91813fbf363e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075b37df-e240-43b8-bc24-2cd5c88eafb7",
        "cursor": {
          "ref": "2cc959ee-7673-4892-bbd8-61a802f720a2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c54f0a0e-b753-41ee-a4eb-04275d45f02b"
        },
        "item": {
          "id": "075b37df-e240-43b8-bc24-2cd5c88eafb7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dfcec217-ce30-478c-b2de-ce16b817df88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9754e0e6-a2ff-4928-b9d8-32f6e5a672b5",
        "cursor": {
          "ref": "1eea8cc7-6a0b-47ce-9c97-f7d7d36373f3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6c4921ff-576f-4c39-9396-b6368e46401a"
        },
        "item": {
          "id": "9754e0e6-a2ff-4928-b9d8-32f6e5a672b5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe89f42e-6e50-4d97-a8cb-10d27ac917b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27063c16-da26-4e6b-a0cd-23df9d02328a",
        "cursor": {
          "ref": "0fd4ae64-d62b-426a-8922-0c85a46f3a9b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "41e9ca33-e976-4952-9e37-3a38334e552c"
        },
        "item": {
          "id": "27063c16-da26-4e6b-a0cd-23df9d02328a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "898ddf34-1b94-47f3-9a35-4f2f7fa79e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d43cd9e-2946-4a3e-aaeb-535592a37f94",
        "cursor": {
          "ref": "6f755e8b-8c32-4558-bcb9-51644b1781be",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "864ec3b1-96b6-4e26-9884-f28de67e39d2"
        },
        "item": {
          "id": "0d43cd9e-2946-4a3e-aaeb-535592a37f94",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fe17db35-ec1d-44a4-bd8b-dd13a0efcc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868f4916-04a6-40ab-af82-bdbd3f981341",
        "cursor": {
          "ref": "b9804d1c-b875-4a29-9926-7f0484e8a0a8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "94b36feb-65d0-48cd-af97-eadbbef677eb"
        },
        "item": {
          "id": "868f4916-04a6-40ab-af82-bdbd3f981341",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "de5a63b5-cb6e-4b5c-bbd3-07bbf8bdcd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdddf0e-ac1f-4741-a980-1bb6a972bc77",
        "cursor": {
          "ref": "1019fa4e-8660-4650-9392-bfbb9b7e2885",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "448733b1-0e16-4847-b67c-d27f6f2986a0"
        },
        "item": {
          "id": "ffdddf0e-ac1f-4741-a980-1bb6a972bc77",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "88c9e770-a916-47ea-9d85-a7ceccc1c7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6045300-412f-4d95-8008-7bd0c128d222",
        "cursor": {
          "ref": "bc7880fa-ed4a-4fa5-9765-b2b43c6d452f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9e30d098-5248-49ea-81a2-610c01e4cb81"
        },
        "item": {
          "id": "a6045300-412f-4d95-8008-7bd0c128d222",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3600be75-81a6-4399-94d8-99ce8aad3fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923c1d91-4be4-4301-b9b6-0181aa203340",
        "cursor": {
          "ref": "c3e0319e-04e6-43a3-89be-d55a3be8b40b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6a9acdab-de43-490c-ae0d-137e3e51d6b8"
        },
        "item": {
          "id": "923c1d91-4be4-4301-b9b6-0181aa203340",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed72f820-e654-42a5-a517-1d564d92eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b4ddc2-8e78-4e0d-b50c-c4e2f48c2a42",
        "cursor": {
          "ref": "a3200847-ae4b-48d9-ab0b-31317bfd01be",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "30a0be94-f2b7-4f51-9617-b1a7bd888484"
        },
        "item": {
          "id": "78b4ddc2-8e78-4e0d-b50c-c4e2f48c2a42",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "555c7eaa-63c0-4361-b951-04fdcc8152a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4203c7e-76fd-4b7d-b0b4-0b5cf2759afa",
        "cursor": {
          "ref": "e6ea794f-1c5e-4e48-80b0-ba16a1f80a93",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "de0da3b3-bd37-44a6-b68a-d5f63be7a36c"
        },
        "item": {
          "id": "c4203c7e-76fd-4b7d-b0b4-0b5cf2759afa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0d6cd741-8d4f-412b-a2ec-4c15ea548c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1864cb1-bcbd-4cda-a9ab-cfa38c7c2dce",
        "cursor": {
          "ref": "1b9746c1-fd6a-43a7-b192-96ccaf7aeb45",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c12cca1a-0c53-41e0-aeeb-f2007ca62119"
        },
        "item": {
          "id": "e1864cb1-bcbd-4cda-a9ab-cfa38c7c2dce",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "569ba29d-2743-45b2-9432-d0b661b4884e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7379ec40-ee01-4f99-8b2a-8c737fccb02e",
        "cursor": {
          "ref": "b86896b5-46b0-4bf5-9d28-02e6abc22448",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "35f49aa0-f8ca-4ac1-8874-52e8597990cc"
        },
        "item": {
          "id": "7379ec40-ee01-4f99-8b2a-8c737fccb02e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ca59d09-ff77-4fd5-883d-9cad5e51ff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8685f67e-f8a2-4e4d-bef3-34221dafca08",
        "cursor": {
          "ref": "a35780c3-a0d2-4544-80e1-cb5097b4e38a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "02e9786a-7d12-4266-908d-425103fa9672"
        },
        "item": {
          "id": "8685f67e-f8a2-4e4d-bef3-34221dafca08",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "641de061-9fb5-4713-9c03-b90a87a52fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c22dd5d-9616-4cab-8213-b5cc38463583",
        "cursor": {
          "ref": "096d0447-8c9a-4ed6-93b2-81564b937b69",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c117c11f-c889-4983-933f-7e108bff323c"
        },
        "item": {
          "id": "0c22dd5d-9616-4cab-8213-b5cc38463583",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1d8378fb-57db-4f3a-bfa0-a30895f18d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95802f80-5906-44d3-b86e-0cd10e13ae5b",
        "cursor": {
          "ref": "22c45470-85ee-446f-8f31-fda976a405f0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c6604f52-bd01-419d-9ff5-34fdb6724985"
        },
        "item": {
          "id": "95802f80-5906-44d3-b86e-0cd10e13ae5b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ac86e59-0371-4afb-b52a-b6fd73853fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42227d8d-b605-4d75-b11b-b46c1cff9cc5",
        "cursor": {
          "ref": "d7f03e63-263f-4427-b6e5-57b9aeb163dd",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da540910-2a61-451c-86d0-31e516bcdeca"
        },
        "item": {
          "id": "42227d8d-b605-4d75-b11b-b46c1cff9cc5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1beeb80f-4133-48b4-a517-0820f2d89e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2bcf6e-6c6d-4b7e-915e-1abb2b80cd1e",
        "cursor": {
          "ref": "25a2ae9f-90df-412b-951e-c97b0d27e258",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fc0fedf3-3a04-4c7b-9ac3-2a74bcb86562"
        },
        "item": {
          "id": "ab2bcf6e-6c6d-4b7e-915e-1abb2b80cd1e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a12d2fe-8f09-4744-a3de-b2507952e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bce3165-9116-4425-bb13-b13f50a0f867",
        "cursor": {
          "ref": "6d19adda-a852-4252-abe5-547f1e3f5656",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "713b9cc4-ee46-4091-81e8-bd69975ad1d6"
        },
        "item": {
          "id": "6bce3165-9116-4425-bb13-b13f50a0f867",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e7b93b6e-61fb-49a9-a196-0da8172bbb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5797a1-d81b-4d9f-92c6-78f5312469b1",
        "cursor": {
          "ref": "381c1527-0748-4a91-b799-8a36cfcb19d1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f6bc599-e739-4ee0-a440-6e8c1f9d1e6c"
        },
        "item": {
          "id": "ff5797a1-d81b-4d9f-92c6-78f5312469b1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "02b32103-bf9c-4677-9402-5a175151b385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024093a-40aa-4455-a13d-a2aaf4107841",
        "cursor": {
          "ref": "d42d09ac-1418-403c-9655-3b299f40040f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2c6a17dc-3193-4345-a861-e8dfffcc9a21"
        },
        "item": {
          "id": "f024093a-40aa-4455-a13d-a2aaf4107841",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d2965f8d-c94a-4144-be68-e04792d2d821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b6b86-1b87-4bc0-ad3d-346ff44e4e71",
        "cursor": {
          "ref": "ae3eece5-fb09-4d0e-b232-838950dcd3ac",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "24dd51b4-f94a-4886-9dcd-23c18658eadb"
        },
        "item": {
          "id": "b22b6b86-1b87-4bc0-ad3d-346ff44e4e71",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "48f69f37-0b43-452d-8f17-d551db39c1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9f51b-f26b-4fdd-b216-1a04acefc5d2",
        "cursor": {
          "ref": "a8c77fbf-c029-4b95-ab27-4e231ad2b65f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aa9b8acb-a956-4c39-bbe4-0fb0dd51bad6"
        },
        "item": {
          "id": "46f9f51b-f26b-4fdd-b216-1a04acefc5d2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17297baa-c482-4b7a-b1ff-3c1e17355a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b18fd31-908a-46e5-8421-a72f24100ede",
        "cursor": {
          "ref": "a357d0c3-10de-41f2-9711-b577663d911c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "51868d6d-0af0-47c7-90f3-cf7d7b5c7643"
        },
        "item": {
          "id": "4b18fd31-908a-46e5-8421-a72f24100ede",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f71fc121-30c9-4c8e-908b-f25669113ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8d1480-e20d-4279-b0f3-5143de2c3945",
        "cursor": {
          "ref": "0c928776-a7b0-4eeb-8e5e-6112c1151958",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "24113e48-8517-416b-9301-7df5c7b2b962"
        },
        "item": {
          "id": "ac8d1480-e20d-4279-b0f3-5143de2c3945",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8609070-4a67-4e22-8723-c4b140c89d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9abe96e-e11b-416e-ab60-aca9748b055c",
        "cursor": {
          "ref": "cad7e0b7-5340-48e0-90d4-ddfb52f3e4dc",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "51092266-2c25-45b3-8fff-0bbf05b567e5"
        },
        "item": {
          "id": "a9abe96e-e11b-416e-ab60-aca9748b055c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4f1e92b-5f40-4ee7-888f-f28b0f86c1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5079e2-85c4-49a1-8652-9fc5ae447b7d",
        "cursor": {
          "ref": "2057a792-96a2-43a7-8940-d7b15559d64a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09d367a9-5c02-4dd7-b787-a75d87071a5e"
        },
        "item": {
          "id": "1c5079e2-85c4-49a1-8652-9fc5ae447b7d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6def2433-3542-4d58-8aa0-d528b88d0bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b291d6e8-3c43-40cd-8af7-89dde3ed9cd4",
        "cursor": {
          "ref": "8c95aac4-33d1-4b2f-87d8-3fe14dcb1d5e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "46177a0f-0a01-4161-9404-613d1fcbe0cf"
        },
        "item": {
          "id": "b291d6e8-3c43-40cd-8af7-89dde3ed9cd4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8f9ff33c-1500-41f0-9676-f5344688e1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9996992-c6a2-412d-b852-cf8beb504e1e",
        "cursor": {
          "ref": "cd03117c-c0eb-4bbe-bd5b-b8da112fda7b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "abef6d27-ae3c-4067-8f69-bea97f2aa7a0"
        },
        "item": {
          "id": "f9996992-c6a2-412d-b852-cf8beb504e1e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cdef4b9a-2ac2-478d-aba1-d450651b72aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba7d9a3-7adf-47b5-a5a1-75ddf5c9905d",
        "cursor": {
          "ref": "bb5a057f-f9ce-4039-bfac-ed04360dc940",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5fc67cb5-bc2b-45f4-b28b-0fd9248da6c0"
        },
        "item": {
          "id": "cba7d9a3-7adf-47b5-a5a1-75ddf5c9905d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "79d97c3b-50e7-4bf1-a2a5-2ab0c4114403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9edd84-ec39-4aba-9789-1b840aa8cb1b",
        "cursor": {
          "ref": "12887838-11ef-4cf9-a313-7ddc308e4f63",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0bddc417-2de3-42a4-8bf2-613638c0ab2c"
        },
        "item": {
          "id": "0b9edd84-ec39-4aba-9789-1b840aa8cb1b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9b096783-8a95-478b-9c46-7ea1a8a12b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2dc9c4-786b-4ec0-b0b5-5579682c34a2",
        "cursor": {
          "ref": "e1ee3aa7-b781-4578-a970-ad2f1cfe9366",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b7e5d05d-d273-4692-94fa-cc766d8869f9"
        },
        "item": {
          "id": "db2dc9c4-786b-4ec0-b0b5-5579682c34a2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01bc1aac-3b16-4811-a0f7-6cfac87ed253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8876bbcf-3c1b-4629-a311-d7ddf615e5a4",
        "cursor": {
          "ref": "1171fac5-7afc-408e-bddd-d23533774837",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c705414a-e75f-4049-9ece-aaf3b29892cd"
        },
        "item": {
          "id": "8876bbcf-3c1b-4629-a311-d7ddf615e5a4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d29e32d6-6786-41ce-af10-40e90d2ce146",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3fba5b-2e70-4f28-88ac-3fa40ccfbb38",
        "cursor": {
          "ref": "c733a247-12f1-499d-84cc-af56fa81e7df",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "eaf458f8-c8c0-45dc-9bf7-6dce6da335aa"
        },
        "item": {
          "id": "2b3fba5b-2e70-4f28-88ac-3fa40ccfbb38",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6ee113b8-caaa-4102-91be-90825fd9288a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3967c520-4e9c-46f8-91d7-f581c32b7325",
        "cursor": {
          "ref": "cafab7b8-121b-4a05-a3bb-e2a4a43e1582",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "efdf1360-75ec-4625-a6c9-a752f790cef0"
        },
        "item": {
          "id": "3967c520-4e9c-46f8-91d7-f581c32b7325",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "75c2321a-5c95-4355-a3a3-72b802305a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f970bb-8daa-4fb4-9436-448b0034bb08",
        "cursor": {
          "ref": "98f0d7cc-ee5b-4a69-8c72-b1e2488a6d01",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1bf13acb-f71a-474a-bf92-12ec69f35101"
        },
        "item": {
          "id": "b2f970bb-8daa-4fb4-9436-448b0034bb08",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1901caa2-b984-453d-b309-520964994c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631667f3-bc49-4d6e-8c93-331f65ee080d",
        "cursor": {
          "ref": "d2936021-513e-4bc2-9b40-afede7679fdd",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "89fc1d3d-342b-459c-b2fb-47013999e0f6"
        },
        "item": {
          "id": "631667f3-bc49-4d6e-8c93-331f65ee080d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "48fea36f-d2c5-4411-9e22-9a6d7017084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addfdfa8-14ac-4bce-aaf0-2c84d2b12038",
        "cursor": {
          "ref": "889e905d-7dc8-4159-915a-175e65f5a405",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "16b129ca-098b-4577-add2-817d2e9549eb"
        },
        "item": {
          "id": "addfdfa8-14ac-4bce-aaf0-2c84d2b12038",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e1c56294-f8c4-4295-8588-cf9ce134fba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d433b8dc-5865-457c-9817-3263c837d814",
        "cursor": {
          "ref": "292d52c3-8ae7-4a08-a7c8-19cc2f6993a3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6d5da139-6bed-41ee-9b97-2956d035af05"
        },
        "item": {
          "id": "d433b8dc-5865-457c-9817-3263c837d814",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fb7a7d1e-2afa-4eee-a406-6397d911c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6276ac97-d335-46b7-afb7-eb34c991ea40",
        "cursor": {
          "ref": "8db69f98-c7e8-43bc-87c7-e799167d50d6",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e95734bc-3186-46e9-9d55-5aa5df54a8a2"
        },
        "item": {
          "id": "6276ac97-d335-46b7-afb7-eb34c991ea40",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aa735685-7f04-44e3-bccf-765ccd668857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c202437d-a2e3-418d-8828-bf21d26114a3",
        "cursor": {
          "ref": "dde164c1-8e4e-4e36-a57a-d9391a695e0e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8ec52e60-0f49-4e6d-99e5-1ec2c02ff84b"
        },
        "item": {
          "id": "c202437d-a2e3-418d-8828-bf21d26114a3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "53d41001-92a9-455a-a2e7-62c4b3d93d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ece98d1-b62b-47fc-8981-0e6423cf449c",
        "cursor": {
          "ref": "5fd3a833-95cc-4eed-bf34-fb844c70175c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "100c555b-f4ea-4403-8d8d-1521cf8c3b43"
        },
        "item": {
          "id": "6ece98d1-b62b-47fc-8981-0e6423cf449c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "709b741b-4d9f-4e17-8ac9-dd535ad0a156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c28f7b-f5db-4055-8fe5-df90fd653ddb",
        "cursor": {
          "ref": "8a4d968c-537a-4a27-ab54-e20af9bd050d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fa06e4ef-aa5c-40d2-a62a-ff2b3755864c"
        },
        "item": {
          "id": "26c28f7b-f5db-4055-8fe5-df90fd653ddb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5fa966e5-5509-49d3-aba5-a9bc8a7fd9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9996a6-b0e6-4b4f-bee6-5974bacf97a3",
        "cursor": {
          "ref": "81584a59-5497-4ef9-ae30-0a598b5ff6b3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "519cdd47-49a3-43de-ac48-7672a7cd9275"
        },
        "item": {
          "id": "0b9996a6-b0e6-4b4f-bee6-5974bacf97a3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4b544466-18ad-468e-95b2-2ebf9b1e7e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111762b7-2125-4c68-af27-e100c3d206ed",
        "cursor": {
          "ref": "e9bfb724-d5ae-43b8-9917-0ce95e8793e4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "705272b8-6c80-4d31-9b1d-7375e21be0c3"
        },
        "item": {
          "id": "111762b7-2125-4c68-af27-e100c3d206ed",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8c5b54b8-1a09-453c-9189-61a367a4c31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6767f4e1-d72d-4842-b4b5-e4726f879232",
        "cursor": {
          "ref": "bef9f27e-af2b-4e96-81ee-7229ddef70b6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "531dffb9-e727-4490-b507-783697be5a81"
        },
        "item": {
          "id": "6767f4e1-d72d-4842-b4b5-e4726f879232",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dc2ccd3e-b70e-451c-9d48-e49050c7c952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b1a0ec-9ab2-4437-b57b-fb0da84090c6",
        "cursor": {
          "ref": "a8088ecc-4f00-4fcc-811c-0b49abe43cde",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bcca26bc-e754-4627-8db1-b2ae427fb371"
        },
        "item": {
          "id": "e9b1a0ec-9ab2-4437-b57b-fb0da84090c6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "943ec181-6e74-41bd-a41d-6983967efb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aa84aa-811f-433a-b88c-1a8b9a6585d1",
        "cursor": {
          "ref": "b8cadc06-2331-402a-86b8-7224417cd9cc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "07fa8fb7-def1-4be4-936a-8ff9e207c0e8"
        },
        "item": {
          "id": "c6aa84aa-811f-433a-b88c-1a8b9a6585d1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "09ecbaf9-79d9-47cb-8185-74cf48b56fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534a5f50-cc01-4042-81c8-8d70bc699775",
        "cursor": {
          "ref": "dc537611-e848-4af3-856b-6ee5dbea81ff",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4830d5ad-b77b-4e9c-8350-c9052aa35a05"
        },
        "item": {
          "id": "534a5f50-cc01-4042-81c8-8d70bc699775",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0fa4014f-4338-4c69-8594-e6869bd3fba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a23351-9d55-4b3f-af7f-8237aefaa868",
        "cursor": {
          "ref": "f863a2d4-8d33-4cef-8fad-0bdea5159f7d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "205e87af-d5fc-46b1-81db-42dbc2669b6c"
        },
        "item": {
          "id": "c8a23351-9d55-4b3f-af7f-8237aefaa868",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "84b53828-2971-4c36-a75a-443a3e298496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834d2233-10c5-4b60-b6e1-f3e0bb20b029",
        "cursor": {
          "ref": "c9ce4ef3-74ce-4144-9497-ebc96911035a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8a15e8bd-3761-459e-9e9d-f7fffcf38e0d"
        },
        "item": {
          "id": "834d2233-10c5-4b60-b6e1-f3e0bb20b029",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f50bc0c7-02b6-4070-89f4-f3e496320322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2267848a-960a-4ee1-97d5-4982171db954",
        "cursor": {
          "ref": "dcff3a93-82a5-437d-acd9-c5601157da91",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8ec5c1e5-3d60-4d68-b02b-7905e958fbe9"
        },
        "item": {
          "id": "2267848a-960a-4ee1-97d5-4982171db954",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "751e68e7-13b2-4dd1-a5f8-0653ea43e2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dac5933-bf00-4418-bac6-0efecd0b57cb",
        "cursor": {
          "ref": "ad172582-5efd-4c02-9144-3e7b3d580391",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9769ad64-a9b8-4640-b4b8-c16afce1b2c6"
        },
        "item": {
          "id": "4dac5933-bf00-4418-bac6-0efecd0b57cb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "75c4bad7-8b77-48bd-8849-c848a7a2580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597deab8-8b79-4c79-932b-617ddd636c3a",
        "cursor": {
          "ref": "eeba7f68-084e-488b-b65b-37cfb349f543",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0f4ac4da-33e0-4289-bcdd-ad90a87d34d2"
        },
        "item": {
          "id": "597deab8-8b79-4c79-932b-617ddd636c3a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47be7cd9-3b5b-430e-ab3c-e827327200d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc953b9-8ee8-4061-a8d0-388aa133647f",
        "cursor": {
          "ref": "be05e79d-f468-4b63-8177-f05b7f6f7f3f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c587d231-a10d-45df-aa2c-5ad38095b3f7"
        },
        "item": {
          "id": "cdc953b9-8ee8-4061-a8d0-388aa133647f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c33b7f9a-539b-4c93-9b95-212a90801161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46847f59-c957-48ef-bb1c-e3f1598651f0",
        "cursor": {
          "ref": "e0cf1787-0aba-4429-800f-460f3826e5cd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "23d116a6-9017-458f-bf6f-e21eb961f506"
        },
        "item": {
          "id": "46847f59-c957-48ef-bb1c-e3f1598651f0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0e0258db-a557-42c3-a32d-99d7112dd4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889dc2a7-9c07-4ca4-94d8-d457a61fd27a",
        "cursor": {
          "ref": "058440f8-1a42-4912-8612-0eff161e6b72",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "03b9d2fc-ed04-4bfc-a738-e6d5a5b7f4f9"
        },
        "item": {
          "id": "889dc2a7-9c07-4ca4-94d8-d457a61fd27a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "204eefd3-952a-46b3-b457-ee2114b2c822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b32de3-0567-4d2b-ad36-59b580ff1c6d",
        "cursor": {
          "ref": "3505b37a-d3f6-4a29-9332-f12e47abd601",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1071380f-7196-41ba-9156-1e5ddeb500a2"
        },
        "item": {
          "id": "27b32de3-0567-4d2b-ad36-59b580ff1c6d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d391e994-758c-48e8-a383-8d20201891c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965bcacd-4dac-4dd7-bb19-861334266e37",
        "cursor": {
          "ref": "510c3a43-a4d7-407a-a052-d774b6773e0f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d7ca5453-cdda-4cd5-9dac-b663ceba9969"
        },
        "item": {
          "id": "965bcacd-4dac-4dd7-bb19-861334266e37",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "231e709b-e929-4e35-9ee9-94e84b6f5fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c9a989-8bee-44a7-9e90-50e59b6f982b",
        "cursor": {
          "ref": "4d8fe189-cc48-48a5-8d2d-0495cbdbb9eb",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "997d12f6-956c-442e-b3aa-126106aea18d"
        },
        "item": {
          "id": "83c9a989-8bee-44a7-9e90-50e59b6f982b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f7e95f1f-40b8-4d55-8aa3-a395eeb7f4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a9fe8f-ce17-41b8-b510-b451f79d197e",
        "cursor": {
          "ref": "33b174b6-c7d7-4f70-b01e-5edd0438ea81",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2afd91b1-09d7-47c7-9036-38890994d525"
        },
        "item": {
          "id": "f2a9fe8f-ce17-41b8-b510-b451f79d197e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d37270c3-00ce-45e3-b0a3-b4dd462d4602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f55d24e-ff21-4186-81b9-7a1e67ef2ed5",
        "cursor": {
          "ref": "64cf7816-4d6d-4893-9547-eb1212568980",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1b934cb8-6bcc-466d-8471-45dcae62530c"
        },
        "item": {
          "id": "0f55d24e-ff21-4186-81b9-7a1e67ef2ed5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90a4d79f-bf05-4cbb-86a5-fff0de2357eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09167f5d-4af2-4894-8128-ff0afadf065a",
        "cursor": {
          "ref": "32dff289-ec5e-4e17-ab40-4775f56ac24d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3921dab5-7c67-4667-9443-44c21ca72e9a"
        },
        "item": {
          "id": "09167f5d-4af2-4894-8128-ff0afadf065a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a3a56ea-1805-4e63-95df-548d302f829d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8222c6d-e52e-4158-9828-b7f4525db38a",
        "cursor": {
          "ref": "63235464-78a8-41ad-b762-0a698cbf5138",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a253e4c2-3143-4889-84c4-178108466160"
        },
        "item": {
          "id": "a8222c6d-e52e-4158-9828-b7f4525db38a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9a2dc272-9fdf-4fc5-87f8-a931910e7327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825ee65c-dab3-40a3-a5ff-24d981489bdc",
        "cursor": {
          "ref": "1c75dea7-06eb-4267-870a-2f954d067ff5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b9b16b5d-1039-4eda-811a-a002983e961c"
        },
        "item": {
          "id": "825ee65c-dab3-40a3-a5ff-24d981489bdc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d87f6cb8-6859-4a02-bdb3-049c336537f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d732ed-4194-4381-87dd-0a45d7cc51bc",
        "cursor": {
          "ref": "ee6eb297-c94a-48bf-b44a-641a217a1d02",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8b1c7815-d5aa-4dbd-8711-803472844015"
        },
        "item": {
          "id": "58d732ed-4194-4381-87dd-0a45d7cc51bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a4d80cc4-a8d8-4664-850c-5dfc7a69b14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac05bf-7345-4743-af4a-28386f4000c4",
        "cursor": {
          "ref": "376983ff-e95e-432c-a316-7a3e60ab3422",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ee379380-36a6-4825-95fd-6d0e2b8aec71"
        },
        "item": {
          "id": "95ac05bf-7345-4743-af4a-28386f4000c4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf1f205d-61da-4d50-ac1a-9206dc38f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24c1110-b262-4382-a8a4-3231f883b218",
        "cursor": {
          "ref": "712926e0-9568-42d7-b693-f2d2d4641b27",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7e2535fd-90ef-495b-b0ea-6dc27721a863"
        },
        "item": {
          "id": "b24c1110-b262-4382-a8a4-3231f883b218",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "74f6af6c-42ed-45b1-b07e-6a58a6784f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ec2b76-fe95-46e3-b6f9-8c2cdf7e4fe7",
        "cursor": {
          "ref": "5d250db0-c812-4845-b33e-416d228c429f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cc442008-be7b-49b7-b6b3-1a05cda22794"
        },
        "item": {
          "id": "e7ec2b76-fe95-46e3-b6f9-8c2cdf7e4fe7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4b43bf52-37b6-4d29-a007-85195a9b7904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3f91a3-a5ae-4183-ad65-a762b5387d67",
        "cursor": {
          "ref": "413bbc7e-0351-4f32-adb0-429567450e12",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7161998a-0c3c-4389-9a12-4f96257205cf"
        },
        "item": {
          "id": "5e3f91a3-a5ae-4183-ad65-a762b5387d67",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6573ddb3-6299-4c38-9750-e30d1cf555fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e860400-9eae-4c33-b852-8648e37231f5",
        "cursor": {
          "ref": "1a6d04f4-42ff-4977-82d9-2ba35da703ce",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fe561f55-a0f6-4296-8e5a-7664200f4518"
        },
        "item": {
          "id": "3e860400-9eae-4c33-b852-8648e37231f5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a8968bd4-5301-4b8e-a999-63f0915d49fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dff7bad-8979-4bc6-b950-deb73834b989",
        "cursor": {
          "ref": "187dbb8d-7b89-4159-aea8-60572fa10494",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c6e0d3ba-07eb-4bd2-b7ca-1163e0fab95f"
        },
        "item": {
          "id": "5dff7bad-8979-4bc6-b950-deb73834b989",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "525ac7cf-24e0-4d3c-83a4-a02470ca7351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f23c1c4-685a-4059-823d-3f307d65d9ab",
        "cursor": {
          "ref": "6d4ce7f1-6622-4ef3-9b46-d3790b363dc5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b6908ba3-b932-414e-a1b6-6a8b73a6b22a"
        },
        "item": {
          "id": "7f23c1c4-685a-4059-823d-3f307d65d9ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f3c3301d-ce0c-4a68-a9b0-5a6f60db08d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f8d7af-946f-4456-95de-ed5675e8e9e3",
        "cursor": {
          "ref": "5e04b456-a930-4166-8f50-98c79dca7e94",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2674bc72-f198-4fa9-9e1e-10abdf40098e"
        },
        "item": {
          "id": "36f8d7af-946f-4456-95de-ed5675e8e9e3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6e1fd13c-723d-41db-8f2a-019b57974571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe029ef2-93d5-4a46-93c3-00a9f6e8d01e",
        "cursor": {
          "ref": "15b4fa25-a79b-4fda-952a-31c5d7984bec",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0f0b55b5-5439-400d-a19e-d24e8983d965"
        },
        "item": {
          "id": "fe029ef2-93d5-4a46-93c3-00a9f6e8d01e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "45be17d7-2584-45cf-bbc6-481186ae0ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d284042-977e-4e0f-9776-e89b86ac87b3",
        "cursor": {
          "ref": "46fb8684-6848-4b5c-bbd4-70b886044098",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7b528006-5ac5-4fe6-936e-a3bca37e1114"
        },
        "item": {
          "id": "2d284042-977e-4e0f-9776-e89b86ac87b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c4b60e10-3a34-4353-abdb-6e2f52e4c0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcc16cb-bdcb-4500-946e-22014e5d1743",
        "cursor": {
          "ref": "e0af150a-44f8-43f5-808a-d1728a19c496",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7a6495c5-f050-48dc-a902-a404a1d1339f"
        },
        "item": {
          "id": "dbcc16cb-bdcb-4500-946e-22014e5d1743",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "638c2adc-2fee-41b3-933e-aa64b3039462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a55c3a8-5e7a-40b1-aadd-4db30588efd0",
        "cursor": {
          "ref": "b189c7de-b4cb-4132-847c-148be9c35cad",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0d2d7882-e738-40c8-9d6a-b687e9af2022"
        },
        "item": {
          "id": "3a55c3a8-5e7a-40b1-aadd-4db30588efd0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a85ced98-9e8f-4f83-90d0-5f2be6449031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff81c06a-f566-48d7-9ea0-88cc4b938ae4",
        "cursor": {
          "ref": "1811ee0c-847d-471c-a3ba-e078dc2b624d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9c465602-3d42-481a-9002-1e44b9ffc1de"
        },
        "item": {
          "id": "ff81c06a-f566-48d7-9ea0-88cc4b938ae4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "53c302b5-4a44-40d3-ac6a-e7762b0c1d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dbc964-0a1a-4a9a-a389-8cb10d498832",
        "cursor": {
          "ref": "9143ae7a-a229-4476-aa35-cba030234b53",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "afc2e162-0031-4d03-a304-d7d7fff5a651"
        },
        "item": {
          "id": "90dbc964-0a1a-4a9a-a389-8cb10d498832",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f339b417-f96b-43b3-9174-b6705383721c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdd3b5f-3d76-4952-ba59-6273f5b30511",
        "cursor": {
          "ref": "2ddeecf7-8298-461a-9d8a-624bd1fe4a7a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b71dac54-aef0-49f8-a0f2-9e3572d679d0"
        },
        "item": {
          "id": "5cdd3b5f-3d76-4952-ba59-6273f5b30511",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8aae90e9-c4ff-4864-8597-8c473fa3f15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0571638-1ffd-4b20-ac8c-93d6efc39d0f",
        "cursor": {
          "ref": "5cb44ca0-15b6-414f-950c-5f28ce55b39d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d4b94407-63bc-4598-8bc8-ae23fbd893ee"
        },
        "item": {
          "id": "b0571638-1ffd-4b20-ac8c-93d6efc39d0f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c702eaee-1fab-47b4-8d96-39147cf7dc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db447d63-f402-48af-95b3-cc48d5d1b10f",
        "cursor": {
          "ref": "38ccf5a5-4936-4a1c-855e-9213cab6abc2",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af8e57e3-bee3-4ce0-8bda-c6c8a8b2c5b5"
        },
        "item": {
          "id": "db447d63-f402-48af-95b3-cc48d5d1b10f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ee7b5866-995c-4098-bac4-92639e8efb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8784d183-a2ea-4dc5-9e7a-17ed3faf70b5",
        "cursor": {
          "ref": "77c19731-b655-488c-b677-d74e9afd1423",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "65596057-5caa-4b15-9d09-7c35c72c8767"
        },
        "item": {
          "id": "8784d183-a2ea-4dc5-9e7a-17ed3faf70b5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e16ff6e7-8899-4c1b-8c11-40a1dd3dea24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30452340-055a-4138-b7da-bc365c4cd21f",
        "cursor": {
          "ref": "0aa39d39-bc0b-4a9a-b89c-05b7d3cf01e2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "84fe857e-409a-4da9-9358-a33cd48fa008"
        },
        "item": {
          "id": "30452340-055a-4138-b7da-bc365c4cd21f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7811ada2-4e4d-4e8c-b56e-1e169c4a5e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc4f4a4-a7d7-4610-a92a-d5bcc8e4d991",
        "cursor": {
          "ref": "e8eb0da5-be57-4508-a878-c461b2d3bcfc",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2416c5a9-de35-4dd2-a0a0-6a1230e4ff10"
        },
        "item": {
          "id": "cfc4f4a4-a7d7-4610-a92a-d5bcc8e4d991",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bee4649b-bdbf-4e5c-8be8-8e30152f1df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adad08f1-257f-4967-8727-e27a36a0cfa3",
        "cursor": {
          "ref": "ab17f558-2c50-471e-a689-0cf7dd783bdb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "215b21d0-2180-4576-9c8d-a1df93e295ed"
        },
        "item": {
          "id": "adad08f1-257f-4967-8727-e27a36a0cfa3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8e961c81-1cc7-469e-9dc9-1642135ab393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce7aefd-6f94-41d1-bd1d-d4087ef8fb8a",
        "cursor": {
          "ref": "3ccd850e-fd64-4033-870c-4e86bd6bd3ca",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "29f3b66a-c008-435b-9c0d-842dc8b7e368"
        },
        "item": {
          "id": "bce7aefd-6f94-41d1-bd1d-d4087ef8fb8a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "74d9d4be-5ef8-4438-b836-488b58729df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b292f41-4f46-4205-8f32-14e222153ef6",
        "cursor": {
          "ref": "f3a2be0a-8c4b-4770-b685-5eed4383b7b6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6a677836-9bee-43c4-8ff9-e9ec506086b5"
        },
        "item": {
          "id": "0b292f41-4f46-4205-8f32-14e222153ef6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9b44171a-7318-4d8f-b7f1-252915cb9856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f1aa0d-7db6-4d65-af32-ba05f56fb5bc",
        "cursor": {
          "ref": "a2b20e87-3b75-4027-a4d6-3e8fb6effc5b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "432acff4-fd67-46ea-ac96-5c1d9aba0856"
        },
        "item": {
          "id": "01f1aa0d-7db6-4d65-af32-ba05f56fb5bc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e691777d-415f-44a1-8274-19c9f63c32a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e76dc73-4fa1-43c3-bb52-ff895bcebdfb",
        "cursor": {
          "ref": "e7e6effe-dab1-4b86-a4ec-035c18a3a836",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2ce6d8a0-7ef3-4582-8618-a8895ba7e581"
        },
        "item": {
          "id": "4e76dc73-4fa1-43c3-bb52-ff895bcebdfb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2be07c24-b217-4ab8-9f06-2530bb6eebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d1c024-e780-4dee-b2c7-275bfb36d2c5",
        "cursor": {
          "ref": "b2fc2ff1-1128-494c-a1ff-9c180baaac37",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "482d53c4-7ebd-45e0-b7d1-92b08c579853"
        },
        "item": {
          "id": "59d1c024-e780-4dee-b2c7-275bfb36d2c5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a096ea01-31d2-4b71-9d0a-6a59f70a1339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f854d6-0eb2-49dd-9a90-c2e0c771dc18",
        "cursor": {
          "ref": "f370e167-b0a6-4899-8665-d19eae3f5b8a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b325365b-43ed-4226-8cc1-59f161224f6e"
        },
        "item": {
          "id": "89f854d6-0eb2-49dd-9a90-c2e0c771dc18",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e988f30-eaaf-48d7-baa9-9a986ee5fe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fd7b27-5f02-4bd3-87af-e83804b3dd9a",
        "cursor": {
          "ref": "b5d67efe-6f4c-4073-a763-f221b7078bb6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be44f009-fac4-49d0-82e1-4b67d628f370"
        },
        "item": {
          "id": "05fd7b27-5f02-4bd3-87af-e83804b3dd9a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2100453f-59c0-458d-9f4f-f5deeb00fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3795e6-834d-4833-b8ab-1fc7305933fc",
        "cursor": {
          "ref": "16db1d86-6069-454d-87d2-71af671a994e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "671b081f-0903-4ffb-8047-ef7deaedcb0c"
        },
        "item": {
          "id": "6a3795e6-834d-4833-b8ab-1fc7305933fc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4fa7a9ca-1321-438b-979a-e8294457389a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb8515-c4a9-4174-83cf-2d8793fe2130",
        "cursor": {
          "ref": "84305000-a73f-4808-8c7d-bd6aa48c3ffb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1f1b41ad-881a-4181-bf6e-5d87ea0d7403"
        },
        "item": {
          "id": "dfdb8515-c4a9-4174-83cf-2d8793fe2130",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c15ffea3-7a7b-4120-a5f5-e905176d612a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7563d6-e642-4848-8fcc-e6437480f582",
        "cursor": {
          "ref": "8052fd0f-078a-4137-bc10-a86a647c00aa",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e4f7d3fa-9817-4db9-8293-f1e0f4b72bc2"
        },
        "item": {
          "id": "9b7563d6-e642-4848-8fcc-e6437480f582",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7ea9236-58b6-44fa-a318-0183c76a14ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f0734-0aaa-416d-8306-aa4ed59021eb",
        "cursor": {
          "ref": "ee2842c2-f57b-4fc9-b557-c08a2ade14e8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "241c8021-8c96-4f10-a756-0f6de2c7fe9f"
        },
        "item": {
          "id": "f58f0734-0aaa-416d-8306-aa4ed59021eb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "739b852c-4549-4b7b-9307-3b8f9066157e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aedb59f-c092-432a-9db8-eb20ed8eab2e",
        "cursor": {
          "ref": "11d8a7da-812c-4c81-8115-f1a9c8421e25",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "38d2d707-255d-4f44-95d7-40c87576ec1a"
        },
        "item": {
          "id": "4aedb59f-c092-432a-9db8-eb20ed8eab2e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8475c676-c019-46e2-a127-94a1c8881b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25d726c-3ca6-4a0e-95b6-c96adb4de32b",
        "cursor": {
          "ref": "63aa97a1-ffe2-4fb0-835d-2846058deda6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f69c9736-b180-4e4b-bcb0-19c445ae540c"
        },
        "item": {
          "id": "a25d726c-3ca6-4a0e-95b6-c96adb4de32b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c5313a4b-4770-43bc-b9f5-96d3e8cb0ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74299f32-cbfc-401e-b0a8-44abefa9567b",
        "cursor": {
          "ref": "7108b1ee-aef0-4ed4-8427-b63f8f5c596e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c6a3eb50-2cab-49f5-9e2c-435ea755289b"
        },
        "item": {
          "id": "74299f32-cbfc-401e-b0a8-44abefa9567b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6a402976-76bf-4908-b3fb-0c47dca8f5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79045ce8-d72b-439a-82f8-b7dba4852725",
        "cursor": {
          "ref": "8ef7b317-35b2-44bb-98cc-6e727c0e0fbb",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d2d4b8d7-9431-4a8d-9fd1-53439ff7e34b"
        },
        "item": {
          "id": "79045ce8-d72b-439a-82f8-b7dba4852725",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "322e7d32-d0f2-4637-b2d2-b7b7f5549bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ac2de0-deaa-4ad3-899c-56fb8783a3c0",
        "cursor": {
          "ref": "36f447ba-bef7-452f-a554-cf5b266e4cd5",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75b75eb4-a50d-4515-b1b7-1d2d6351e05e"
        },
        "item": {
          "id": "92ac2de0-deaa-4ad3-899c-56fb8783a3c0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "03023b98-1c98-4d62-ab4c-c564b6c8d6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4581a8a-d1f7-4582-8824-d08f462f1e16",
        "cursor": {
          "ref": "fadac108-dcba-4ce0-b767-47694cd6b61e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "37afaa83-2216-46c3-b6b1-5c654577a90b"
        },
        "item": {
          "id": "a4581a8a-d1f7-4582-8824-d08f462f1e16",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3be00806-3e32-4d68-b7ed-d5a1e448d37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d328b2a4-aa52-4b7e-a43c-a4e8ad3ae329",
        "cursor": {
          "ref": "25338a90-b054-4b66-97f8-4ddf425f974c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b16afc28-bd83-4247-9703-6b58c0654261"
        },
        "item": {
          "id": "d328b2a4-aa52-4b7e-a43c-a4e8ad3ae329",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d53923bd-9b30-4ba3-bab9-b9edd7ba3dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fdad0b-d532-472f-87b0-156d60f32cb3",
        "cursor": {
          "ref": "ad073236-de7d-4c73-847e-df3838223f92",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "214e6776-2edc-4483-bc96-913e7d5cb515"
        },
        "item": {
          "id": "a3fdad0b-d532-472f-87b0-156d60f32cb3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "657448ba-b5d6-434a-b6d2-cde4ce5a6683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ccde29-11ef-46f1-be88-b442fdfa0d03",
        "cursor": {
          "ref": "9e36a9e2-7ea5-456e-9739-01eead928360",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2e2844d3-6718-4dcc-ae0c-bb390bbec86d"
        },
        "item": {
          "id": "55ccde29-11ef-46f1-be88-b442fdfa0d03",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "43200130-3058-4a38-a3e5-9a85cd05f3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ad3c81-1e15-4846-826a-0577f96f69df",
        "cursor": {
          "ref": "6c84e3a1-c62f-4db5-897a-0cfdcc7f1767",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f6eb457b-a3fa-42c1-94c8-6c0388b71070"
        },
        "item": {
          "id": "c0ad3c81-1e15-4846-826a-0577f96f69df",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99717983-70cf-4bf5-a8cd-5145411ff64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b297194c-1094-41fb-bdf5-060d3c42a4d9",
        "cursor": {
          "ref": "2ac4eb33-0381-4e98-82cd-a40f0d72f608",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2e7b36ae-0788-4a39-b98c-7c83b6722973"
        },
        "item": {
          "id": "b297194c-1094-41fb-bdf5-060d3c42a4d9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bb01037a-7aac-41aa-8080-e9422c45fa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577497e2-37ac-4fc3-b0b9-954d315c335c",
        "cursor": {
          "ref": "0f0258bb-fe04-4f8a-86f5-8826fa07b43d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7da79405-8ddc-4761-8b17-bf708e3f61fd"
        },
        "item": {
          "id": "577497e2-37ac-4fc3-b0b9-954d315c335c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b4a3fc96-ae74-4708-9bca-817d77f959b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafa40ab-d4e5-4b52-b0cc-bf880525d78b",
        "cursor": {
          "ref": "d6b16163-a35f-46b4-9e19-00056d0e2a75",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3baf859e-d8be-4857-8a99-5bacef4570f3"
        },
        "item": {
          "id": "cafa40ab-d4e5-4b52-b0cc-bf880525d78b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "88f51ccf-0af7-46c5-a660-e35440aecb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ea6f43-b096-4f9f-a3d9-2def9d46c59b",
        "cursor": {
          "ref": "927d08b7-3081-4113-bdd4-98112f627ea1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b61777cf-ea28-40cb-8bbb-b136a16039cc"
        },
        "item": {
          "id": "09ea6f43-b096-4f9f-a3d9-2def9d46c59b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a52938e1-606b-4541-a5ce-8a3bf2c2e40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3632f815-1234-43e6-a5a4-ff00f9870241",
        "cursor": {
          "ref": "116d2417-f2c2-4676-aa7a-18f33d005f29",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1ba899df-9f80-43c2-9460-33a104f63eef"
        },
        "item": {
          "id": "3632f815-1234-43e6-a5a4-ff00f9870241",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a188c4dd-115e-4c6d-8514-135191e98c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98ca9ff-a54e-4b54-9c9d-aeb2a99e8370",
        "cursor": {
          "ref": "d550a867-3207-4d47-9a9f-bd7f54fcddc3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e041e0b5-4034-4c89-a889-e98ad3c12775"
        },
        "item": {
          "id": "d98ca9ff-a54e-4b54-9c9d-aeb2a99e8370",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0e37b2f6-7f08-4979-80cd-6ad56b09d7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e2babc-3809-427c-8d3f-f6494b0ce2c8",
        "cursor": {
          "ref": "0c2fd1fe-6cf7-405b-b5b3-ae6b56a6555c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "87792dcb-9766-4e6f-987b-7147ba085b65"
        },
        "item": {
          "id": "e9e2babc-3809-427c-8d3f-f6494b0ce2c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d77be061-3169-4ef4-8524-cdce992a7f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5732b0-a05a-4d95-a524-aec22feb5c92",
        "cursor": {
          "ref": "99133088-5a74-4465-8877-dd55eb62f72a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6f3a2c2b-abea-4735-8f42-c4f557c1fdf4"
        },
        "item": {
          "id": "ef5732b0-a05a-4d95-a524-aec22feb5c92",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d8f7f9a4-3504-48e6-90a5-5f42f75a71d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa854f7-2ea4-4735-b1c6-fe47dadf8638",
        "cursor": {
          "ref": "14ce01af-50c8-43c7-a939-f95196ab43f8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e0bc09d9-8de6-4e64-a9a4-2ae6f960599a"
        },
        "item": {
          "id": "faa854f7-2ea4-4735-b1c6-fe47dadf8638",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "084bb2fc-bdb9-468e-a80d-1d16ba104cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50563509-afaf-4e77-a1f0-4d80bafb7378",
        "cursor": {
          "ref": "1b3fb680-4cec-41c2-933f-e658aa3ca075",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1174f545-66be-4f84-8aea-1392cca2f41c"
        },
        "item": {
          "id": "50563509-afaf-4e77-a1f0-4d80bafb7378",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5bd18f86-221b-4f9b-abb5-e8c6650c0ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a846d0-b610-488d-80b0-45f3cbac04ab",
        "cursor": {
          "ref": "96ac1b6f-35f2-4c6f-a13e-af5145e37ff0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d557835e-b9b3-440a-9ce6-a3a955da1bef"
        },
        "item": {
          "id": "97a846d0-b610-488d-80b0-45f3cbac04ab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8f348d4a-8f32-497d-a45b-15e8bb6b9796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3ac751-89a5-4ebe-9ad5-85c8df632629",
        "cursor": {
          "ref": "033f8838-5a82-419a-aab3-1bc95189e336",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "09d5f8e4-a46a-4284-b62b-1441f2416659"
        },
        "item": {
          "id": "dd3ac751-89a5-4ebe-9ad5-85c8df632629",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e2ecafe9-bc90-4118-8170-152aeff149f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7c3cee-b5f5-40a6-bfa4-aac675798de2",
        "cursor": {
          "ref": "133d63e0-fdfa-4b0d-ad0c-6b3440aef832",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f2797528-cc7a-4c17-8fc3-c6fde69ea754"
        },
        "item": {
          "id": "0a7c3cee-b5f5-40a6-bfa4-aac675798de2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6614981c-cbb9-45be-9339-92a1fdf65e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e33b412-b7dd-45b3-872f-671f076589ce",
        "cursor": {
          "ref": "daaf2efc-9b4a-46e6-810b-65cbfd0c6129",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "db3d9848-5e0d-476e-84b2-d4e0de1fc63f"
        },
        "item": {
          "id": "5e33b412-b7dd-45b3-872f-671f076589ce",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c7e4b4ff-4433-4ff2-a754-0b6237b0e8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da99f71f-abb6-4c90-9aa9-aef65fffb833",
        "cursor": {
          "ref": "68c8c6ac-9522-4dbd-bfad-25c243f7469c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f65b5202-fecd-4909-a7e7-ecf326b7c4a2"
        },
        "item": {
          "id": "da99f71f-abb6-4c90-9aa9-aef65fffb833",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f9085a3c-6fc5-4dd3-bf20-8721b4477fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d599cf7-417a-49d6-aaa2-64e3c12c418c",
        "cursor": {
          "ref": "956ba015-20af-4935-9251-43f812bbcaba",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b1b48dde-938e-44eb-893c-e25b931dc7ca"
        },
        "item": {
          "id": "2d599cf7-417a-49d6-aaa2-64e3c12c418c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4a2ae81d-e0c2-427c-a63b-b494b1e87ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cdd967-e63d-468d-b62e-0c55d3643582",
        "cursor": {
          "ref": "f57ceaa8-ade5-48eb-a3b8-98af3d9998a0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8a2db683-b33e-479d-8f32-c725f36eb2dc"
        },
        "item": {
          "id": "72cdd967-e63d-468d-b62e-0c55d3643582",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "21c1f050-9caa-494a-b807-8da39f5683c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb6e97a-816e-4854-b01f-69bb32d7bbf0",
        "cursor": {
          "ref": "d1d75a2b-0167-421f-a267-979e9705eb0c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cc88a98c-ed96-4aba-8e76-2af1e4dae53d"
        },
        "item": {
          "id": "bbb6e97a-816e-4854-b01f-69bb32d7bbf0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8ce9249e-4ab9-4ddf-88ea-0f9e0895bc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bd7f23-3058-45c7-a419-ab71208964f3",
        "cursor": {
          "ref": "6a0e67ac-02f2-4abb-89b2-81b6a66460e7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "91b4b230-ec0b-4793-ac81-8afd443b255c"
        },
        "item": {
          "id": "36bd7f23-3058-45c7-a419-ab71208964f3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6d58574f-a869-4079-b64d-dff0edad9a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3de1d9c-d460-4574-83c1-2c61697756e3",
        "cursor": {
          "ref": "539fbeda-9f49-4206-9b26-ac111fa7caa3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8192a9c8-2f0e-4ec6-bd9d-840b975772bd"
        },
        "item": {
          "id": "a3de1d9c-d460-4574-83c1-2c61697756e3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2d2cc163-9d2a-4ece-8113-8983ab4b8d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dc8d17-923f-4b65-ae6b-4f23cfec6f4c",
        "cursor": {
          "ref": "624dcb42-5042-46a9-b7da-45560e574982",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4e74dede-1c50-4781-b202-f6559688f2ee"
        },
        "item": {
          "id": "21dc8d17-923f-4b65-ae6b-4f23cfec6f4c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "575cbc7b-0932-459c-a596-fda8364dd23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a063290e-5ff7-497f-bd46-3e4b12509f58",
        "cursor": {
          "ref": "80515318-5e8d-4a56-8dfa-96c1bd0ac2c2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "808532a9-3bbd-4c47-8f22-732442a78d25"
        },
        "item": {
          "id": "a063290e-5ff7-497f-bd46-3e4b12509f58",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0cbc0b0d-13f9-4f88-a982-5be0426a94c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db8226-0644-4660-878e-d9111c21a72e",
        "cursor": {
          "ref": "a3adde2f-d547-410d-8a3b-c268ba485a9f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7cd3b4de-f1f2-48e0-924c-5d732979ee4f"
        },
        "item": {
          "id": "03db8226-0644-4660-878e-d9111c21a72e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b09f784b-fdf1-4f5e-bfae-38e58d7ac196",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e708d7-86d9-44e6-88e9-4a06cacc85b8",
        "cursor": {
          "ref": "d2ae297f-4679-4ac4-8d94-d0bd366b9aaf",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2361f6a5-0286-40d2-bf77-3dd3dbe98dc9"
        },
        "item": {
          "id": "41e708d7-86d9-44e6-88e9-4a06cacc85b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4ef56a80-8e1a-49e0-bd09-320d58a6ece0",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6989bae-d75d-49e2-86e4-68adede6c54e",
        "cursor": {
          "ref": "ea8b2dac-b8f4-4d2f-9feb-d61f3acd688c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "63d7bdcb-16b7-48b3-bde4-41120e881443"
        },
        "item": {
          "id": "a6989bae-d75d-49e2-86e4-68adede6c54e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ea4827f9-005c-4ffe-a1a2-477adac4a192",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3f5a62-3311-465b-bd1d-25c5e6ecd4c1",
        "cursor": {
          "ref": "a7da59a3-0ff9-4626-8670-b2152e8fc4e8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3e0d9ed6-fe91-4671-b8c4-b9e0fac3771f"
        },
        "item": {
          "id": "fb3f5a62-3311-465b-bd1d-25c5e6ecd4c1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cc3296ef-f549-45bc-a4ae-fa3a22d93756",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c961b67b-a95a-4d41-8d2e-e45677be7363",
        "cursor": {
          "ref": "88773904-8755-43f9-bd09-127cbd3e85ab",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2348d599-8cc1-4d2f-89ec-06951e4d1a0a"
        },
        "item": {
          "id": "c961b67b-a95a-4d41-8d2e-e45677be7363",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e5c806c-46df-4b69-a1bc-50af076c6005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c961b67b-a95a-4d41-8d2e-e45677be7363",
        "cursor": {
          "ref": "88773904-8755-43f9-bd09-127cbd3e85ab",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2348d599-8cc1-4d2f-89ec-06951e4d1a0a"
        },
        "item": {
          "id": "c961b67b-a95a-4d41-8d2e-e45677be7363",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e5c806c-46df-4b69-a1bc-50af076c6005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5601820f-08bd-4b6a-bf2c-c2977dd20dc4",
        "cursor": {
          "ref": "ed3e66ab-2c04-4dea-b0d0-bc922042805f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e014d6b9-7a04-4538-a78b-2034fac3327a"
        },
        "item": {
          "id": "5601820f-08bd-4b6a-bf2c-c2977dd20dc4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "761d84ed-2f71-4053-acfb-2fc9644c22f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee83123-ab9c-4c4d-a028-08b62fadc615",
        "cursor": {
          "ref": "7ec42c7f-12bd-4c58-a251-fe1474783775",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "23013f39-8a36-4b72-bc22-8bc53fef1f28"
        },
        "item": {
          "id": "3ee83123-ab9c-4c4d-a028-08b62fadc615",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dba743d7-7efd-49f2-b2aa-01f30a0971e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}