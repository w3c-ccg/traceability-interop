{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d022419c-cf16-448a-a081-51ab3ea0d60e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "415b1474-5a54-427a-a034-85a0dc2e41f8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c123857f-225f-4747-868c-5c471d314250",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a42e479-4a5d-4854-a4a9-a2b1ec7c9031"
                }
              }
            ]
          },
          {
            "id": "a1d0fdae-33a9-43d4-b881-028a13dbcfb0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00ca74ca-87cc-4764-8500-914c395edc8a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0dd78f9-37a4-4890-a79d-7dda29038422"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e9090e86-9328-4557-b9e5-2bf0bf295c9b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77ddb44c-9a25-4e71-8cc6-3d4ba673cb41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f780807-e87e-4d44-aa6d-10f64940fcac",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f4557b-deef-43cc-ba86-d76bb4affac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31f639cf-70c0-453e-bea8-e32758f1b5ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5547766f-8fd8-4fcd-b3f6-cf939fa031e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fd4ee99-410b-4bb7-a240-0d2bd1d4d46c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d5edcb5-bf70-456f-95c6-194d31561ef0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d29d6e20-c3b1-493d-9b50-dc0a52f00b0d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "833ca0d8-4132-44c3-94ac-bc0231b7cef9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fbe591c1-4432-4103-83e2-27700a12a66a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e96687-6832-47c7-aac6-0b61b2247161",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc08e76f-cb18-452b-9d26-9d29ece83753"
            }
          }
        ]
      },
      {
        "id": "2b9225e2-afe6-49ba-9681-f0c020612e5c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "64836d59-a41b-4288-8f11-de56c04c3368",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89c82194-f3a5-45e3-b0f2-8a8257ba4c48",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd60d07a-9093-4990-94c6-9ebe273f7a48",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29ca534-75c1-41e8-bbab-e4129dc58fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f3b7549-25ab-4c4d-bd81-569d20fa114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59dcf9f-d82d-4618-ace0-2132520f1d03",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff58a095-227d-4fa7-8e7f-51939997a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb430297-a84d-4ff3-b38c-7b87c506b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9114851-a428-4b65-8655-1278711be9e2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9aadea-acf2-4718-b9fb-293a7e97cba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebc5959d-f7ff-4848-8e35-b5abeb7d8afa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d749eebd-92a8-43b0-ac64-ab3697cf289f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a21e1e7-ffc4-4867-aa2f-b3ca857cc297",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5339b8-ee3a-4fbf-b5d4-d3d8d1fe38f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f38776f3-1e9d-423c-b790-8330dc2cc3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7badd4-ddf8-4152-b478-61a5640b4341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7082fd92-ad72-436a-b0ba-83108c97eb8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7254c4a6-ed60-4636-b406-6aad72f478d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed5b6785-4cd5-493e-a113-6780f49cac36",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac6a8fe-551e-45e4-9af9-05f8364f78ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ffaf7ded-0185-4cc1-9b47-a728096b63a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb9098de-fc3c-44c6-afa3-94ede2315925",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7f324fef-5ee8-4992-8f06-871683dc486d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b387528e-88e4-490e-a9a6-52469759bbd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9e58e7e-25d1-422e-b018-3732503cb73f"
            }
          }
        ]
      },
      {
        "id": "82723ebd-20e9-4538-b63f-701d5c35ef9c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3972e4fe-1851-4c64-b8ff-49d3e02718f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b8c4410-bf6e-48a6-a620-8d8099339155",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c156761f-f587-46fe-8c38-8e41370e1417",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5afec22-ad1a-4cda-997d-fbab93252ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f7b3a5-b656-4d5c-a5e6-99800572798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a87da0-0607-43b7-a447-85051dfe36bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3e1d1a4-df4a-4278-9940-a3724c99b035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af92c9f7-3562-431c-84e8-a46805c1b969",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eae3a31-e29f-4985-b69b-b6e3d37c259f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ee699a-da2f-4b74-b09d-081c093c0bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b2ec85-89f8-4c16-beab-7167dfa3e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c7fc7bc-0a45-49ad-b4e6-184591b60c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7597d9d7-75f8-4efb-acfc-1e82e5412d77",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053c6872-6577-40e9-ac3c-7575f1159a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b46ade-0bc2-4ba9-875b-00295b46fb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70f0a38-69d3-4bee-9e6d-60354064763b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2f530a7-9d7d-4c97-85dd-efab5a0fec91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140f0979-cbf2-4db8-bd70-d856d98e793d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4144efce-6003-4c97-9a57-6a62f9285921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d28349e-c374-4aa9-8405-0fbc687db8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcc1697-7aa5-43e7-a66d-f4d7e931d195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48150a4-8e5e-4144-bba9-92a0dd47116b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63469b8a-1137-4086-8aa5-8f108b0a7dcb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c164d470-c908-4ee7-a7ab-94693c7bd91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a595262f-4a23-4305-991d-8228853a6ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8498e2fe-3c4f-4ac0-ab63-886f899a4a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ca3791a-dc9e-470e-bf1b-87a40b9c05fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf45ba9-2051-44e3-a843-0f8c6f4c66b8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61b5fd9-168c-4050-9ecf-b22313aa251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28b946e-c56c-41f5-8fcb-cb805369f366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8e6c28-9400-4d0f-850c-65fabb8f2b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a291ffba-0661-452c-b8bc-677074a6e3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ac6818-4112-4ee7-9a35-fd745c7e67b5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7165f2c5-d5e9-45cc-8ec6-99e9775c52dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85efb2cc-6b6f-4748-9a55-d22d1ae2550c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371c0045-feb9-465a-ac11-4b7e29443f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7877ea8-a06c-46bf-837c-d028f78b7afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11042f8a-ab36-4f4f-b1cd-76e8dac728e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2ae8b-670d-43df-a787-ecf53feefcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd49bf1-0fb4-41dd-a3e0-06aaa31d6114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d100d9e-fd16-49ea-ba23-6291149712fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818660ea-b9ff-495a-892b-4d4cf97ff826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d70d49b-913d-4539-9c3b-ae201b2d52ff",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505f28d3-e81a-4cc3-8813-61f39dfff547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af9ff70-5b75-4cc0-8813-8b019e551045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295dd89b-b2f1-450e-ae05-dc5b4054a567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c8d5b6e-26be-484a-82c4-9c3f30defe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf802b1-4eec-493e-b9fd-699c8f283102",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdc1378-3b4d-4655-a6c3-e3bbd4077951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc23ce-08e8-463d-9df8-e6dfb715e12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6868ce0-3d15-413f-b68b-1cbd9273da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b916719b-589e-4eca-9cb4-843602c5325e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f362c74-2be2-4030-9460-b9355b8ce390",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa46859-060b-492b-9a56-b11fcaa6dbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ccf5f4-d9d4-44fd-8844-c0481a814cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a50b36-0e13-4c66-a614-4beaf977d97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a00a317e-7e33-4c4a-9fd7-fdc1d2f602f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b675fc-5e06-4f0d-bd5b-c7f6c421c386",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0173fdf1-310b-4f99-88c8-467fa0dbf65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7206ec-e40c-4d89-bc44-14af52c9dd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae89103-e7d3-4ae3-9c1a-c0ffd1baab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e906757-3b88-49e8-8dd5-72c2430f637d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c07871e-9684-4c33-875e-0fda8af1373e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6200a8-014a-40af-a3fb-52bdd4ff1054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4047256-bb87-4937-a2d6-28104d8081cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767d6618-7ae7-46f0-8d22-cb4c8dffd00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff84817c-5a73-430d-ae28-d88d2c09f977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4a4ed-1d8c-4c3c-8543-9ce749c6974d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4b6610-da7e-4a9a-8e72-af5b5daf5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4913df37-0c57-409c-b886-6295782ba8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac86baf-8a97-402f-93fa-38550114b95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b33e85de-7b15-40fa-a054-da1aa5a2a4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbded41-9df6-495e-abcb-37ce3e627847",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b800c43-789d-47c6-a733-253f42473655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9736515-a0ee-4e14-a789-e6e118af9103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59332b1-3e4a-4039-85bb-804be6ae9dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83a1c04d-5b1f-43c6-8a35-a0cb22aa6d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd1ce33-16fb-4caa-a1d5-70bf469bf397",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08a0157-5d72-4123-9925-7e48794727ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a275d0-53a3-414e-b877-03785b259df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa558087-0c4f-43a2-8805-e6719664cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50f1e445-aa06-40f5-b24d-6d9833dc9bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1ac017-25d8-4801-a9bc-0598386b5f4b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6472cfc-a7d9-47a8-afa9-4ac0d26f0865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78152a1c-f0ba-4ed0-9147-2150fb878e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5263ab03-be68-4735-93e0-0a3ec3fff133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8a4120-d49d-42db-afa0-68a3d3c78e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589ec62a-cf36-4c10-9ac2-c26d185daa97",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4364bb42-ae5b-4ffd-b04c-6f3c133d58be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c145158d-a283-40f6-9cad-33afbc989a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532783a2-9ef0-482f-9cbf-4fd71fc6b9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1258ef7a-11e1-4113-8a1e-405b9b9e7494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba20ccd-396c-4068-b4d8-b54e3f0eae45",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6c7329-664a-4276-b213-aecd878b4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22957d30-4c59-4697-9e1c-5e12d52c4d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e0e35d-98cc-4a9a-8df5-d18e97363e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b047fc-14a0-417a-8853-72587fd31bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc5bd12-f8bf-4347-82e9-eef582902d4a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ad8bcb-c3fd-4c12-9ccd-f84fd7b4af6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4019d1c-59d4-43d5-ba7c-b17f12389a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b2fd5c-698c-4d14-8258-c2826cccafab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ebfa38-b06c-4e44-99cb-991d932d96aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbdb47f-02cb-4f22-aa44-7fa19471c192",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd2439-6294-42ab-a556-6521d962d477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28342bd-39ff-4dcc-b66a-927cd8d8d370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e66e9d-2444-4f05-9934-c23101e24fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cabc292-98dc-4438-8c03-a7ddcb1f0590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8336491e-74bf-4b3d-a6b7-5542fa5bd514",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d92b04-f6ee-4a7c-8b5f-e0aa2f0cb1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d280e71a-2bb8-4499-9ea5-77774a2444b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4e49a4-2426-44a4-a9bb-6984e45f2b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "431c7da5-8cb6-458e-9436-7518f3ca361e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f28b0d-b84a-452e-b95e-04fe22649df9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ea571e-b57f-4f83-bc1d-44ea1b873d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0723dc-f56a-4835-b676-8a00b5d48902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df22e88e-7e15-4501-9d1a-16de8c735da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45396a65-1e66-44e8-a2ea-2a385287ca73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebac2b2c-1bf1-4a06-96fe-9ca3070aa501",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80d71d3-8607-48dd-9344-0b0a459f2af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9cf5f3-7f6c-4bb2-bbed-2e7441058302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c494706-561f-4e28-b044-35a91a0821a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebffa554-fd60-4f69-ad6c-7b4136c470ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c351bcd-08e3-4e9b-a6d1-41815f4514f4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb65afe-b62a-42c7-ad02-8533e66b876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89934bc3-6dc7-44eb-92a1-5decfef83006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd18d9a-5e67-4ca9-991c-2deaeb85055a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72cd33b-18ea-4f14-9c2a-242ab0d40efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4d3ec2-58c1-42d1-a563-3292eeff3a98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe44e59-2e9d-48bf-8579-bf08668f2519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf13cad-a6b5-4d72-ba24-5cf931895e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb9f4f-575b-4cec-b750-8d3a6d73afe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "083be93c-36f2-412f-a5ba-d5974400b34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9dd0e5-d111-43eb-a85a-639f9ccd7961",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80be642-ec91-4a1e-927f-c0f4293f30b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94916ec4-c149-4861-9d4f-cc6ea7553d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2645384-e695-4a99-a2e3-3f2b7e312359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "798bcd56-a658-460b-a8d6-5177517ec170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a795298-c99f-4b01-abfd-37cfc22c9b2b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78a8557-67b7-48af-813f-4af5a649bc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ddc068-2f53-4184-83f8-20011fcd44ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15c8bb2-e7bf-483e-9b7d-75a825cd033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9846aff0-3900-4836-be2e-3e4172422a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a1d9d-268c-40c6-b62b-8feab7c03fa8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaa19af-544f-453b-8d33-493a955de1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7703c119-f153-474f-b222-ff9b7716d4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda79e6c-dfb4-4ca8-bd71-d0af2969f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2507bb89-da29-4d2b-8f6d-0988deacc466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f1099-6baf-4c77-9bfc-e89a544866f2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f2fb7-cdd0-44bf-9722-b30046b99e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f80782-d897-49a6-a8ef-500969646d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbb36f7-f207-4cc7-9bf8-827117558487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ae8acc-2b52-4880-9fde-021a3aa88cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aeabbf-795b-428f-b70e-2710a83ab171",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79169b8-eb36-499d-99dd-3d9f5de5e670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9564f6dc-e964-41ea-8db5-57da0a4fcc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf484f4-bf3d-43ce-bea3-bcd787ae6abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d8abf2-3fd8-4ff8-9e32-e3b2ffed36d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3490f6b-4cd0-4956-8400-c3303b40f162",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f575294-c303-4b53-9b37-0839c485a021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da65563a-646e-43c5-9642-f7bcbe5cb362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd6683f-1edd-4d3c-a992-32d65b6a43ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcd509c-01ac-4146-bf88-8ff6a9941bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f71211f-795f-486f-96df-db5e8c4dc454",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c85ce6c-9345-467f-ab5c-1cf8147b338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411fea3b-7fe9-4833-ae43-3579651969b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126123af-6c06-46e0-b3be-7985cc5b7202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8ca77d-dcbe-4590-8db4-e7f76c3192cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcae09a8-952b-4171-bf8f-54aa3d5a6ab0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7480a9c-e5ca-4d5b-b96e-2798024fa91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06d364b-c280-42a8-bb9b-cec31aefcd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56530142-6157-4246-999a-1066fccdc5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f706f0-f946-453f-97cc-e751e286a407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f66fa1-2ca5-4794-a83c-8cb1c045997d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76ae925-fa03-4648-9f44-cd1182302e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc440b7-2347-4bc2-81e0-067a25e647fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faf98b8-c321-44dd-abfc-d0c94df93101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "99213038-4355-48db-b73c-51f30d567a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daa8047-c200-4b70-86f5-52c184c6adc2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f19359-4c8e-476e-8968-ae3738e2442a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2232926-b2c4-4b82-84ae-b7f31d4ef7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2ec883-2b26-41f3-93e9-5e9d04844750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05854fcb-daf9-4019-9ee0-27ea81ad16c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916fb526-f1ff-4c50-830d-372c9d907f08",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01904e56-1cc9-4b06-b1da-ea5eda190050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a8bc75-a0ae-4fce-b3da-f530df3c5dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37bf992-e3f2-4670-9b96-da9d46845876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cedaa0ce-c5d8-4a85-a967-67ab98163cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cda4bcc-101f-4bab-ba48-47ba2d44a57b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7252164-8d93-4447-b6f8-c6c694d57882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c6ca08-8031-4c77-b7b6-039ba3409815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a2a517-116b-46d8-a630-b3b4d6e67308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "306d6dee-0fd3-44c6-92ed-b30a7c853aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd48e98-4ee6-4bdb-b419-c1307055f36f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea6f10a-c7d8-4346-b721-10cc3791aabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4109fc6-35b0-4c7d-ae6a-19d91cd14263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129dec61-713f-489e-9974-4742c1e3e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1c7129-df24-4b0b-be00-27e8fadfe972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc1b80-2ca6-41bf-9828-bab538ef02bd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7a5486-bc51-4a1c-8b81-02fedad7f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f96af4-4df7-4bd5-a01b-7b4f4e0ddc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483abcfb-bd8b-444d-ac96-02b4a32c93ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a82916-2bcf-43b8-a81b-c069c313d5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14fe561-4b5b-41a4-8ecc-97656f65ba1f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cb8cef-d838-4469-84fc-2be8f0b39ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346b4412-7085-41d4-a9a5-8d2e904ebd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4ac368-cb66-4d50-a1a9-c6d8b47392c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0067e0-4518-4bcf-aeca-c0e70589a982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a856bc97-3a6b-413d-b8f5-652a0f7472b0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b4faf-298b-4591-a5bc-2573511f9aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bb4f88-3a09-4ac0-afc5-2adce25b3555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18988ac3-e4da-447e-91cb-145b4495aae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c889f17a-fbd4-4229-bef9-e0e9a356f945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8af454-333f-4a8d-bb71-3173d336a09e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb13861-301b-4b44-80fe-41259c720659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90cdfed-9eb5-4a87-8ada-980710072656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da962713-fa18-4f14-aa91-7909040f958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb525a75-2fc2-40c1-8b94-488fba7a6768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c34045-0ae7-48b5-a48a-1d9def081d46",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f922de-25c1-4ce6-8efc-4818c1d29739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbd3047-145c-4429-9a89-71915f3b8d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274eaf58-2ec4-4b0b-bec0-6de11a4a5797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0ff695-8aa8-417f-bfdb-788d1da22d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15116e48-d0ea-42ff-a2fe-2a16d63d7b66",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade04caa-a2db-4ec9-a22c-0cd0f81fde9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949c8ceb-83d4-4eab-9bc3-5f446b701088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b2560a-d315-49e7-a42c-fbc946bac9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de98e95-9c23-454a-bb2e-71d533b68bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c7707e-cf45-4492-939c-56bdee07f362",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f99912-d74e-456e-9558-49fb9df76c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a401bbb4-ee85-4ed1-8c43-d4c3c7aa8dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae7bef2-c539-40d7-bdae-381510f15364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34631a9b-d859-4f3b-bfaf-130567211b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9b3f0f-2d71-483e-8aa9-7c45722322af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f43157-f728-4af9-8e77-bbda96f5cc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ede3c27-fc00-40b1-9c58-8a2069af4c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a6fc7d-ac87-4808-a046-5297f1a7e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a48f3f5-678b-4d1e-80f4-241aa2008fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6569c7b-9be4-4e52-8502-6783ba878a56",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd50104-ea96-45a4-ae40-46d73759d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c5bf60-9dfd-4f78-954a-e2caf3260ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dc247c-2dc0-4df2-94f4-0c3885973687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0ec411-cb36-4b4a-b7d9-c19fb14a16be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aa8211-884a-495e-9fdc-b9b1b82355ef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd00f9c-5207-4624-8464-38e6be442cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bf41ea-6a30-49d2-bc15-7f689c9078b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f028937e-51ee-470e-93d8-3d7bd7442e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "527d45ef-85cc-4efe-b16c-70f2b8d80916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc3246b-1895-4880-8a1a-5ae464533b04",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a4dd46-6099-4829-afc6-77b47fdc6861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b05775-d61f-43db-ad93-15806c969726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d2c73b-47e0-43fc-a235-38cf1ba170e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55913845-6382-485d-9483-2331e6736ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4108bf43-1114-4947-9745-499c782f792b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2aef87-a36a-4e9c-b202-15faabe9af56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0baea00-b0be-4df8-b3ab-036a175d5698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a945e4e-50b6-48da-aa6c-5bd7d0f96b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b56e6d-36cd-4165-a8d2-03a739d140c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed7f496-d46b-4731-9491-cba65afbc117",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb877c86-d7a4-4f67-b27b-45b7abccc595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf6bc28-fcd0-4439-a784-4a981c13064b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f763b71b-badc-40ba-9066-8fcae7bdca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfefb7d-37ea-40c9-b00a-8a60be933702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614599ef-1449-43fe-9c74-a4acb72495a0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd37eaf-04e5-42bd-abfb-3ad1fe0a2ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e82f10-16d2-4aef-a1ea-28cdf33f2bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b423a14e-4532-499f-b90f-7695d13f52ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19d6fe6-f049-43f4-aa0d-1d5ca9eaffda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13202ab-9464-4a27-89d0-65d0cb964aa6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce48e275-2dca-487f-b1ec-8c527b834d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d83bc6-acae-42fb-b350-055db077a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d35c07-1f79-460f-a461-c9297b16b37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74363b53-46ad-4e1b-adcf-a90212c7706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79908c8f-846d-479f-b0b9-30632cc2a9a1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be90cec0-8f6d-498b-ad0e-e37158d82c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a45560-d1c7-4ad8-afe2-7bcdf9845b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78f3964-ca20-4be8-98f6-0dcfe81ed027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b521ee1-5a00-4183-876d-24bbebe1f0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce2f3dc-32bb-4361-a9a4-084cd8347b24",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cd7b4c-5e75-45ae-bf8d-24439e9ea3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2b68ea-41ba-46ae-9c9f-59eda111cb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79c2bfd-4e00-41c0-aa51-2ea29a909576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "893dfca1-2b32-4d28-b07b-a136f5355fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93a2bd3-3d65-4b30-8ed1-0ff91f03fbfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf05681-fe35-4363-9afa-77dd9cb31d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95d152f-5fc3-4f75-8f5b-7aaed214453e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df202c0-6c6a-4600-a484-4e458be8b5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0431ddf5-8dc4-4790-a06e-71073629ad53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c85a62-0fb1-4191-b32c-03bc2bf591de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8fe651-adaf-4eb7-b604-1a67e381cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524b39e5-348c-4b43-9757-27bf620397c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105132e6-748b-4a56-a8f9-516b9dd810ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd82ba97-3ef8-49d8-97ea-1f2cf1060d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43917b9-6803-47cd-ba89-3ce186f1dee1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27597429-341b-431a-ae45-f67d0b78213c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89481d8-d76f-40dd-a419-badcff43f4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646dea9b-1b39-4aa0-9c3f-d19edf7e1fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7535bf6f-0053-43f4-a3bd-71e4dfa84323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806d0d8c-47b2-4219-b285-6bd1a8d23937",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f449dfb-9bf7-4745-a88b-cb8ac4913237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e1b837-f170-4616-92ea-5117d9760a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f73964-3313-4e6a-8343-249d67c21b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2845958-7d19-434d-aacb-f4264454c476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf6d33c-5f49-4b4a-b94c-fc611f04c8e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33294e7-617b-4f0a-955a-6ffd898594b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51e8095-8650-4c8f-95ce-f99f0cfc5877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0231d-a2ee-4b1d-b6be-da9cf3bb3779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2595ded4-01d8-4dd8-bfa2-87bb669e5519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529ae3d2-164c-41f2-892b-52a7257fefe3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e24f95-1a34-4e0b-a19a-81c86941f107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfef199d-b0bd-4a82-88f1-0fdce437069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad8bac8-7581-4b72-beed-9a2a159e4e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac32a230-8632-47f3-be75-6b8107736b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ccaa43-5b13-475b-a66f-0a0a4c4a714a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161216e3-55bc-47fd-9492-7cb495a106f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba17fe1-9a68-48e3-bfd9-6b33653d3b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19fef4c-74db-468a-9b3d-835c65676963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f34b3e1-1847-4929-a77d-4c6009174536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a855f-cb3b-4bef-b976-8429b602cd8b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1069786-f3e6-4b78-b565-934f64f1d3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9694e80-f890-4364-94fe-98b0181a20f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d5c88d-2686-4271-a287-18cfe4d811a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47754106-4815-4540-ac43-60ca3f3a4793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce4212f-f76d-4177-a87e-ca1397dbd5f0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e9636c-40a5-4a76-857d-5b2bf834907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0f9726-a32c-4d22-a5af-0693efb1d7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1893f442-cfc2-4bdb-9e1e-bc35309bf144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9dfa28-71ee-486f-a020-5958335e4031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a0e18f-b070-4aca-a475-9d663027a505",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c205a0b3-ea2e-4751-ac85-baff7232b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6c85d2-4ef3-4a0f-a1a0-48f810f4b9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6aa4e5-d8b8-4b1a-8d1c-33c1b16d5788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "111db8c7-acde-4741-aa54-ab958b389fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe2db42-428c-4bd7-884f-47f0095d9943",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf01313-a54e-445b-b12a-8f3332d2c38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64736119-e60a-4da5-89ed-e6abd689f7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b921c290-3fb4-47ec-97d9-39c3c120fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3de09d7b-f58d-4e3b-b619-337b5e6993c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183f9ff0-98b4-4173-9cac-14dc7110f4fc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037b33cd-1e29-485c-9c8b-6e0954930089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0712d91-1d93-4072-974d-ab4b0c4e1652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b960c6-9760-4e94-85be-4a6e3da28f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b785347b-e6da-4907-a8a3-fe5768f3d93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b95dcbb-c08f-476e-95ee-cfd0db25a859",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f3e87f-3cd3-4655-ae7f-eb6ed55d4238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260103e4-9830-46e4-a587-11a203b36526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943efea0-4dc4-4e80-ae90-2179f68c5f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48619ad9-8a91-4fa8-b814-3298e9c4dcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5e3b1e-bd61-4bf0-8134-ba953759d51c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73568688-8145-462c-9ea3-9eb8b2766ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9958ebb-2fb9-49c6-b17a-6defca16001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c58036-606d-42fc-aa2f-dc847ff16bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "983ac7fa-4349-495d-82ad-37d16f3063df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2d5fbb-d4c2-42cc-8d81-fd7b4bfdcd9a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37762bc-03af-4307-8e54-03a97ea1ef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6ccedc-27dd-434b-8967-5b35fa06cea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008846b2-4b03-4240-8b96-187812c55070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22602ecc-b196-4f82-95b9-0b64b59133a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd239ce-7a40-43f1-82c0-96bab91bd61d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e22e2c-b01e-42d7-a607-a70b92ad7d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843bc226-bfea-4465-a5f2-8671d64af48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df4af86-47f7-48d0-8b49-c00443be0d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c12518-c4e7-4bfc-aea3-8247a65b0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4075c68a-c53a-4a80-b321-eb08777b5250",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0799347-43cb-4c3f-ba38-5e03dcbf098d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ce97d7-915f-4c35-9646-11a00029e7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7673b60-d4bc-47fd-bf5c-0c2576b486d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "494b42de-f298-4b0f-99a2-acf17bd6c811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2153f174-9059-41e4-adff-825840a94238",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58daf342-a84d-4937-8783-9bdcc65ce872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9401fd0-b2ba-4cdb-bebb-028b98b1b17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fae9c1e-a787-4ba5-a3d5-e8b08d63ea15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af2481f3-7588-438f-8e34-2437825a5305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b495bc49-8893-4e34-b276-d5fd63af66fd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4356af-2107-4fd5-9aa2-6dfb90bb4542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f91ffa-a439-4439-822e-29ecc620198f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27531475-4a92-4f80-b488-c1349720374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5520344a-b8f7-493e-a9c1-1cc164182233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ef9ff1-4dc1-46f9-9aaf-b7326039a4a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2559b9-759b-402f-917e-e0ea6264316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0410b52-43d9-460a-96dc-8836f2ab66d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2e6dd1-8ea6-4a5e-9b69-be9bf53df44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38b956b-fa6b-47b8-883f-1801e174a169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb83a54-3b44-454c-a895-510fe2b20211",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07995d4f-7841-4c11-907f-268a8c5fa1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da44b199-e3c4-4e3f-874e-036b7ce405b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca11bc7b-cf85-411b-a2c4-a6451e695b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ceee8b8-ea8b-40ed-bb98-d4df60c3ce4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49299eec-f27d-4f3b-a71b-0f39471195c6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f065d-50cf-4f07-a6ba-943763748dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e9ba71-cca9-42ee-8dff-2ebb45adea02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869f6f8-2eab-4838-b5d2-a755b67ee24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "972cabc3-bd0e-446b-80f2-48ceec5f3815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8778058-b285-42b4-ab27-2d3e7d581270",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c9d7e7-e19a-4cc4-9c05-d8c2659e40a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8335fd-9e6b-4476-b4b9-e1c9ecca405f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e7b2be-04b6-47ac-b5d9-003ac0189316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24927a9f-c5de-45c1-b11b-bca953d23be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc7bb9b-69eb-44f0-a1fa-1ea838b5fdab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f8e367-ed95-43f6-b646-4769366aef4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf9944e-9828-4d77-922d-2495861e7831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20721a9d-ba68-4376-bed1-26a1f817ee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab192d3-dfed-49fc-a7f3-54ed2e766605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a09797-2567-4183-8697-3b38e52e4e98",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5177819-7b97-444a-bb9d-f078764f7ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27299dfb-828c-440e-ac56-9bbf05e1d4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7359feef-c062-4a04-a758-abb74a082e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "455753ee-d479-4155-b4a2-325adb906742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f7cc2-458d-4c93-9a90-151a2faf3f51",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a065b8-d216-481d-9421-79a331191075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81135f20-db71-46e1-a694-7cf334645bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbea6d0c-c9d6-4ea9-a455-5545bd8a5b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86760d91-c003-4b6d-bfb0-6ee2c19f9f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f39eccd-0e79-4842-a3cd-6123debbf7d5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfce08d-d1d9-4755-a0a4-1b8d508766cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4303725b-cd97-4879-8235-edf065e304e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36c305b-b5ab-4794-ba2f-c21b3ad8b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adfb4e93-8f8a-423c-b055-8cf0dfc8dbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad1b194-cc70-4692-8d38-c4d05239ecb0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf46061b-56f6-4361-884d-caa628408458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7e8c56-ad02-43bf-acb1-191dd8e11d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbe6615-278e-4c65-8d54-37f9a1c8a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d567964-53a5-4c01-a863-84596833ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70402b5-c07d-49f3-a756-35b218e437fd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5777c8fe-f6aa-44df-ba65-74f72b1c0468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfb37c3-2782-4f26-9473-28892bbd05a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4e03d4-f577-4973-863c-da1ffa9346ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1286fd86-a3b3-4f8d-9a45-5d6eff894f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06ffbb4-366c-4b04-9946-3685ddafff88",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec63c86-3ac1-42b9-a7bc-a555e9bf2c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7fb959-e7a1-4d25-a5d4-9cfa9c0547f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492656f8-e4be-4eed-bf14-c3547582caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da72899f-2a87-411d-ab65-2ec8673de5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9f1d52-0b2c-402f-a8d7-5584b26cd843",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf2359a-aa43-49ba-8386-40baa868af50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd0dd3e-2367-4b74-9d51-5717032438ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e8b71d-1cb1-430a-990e-b5a5a712d293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1a808e-1ff7-4e38-a2ae-0f14a59698c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a90ac6e-d223-432f-a1d3-9ee7e001357f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3c0a3c-0c57-454f-ac1b-b80e90e5f19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0671d188-4f94-4eef-a563-a3e77f250898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7036489a-c627-43c7-82f3-55b3a39e9357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9965cc90-1bdd-409e-8823-e15d45029de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88b18e3-7b67-4e5c-987d-c7804749124a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb53f6f7-d4da-44ec-9612-1b61ad1987d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909e17f0-6387-455d-892e-613828dba3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff260269-63cd-4150-8169-ec86701a1197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "908e8961-cadf-46af-b9d2-ca834eb58c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd0b3f4-0b58-48c4-ae8c-3a07c0a461ab",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c82159-56b1-4d36-ac0c-672fa4df800a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533f1b46-cc0c-43e5-a990-b412c0116659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27fb85a-2503-46cd-8d5e-c73f90344b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9da90603-17dc-4c50-bc1a-30bb82b678e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cba85c9-e689-49e8-a7e4-57afef917d8d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16a815f-4466-419f-a20c-a7dbe4f71842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6163b84a-618b-43a3-b606-8236f462fe69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b224bc-2512-4e63-80eb-e7117e41f460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa8ac4a-374d-4b11-881d-2195c8c55703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb253568-ea06-4caa-8b5f-f3a77cd19a18",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e19290-6608-4f7e-a1c0-6bc5bb8732d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d9fc554d-26a1-4200-9f3c-9e87dc66ee5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9cbb76-120c-48a8-9900-14e14f892a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d38f3c1f-66ee-488b-ad6b-b3128c1b061b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b94b36ce-34f3-4bc4-ba0f-41a4b2acdb85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d71e045e-1456-4c27-996a-96b27d271298",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915a0fc0-d060-4b0a-af75-8006b7e037fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36de84c3-c4cf-44a0-99c0-62a1d2fa6efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0215e8d9-e5f1-4e72-8b92-9cdaca6c345c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fa2beb2-32b0-4d55-b971-bcff376ac378"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d52c68c3-9029-4280-8760-81bafda9c778",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a2be06e-3ef7-4001-99a2-d97dc601d398"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d98ad8a8-90ee-4282-aa2c-f92632dff23d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "821e7f24-90c0-4e34-b7f3-b82d4efcbfed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e186b0f-96c4-4a7e-aee7-6a29208e0886",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3ddfe9f-d398-4267-af97-9e4a3dc757d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3285f859-47f4-4766-afa9-e9efa83da69d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "beacaa8c-cab3-4030-9242-4e67c706f411"
                }
              }
            ]
          },
          {
            "id": "1a720895-a34f-4e6a-b704-b531855ff999",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dcfae51-f290-4b36-bd80-555a9d348189",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "011992f9-52be-4646-b5b3-c48c7c3db928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36f3105f-4317-4190-a80d-94457fe743f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3932eaa-eca8-42eb-9d18-7fe8e8c4358a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5696706-3089-475d-9890-1364fcc071c3"
                    }
                  }
                ]
              },
              {
                "id": "d65a280f-385a-4bdb-8738-1b4acda84055",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e35d609-dcc7-46d0-a2ab-69a74f5a4a71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee174ce3-87c1-4a92-a780-86bfb4d8b4e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c6ab52d-35f7-4461-8155-04768e2e1350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e82b8acb-d553-4e8b-9d30-543f6ede0e0b"
                    }
                  }
                ]
              },
              {
                "id": "d37df3ff-04ae-4e2d-be11-d1f139cd73a7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0bc7a56-2f57-4035-8a83-7a15f289c9df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3612c4c8-8807-4407-8779-43b36afea523"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8f801d8-c3ee-4970-8200-a68d482bfc51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cba3bed0-118e-477e-bb05-1502710e5590"
                    }
                  }
                ]
              },
              {
                "id": "7b6f4caa-590a-4626-8327-922c1e9a35d6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c056b3a9-06a3-4ff7-8af7-fcb1fd174721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab0dc78b-92a3-43cc-8641-a664ca351c8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "240e7196-114e-45f9-bc20-98431006af36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c6711e21-69eb-4fb1-a61d-8f0f16babf8f"
                    }
                  }
                ]
              },
              {
                "id": "7614eba1-aec1-4c14-9182-9dc5dfe8eebf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80c7ffc7-a6c6-4e62-b0b3-f01ada432db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57d84ec1-debd-4f99-85ab-e4124714a46e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "034a166e-91a8-493f-9843-863fc6389c42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4e403ee7-b3ff-41dd-ae04-243870a6f137"
                    }
                  }
                ]
              },
              {
                "id": "3f3a7342-f0fa-4bee-b853-89abbd3e4000",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "511601f9-216f-47d5-8abb-500b298ca768",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9efcd96-e961-4a84-b7dc-2d5a3b8e005a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13413ac0-f00c-4325-ae5e-e90e02f54622",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cdb27e6-73cc-412f-9865-f986aeca2446"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b3c29fc-2590-4883-a023-a3128a17a88c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dd27a16-8167-467c-af70-804e3048ae94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "988a19dd-b9a5-4eb0-a4c6-b1214e006784",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c924be5c-54c6-41c3-a84f-fe4c4b0251c5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "651a95c4-7343-4546-97c5-d0cc251cccf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a9b42686-f771-44cf-8568-5e7cfbf4f9ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "106ebed4-5f1b-4d7c-a5c8-577805d06cb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f622ae8a-fda5-4a58-91aa-7843d3eff502"
            }
          }
        ]
      },
      {
        "id": "e04cdc4d-3ea5-4e5b-88ed-fc28d3a8a313",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "84e0d71b-9d08-4a62-b9bc-244772522cae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39145e0e-042a-4d8b-901b-604f851cc937",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61333d5b-e3d5-447e-b1ff-a81d6e9f1897",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1136905d-c95a-4dc8-9a4b-4e1d5e67939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf27f48-4df5-4bad-82ba-793409f66342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d97aac8-2c70-4b84-a4e5-ebc8084bec61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "595d1911-bc06-442c-8e1a-3bd10640d579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91f4790-c30c-4f84-a2f0-ad00865550d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd3e97c-23ff-40e0-834a-fda2914b3af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15c29a1-f734-468b-b812-53af98c1abf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691f2dbe-aad0-4b17-abad-24f230714c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a42c5c7-eec0-4ee4-8feb-8f094cadb33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9162a6b9-8d52-4b7c-b859-48e2012904e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8a3dba-9f1c-4c1b-a8d7-acf413ce2883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a362414e-3b35-4514-a5de-45582ae2c27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01a97f5-c882-4166-b5e3-323070c25765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73dcc20-4385-44fc-b212-d8fa29dec617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b5d1f0-ca8c-4518-bd96-6cf2b850f283",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f12244-e468-4474-9492-1762ea7001dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96a70a9-a961-4d2d-8336-6b25bbf58bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2b1c80-8ce6-4b97-9ab6-17fba01a521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad559c1c-b0b4-41f0-9830-88b26acd1673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8ecf66-cf11-47da-9d56-a5679ed92c5d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7428ae-61bb-4e01-96d7-b476b2bcfd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6242da2a-f8d3-44a5-9033-c6b2da4460db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892e10ee-a3aa-4213-a2e2-6faa70f26705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3ccea0-f95c-4dc5-8a73-81d6c21dde3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c952a25-7ec0-4afe-9e81-452d7385bc89",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb593a0a-77ec-479a-b2eb-5789883e5fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4043b1-1bcc-4ef5-adbc-18cd5a231ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54bb609-d87e-4abc-8d54-8b803d46b477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "566484e6-2a7c-4a12-89e7-fc3586b04e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bdcabe-f880-40d8-b0e9-e1463cce092b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce5958e-8cb9-4160-b5fc-c80bee47a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d48bff6-6c32-4650-a012-64910723e4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa615a47-f28a-4ced-99c6-1d246bc27dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8995cd-4bb8-459d-a4d4-c2fc9554626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350eabe1-5b5a-45d6-bda2-43da22d077a5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6766685-63e8-48ab-a22a-d74c4bed1a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46da0681-22d1-465b-a8ac-f91efd9be1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50149f7-82c6-46f2-83e4-5059a8723364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d164ec94-42a2-4880-a695-54406433c98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9e5865-eedf-47f5-b966-b8d3d46d5a64",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f4469-bf6c-43b9-82f6-6d4a20a45cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdddef0-c3cd-4280-8f40-aff2eec5baf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6c5ed2-9b94-41c4-821f-6008c6a4a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed837f19-1c73-4ba1-82f6-eb98add0d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d84c41-ba4a-4433-846d-c1ee006007f8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e9f52f-78a6-4238-a621-716da7f98119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7dc6d6-31dc-4d70-af57-17663e025686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba05394-a282-4c96-9ec2-a4934bb69ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac91826-4b12-4c5e-890b-8d11d1f674fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278c6b52-7370-4eb1-887e-e09d5ba4a41b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb3f244-f439-4811-b60e-6b58d3f8bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74e5e8b-96a4-4d05-b20e-c0a417b8646b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9200a19-e1e2-4db9-962a-b1845ad1d96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2e642aff-05e4-4952-87ae-037f6c598d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8c8a06-755e-48c6-bb5a-a4442710cd9a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d7db21-0be2-4714-b953-fc2fede54679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53d1be3-664a-4e81-85d6-07dd3b238981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0956c9-9e90-4a43-a701-197d3516c7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a074e6bc-baf6-462f-8318-a0952c5e1bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb323c9b-8d61-4b63-97e3-15ac89b0dcf6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a56b78-d3c3-44db-b85d-1e7394f4c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63fe7d0-86fa-484e-9cfd-7378ab518410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba8097-651b-4198-8068-e24e032e04d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "246bc85e-6cac-4192-8a8f-9ffb23a2de52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58790642-4964-475f-96ed-0a7c7e37121e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e421cb8-387b-4b94-a893-808005407783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d029a9-57af-4703-bcd6-aaf9df0c7b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7abd09e-7a09-4eae-9ca4-a201cb231d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a35f83e-b170-4d66-9f73-1282d4a11ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03de3f9e-1818-4ab1-ae6a-81edbbc218ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3f05c2-12f3-411a-9739-f996169857d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661b52a0-ac35-441b-b30c-d23f57d2077c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6c78fe-c7bc-4394-b172-576d00d19247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ef023a-9705-497f-bbcc-b7552f5cb168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb7766-07a4-4141-8263-cbfcf3f25f77",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819ba0fd-931b-4a91-8dae-f4fa47e30da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fd695b-fe2e-433b-8258-f8403cdbd723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c995ffa2-3ca4-4127-ada2-68e87f2c8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b733cd3f-8713-4246-98de-7ff2a072e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f238bd3-a740-4961-a70c-a5ccb7bb441a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3589e6d3-652e-4bfa-ae71-bdd0f4c29511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7177f2e2-488d-47f2-8acd-1d23b2dbd503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0165cf14-7360-45d5-94f0-e520ccfb3034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e459377-59ff-4af5-a8d2-e39081be6204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb3a1de-938c-4de1-8c74-35e3c2b0dbb9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b43e39-0240-49d0-b02d-15b109d2728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a84db82-0eba-431e-ae5c-e1d2cec3b99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed556012-5c97-4207-bc2a-1b2302b048e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad085272-ded1-4a4f-beaf-1cf0647e704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8920a97-d842-4680-b4a6-28ed38d0ad71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6a0ccc-17e0-427c-a946-8727838377d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92863c9-da5b-4b49-9732-b1eff3a5a995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247a961c-288b-44a7-bc5e-5a501e9a3e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8dd6a7-fd88-4e5e-8e34-ebab2f201972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca20278b-af4b-4e62-862f-9b9fe06c044d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85876312-0698-43fa-83e7-1b673cc06881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e6fb35-cde8-468a-a923-aad400527d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5360a7e9-1600-4641-8de2-5df8cb57db3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2331be70-07f7-4bc9-8798-402c3ec67330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41da6964-32fd-4faa-a9a3-a42c18c3b9f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4140369-fcfd-4d18-b809-2fe293ac8cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b14c36-cd9e-4616-ac70-c575e199d8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d29c897-f67f-4a3e-9b73-83affb82756f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f597f5fb-fdd5-4e41-80ec-72c4dddad4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833117f1-7361-4758-800b-d612517af473",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482a318c-7f5f-421b-b240-595861ace054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5571896-0254-47b3-be0e-fd796f0a35f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aca4427-3b1f-4017-bcb2-db0ce795938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29ce74d-402e-4e41-b2c4-a1309447f3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf7b1f1-fe0a-479a-8fbc-6f86c7b5da2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db47fba-a254-4b62-a57b-f553beeb994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d65d1e2-3017-4279-865b-3c6086b921ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b17ab7-d380-4c78-ab96-7d7346421fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db564fc9-305c-4b27-be29-1a0f7955fbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d1337d-631a-4112-b5c5-87c9b462d9d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645a7bce-defd-496c-81c7-5327180be47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da92f22-9d50-4927-846e-027f8cd523c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aa282f-ed7c-48a9-af2c-512037cddde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75ae94c-6452-410f-92ab-97849ae64397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909d85f5-9c37-4961-aab9-f817994862f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dbd37a-1b8c-4c35-a0d6-d175612abd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748cf598-0811-4969-9070-2bd823ed7ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b0dc3b-53fd-4208-9930-ac6e832090c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11269812-d083-4c67-9252-98e6f36c9b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492aba8e-7a10-4521-a510-be8fef3cd9d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee4be3d-b012-4261-a51b-862d9f273fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120a511d-9623-4e14-9aa7-16c25f192c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa48a909-dacc-451a-bd00-0f3117332952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56152d61-8ec8-42bc-bfcd-f0d460e6744e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c1d656-34c1-4305-bb08-b1d8e8366c43",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac66a64-71bc-420b-a270-120cbfa9ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d9ca0e-7567-44c2-98e9-9f7b22c8fd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3598fae0-45c1-4f0c-9af7-cc90ca199135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aab5952-8c5e-435a-8fe8-25f5f63351e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9290f689-c050-49c0-bd92-08dab33f3cf0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38908b02-6281-49fe-8ee0-20f3a46e363c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e3066d-8cd2-4d71-ae48-c012dfdb3338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c7aa26-9f8b-4299-93e2-54b868ec653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366180b3-a248-4c22-a19d-0dc234b31500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e476f9a2-e7af-4619-be8f-c09c46159b83",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06122a07-68f6-42d8-8860-04b9f691551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546e209c-92db-49a8-83d9-6d0c52e0af4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f621d71f-f256-4b52-aa73-610b2b6495e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9ceb97-2f05-4def-9535-73a71215f11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d6b796-df82-4315-854e-80e5f2a68747",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb893d4-128a-4827-98c3-6d04e7389282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f63b03-1e0f-4038-9c4a-b82a4ec812c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bf3c8b-a448-4233-b657-86e751ec192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5c9897-cc85-46c7-8911-9e12b747eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5874e050-17ba-4ea3-9906-a61eeacc90e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e361d14-4e3f-4b4d-a54b-e72c3733da67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83749d6-55c7-4f2d-b2fa-36dc83ade1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212a0184-f6b6-4a8a-a022-e023e63de35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0efccef-dc52-433d-a24a-6666dd671ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24fc2cb-7a64-47c6-bffb-5b60898e0b15",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae938663-2952-4939-8d60-d8e829282fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdc56a1-4d42-4aab-9232-c99b1db88123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d68676-599d-4365-b06c-16da327a8227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4b4fa8-b8a6-4ccc-9d7d-5da5a14860c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7dbfb25-050b-4b6b-827b-0169a185cc54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1a81c1c-12ad-4cf9-8162-8a9e7b552bea",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5c1f6e-8b2f-4932-9777-597719588b96",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "518a7fdc-a1ac-4460-bb2f-e30ec95a5536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75c2e28-bcc5-4112-b15c-e8e251fb6987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "167f7e46-0f03-4815-a9fd-eb896c5589d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27d2efb8-f84e-4fc1-9064-4a47c749dfd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b670f38a-d22d-4062-aa4c-71b48e67db1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b49d605-90c2-40b8-a759-eba5b2050d88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e9b27c1-1c82-4272-9a7c-5a68f6b97edb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa9dc282-2972-4c23-8686-05474300c5e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c6a7644-99ce-4ff8-accc-5893107cf69a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d30e602-162a-4507-bb4f-643aeba70604",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5eab7c15-bffe-4fc6-80bb-380bf34492b1"
            }
          }
        ]
      },
      {
        "id": "7c78afdb-147f-48f6-87ea-f43d3ceeec17",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ec65dcb5-0f56-41c7-a91e-850c1c705734",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d298bb6a-1899-46c8-a347-03be3a414898",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc28e6d9-6681-4af8-8cb6-5220987b1458",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0661bb18-b895-49a2-a1ef-65599caa2de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf5fc10-512a-47ea-a1b0-2f031a286a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94369dde-acaa-4f89-92c1-39834ecf1f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e81658-6d8b-4431-80bb-76d6797341ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ef8497-6606-4cf4-b8cd-71908ae7d81b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c290f0b7-8680-43e4-a4e1-23d607b6c580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352aaaee-98f4-414f-bf6b-261fc7ffd1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5df1ec6-81b3-44f8-93e1-93cf810c2826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77cbb6c3-2d6f-4e18-84a0-72b1a8b3372d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f700aca7-51f3-4ff4-bb78-3ec6efa5da72",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68224b4c-9e2b-47f7-9ca2-bf8094c8a486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fec4171-73d0-41d5-ab85-5008f14a504a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e91a123-ae62-4dde-9537-7fda34d4e0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66570793-fa62-4d4a-9baf-569e9d2b84be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee43740-c515-4a3c-a870-822df4472106",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630425de-1ccc-428b-90ed-a0ecd9d2d823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36174eb9-0be7-4e9c-93e2-b4b7e26fba1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc39e6fa-bee2-4a0c-a308-c2001cd935a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b314d00-6250-4a47-8061-752bdc1ddee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09efb620-ce06-450b-99f4-fa287a59f70f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f97560-f8b1-428f-ac93-b82f6e487c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b09c4c-2a87-40af-a050-999fe6b4d0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588bac3b-bfc5-4045-90f0-eaf521d32da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea0d7fb-bf97-4778-989c-92b2338749d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe51697-4c5d-4bcf-8729-0faad79f572e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad38e008-4877-4fb9-a6d4-b1cd6a06efe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4add9d9-5d28-42e5-9f8d-f189d5d6eeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd0795-3232-4b7a-955e-61dc44eb8a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8156f2-af71-49f1-a256-f751bd257e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583d67ad-328a-4765-807e-ddfd7badfd9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6214d919-073b-49a4-8b8c-19749bbda224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7765cb32-526c-4d7f-ba93-833f6db62c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9844b89b-b8fd-4be2-b521-d7d5b3b18d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "59687ecb-6057-444d-96a4-8777075d7eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eb7faa-bd3d-44db-be5d-0b41e2603dfb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf26ceb5-df4a-48e9-9bf9-6b47e457c737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fa0814-b35a-46c1-b805-a3d6c24bdd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe42d6fb-8d2a-42bb-99a3-3cf06299a703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5a6c3a-9dc8-4f21-b345-bdee424e86d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c717f77c-fb71-48e9-8672-b97120c0209c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d356b6b6-9e0d-4e55-b6ab-c645cf11141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fdbeb1-cbf5-4740-a216-e79968929b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a71f2f-5431-4980-8bb1-8d0f5b7da027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a97e962-c8f5-45dc-9225-005724d55831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365711c3-2c09-42de-b502-b579578e0e34",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3571bf-61d7-49f7-879b-8f42c868de66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e66dc4-7c40-4724-b201-a3a48dee2b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed0add6-9c1f-40f0-8e28-fedc8ef3cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ac387e-187f-4f07-b304-0dfc3ee27c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f22bd91-c597-4afc-83d5-9a1ab82091b0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003ef69c-0eb1-42ee-bc9c-090a330e23cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af1dee5-69ab-4968-af2b-7bbf52e97ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b61bfa3-360d-4fc4-bb03-138e6e163d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e512aa5e-93ff-4ab2-97f2-f3e535f04018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ecf3ed-d576-4415-b7b3-dea35328af53",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcd1bfa-67ab-4648-8420-f7acfee95ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e0a592-151a-416b-ae2c-15f522b42bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becf3110-3a13-4f90-88fd-1ca335413f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "857deb2f-5690-424f-ba86-83aa2ad12584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e26e13-7ec4-419a-9363-c403163d2604",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d7d80c-3593-4e12-9c7d-eedb8d422cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac7639c-ec10-4a6c-bf2b-2b44d1b9bf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c9d547-ebd9-4719-bcee-99c481f0a395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e0fb3c-adaa-4edf-ae1c-4afbbb109f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c71b80-1cd1-44ea-8609-8191f3152f2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9863d792-ef65-4197-b164-df290e1d2560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d33c00-0b67-4eac-9697-160b61d23545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4ea809-fcc8-4738-9e7f-5700c036b303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62f43d3-d0ed-46e4-90d8-d339c82ea031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0d101e-ddeb-4786-9609-9216319dc998",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5784ffb9-6e83-4c9c-aa38-681be47d402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941017c6-e80c-40da-a4cc-d23acafe48e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad886b1-6499-4236-9337-01e5a72e1028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb12e954-1eaa-4177-94bd-50cb10623184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd384a1-3ffb-47c7-858c-0f6fd1ded357",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9a4671-9bf8-4aef-becd-2617d57a16fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041c719f-b2aa-4fa0-86c4-5c4bcc687896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4e7da2-2629-4780-b382-a54a2c6b735f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c340f753-9d07-447e-be1c-23a68d34e897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7b8185-72ae-4c97-9250-f73bfdaf189e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e901e8-668d-4940-a6ae-9fcaa35d0bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec55f65f-d907-4894-9da6-34a1283037f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d0ef0f-42ae-4ec8-979b-4f8b60b03db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dae7ff-897c-481e-bf23-2aff1e238b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cb8b24-3cc4-4af6-8ec1-f2667efa1a30",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9014d523-b63d-4c85-adf3-415637535873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e250b1be-c1da-43ef-a85c-a3e7adf01d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9305d90-d498-44b6-9a40-c8b1aab2fa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "794e230d-3ef9-49c4-a85a-e268518e8d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f28e30-4c85-4416-bf60-3ccfdc008b63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706fc11e-6f77-4458-a621-2c9e7de121bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83737dbf-9537-4c87-8ba8-bef6942f68e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf195c6-dc36-4ab1-a727-618c3a95270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e20588-2ed4-459e-a4dc-cb103c2d324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1d769d-90dc-41b8-8266-b85291b719ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf1ae14-f03f-4edf-86f5-39d0f305a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1187281-1501-4921-a794-8ce95579dc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727b231b-bbed-4286-8062-cb4c027ea0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3429c7-2571-464c-a3ad-d95565665827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162f9ca3-cdd3-4e29-981b-89beb53b9055",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b495a188-d7ee-4e17-93cf-f59bd7fd08b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab59819-3763-4da6-aa80-815cd9b453e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d502bae1-3dad-460e-b2ea-22b884c60883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba189af-7b44-4a99-82c1-d464d3a748fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c92b2c-1477-456e-99d9-8c2b67e32e92",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb662c9-6c1e-4853-a298-888718159532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f789efe9-07f7-453f-8a33-7af61c5099f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faae30f-0e2d-4b0d-8397-87394507d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e679daf0-664b-45b1-961e-fd9962b9f1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad202a-e0c9-4339-b23a-a6537b679582",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97470fbe-3c29-4885-a50d-819c2476165c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc63265-1c04-4595-b416-3846bd5e017d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907d4a94-a08d-4171-973d-48194b44633f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61bde184-5983-4fbb-bc50-761ef1c31499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b71ec3-3e20-49a7-ab7b-c69ef3a0fe1e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580fb762-df54-4dd1-918f-ae48e2704f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc983f0-652a-41cd-87cb-38226fa22151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c868c05b-68e1-41b6-88e5-5ea61ef6a2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad60658-3232-4921-a832-16d38f2ecf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e4f39-3737-4b87-9c3f-4af02249d07f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73326b7-8976-4f70-85d7-8326b3ba96bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68820408-c2a7-4266-9a0c-603b4594013f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad819076-1676-4d31-8517-cf20717c6715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1261c063-bccf-40ec-9e8e-2c88501a6dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc1cc8c-544f-4bac-9931-bc2ddee9eec0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34864a63-7d41-498c-9631-4f56bf25f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802c40ed-72a3-409c-b952-db62a01d6ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ef70ed-fbd9-4efe-9f43-1eb722ad71b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03710991-e487-436e-b8b1-21b8a8c23b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a918ff7a-8e84-49fe-836e-c311d93ea342",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6912ea-6e00-46cc-a993-f9877bc3e38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4e5de6-3133-4a8a-8c0b-4909c8a746c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d6aec7-c3ee-4de1-bdc6-0b4b0ccc51f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f190903-bf51-4542-89d1-bbec3e1a445a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4434d7bd-b2ef-474a-ab96-9967b85476b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769d7dbf-bdca-48c0-acb8-3ef9eb38f8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f63429-8477-474b-bc4e-e2cd8ecd4586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ece8332-13a5-4c66-9119-2fbf8a99979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fb445f-f814-4cc6-a129-0f2856ab7584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b6e14f-7690-4de4-8d30-72f95d5b014c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1ac4d-4a9d-4e4e-9689-5d6056960081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b60276-1487-4a45-9afa-ff4893c612a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147e7b10-c97f-41cd-803b-704de2ebfb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c166d2-088c-4918-ac80-ffdb1a6c6cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80171ea6-51ad-443f-83b6-ae0751dbc64a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa1790-af43-465a-a6ec-73dd8b23bec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cd6e04-e034-4865-bdf4-e1179ce2b4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0382aa-6873-480e-9f9c-e1652bbb4195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8f4d9c-059b-482d-ae6e-462fa65dd88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50b1b66-0239-4448-86ec-f04bff99ed21",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9a6eb9-17c1-4fe9-9803-b7212f88060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676cc952-b1c7-48b8-b188-cba519cde29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68207ec-ba1e-47e1-bc75-8cfda4800741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e50dba0-444b-4c85-abe6-bfa35d9cd1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39465312-f0a3-46ec-8ac4-8db41e91604b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39232c1-7cdb-444e-a5b5-02293f102ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0fc064-4c73-45ff-99ef-fc39230b8668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c22767-fdc0-4dda-8d06-83d7bcf4438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a985d1-1f0b-4441-b96c-9c3997a0dd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e9c1d3-7982-4d0e-bdbd-f5068821e323",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2a5efa-fab2-4fac-b350-14610f34953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9980416b-bb31-432b-a20e-817d36d25a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85f909e-cbfc-4439-9431-032975a26569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a790e09-efb7-4496-a0cf-bd04f84bf725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1407e78d-d517-4817-9e17-9036c13c488e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d5da0e-f468-44f2-a5dd-7f650e5172b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35377224-9993-40f3-8e79-120f59884473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83bf6ff-4492-4b9c-9ba9-e6717e122aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b695cedd-c4a9-48b4-9b37-39fe707a0fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dd3221-fcf7-4d0d-8844-31acca6f6427",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0434a679-7d25-4278-b8b0-578a986c2022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f847e5-7b15-495f-aca8-074224b8f077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5eff31-f2f3-44bf-bc8a-503112c4eb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a1da55-f137-4179-baed-783a06447fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c8c91c-1b6a-421f-befb-3a8712667d8e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007ea91c-ea78-4749-a59f-1a5f50a7ebdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2570c723-4cf3-49d1-9773-894094e4cf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0282e718-5f6e-4392-a430-e823b40fa37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d96ac0-3391-4e25-b84e-f1a31f4badcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e003799b-10cb-4501-a5bf-5ce39558906a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8682daa-957a-44a7-9f0a-d4994f37d376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ac7cf3-6348-4230-a21b-ddbcc4e11487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7bc8e1-997e-4596-a333-254025973899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ceaf0d7-d5dd-4b8e-9fdc-b98b2f33dba7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d25bcaa1-c8b0-4253-b612-2859b70eb541",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40af8a6b-76dd-418a-9172-3c00eead569a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d8b3e0-3cf9-4eea-9e8c-9c56c7565947",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1feeb662-69bb-478f-b923-cbc63d8c8cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739f1f02-9119-443b-b15c-694224db4e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f377fc12-210b-46fe-8733-fd950c1c08b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "816ad9d7-c7df-4d1a-b491-b8162439a860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e06d6e3a-adee-4adf-a2a1-bfd24e273080"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5e5d251-23bb-46f6-94c6-43c4233c5769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31a93baf-1eeb-4b37-9245-6e00d987f9ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea8b3504-595d-4399-95da-bc4f2a117405",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d88cd5cf-453f-47fa-a96c-3313d29b029c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80641c40-9547-452e-9703-08571108f578",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27e6764f-23c2-45eb-bca2-6a4336fdb188"
            }
          }
        ]
      },
      {
        "id": "de2ff700-bdec-415a-af0c-8806b8204e0c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5ff52c24-bdce-4692-8ef3-7f08c6eb1111",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78c145dd-16ab-4df3-89bf-530a40bef728",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d90bf035-cf6d-4315-a187-f1437d511490",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f81f8a-86bf-455f-adbd-78d88dc00a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb19de34-b272-48cd-a6fc-f7a23dcdbbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b218b4c-a597-4f53-a8b5-19e23f30e37e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350bffa6-2b27-4023-980f-b90da5483a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa91045-dc2f-41af-b0cf-4ce380381d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81b7814-fb5f-4725-b49b-e4974755a6cb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9dad40-af1c-40ce-a3e5-90d790d366c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a263895-d9b3-4dda-bcb2-e7254b214a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3e1bd2-3c66-4c23-927a-b82d79c49f76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9e1ed-8ce4-4159-bc61-bb2688f8be51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9501e309-03a1-45cc-bc4e-21e7382fa8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e64fc7-c2fa-4c78-be4d-5cafbf296c97",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc7e7f4-7ca6-40f0-ab21-8ad37f6c94d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe274d1-262f-4736-94e6-cae4c5bed7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0755709-bb7d-42d3-92e4-4ad6005b93f0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4847716d-e7cc-498c-bc26-444821cc73a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a13ce62-b628-4d53-9d2b-17a43266f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e493fa4-bbda-49c0-8bca-2a5b31721b85",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1898e7-f851-4c36-9498-ca16cbb7875d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c581b52f-85e3-4f8e-a4c2-7eae0e6347dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cb0cf2-0336-4a88-b05c-07ee8b63ec43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c1aa35-626c-4351-b77e-2e07874d67e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1ba82f-d190-4bc4-b9f4-e13314d07f88",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cb3bc7-f660-4c96-9f9f-5cf38ebf6d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80eebedd-0482-4c79-bdd7-4bb697548c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5876204-c7ad-45e1-be15-f1079d852cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bb82dd-97d8-484a-95fe-e889c878ec5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fad087-33ff-40f8-9b09-218e907c69cf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431521d4-e964-4110-a009-6e077fb9a6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c393e94-2043-44c1-b10f-413542e0b209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c8247e-a46d-4041-a725-1225bea6c15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb743ef4-9c80-4f2f-b438-992bc6eefd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8bd9c-4870-4ed3-8ccc-b93a5d6663c8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd996a7-e01e-4b38-a024-d4450211e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c28b63d-dadb-4ad4-a76d-6029d1bc9a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087f64d8-8ffe-4a26-8124-b00cff1a56f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c293aee-b084-4425-b7ab-bc6b7385591b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f70102-b152-4fe4-9802-869ad7fc91be",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d312ea81-9b06-4a42-9e54-a393bdc6745c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad0e48b-7f99-4727-b278-71b0807cfc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d226111-5b2b-44f3-ab3a-17de0a5de2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018e3fe1-c065-4693-bc51-518ff313b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52801dc-01e3-47fb-8555-2617a7adece8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb8e65-c498-43d8-b34b-99b8b78fb040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce8dc3c-fe25-45a3-a7f1-fdd57ecbfee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc2def5-4f5b-4960-9f5b-cdc6dec18cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d533398d-d91e-4123-8c87-9f541c14f412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc1d1e8-10ec-422a-9cf5-bcfa37137f14",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5556e8c-011f-4d1a-8a92-28a4b5aff4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c046c0c-1d95-46dc-956a-8a3380330059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1559c5-16c7-4a07-8804-85a40015743e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613b8b92-f913-4f9a-a93e-33f7ffe340eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce25149c-313b-4434-8a39-8d53a7cdcc2e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07415aa6-01cb-49cb-a43b-99540d72498e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dda23e3-6740-4bf8-acff-659e6a029ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaaaa39-5254-4442-aa2a-bb9383efb90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e5f28d-4b3d-488a-b57a-b4f176446426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88984398-cd6e-43c0-ba73-614d782ce8a3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ed5f7-1bf1-4d28-8fb0-6259b45a30b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b6e4e2-e6a2-4b74-85b5-e240ebde31a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68af8c6-b1b4-47e7-83e0-e1778b9f0a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77236b64-86c9-4852-a525-33c6f2cf8eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1818515a-76ec-488e-b1c7-45480247a3ce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679d9dfb-5b06-4dd0-aa2b-56c6db1f11b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6700c505-3898-43cf-8b21-4171675a711f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2023ef9-3341-4d67-bf8b-926ba4b145f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7342878a-47df-474e-9dc2-bd55b91f4adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4ba176-531b-42ce-88f2-84890c116e30",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4473870-615f-4611-a07d-a76fa0465523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2563e09a-124f-449d-a421-8cdddb7886ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371041b8-40c0-4856-894f-38bded36ee02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9f345b-bffc-481b-8332-7d5ab32ecb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec67171-218a-469a-bb8c-2284882b6eca",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c841faa-f703-49fb-a214-24c3bc74b5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7a02b8-3f4f-4f3f-a411-fbaf3e121b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ad1623-c831-437c-8720-7264cff2f2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e95604-e7f4-4d07-9886-cdf5d92ea140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b0e574-78cf-421d-845c-f75913ad4fbd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e49de-78fe-427c-8891-0009a8b558e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fb05a0-86d8-4f1e-9d23-4ff50defaa4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d49a1cc-99da-4875-91c3-6ebde53d4888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdaa949-9840-45ef-9a60-19f6691cadfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e5a185-93d7-464c-9c2c-40307c4de936",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4502cc-f5f6-4eea-b15f-96e0b1413644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec9e15b-a562-4e51-a5cd-15f1506cf7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9474bed-6e9e-4bfa-86e3-c22918c90430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c48685-e19f-4a2f-a09c-d5bc11ed5ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7228048c-b205-4fa2-94f4-cb2eb54ef79c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1338bcba-0266-41f1-94b0-53646fd06fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577181ef-534e-4934-8d97-0fe301db2166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f27d7f-ef5d-4015-8435-398373a704a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829573b0-db7c-40cc-8c2c-cbdc76203614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af144c59-41ee-46b4-bca1-458eebba1a06",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf9d69-bfed-4761-9279-4a0f21402502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef903275-9d0d-4885-b08e-305010cfb25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b81d3d8-ea13-40ed-8170-926311446484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95353a13-433c-47a2-a181-16b86d7a8d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38ae81f-cf7d-4a54-a944-6f84d3853bc4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfb8cb6-a1b7-4ade-8300-84ace25d37c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83826de0-c42a-4ffe-9bab-31b4b6c03635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3009dc-ffcb-446d-9cfe-2ceb487cb40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe161f7-66ee-4af5-bad7-2c3094b20a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe020c15-0a90-4881-b460-692cf20b7880",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bedfc4f-46fe-4011-a21b-c69332aa12aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783afef6-64c3-4da5-89c5-62d23747a393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b361ad-b10f-4224-91ab-0c36cc628b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7bcddd-913f-4ec6-8be8-4223d45f6674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a0ecce-3724-4840-9adf-a102b31c48de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddf0589-0b39-4895-97d6-5461b5cfaa26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c483ee7-24b1-4e0e-aeab-3dc78149ea82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2339293-f5a8-436e-acff-40cdec0b093f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d3b9c2-f1fe-43b3-9527-6a2dfd26aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99fa0d5-3ad1-474c-b17d-903ced8bb8a7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f716242-19ef-4cde-bde1-5f3ae6ef5b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82ae4fc-b9f5-4eb4-9fbd-277ccb6ecbe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0384bd33-95a2-4d27-8c21-aadea315d3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dfbc97-8c5d-41ac-b1c0-a1fdbac17c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9886402b-d794-4ef2-b51c-e41c3ce4d3f2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e77c49b-0896-4422-b74e-ad79080cdd48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99a4a3a-bd0b-444d-b3cd-2a204ba6bbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f179c6-fa31-453d-a222-1fc8e899f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f07051-8e72-48fe-9083-ef2169caa00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d750325-8f15-4497-a098-bc80fafd8d5c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebe31dd-a67c-4a02-b36e-a645bb36e6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bfd3a1-3633-4eed-80a5-f19274e131a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e789f60-a1af-43ba-beed-edd1a0492ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbb46ca-1321-4647-9c22-7e5a8df4cd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a986978f-b593-48d7-b8ae-025e07cd85ff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbfbe5f-38be-4e5e-91f3-e7b932395be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9260c05-6791-4865-a4c9-8ed02f73f8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fc5e05-4e84-4a56-bb0b-8f4be18637af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d8c795-685d-41d9-8359-47dda29404de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de72a71-b0f5-4a96-b8ca-9d98dd104a76",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8de9bb-98f6-490a-878b-63db3559d5be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb8b9d9-067f-40d7-8344-441e7aaa2918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98091e24-44d8-43e3-bd41-c1a6ea791852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e778a5-b9e5-47ae-946e-06470f3e8d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf8efa7-0d18-4e86-8af5-e4f2fb8a3710",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cb039d-4f7e-4687-aefe-abbc7dd6860c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc941c14-55ee-4706-9726-10705f575fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f48adbe-e39c-424b-af6a-c67ea82370c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768a8a6f-9d43-4ac6-8805-d331600edaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e1d6ff-375f-44f7-94e3-20f995d8f604",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f0414e-46fd-45ae-accb-9f526a70a75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3139a7a1-1e6c-4752-91df-2f7ce7add883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1cc828-f5f9-496f-a227-a75ac38bd695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbbcc47-5c2a-43f8-b913-c638f8511fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bc9e6f-7383-4cbc-b63c-386ba781e16d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ac0958-95cb-4160-84e7-4bc68e7e520c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbadf00-741f-4e3b-8219-6b10457a9561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ed3492-834f-460a-bc91-fa575d668d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6882ec9a-c044-466c-a1ed-eb88a82b8b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b013a1b0-435b-456d-9b40-55753e3e0082",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f242e9-8831-43da-bb6c-772eef569882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d932287f-18cc-4436-b69f-b1272bfd5cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06624f20-9a30-4998-af5b-55b5094492e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05481cd2-e173-4717-ae0d-c0830f6c11a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ee1303-1033-4d2e-b3bb-35813078dfbc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beebac4-a141-41db-8729-3831a53bc90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2171a87-0673-4cbd-baa4-75d37e529679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f392b4a-93a6-4011-acf9-da9ba664fa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700655e3-3f89-4b21-a772-8b5bbe202ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887a6d5c-721a-4cc1-a041-c02a459012d6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0edbb35-ebbe-412f-a111-e7b33797697c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296d71ee-0f86-4d23-8175-0886a82eeae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76010cd1-e858-4870-9c64-4ed7761a3f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6656547e-2f52-4c8e-88af-a373befd7030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463c9a37-f97b-41fb-9e82-c5ba9163e137",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2d2181-928c-4aa8-a45f-a055d353787e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301e8210-9aac-4908-bc8f-bd04ced2a5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef62f79-746d-4064-a57c-1735ffa86fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2799e8a3-a8c5-45a6-8d6a-f1a26b686a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0243b94-446f-4894-83d5-a2eb5166f4c0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d898701-863b-4d40-8861-e94672207424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee67fbb0-e656-4091-9c10-f73c146b0e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e6611f-33b6-4428-9443-3ae06ea695f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151f173b-4615-4ca7-bef0-565ba0c326ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e2e2e-31f3-4cba-a65f-32c196db4819",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e0aa74-456f-44e9-a40e-4c48dbe05148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757ab5b3-c141-4096-a697-e91782734dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e0f7c-a6db-4579-8a53-5f5c3d4d1397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fe55e3-a9b5-4a4c-894c-b23542e2b358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c36100-562a-4a46-a9f4-8a36ff8413d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e93d0d-870d-4a4d-978b-349105038ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995e15fc-1be8-445b-9d3c-2d46aed8867d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c020c8f-983b-4e58-877d-1588cc9000d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0009dc4-a0ea-43b8-a822-f9340e57bc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1661f80-5554-47fe-a320-dced4710656d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d568f-b2a5-48b0-8900-8334539cd70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2283bc4-b70f-4789-aef2-a4d6e778776d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9560ab-fbb2-4521-bcd1-6000406640dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5e53b3-9101-4cea-879c-1f95390f8dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93374a1e-d3ed-44da-bce6-5ee067b2e417",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f05cd7d-1f82-4f82-a4c3-aa99cd94f4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04a8af8-ad8b-4906-a870-eca1d3bbcf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a410be-9b7d-4240-9d5a-8f12ff5a1b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b785c5-1eb5-43cf-9130-545adfb12780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a10e430-12a8-43c8-b586-67e5dd61c7a8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa2a05a-12a3-4c23-a8f6-0a0f7175db6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f5a19b-3316-46bf-8a9b-9be01e5d9c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7341c9-4c82-43cc-a9d6-b30b5b271005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab3a7c9-039a-43a5-8e22-b84f2d3ec36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d4b271-0963-45ae-8ce4-712c410f4482",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb2e36e-472e-432d-8b33-cbe97fa4551d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e2f2d6-a227-4e24-ae95-2ea4586b713f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ca7810-0e87-4a73-bc64-d5c53e7665cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69761db6-d464-44d0-8373-77511a7a7284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6931a464-aed0-4175-b82a-a060242721c4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b203237-febc-42a6-b611-788d91b6cd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0107780b-c73e-4554-a49b-2f41f6ea0189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06233ff3-1daa-4f20-9183-229683110f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38c6778-71a0-4997-85d0-d67487590a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b85bc33-db96-4a61-9294-65ee78468274",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a7b23-a59e-4d14-b502-41b81a6479b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b95d746-7ae4-4ca7-9592-a8ddf4db5604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090acf04-905c-408f-b2a1-67039151d102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db109854-bd63-4d47-9023-a90cad01b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb89700-7519-4d3f-af1f-dcdbfd312cfa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c85e48d-5bdd-4267-ae5d-e654e26753a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c413fe-5b1c-467b-91cf-5710685ebba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3004ca79-e545-43ee-a2f8-3622de5c321c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b004b55b-0e2d-46ad-89b5-8f282bc21604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9008a9-48ce-4b0f-a092-7b2a0351f36f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc4f96b-6ad4-4fe7-8ec6-6625c595b1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3103f24a-2fc4-409f-bbb8-d19819e17e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5f26ec-a3e4-4e33-9514-b64a604a8242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571e66bf-075f-44fc-bc38-00d4ae8a99fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec86ca2-8926-46a4-82bf-58b97f5e8af3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5d6a83-ee84-43e5-a77b-ec8e881555fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a742e084-88f7-4495-92cd-125bdfb485b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1ccef1-0c46-4391-83d9-25dc78f23b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48855f1-2b5e-4f5f-b82b-2c5854d0b1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec400ba-d8fa-4a83-8c37-d0a62a02d593",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e3fd55-826c-4336-be04-a6c6560e00ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a246d71d-0231-45a0-a710-68fc9ac8756d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4213291-6fe9-48be-90a9-4964dc85af80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bde8bb-9777-4448-af3a-5fe5b4d9d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0edb872-e1c2-41a8-b8f5-09a5f3c39679",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3ee3e4-1f7f-485b-963d-5a44234f9fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529a1716-127c-4bcb-b904-627935562e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d42442-d5fb-413d-adbd-dce844fe4426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d0690c-e021-48c9-8cf1-009cf31244f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5625ef8a-7683-40d9-8b1b-d4237e102a10",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e658f1-6fb6-4c27-ad6d-6463b274a9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa2a887-b962-4f30-9ad3-a14f73d52ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2becba4f-1bf3-48b9-b70a-bfe1533880c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20202bb4-8985-4558-b16a-f270a4906e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e7cbad-efdd-4a22-8988-6cb16e9c2f9b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8be87f-5877-4b78-8e50-0dbb0cca04d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e3da22-e1c5-46e0-948a-e286ac0f69d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c9aa6-1815-4256-8234-a00b1f1fe838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9392b3a6-9118-4bd8-b0c6-4f4e496e69b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5049c14-140e-47b3-9354-00647bcef4c4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a901d6-80d4-4f48-913d-0c73f1d81ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f623f3-812e-4d15-87a1-053b509d83fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a857c64-815a-4029-aa58-0f74a1d60a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d6a84f-54fa-4f1b-b026-2a56cdc913fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1768d4-5750-422f-980e-ae2207707362",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3a2503-9229-40f7-b785-ee7a3e4f8597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa63bd3-a12c-4bd0-aa03-1e8b3f95acfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5269a4ac-b89e-4d7b-b707-d62484ff4f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14adf501-05fb-4abc-8f21-b1fcbd1aba1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59651ff0-eef1-4438-bf71-81a767af47d9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b9d04a-4621-46a5-8cda-d096e5aeeaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838cf59b-7a08-4028-bc5a-7e548bb5f8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6490ef9-c087-4160-8024-c282676bbf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1f064e-2424-4dfa-a397-007470e95423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ac848-80a4-43c6-bbfd-845a3f438224",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f529a8b7-c365-4138-8b65-eaf02fb32d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312a4b3c-2f2d-4046-9912-2b089462968b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bc302c-ed59-4804-aa2c-40351c780978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8536ef-a7fb-4c70-8fb8-bb4cd20be84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed2aa15-831f-40d2-bd18-dbfd527f83d1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073d33db-c5c1-4ea3-9e1e-653aeec401ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb499b8-82c6-48f1-a992-6b7473d59414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5092b67-a4b8-4a35-8b4d-66c6b23cc303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b313d0-b1e8-44ba-aa8d-7197b7059260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9598d932-e3d4-4b0d-84aa-8525a43325c8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9518dd-645b-4bd8-90a3-a56c569d96e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e220e060-eca4-4fe9-a983-8f72057879ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2adf3d-ccb5-4789-9268-bb554b2ed29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f0bcfb-93fd-4763-924b-040854e191d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222d07c4-d6b9-4167-9915-39ae31f96212",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fdf113-2ce4-4a17-8c06-5063b9c12f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff8250f-cd7a-4219-a17f-e5c07d0fa74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e36ca07-fab2-41ca-a3ff-d9cc88571a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49417f6b-bced-4cd8-95b0-e9e4b0805f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fca920-36ca-4c4a-a420-cb9dd086959f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f2962e-f694-41b6-9277-8c0632183756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731246f3-acd7-46b8-8827-4dacae38399d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008444ea-cf6b-45c1-8c8c-ba1bb829b524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef44376-c6b6-482c-a1ca-ef9e5af0b53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a18f86f-10ab-400c-ad1f-3ac23ae18bbf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c445525d-38cf-428c-bb38-a5937cc3fc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663396b7-e593-4dc6-ab79-4029cc0c4e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c836cd4a-bce2-4839-a4e3-f6333ac89b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b32a6b-2f00-4f1d-9cbb-ffb85f416b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb159ea-711b-407e-b7b7-fa517a79e71a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6491c34a-4baf-418f-8745-0603a054751d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb57cb5-00df-4f37-8e37-a21477ca569e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d73e63-ac5f-43e0-8f5a-31a499666aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3723f6ea-c909-4760-a5c8-85c5987e9d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d220e183-99a5-499f-b5e5-de2546e8ac78",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdac7486-5061-4bb8-9535-43185a107080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4595ee5-3e3c-43fe-b916-fa6b1b8de9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c411976c-740f-40fa-813c-f69fc14b0d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08c8ea6-0df5-4a93-b3ab-61840faee006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675ef296-01a8-4b7f-b452-d6432031f774",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63289f1-3a52-46f9-a2c2-a37da8884217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4ddce5-ebc4-4909-b2f7-17a1bf61b9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809a00c1-d720-4a4e-9927-d0a80541e902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8434133-b069-4070-be0c-8ff7957581ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b80da3-c0b4-4669-9f6a-c1343f2106c7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0981aa95-7688-486a-af7c-907d05ad1395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af833f9-424e-4392-91d9-7503bb92d45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c972905-0a59-44d1-95fc-c99a08910b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a6a810-fa3f-46fd-b56b-cb24ec5ca4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f555a5f-c5a5-4513-90c3-3986010fa11a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cc4cf8-631f-4c4a-8cdb-b1aa6be35693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb82ce3-4f84-4067-979e-87d2e378bb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd340b1c-400a-45d3-a91c-9360e61c8999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331f439f-ddd9-4e55-9e6e-37855783b876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaa8dde-1fdb-4a79-a1fc-964857a5e7dc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816430f6-f3b6-48de-bed1-21ad427e459d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c06ed4d-6aed-45b9-8234-235b2f0c7357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212729b9-ccd5-452f-8690-9a22afb4060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857ca53b-4811-4c72-89e5-cc764592915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f599823e-14ca-47ca-b8b7-f0f888d578dc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e22ef1-921a-4c91-8d82-025dbae5ae00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5c8b29-1063-407b-a02c-cde5db58df67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8a5d93-308c-4928-b025-f3f9cdb1fbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80ec883-a70c-42f4-b5a5-7ddbfa3e46bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25724da2-9c1e-4f9e-9141-c944f0349b09",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2990a0bd-e18d-4946-8568-649edd4a4821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31563c67-82c0-45ec-b66e-90055ec5326d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8694df27-1422-4d48-88e8-c1c477c7c39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd55961-67b8-4220-9bd7-5ce9dd8dce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf885fe3-5ec5-4140-b3dc-67c21fd6a3a5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87990253-b430-44db-8b30-602ed73f5780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab82e0c6-d8c1-4171-88de-1ac994e00f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86465103-bc92-4397-8ecd-ec77cd59dea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29edfc0-7ecc-4a44-ba74-7c43291c7b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66885868-1bc9-4a9b-8d4b-81328f298e1d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c871c76-1358-4013-91ae-3474b0b31609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d20ba90-8314-4c33-9141-dc71408acd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45b74df-819c-45c9-9960-992853251d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806c33d8-c62f-4b44-9847-a1281ea887ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1242bbef-355d-4fb1-81aa-5f18c3192481",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3552ca78-5146-4214-932a-6cf343299cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebd4827-52e2-455d-bfb6-82fbbec8953d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aab37a9-6981-4e93-9444-653070735a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af134b7-d3c0-4a02-900d-079197f2a9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d994a667-3af1-47a4-93d0-e25904765fb9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f5c828-9166-43d9-8112-ee1665442e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae252ca-316b-4eeb-9a38-a170337fc797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ffc44a-cc52-4957-896d-9d2b43b6ac11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0f63ae-5f3c-4911-80d6-483d5e3d01fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51f512a-697e-4f9f-bcbe-a2fcc0366f35",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f34c8de-5cd4-41bb-883d-87a0bb47fbfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335ab18d-2db8-4315-bd3a-86f14cf6ec3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8355107c-6d16-40e5-883b-0f578fbae6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf2e35c-b6c0-4664-90c9-367474911fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef671510-3eba-4921-85e7-1a8fb1c92651",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698e7397-98ad-4738-8463-a9c99d799c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe05a39-7167-41e7-bfb3-ab049ea11e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395e7756-de16-4b79-9072-8a668b7ba3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44bc52e-b62b-49f1-83f3-aa50430eb5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e772ac-fce6-45e7-90c6-e2803cc0c0a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857b0395-7b9b-4d3a-be21-e539edbe7710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f37dc2-8438-4998-b9ce-4917caf17526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83008e6d-e78d-4a6d-8147-08d9982aa05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3a377d-4aed-4f1e-a409-56b03ebb8c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bda806-ab28-4013-9836-98614f35e8e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f46f8c-1e58-4385-bed1-c50d06c1fb7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ce3113-381a-449b-8ca9-7d1c7a99b654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95333f7-1cc9-447e-880c-a20170bac0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bb1970-37a9-4f3b-b44f-2d7712da2a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea58e2f-994e-4ec3-bef4-88d9e0a7f6ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d62682-a0f6-495d-862f-613242e6873e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c704eb3-c95c-45ce-8670-9ee39f6410ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22f64fd-cf7e-4010-9f95-4605c1d3a0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b25a823-2262-4f2d-a63c-5c49e2eaf6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf52ed4-439f-45fa-9f82-f89119ccc23c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd01f86-e105-45f4-9e81-4758b43e4fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9a01d6-599d-4d1d-8602-56bfeb06e3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f29cad-cc48-4bcf-bdeb-e35bd322a3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e48b43-8632-4fcf-977b-07eef0c38fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2189f0c3-3e7d-448a-819d-55e4dad5b28f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa66cd5-fdda-40bb-802b-20e75ea7eced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f77a99a-9c5b-4490-827d-416fb8aa009a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2599e8-cb01-42d7-bc9f-2b8e8a9346a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71fb9c2-75ce-4e00-aa49-287e949c17fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c641e-cfbf-4d4e-a718-19f7f109a818",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c94a80-5ae9-498a-a41a-158b8d4b82d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd55342-af36-4260-9907-1dd49429b956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b390328-c908-4121-9187-8dcff4e165a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182656ec-217d-40ab-86c1-b785c1621676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1deca62-4696-45b5-876a-ab9d6ad37702",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d36104-9315-43ad-8535-2c9d5df02453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbc1abc-30de-46e8-9571-1db51d3dcd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd0415-198b-4303-a962-65a95edee239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad20404-ad7a-40ee-a05d-e21458da59a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22835a82-8daa-44bc-a65d-c7764d45494c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888ed585-e860-4a8d-b056-e300f9e8d41a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8900f901-d8e2-4f73-82f9-a35750c0a02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82b6cf7-ed7e-4725-8509-7bdebde30aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160ec1f4-776b-4c3b-93dd-6b857aa08449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a918438a-f53b-41c4-a41d-42a02044471d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ac6b44-b868-41c5-ba4e-52866b02b625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11ebc23-e461-4a47-b19e-adfeee5c0578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37b0d9-4cb4-47e7-acd6-38e5f5d93cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2353f9f4-5553-48da-91f2-6f2c58191f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f4b5fe-2c91-48e2-b919-1ff5eca8fe87",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39279d5e-a0b9-42be-a170-8c675300aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba243848-0ad7-4cd2-a810-1708c136004f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c8b94d-dd22-486e-8e27-dab9d38af460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64f0d05-f286-41f6-b4fe-e5ef4961463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b92f4b-3858-4748-9d7d-798d8f28b2fa",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223c11db-3bb3-41b1-a722-cb25a7cf463b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ab43ab-2945-4ef5-9a74-fc40a5664c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54509370-e983-4ba6-8b9a-9dd8e987d7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aae722-fabb-4d3c-9b9d-6c2c7c51cd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3934817f-771b-47e4-945e-5236acf80c17",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5e78c2-6036-4cd0-a7bc-0e3f6e436770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6225d7-7e5f-4a29-a029-6c477e73e82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f7a1ef-4190-46ea-bb35-5709c17208ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26c087e-5192-462b-a9c5-7c3463aa0ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a1a519-fc9f-4739-8e2c-3d57afed55d0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c725cb-1cd0-422f-afd9-e4190f16317a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62380b1f-213d-4306-a9de-8b6c13280fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93144327-8de7-4f0e-bab4-97f71f5e33be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2602143f-956b-45a3-9650-6d2c21560c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a91cf7-b534-45f7-ab03-0d5fbb2a9600",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe018f7a-c104-4f53-bc8f-78ee7e4e63cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af56f74a-f811-43c7-912d-e522350fc480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105d50d4-cb03-4ed2-b424-9afa443c7f01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f8fada-e1a7-4100-86ce-0c9d93565bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d45305-ac8a-45d9-9a8c-5e0bbd874599",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c464c717-4935-4010-b307-4da43b3d5338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166d1a40-d326-471f-8e45-3dee4497d000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ed903e-96ef-402b-9099-05a68ab7bc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84783c31-73c5-4d32-b88f-993dbbb54a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac060f6f-3769-4142-8b89-f66a8506442d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f3340d-2258-4acb-ae71-19fed025df38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d61b493-d1f2-48f9-8cb1-5c427db06804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafa11c0-af99-4253-81b2-503e48a1f249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701facf2-5acf-4429-8567-2cc7a440540c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2102911c-1564-4b44-b4c3-94f96d58d84f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766140cc-f82d-4d1e-8490-54365561db65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5540a1d9-0ec3-4a3c-9a48-4c27a57b038c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e013dc-40e7-4323-9658-fdeb94c2bf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14960d92-921c-46d6-be5e-8542ca90dee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e5e97-5f5a-43dc-9e28-78125da11e6b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c65866-63c4-465c-90ee-276d36b060ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57576a97-299c-414f-985a-d721f1949c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f497467-eff3-448a-9de7-2be0ed6aa7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edbdf15-97ba-40fd-a4ce-90124e94558c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6c96e1-800f-4cb0-8f74-41b2fc593082",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d063b2-fd68-453a-befd-5fd0f3ddaa12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ae5032-c2e5-411e-a365-3da77d2e7719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa9d732-a475-4389-9183-4ef381540ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41f0990-ddd0-4a49-95fc-d2daf86797c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe12031-ddeb-44cb-a60f-2c9f0c76d123",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356b5aef-c7c5-4e8a-a092-dabec0d60ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9145e0f6-631d-4222-aa0f-cbcef8b8b05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b3cbee-8b29-4210-a6bc-42aaaccd24aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a2e8ae-de34-41b4-9472-c98e20df8a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b3684e-3040-4cf4-ab7e-f9ce1451e553",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502cc7e5-6a47-4c39-b8e3-d1d98915344d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4950cc9-e061-40cd-bd49-a8793ccf4171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0167f6-9914-4673-be6c-f95bc51d31bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb78b9b-b2a9-4cab-89e6-df02be916bec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72fd8b37-2367-41bf-97c9-3665d47edc89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10bad693-2541-45a6-bb41-19cc30ff4036"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bd7b5ca-00dc-4c58-ab14-107a68b91cfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f8b15b7-5291-4f87-91f0-209aa8dc5971"
                    }
                  }
                ]
              },
              {
                "id": "f22b2bf0-4cab-41b6-823f-4e4490ef1fe8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e27d5298-4f23-42ed-b9bd-2d841cc3c2a5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090cb760-513a-4288-be7a-13ae30813262",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "36a15a77-ab9b-4876-9e5e-c9c8d97aaa6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1312aa4-bf76-4088-bda7-06246fc41efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "badd6e87-4ef7-450a-9558-c1193b6d6d8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88a611fb-e4c5-4261-84e0-2479424abc64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d0cb159-1c67-4db4-88b4-974e1328de23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c51c799-a57c-428e-be51-d9d13984068b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05e55f00-45f8-4b3a-b0f6-bc20287c675d"
                    }
                  }
                ]
              },
              {
                "id": "6fcd4c48-5782-40fe-8dc5-753f4bffb01b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8174f363-59f1-4715-86f6-89129bbff6aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7c50b9-e55c-4b3f-bc7a-10015d233007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e27e2f40-ea8c-4956-a3cd-17f2c028a1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eea40d9-c805-4fdd-abc0-2644174f4962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa06dcf-224d-4c29-b4ad-35ca40793092"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84f70405-1a72-4634-9c17-95bc5f5cbcbe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5bc5dc7a-6c7b-4c2e-9115-2538b77b83c9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3836ffdc-f8bc-4e5e-8182-20740dbceacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f31a4e0c-b969-4056-9d78-a61ba27796b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26dc368c-6d2c-4d7a-a42a-ef1aa22eed5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10f43c35-5e52-4c48-ad64-f62dde839f1e"
                    }
                  }
                ]
              },
              {
                "id": "8f4ef0ff-8333-4919-80dd-5b1fa4be9981",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63d88863-e486-4abe-90a7-5ea8dcd1067d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00278aa0-c89a-4c4e-af36-aae6a725918b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e3e887f-72b5-458d-95c7-e50a58bddbe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70b58c30-7ae3-4954-8d9e-bbae481385f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "357d66e8-14ec-41cb-997e-ae5db46bd144",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "403bd03b-45ab-4b2c-a065-1a76b75f06b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "856be23c-cc6f-4aad-8b3c-eed1495b097a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b32b00c5-8dd9-426b-84c2-b26aa664d2bb"
            }
          }
        ]
      },
      {
        "id": "e6c9df1d-690d-4725-b6b7-a6bc6d0d2cc0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f7cf533-e8fd-4e3e-af00-c4252ec04a85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ea26421-64ff-4816-bbe3-ef8c72ed5975",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b51c2516-a18e-442c-ba2c-06f3fb477ac1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3de85e-5d7e-43e7-8036-e2f2a7129d73",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "31c6977c-9a38-406a-bbde-01a21a8aedb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7c5058-a920-41a1-81bf-aa5211e83e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a24eb10-7973-4a31-ae06-cb15a7d01a1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a672d810-a684-4cab-8220-f031fccb2748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a44464c8-5008-4cc6-989a-0c595338cd93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de7a3500-7d00-4600-9bb7-40094f38cc91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f81e5bb-ab4e-462d-a686-27b3a763a3d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f238edf-f54c-42c6-9650-a283c1515acf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7463f83f-5f2d-4532-b5cc-424ae9652c96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "974de5bf-fa5f-4121-9bf2-af59c36b858f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebacac5c-1059-4caa-9354-c94342cf2d0b"
            }
          }
        ]
      },
      {
        "id": "5049348d-1201-4afe-8c20-31be9321bb53",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "188ec41f-b070-4054-acdd-fe1f6ca5517d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab73bef2-3a8e-471f-a5de-a59538f34595",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ad7052c-62ff-4bdf-93d2-6fa2c9a14c90",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40079040-ed87-4338-aa0c-d8ebca9aeb0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0f22976-cb8e-4173-b812-c14b121b61de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c22dab-9106-4970-89ce-aad7db88b704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e844a753-1760-4e24-9163-cfbfbe099ad2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35ecba3a-a2ac-4e53-ad4a-0fbd26153acc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69249cf4-7faa-4870-aba7-20e50e1a1d66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e325e98-7e3b-44f9-8ad9-1fc64f064d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aa01538-6450-46b6-81b2-a6064f67f945"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "506cd6a0-a83d-43fe-ae57-a15fd1acb70e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cdfd920-9d8e-4198-9578-1d9d7b573bc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e6e703b-ac13-4fbf-8395-021be556fcd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dae47dd5-f4aa-486f-872e-b17610be511c"
            }
          }
        ]
      },
      {
        "id": "635f10f1-6d79-4575-8120-528785f7cfe3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "068d266e-3192-43d0-b9da-50af7900f2d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f935de26-96a9-4651-aa3a-23b3ffd601b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2562b0e6-82ec-4b75-9b40-4039fefc50a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571f9154-da7c-4b44-bb9a-85ce52d49f1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ec9311-3b44-463d-b8d8-720bf2b9708f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2710c69-8362-4f1d-8c32-66f1ad9d65d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b302d05-a7ef-4943-812c-0eaa783a20de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2477fce8-d004-4118-a7bd-a8406b0721b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82900c22-22e1-4c6d-bd6e-9d15ed7a5969"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac9f3821-8f75-4769-8d30-5cf1d808775d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65ca7020-b1cd-40f3-8747-c61e6315b4f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f85358ec-78dc-42c2-a21b-2dae6966d3a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7bbec575-9585-487b-8e25-849b73e7f666"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39d610ec-bb7a-4676-b13f-d10d8e1177a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccb76688-7a87-4c89-b555-15b91126c3c4"
            }
          }
        ]
      },
      {
        "id": "bbcd85be-b965-402f-9ff4-b92b2f8f0cfd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8adf6bfb-f9f6-4093-9834-b978a94214fc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "259e8cc6-1eb9-451e-9f48-207e84077253",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "105a35ad-a916-4ffd-9c4a-f24de2c9f310",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96259496-bbd2-4d4a-9b4a-dc3ba1c098b8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62632ed4-a991-4134-918c-2a3a05f49f58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 630.4647887323943,
      "responseMin": 10,
      "responseMax": 6778,
      "responseSd": 726.7025677673099,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687481157989,
      "completed": 1687481349372
    },
    "executions": [
      {
        "id": "415b1474-5a54-427a-a034-85a0dc2e41f8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c29ba5e8-865d-4be8-8bb1-83cbceb43e18",
          "httpRequestId": "3b2d9bbd-bafb-4130-bb70-bfc9da7ea1c6"
        },
        "item": {
          "id": "415b1474-5a54-427a-a034-85a0dc2e41f8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "590b9d10-180e-4f75-aea7-58816ae9ef06",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "a1d0fdae-33a9-43d4-b881-028a13dbcfb0",
        "cursor": {
          "ref": "a406f6ff-5581-485c-a285-f11166f01c04",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "01aef0dd-bbc8-4920-b571-b665392c73dc"
        },
        "item": {
          "id": "a1d0fdae-33a9-43d4-b881-028a13dbcfb0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "be1c004c-ca54-4a6b-9b82-07a945eef290",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7f780807-e87e-4d44-aa6d-10f64940fcac",
        "cursor": {
          "ref": "8fd06ecc-0a31-4cc6-acce-918a5b9ef12d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "32b7f457-3d29-4b79-a101-6a7d7f1acb0a"
        },
        "item": {
          "id": "7f780807-e87e-4d44-aa6d-10f64940fcac",
          "name": "did_json"
        },
        "response": {
          "id": "e7e1252c-d95d-4491-9b21-2a51b2409f65",
          "status": "OK",
          "code": 200,
          "responseTime": 924,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd60d07a-9093-4990-94c6-9ebe273f7a48",
        "cursor": {
          "ref": "d612914b-3ba5-4ccd-b08f-e9dcb8574ea0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b991c6ae-4b7e-4a70-9684-7858556b4fe0"
        },
        "item": {
          "id": "cd60d07a-9093-4990-94c6-9ebe273f7a48",
          "name": "did:invalid"
        },
        "response": {
          "id": "482be4d5-18b7-441b-bd80-e45faef221cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd60d07a-9093-4990-94c6-9ebe273f7a48",
        "cursor": {
          "ref": "d612914b-3ba5-4ccd-b08f-e9dcb8574ea0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b991c6ae-4b7e-4a70-9684-7858556b4fe0"
        },
        "item": {
          "id": "cd60d07a-9093-4990-94c6-9ebe273f7a48",
          "name": "did:invalid"
        },
        "response": {
          "id": "482be4d5-18b7-441b-bd80-e45faef221cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59dcf9f-d82d-4618-ace0-2132520f1d03",
        "cursor": {
          "ref": "9c2dacd2-811e-448b-8225-cff5303ef2f3",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2aa255aa-7db0-449f-b81d-1460864a935c"
        },
        "item": {
          "id": "b59dcf9f-d82d-4618-ace0-2132520f1d03",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f12dd22c-d0a6-400e-afaa-8c2f21194cfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 798,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9114851-a428-4b65-8655-1278711be9e2",
        "cursor": {
          "ref": "6b91287e-31d1-4adc-abff-4a52737dad69",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dd576870-193c-4a2e-ab17-f5615fb56e9b"
        },
        "item": {
          "id": "c9114851-a428-4b65-8655-1278711be9e2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7505ddbb-59e1-4c80-9474-30b3d57fa32c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 616,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a21e1e7-ffc4-4867-aa2f-b3ca857cc297",
        "cursor": {
          "ref": "07278dfe-2eb7-44cf-8bd7-76344da4ce07",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f809b883-2ea3-4cc0-a242-af56e39db259"
        },
        "item": {
          "id": "9a21e1e7-ffc4-4867-aa2f-b3ca857cc297",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "582be663-2109-4637-92e5-318b2414db7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b6785-4cd5-493e-a113-6780f49cac36",
        "cursor": {
          "ref": "b7f5a5b2-41ba-4a4d-87e7-fa50c34908db",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb4271f2-df70-4f97-bb05-fed5a9a79e54"
        },
        "item": {
          "id": "ed5b6785-4cd5-493e-a113-6780f49cac36",
          "name": "identifiers"
        },
        "response": {
          "id": "a055edf0-01c1-4d06-a0ff-f85c9655bb36",
          "status": "OK",
          "code": 200,
          "responseTime": 1322,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c156761f-f587-46fe-8c38-8e41370e1417",
        "cursor": {
          "ref": "53d7e255-222e-438c-a80a-270282520059",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "55d4997d-87f0-42da-9c02-4d5e8164b6c3"
        },
        "item": {
          "id": "c156761f-f587-46fe-8c38-8e41370e1417",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4040427-95cc-46c4-87a3-f967b84ed43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af92c9f7-3562-431c-84e8-a46805c1b969",
        "cursor": {
          "ref": "d9c736b2-aec1-4402-bdc2-b978398e6661",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c400af60-6589-435e-9e6d-57fdf242c801"
        },
        "item": {
          "id": "af92c9f7-3562-431c-84e8-a46805c1b969",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "826be67c-a78a-4424-b9f5-6fbdf523c12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7597d9d7-75f8-4efb-acfc-1e82e5412d77",
        "cursor": {
          "ref": "4449b626-dbd4-40b8-89d8-8ebe1651dc87",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "95096758-e0e7-4911-918a-e1f9602a7a73"
        },
        "item": {
          "id": "7597d9d7-75f8-4efb-acfc-1e82e5412d77",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b0a0f0fd-2a4a-4b83-a296-10014ae27e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140f0979-cbf2-4db8-bd70-d856d98e793d",
        "cursor": {
          "ref": "485da2d7-e131-4ea5-b973-e2530fff0c27",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "58e10651-d7ff-46e8-8de0-2ead97918624"
        },
        "item": {
          "id": "140f0979-cbf2-4db8-bd70-d856d98e793d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "63f28a06-2bda-498f-9242-6c324cdca76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63469b8a-1137-4086-8aa5-8f108b0a7dcb",
        "cursor": {
          "ref": "ae8a73dc-79fa-452f-b03f-2fe17a7b5eb9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "61b2b544-d8ec-4283-a6a9-7f53f67e7aa8"
        },
        "item": {
          "id": "63469b8a-1137-4086-8aa5-8f108b0a7dcb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ea75cd7b-2ae3-4794-aa3b-893192444351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf45ba9-2051-44e3-a843-0f8c6f4c66b8",
        "cursor": {
          "ref": "f7d389a0-598d-4ba8-ae9d-5ccbdb594545",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aed693fe-4b7c-46db-81ef-2b21cc701ce9"
        },
        "item": {
          "id": "2cf45ba9-2051-44e3-a843-0f8c6f4c66b8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8f2f66c5-6118-41aa-b4d0-5b8fa9a505c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ac6818-4112-4ee7-9a35-fd745c7e67b5",
        "cursor": {
          "ref": "7938608c-2699-48ad-a4e3-599d55ece687",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c31fd2f5-5a7b-48b6-a635-a52137badf94"
        },
        "item": {
          "id": "18ac6818-4112-4ee7-9a35-fd745c7e67b5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7957fd5b-3878-41e6-ac53-62898e7701b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11042f8a-ab36-4f4f-b1cd-76e8dac728e6",
        "cursor": {
          "ref": "15991af5-5cb5-4515-98ec-b324102e6227",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2fd55362-6bc9-4893-ba73-35fe63b5db9b"
        },
        "item": {
          "id": "11042f8a-ab36-4f4f-b1cd-76e8dac728e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3e1e86c9-8e27-497d-b24e-4b459350f252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d70d49b-913d-4539-9c3b-ae201b2d52ff",
        "cursor": {
          "ref": "5aac1c90-a0b6-486a-aeea-636bc3a22f48",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c43d4039-e537-4b77-8021-6467e84eb94b"
        },
        "item": {
          "id": "4d70d49b-913d-4539-9c3b-ae201b2d52ff",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8ba2ca0c-6a59-4017-b818-2a1c7743c9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf802b1-4eec-493e-b9fd-699c8f283102",
        "cursor": {
          "ref": "d7486983-daa9-4663-a367-ef5cb8465457",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b1ec7556-10c3-49c4-ac56-f8e37dea6345"
        },
        "item": {
          "id": "9cf802b1-4eec-493e-b9fd-699c8f283102",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ed65d7c0-cdb0-4502-81bf-84a8ef9b817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f362c74-2be2-4030-9460-b9355b8ce390",
        "cursor": {
          "ref": "b97bcf02-f6a7-41ce-80e9-86785d1563fa",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "66bf2e35-e0b8-4736-ae27-c6f6141fa6d3"
        },
        "item": {
          "id": "8f362c74-2be2-4030-9460-b9355b8ce390",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0e4c6f82-8b83-48d9-9781-638ec1c4502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b675fc-5e06-4f0d-bd5b-c7f6c421c386",
        "cursor": {
          "ref": "f4e084ed-314a-409f-aa28-855f4aa95629",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2c44c42a-6f6b-475a-aa68-814f98d4718c"
        },
        "item": {
          "id": "69b675fc-5e06-4f0d-bd5b-c7f6c421c386",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "87363576-3ba3-437c-aa7a-711c821e66b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c07871e-9684-4c33-875e-0fda8af1373e",
        "cursor": {
          "ref": "c3293fc8-87e3-4e31-9443-06a93c4e9968",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "369945be-dfef-4506-b31c-acb5a92ddf05"
        },
        "item": {
          "id": "7c07871e-9684-4c33-875e-0fda8af1373e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1fc2613e-20c4-4c73-8a63-60c24edeb8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4a4ed-1d8c-4c3c-8543-9ce749c6974d",
        "cursor": {
          "ref": "6ad8d3d2-4af8-4233-9359-34cd85c7cad2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1920902b-1bde-4bb4-88de-81bd77b0ea79"
        },
        "item": {
          "id": "c7c4a4ed-1d8c-4c3c-8543-9ce749c6974d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "32018a7d-a57b-42df-9700-777850c6f370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbded41-9df6-495e-abcb-37ce3e627847",
        "cursor": {
          "ref": "f4b26bfa-6e42-41e1-972e-0ce25f82fc05",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b97b9c8b-7f25-4e60-b5f1-4b94a24c9be4"
        },
        "item": {
          "id": "adbded41-9df6-495e-abcb-37ce3e627847",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e83b90da-c17e-4a09-b129-1b679e30325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd1ce33-16fb-4caa-a1d5-70bf469bf397",
        "cursor": {
          "ref": "743d20cb-aa57-4559-bf49-4e43e3f48eb8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d59de94-e7f7-478c-8e55-b74b1988b3ae"
        },
        "item": {
          "id": "7cd1ce33-16fb-4caa-a1d5-70bf469bf397",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "39f03e00-95c4-4ee8-8450-cce578e787b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1ac017-25d8-4801-a9bc-0598386b5f4b",
        "cursor": {
          "ref": "6bac621c-8c8d-45fe-852c-e95cbcda5c59",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b6515cbe-9a87-4309-9346-bb9b6e1bd82e"
        },
        "item": {
          "id": "6c1ac017-25d8-4801-a9bc-0598386b5f4b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "327d3079-0104-44f1-9863-c60f66b798d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589ec62a-cf36-4c10-9ac2-c26d185daa97",
        "cursor": {
          "ref": "8793f70a-44c2-4f42-b96f-2ee99ac56dd0",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b758da0-7418-4404-b368-b876aa997712"
        },
        "item": {
          "id": "589ec62a-cf36-4c10-9ac2-c26d185daa97",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ce24df70-eaf0-48bb-942b-6730e4761df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba20ccd-396c-4068-b4d8-b54e3f0eae45",
        "cursor": {
          "ref": "8ad0b32f-06a8-4e58-bda7-238451459183",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e7e19838-8f36-4dd9-8b65-addebdf7c3df"
        },
        "item": {
          "id": "dba20ccd-396c-4068-b4d8-b54e3f0eae45",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6212d623-fbfd-4c89-97af-918024500a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc5bd12-f8bf-4347-82e9-eef582902d4a",
        "cursor": {
          "ref": "f5740819-4173-4173-9286-249d5facf0cc",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "44e06672-037e-4c8b-b0c6-56dc5a467846"
        },
        "item": {
          "id": "bdc5bd12-f8bf-4347-82e9-eef582902d4a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b12f21ec-3c22-483c-a771-029b3d1cd2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbdb47f-02cb-4f22-aa44-7fa19471c192",
        "cursor": {
          "ref": "797ca30d-f477-43ea-881f-82ed18b3ca63",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bf1f4d25-2dd9-473a-b7bb-77dcddb01d34"
        },
        "item": {
          "id": "0fbdb47f-02cb-4f22-aa44-7fa19471c192",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a4f8d4ad-1906-4dd0-96ff-7cdf088b5aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8336491e-74bf-4b3d-a6b7-5542fa5bd514",
        "cursor": {
          "ref": "5303943c-0131-4b4b-8241-00803906ffc1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8e70344b-f3b2-470d-b232-cc42cd6c2000"
        },
        "item": {
          "id": "8336491e-74bf-4b3d-a6b7-5542fa5bd514",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "80c76e06-32cb-4ae7-8885-4007ade2b1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f28b0d-b84a-452e-b95e-04fe22649df9",
        "cursor": {
          "ref": "8384ef6b-eea2-4a06-b971-2f9c187bad77",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2696c9f7-6f87-4300-9607-dc85718cdb68"
        },
        "item": {
          "id": "58f28b0d-b84a-452e-b95e-04fe22649df9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "10e6b292-fbd4-42d6-aac0-fe1ee69807e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebac2b2c-1bf1-4a06-96fe-9ca3070aa501",
        "cursor": {
          "ref": "5564fe92-f43b-46e1-b5c1-305e71f67c1f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "05fe1e29-daa1-485d-8407-461323d442d7"
        },
        "item": {
          "id": "ebac2b2c-1bf1-4a06-96fe-9ca3070aa501",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "68cc2bab-844b-469b-845f-4f0c8837effa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c351bcd-08e3-4e9b-a6d1-41815f4514f4",
        "cursor": {
          "ref": "9bc773e1-ac1f-4f2e-a988-d044eff04647",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "57f89746-a2ef-44e1-a45f-6576ee859433"
        },
        "item": {
          "id": "9c351bcd-08e3-4e9b-a6d1-41815f4514f4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "caf5a860-d2eb-41e9-8ac8-f26f10ba1e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4d3ec2-58c1-42d1-a563-3292eeff3a98",
        "cursor": {
          "ref": "dc25fe37-6d36-46a1-8ba2-955a721e832f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "508607c7-a11f-42df-ae43-b93ce3a40fbb"
        },
        "item": {
          "id": "ea4d3ec2-58c1-42d1-a563-3292eeff3a98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "debd9b1e-6861-46b3-b029-abe724fb8d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9dd0e5-d111-43eb-a85a-639f9ccd7961",
        "cursor": {
          "ref": "916965d1-1b67-491b-888b-e512545cf33c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a5cc255f-dc4b-4ae5-bd9b-169da1c372b4"
        },
        "item": {
          "id": "bb9dd0e5-d111-43eb-a85a-639f9ccd7961",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9d4b1e43-bf9e-4512-91a4-3e0d6b0b9a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a795298-c99f-4b01-abfd-37cfc22c9b2b",
        "cursor": {
          "ref": "3e1a08e9-9110-433e-b646-7e14c12d0211",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2ac5dcb6-0f86-43c1-bdc3-bf162e26c26a"
        },
        "item": {
          "id": "8a795298-c99f-4b01-abfd-37cfc22c9b2b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4c45eaaf-c971-4276-9481-f02378819cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a1d9d-268c-40c6-b62b-8feab7c03fa8",
        "cursor": {
          "ref": "febacb72-c7fe-4f68-891a-6ca270caeef4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e5bad83-55cb-4e46-93e8-00ea8efe33a4"
        },
        "item": {
          "id": "5c4a1d9d-268c-40c6-b62b-8feab7c03fa8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ed102687-11fd-4a43-8f0f-7aca2289acf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f1099-6baf-4c77-9bfc-e89a544866f2",
        "cursor": {
          "ref": "768b417b-ca50-4260-a55a-8713419adc77",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3d6b49f8-df07-4641-9670-097fccc7f68d"
        },
        "item": {
          "id": "ee1f1099-6baf-4c77-9bfc-e89a544866f2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6ffcfd30-c0a0-48e8-a1f7-1baf08794776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aeabbf-795b-428f-b70e-2710a83ab171",
        "cursor": {
          "ref": "285adbe7-fcb7-4871-8ab6-b55888d80536",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a955fa3b-d873-4a4d-a294-21d6bf2124ef"
        },
        "item": {
          "id": "70aeabbf-795b-428f-b70e-2710a83ab171",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "109b918d-626f-434e-b3c5-3c4f6144ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3490f6b-4cd0-4956-8400-c3303b40f162",
        "cursor": {
          "ref": "9944e7f9-c26b-4a8c-a382-6dde57c8bdd8",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0028baa0-5a67-4b10-9438-135e7a88bb84"
        },
        "item": {
          "id": "f3490f6b-4cd0-4956-8400-c3303b40f162",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6befc4f2-e9bc-4de4-982c-c4501227688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f71211f-795f-486f-96df-db5e8c4dc454",
        "cursor": {
          "ref": "1f660180-cdd4-4867-8a80-d0894bbeb8e7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eab09f6c-ca68-4adf-bb04-dd6c7387d17e"
        },
        "item": {
          "id": "6f71211f-795f-486f-96df-db5e8c4dc454",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "346ad9ef-573d-4525-8f85-a643efa66472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcae09a8-952b-4171-bf8f-54aa3d5a6ab0",
        "cursor": {
          "ref": "db97a696-08bf-4f83-9f99-dcb75e063174",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44b2937e-90f9-4946-a6aa-71567d4ede41"
        },
        "item": {
          "id": "dcae09a8-952b-4171-bf8f-54aa3d5a6ab0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5683c089-4278-4b82-89d9-00bca3a47f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f66fa1-2ca5-4794-a83c-8cb1c045997d",
        "cursor": {
          "ref": "7ccf9e28-af66-4d36-bd75-ccbdbf902611",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "04273bbb-1ef0-4043-9f27-0ca88131aff7"
        },
        "item": {
          "id": "c2f66fa1-2ca5-4794-a83c-8cb1c045997d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5f5aba09-9dc6-4048-8d3f-40dfbd94b653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa8047-c200-4b70-86f5-52c184c6adc2",
        "cursor": {
          "ref": "2d0f6a5c-8245-4094-be76-708d61743e8b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f69dab6-31ba-482e-aa40-71c8b4aaa15e"
        },
        "item": {
          "id": "4daa8047-c200-4b70-86f5-52c184c6adc2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5fbdb412-67c0-40c9-8d09-51e42a34550d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 769,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916fb526-f1ff-4c50-830d-372c9d907f08",
        "cursor": {
          "ref": "b7d5c965-e268-419e-851b-d99fd38c2cb6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dfb3a472-d4ea-4eca-9ca9-f523252325d2"
        },
        "item": {
          "id": "916fb526-f1ff-4c50-830d-372c9d907f08",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b3423068-9537-4dbb-a7ff-99f5494def75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1314,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cda4bcc-101f-4bab-ba48-47ba2d44a57b",
        "cursor": {
          "ref": "028ce6c0-859f-4486-a0aa-9a309bfc33c4",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c82dc2c8-d23d-45bc-87ed-55830c68bdb0"
        },
        "item": {
          "id": "6cda4bcc-101f-4bab-ba48-47ba2d44a57b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "36ac3951-941c-4699-a485-d850aa7f2227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd48e98-4ee6-4bdb-b419-c1307055f36f",
        "cursor": {
          "ref": "c2bf6b5c-c20c-46c6-a9ce-618fff7d167f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "171da397-b4e1-46e5-8a76-a64fb631760a"
        },
        "item": {
          "id": "dfd48e98-4ee6-4bdb-b419-c1307055f36f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c0fc68be-e824-488a-b7d2-8d0aee1ee06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc1b80-2ca6-41bf-9828-bab538ef02bd",
        "cursor": {
          "ref": "c0c0f897-873a-4f27-a90e-dced825599cd",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c51aa688-2805-4b43-bf62-200f4c671aa8"
        },
        "item": {
          "id": "2dfc1b80-2ca6-41bf-9828-bab538ef02bd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d0d33dd-2550-4442-9e76-d23a8ee73bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14fe561-4b5b-41a4-8ecc-97656f65ba1f",
        "cursor": {
          "ref": "dbb770d7-0a62-4969-b690-7debd47d201e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "909cd606-9d63-4b24-b6e1-c824bbff5d55"
        },
        "item": {
          "id": "e14fe561-4b5b-41a4-8ecc-97656f65ba1f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dac3e2ed-af3a-4803-8c40-a23019bca336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a856bc97-3a6b-413d-b8f5-652a0f7472b0",
        "cursor": {
          "ref": "d5f0973e-90b6-436b-8b6b-975ec1d4930a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7e07e134-e14a-49a4-8672-154f66c2199e"
        },
        "item": {
          "id": "a856bc97-3a6b-413d-b8f5-652a0f7472b0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4c98cf54-4a6c-4c56-9f2e-482cae83d333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8af454-333f-4a8d-bb71-3173d336a09e",
        "cursor": {
          "ref": "a66a9a40-40f0-4640-bae4-4dd9863c6e7c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "11374148-366c-44d9-9061-78986ef9310d"
        },
        "item": {
          "id": "7e8af454-333f-4a8d-bb71-3173d336a09e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bb128818-0779-4135-9832-ad99d771efd4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 795,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c34045-0ae7-48b5-a48a-1d9def081d46",
        "cursor": {
          "ref": "9f40d39d-0fbc-4241-b494-1d6e6c41c280",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9d6fa944-4db1-41db-8098-6ff8332aa372"
        },
        "item": {
          "id": "10c34045-0ae7-48b5-a48a-1d9def081d46",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "edcc8efb-2a15-4f95-b776-571e07798577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15116e48-d0ea-42ff-a2fe-2a16d63d7b66",
        "cursor": {
          "ref": "7581becc-e397-46ef-8a60-d185e7123b48",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e08b5022-fd8e-460b-b601-a8cde728e37d"
        },
        "item": {
          "id": "15116e48-d0ea-42ff-a2fe-2a16d63d7b66",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3f1b860f-bbae-43d0-a02f-2af2e878c339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c7707e-cf45-4492-939c-56bdee07f362",
        "cursor": {
          "ref": "1299cac5-7d98-4aa6-9970-14d50a47bcb7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dce2f6cb-625e-4c9a-9da0-5f1bd41c84d4"
        },
        "item": {
          "id": "d3c7707e-cf45-4492-939c-56bdee07f362",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f6fec8bb-434f-4151-82b7-032dd573b0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9b3f0f-2d71-483e-8aa9-7c45722322af",
        "cursor": {
          "ref": "35e691da-0a8e-4881-b7b0-01154cae406a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c8576caa-94cc-45eb-9482-29d8d5e0a33c"
        },
        "item": {
          "id": "cf9b3f0f-2d71-483e-8aa9-7c45722322af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47a91654-a7ab-40ec-b6c0-29bb1b92dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6569c7b-9be4-4e52-8502-6783ba878a56",
        "cursor": {
          "ref": "f228b89b-1145-4271-b97b-17123defab1d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "12288b0a-f09f-4385-b0ca-5c85a4f6b567"
        },
        "item": {
          "id": "f6569c7b-9be4-4e52-8502-6783ba878a56",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8de7e1ff-bbbd-4222-9948-ba77af204a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aa8211-884a-495e-9fdc-b9b1b82355ef",
        "cursor": {
          "ref": "f5a8ede1-d074-4ed4-b3c4-aaea1ba7ff0e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2bd0a6ce-909c-4d6c-9ce7-5fde5dde64f1"
        },
        "item": {
          "id": "e7aa8211-884a-495e-9fdc-b9b1b82355ef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "be4aa299-9f3e-4a5c-9c99-75c507068d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc3246b-1895-4880-8a1a-5ae464533b04",
        "cursor": {
          "ref": "c3f86653-24c6-4fee-9b85-d868f2bb4cc6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "38fe4c53-4a93-44b0-9217-52b679be3a9e"
        },
        "item": {
          "id": "afc3246b-1895-4880-8a1a-5ae464533b04",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3215bfcc-ae4a-44fe-a50a-fc0505ed2ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4108bf43-1114-4947-9745-499c782f792b",
        "cursor": {
          "ref": "72488750-1aa1-4497-bd70-8a603ec2b408",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "68fd1890-8359-4e42-be74-9c8a7ed2ab84"
        },
        "item": {
          "id": "4108bf43-1114-4947-9745-499c782f792b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b661d54c-aeeb-4def-8ed1-0d89a35c7b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed7f496-d46b-4731-9491-cba65afbc117",
        "cursor": {
          "ref": "220d12cf-8fdc-46b9-a3a2-dcfd1f32d8bd",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "83eb2c84-1d72-402d-a680-3304dec4adae"
        },
        "item": {
          "id": "9ed7f496-d46b-4731-9491-cba65afbc117",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "26ed7814-5f2e-4fc4-9d46-3d98ffc54591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614599ef-1449-43fe-9c74-a4acb72495a0",
        "cursor": {
          "ref": "448e2e7b-aa2a-4298-ac19-23e4707d54f6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6af8ba6b-88c3-4473-8ae8-6b687543a90d"
        },
        "item": {
          "id": "614599ef-1449-43fe-9c74-a4acb72495a0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1976f5f8-0279-42b0-94d6-b07a8372c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13202ab-9464-4a27-89d0-65d0cb964aa6",
        "cursor": {
          "ref": "3e8d276e-e26c-427d-98dd-871415aaae27",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bf9a4d51-01a7-43d8-bb93-7848700adc67"
        },
        "item": {
          "id": "c13202ab-9464-4a27-89d0-65d0cb964aa6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "457043aa-3d01-417d-ba0d-914ab517ebbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79908c8f-846d-479f-b0b9-30632cc2a9a1",
        "cursor": {
          "ref": "7c5f2330-aca6-406f-bc36-2562e773ece4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "31e6933d-121f-4618-b8cf-cbaeb48e2645"
        },
        "item": {
          "id": "79908c8f-846d-479f-b0b9-30632cc2a9a1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7cde758b-0964-4646-8ee6-482e3b491336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce2f3dc-32bb-4361-a9a4-084cd8347b24",
        "cursor": {
          "ref": "54599e71-0e52-409d-8017-ed3e044819de",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9eb500ea-87c4-4fa5-baf1-fbe905810154"
        },
        "item": {
          "id": "3ce2f3dc-32bb-4361-a9a4-084cd8347b24",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c52ef24-d576-49cd-80e1-f22b4cab67b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93a2bd3-3d65-4b30-8ed1-0ff91f03fbfe",
        "cursor": {
          "ref": "7564278e-a7e0-4287-b043-25b7331bae7d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94a18c2b-3df1-4df4-b7c7-64572b75a3c6"
        },
        "item": {
          "id": "f93a2bd3-3d65-4b30-8ed1-0ff91f03fbfe",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1e1f74da-f6de-4c35-8e0c-b3085da879c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c85a62-0fb1-4191-b32c-03bc2bf591de",
        "cursor": {
          "ref": "012ad021-3e6a-4235-8f29-b56c60cbb225",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "21b4a64e-6d94-49d5-8975-27d6ad9a0d91"
        },
        "item": {
          "id": "25c85a62-0fb1-4191-b32c-03bc2bf591de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2816f9bc-1a51-4bc9-a23d-588139b64ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43917b9-6803-47cd-ba89-3ce186f1dee1",
        "cursor": {
          "ref": "9a52d0fc-85ac-40cd-9c4f-4a87c3118e32",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7dc0f5de-24e6-4b16-b110-0d3f95ff1e88"
        },
        "item": {
          "id": "c43917b9-6803-47cd-ba89-3ce186f1dee1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b131e7c5-6a76-4de1-b78f-fc81fa766676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806d0d8c-47b2-4219-b285-6bd1a8d23937",
        "cursor": {
          "ref": "1c1dca14-e249-459d-b774-c8587c963b8e",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cff1e435-7a4f-4480-9ab3-cd121a364de8"
        },
        "item": {
          "id": "806d0d8c-47b2-4219-b285-6bd1a8d23937",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a6f3d20b-e00d-4f06-b704-e7fa3156c1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf6d33c-5f49-4b4a-b94c-fc611f04c8e0",
        "cursor": {
          "ref": "a8eb0959-70c1-459f-b11e-2904fe10c770",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "86b10958-2ce5-4ecf-947a-fd61b589085e"
        },
        "item": {
          "id": "5bf6d33c-5f49-4b4a-b94c-fc611f04c8e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a3c14eeb-cec3-4320-b07f-aaef8cb2ca2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529ae3d2-164c-41f2-892b-52a7257fefe3",
        "cursor": {
          "ref": "1e15e685-3335-443b-9910-226c75889a26",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "87362603-a939-4c87-9473-a920f9f7f4b6"
        },
        "item": {
          "id": "529ae3d2-164c-41f2-892b-52a7257fefe3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f5c2170f-c846-473f-80ac-5a900508dcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ccaa43-5b13-475b-a66f-0a0a4c4a714a",
        "cursor": {
          "ref": "f94b2f6f-b617-4cf2-8c65-990dbc8d69d4",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3a782c56-e108-44cf-a634-bf06610280d8"
        },
        "item": {
          "id": "78ccaa43-5b13-475b-a66f-0a0a4c4a714a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cde610ee-09d9-404d-b323-51f4f6329ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a855f-cb3b-4bef-b976-8429b602cd8b",
        "cursor": {
          "ref": "6389ffe1-845d-43ba-969f-ea12d9445474",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "efadeaaa-82d3-462d-bd23-f77e2ad24c1e"
        },
        "item": {
          "id": "231a855f-cb3b-4bef-b976-8429b602cd8b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9045a7df-fdce-4b9e-aa0d-defdf33786d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce4212f-f76d-4177-a87e-ca1397dbd5f0",
        "cursor": {
          "ref": "d165c9fa-9a45-4e4f-90e9-8ba361a08c5c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff1045a1-e205-4b28-bf84-4ab6051ebdff"
        },
        "item": {
          "id": "cce4212f-f76d-4177-a87e-ca1397dbd5f0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f3369646-fa21-4999-85b8-1d7976f135c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a0e18f-b070-4aca-a475-9d663027a505",
        "cursor": {
          "ref": "e8d7bfa2-a7e4-4e7c-a576-55bcc5fe0aa9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8a5265c5-8da7-442a-b393-96e6124c1313"
        },
        "item": {
          "id": "91a0e18f-b070-4aca-a475-9d663027a505",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eb8e2351-bcef-4c31-843e-c33bf13172db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe2db42-428c-4bd7-884f-47f0095d9943",
        "cursor": {
          "ref": "e80ff50f-ad32-425e-ba67-e958c22ecd0d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "33cdd923-6843-4234-88bd-8415ebb0d0c6"
        },
        "item": {
          "id": "0fe2db42-428c-4bd7-884f-47f0095d9943",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "16f5fd27-0dca-416b-b42b-0b2e34a36131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183f9ff0-98b4-4173-9cac-14dc7110f4fc",
        "cursor": {
          "ref": "bc401997-6db1-477f-8552-64f877fb71e5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e9ca9cee-748d-4948-b624-9a539d5cc15b"
        },
        "item": {
          "id": "183f9ff0-98b4-4173-9cac-14dc7110f4fc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9450099-cb89-4e9f-8809-65cb1c74ea32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95dcbb-c08f-476e-95ee-cfd0db25a859",
        "cursor": {
          "ref": "c7afe0b3-8c4c-4127-8c45-e1463c60283d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "42a61e14-88b9-493e-913e-a35e3d9c53ad"
        },
        "item": {
          "id": "6b95dcbb-c08f-476e-95ee-cfd0db25a859",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d5103b8e-144f-43be-bdf1-4749ea542412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5e3b1e-bd61-4bf0-8134-ba953759d51c",
        "cursor": {
          "ref": "6fae77c6-1b9d-4b8e-a160-4bfd2ac4d2c7",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "48365516-644a-4e5e-ba70-6efe392941c9"
        },
        "item": {
          "id": "bc5e3b1e-bd61-4bf0-8134-ba953759d51c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e46dda67-238d-4661-9ade-f8bba6ace71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2d5fbb-d4c2-42cc-8d81-fd7b4bfdcd9a",
        "cursor": {
          "ref": "b1027444-20db-448c-bb13-7e089d583d63",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1347f872-aa3e-4cbc-871b-e902fb5123a7"
        },
        "item": {
          "id": "0c2d5fbb-d4c2-42cc-8d81-fd7b4bfdcd9a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "06ef2b91-3557-4b7f-a05b-01cf82bb419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd239ce-7a40-43f1-82c0-96bab91bd61d",
        "cursor": {
          "ref": "0dbce866-bc5d-4901-b0ac-ca4d55e5a729",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "66291d33-642e-4bbe-8de2-cf73f3475912"
        },
        "item": {
          "id": "fbd239ce-7a40-43f1-82c0-96bab91bd61d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "41c7e750-b4c2-456e-8e65-88a95896f62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4075c68a-c53a-4a80-b321-eb08777b5250",
        "cursor": {
          "ref": "733379af-334c-42a9-8bb8-807533bd7b3c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c515b954-c651-4329-b4dd-140451e29aed"
        },
        "item": {
          "id": "4075c68a-c53a-4a80-b321-eb08777b5250",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9eb6be2c-3350-43e9-95a1-74d625815f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2153f174-9059-41e4-adff-825840a94238",
        "cursor": {
          "ref": "8d633fbf-5b44-4aa8-9540-426eb48b0830",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cfa953c8-069e-4de6-99ee-321051e8e105"
        },
        "item": {
          "id": "2153f174-9059-41e4-adff-825840a94238",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43cef46a-4626-40ce-8662-cc9e77a4af5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b495bc49-8893-4e34-b276-d5fd63af66fd",
        "cursor": {
          "ref": "87c7b3a0-a818-471a-8115-4b78805f1dcb",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0db850ff-4b34-4baa-a857-a89184c41828"
        },
        "item": {
          "id": "b495bc49-8893-4e34-b276-d5fd63af66fd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "958e4e01-153e-4d4a-b16b-7d86d4562620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ef9ff1-4dc1-46f9-9aaf-b7326039a4a5",
        "cursor": {
          "ref": "f1befef8-6f62-49ec-be24-e1da66d69d92",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b691e6e0-a5c6-40b7-aa82-a4bf6e285a26"
        },
        "item": {
          "id": "76ef9ff1-4dc1-46f9-9aaf-b7326039a4a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c81a24b-7bc9-43db-b65e-46e0b1e9e4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb83a54-3b44-454c-a895-510fe2b20211",
        "cursor": {
          "ref": "20c320c4-8711-4371-bcd7-9641496b1a0d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d16573ea-e984-43b5-acd5-5d59135e96b1"
        },
        "item": {
          "id": "6fb83a54-3b44-454c-a895-510fe2b20211",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "801e7062-2c1d-4df0-b890-ac3f9dc9ea0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49299eec-f27d-4f3b-a71b-0f39471195c6",
        "cursor": {
          "ref": "87bc1e2d-6dc7-4c0f-b30f-0a1f0896c6e6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d4d66b4-32b9-4679-b3cf-509fbab07cbb"
        },
        "item": {
          "id": "49299eec-f27d-4f3b-a71b-0f39471195c6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1014a1b1-8731-4488-a076-8101d822329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8778058-b285-42b4-ab27-2d3e7d581270",
        "cursor": {
          "ref": "81848eeb-b0ad-428c-948a-49b318ccc789",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1547e2bf-ddb1-42cb-a25e-b04df3851a38"
        },
        "item": {
          "id": "b8778058-b285-42b4-ab27-2d3e7d581270",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1596eb7-7928-4490-bfea-a034f9b78a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc7bb9b-69eb-44f0-a1fa-1ea838b5fdab",
        "cursor": {
          "ref": "7b94fe6e-e3ff-4118-8cac-b73a219f8786",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cb529485-02a9-4747-b3b5-67fbacd2279d"
        },
        "item": {
          "id": "dcc7bb9b-69eb-44f0-a1fa-1ea838b5fdab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "72d12fe9-ac28-46f1-b34b-69c525e43e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a09797-2567-4183-8697-3b38e52e4e98",
        "cursor": {
          "ref": "6728d492-98ac-49f6-926d-5cf0871a6974",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1d817e30-d15e-4733-9c8d-ed95af03e394"
        },
        "item": {
          "id": "f8a09797-2567-4183-8697-3b38e52e4e98",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5d622a6-9c14-4302-a4cb-6478116be761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f7cc2-458d-4c93-9a90-151a2faf3f51",
        "cursor": {
          "ref": "c4af0467-ee72-47e5-bc9e-d1b7f67e9243",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1f392399-aad3-481b-847d-a80ebb471085"
        },
        "item": {
          "id": "f65f7cc2-458d-4c93-9a90-151a2faf3f51",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6fb1dbc9-96f0-4103-9349-a67e20bda138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f39eccd-0e79-4842-a3cd-6123debbf7d5",
        "cursor": {
          "ref": "95d3e478-5bb6-48d0-91b1-c16da63c5673",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e32097d5-3871-4f54-99b1-be31072551e7"
        },
        "item": {
          "id": "8f39eccd-0e79-4842-a3cd-6123debbf7d5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8599c2ec-41ac-40ad-832f-9917b77ce90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad1b194-cc70-4692-8d38-c4d05239ecb0",
        "cursor": {
          "ref": "593c6387-0778-48c7-832a-2be8126d739f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b2d2a3de-526b-4132-bc74-4c49d2b5dff1"
        },
        "item": {
          "id": "3ad1b194-cc70-4692-8d38-c4d05239ecb0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1ed7267a-738b-483d-bcab-96d8851788fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70402b5-c07d-49f3-a756-35b218e437fd",
        "cursor": {
          "ref": "bb4df3a1-9d17-4f41-bf07-8925ff7e5a3b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dc970c8a-403d-4c96-afbc-3546c6bbb361"
        },
        "item": {
          "id": "c70402b5-c07d-49f3-a756-35b218e437fd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4d678aec-69b9-4c7e-abfa-d9f04b92014c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06ffbb4-366c-4b04-9946-3685ddafff88",
        "cursor": {
          "ref": "286dd8e6-586e-4bc1-b57c-ffb6e69ec4ed",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "32327514-1c1d-4202-8da9-d54465110008"
        },
        "item": {
          "id": "b06ffbb4-366c-4b04-9946-3685ddafff88",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "765788a8-0ad2-400c-960e-baea2ee54830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9f1d52-0b2c-402f-a8d7-5584b26cd843",
        "cursor": {
          "ref": "e24894ca-6e6e-4ff9-9197-8bec43290260",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f55da56-71eb-4685-b7e3-defc95f540b3"
        },
        "item": {
          "id": "ed9f1d52-0b2c-402f-a8d7-5584b26cd843",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b89f0717-5c8c-47d1-9991-e250537bbe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a90ac6e-d223-432f-a1d3-9ee7e001357f",
        "cursor": {
          "ref": "21c7e585-f8b1-45b3-b399-f1e5f4d5b2eb",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4c13f062-ad88-418b-831b-2c474c63a201"
        },
        "item": {
          "id": "8a90ac6e-d223-432f-a1d3-9ee7e001357f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "82d6e8b8-5352-40c9-b829-d9fac05e64df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88b18e3-7b67-4e5c-987d-c7804749124a",
        "cursor": {
          "ref": "1f657213-5ea2-457c-8b1b-49caa6037c90",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1af1ffcb-9ebd-4d31-afeb-e5c26e8ee866"
        },
        "item": {
          "id": "e88b18e3-7b67-4e5c-987d-c7804749124a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dcd872e6-151e-4548-b488-5de193e8d735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd0b3f4-0b58-48c4-ae8c-3a07c0a461ab",
        "cursor": {
          "ref": "2a4a4423-118b-4b42-b34e-944c3d08f1d9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "830a26ef-1d91-477b-b63c-13593f26f8e5"
        },
        "item": {
          "id": "7dd0b3f4-0b58-48c4-ae8c-3a07c0a461ab",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3624c29f-00e2-45a5-9700-9248fffc48d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cba85c9-e689-49e8-a7e4-57afef917d8d",
        "cursor": {
          "ref": "2f4f61a4-3322-4ca9-a9d6-fcc88c7a8324",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1770aec8-8d3e-4900-8534-1918fa1c036b"
        },
        "item": {
          "id": "4cba85c9-e689-49e8-a7e4-57afef917d8d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2bd40866-f532-4ce4-90a4-37ba62c5becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb253568-ea06-4caa-8b5f-f3a77cd19a18",
        "cursor": {
          "ref": "a73938a4-d92b-420a-ad5e-b015be2da903",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea0938aa-5689-4b43-bdba-316ff0d9ec21"
        },
        "item": {
          "id": "fb253568-ea06-4caa-8b5f-f3a77cd19a18",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8500ea54-b944-4629-8bb5-f4b5f6a081bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e045e-1456-4c27-996a-96b27d271298",
        "cursor": {
          "ref": "2188ee7f-c7bb-4253-b787-45c76e5d8fe8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "71b6e8b5-755f-448e-a83b-30dac739c45e"
        },
        "item": {
          "id": "d71e045e-1456-4c27-996a-96b27d271298",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e8410b3e-9c4d-4c2e-9401-ee10838e2326",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcfae51-f290-4b36-bd80-555a9d348189",
        "cursor": {
          "ref": "3bf2c1e5-1525-4594-a902-84dc7948e4fd",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d58ee453-20b7-4e64-8b7d-8acc17be52dd"
        },
        "item": {
          "id": "2dcfae51-f290-4b36-bd80-555a9d348189",
          "name": "credentials_issue"
        },
        "response": {
          "id": "71b4d8fa-12ea-4b3e-a28a-1d6e4f251956",
          "status": "Created",
          "code": 201,
          "responseTime": 5950,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65a280f-385a-4bdb-8738-1b4acda84055",
        "cursor": {
          "ref": "0a3a3762-9158-4d70-933b-55c579d69ebd",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "32d2cfbf-f5b9-46b3-aa03-8a48ad8d5501"
        },
        "item": {
          "id": "d65a280f-385a-4bdb-8738-1b4acda84055",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d455b1af-46df-4394-bf22-9383f5034090",
          "status": "Created",
          "code": 201,
          "responseTime": 6778,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37df3ff-04ae-4e2d-be11-d1f139cd73a7",
        "cursor": {
          "ref": "6e108db3-3d95-4abb-99fc-dfef209db2cc",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b4babedd-5917-4db7-8f0d-75280c296f79"
        },
        "item": {
          "id": "d37df3ff-04ae-4e2d-be11-d1f139cd73a7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "952da01e-39d5-486a-83f1-119729f04815",
          "status": "Created",
          "code": 201,
          "responseTime": 5475,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6f4caa-590a-4626-8327-922c1e9a35d6",
        "cursor": {
          "ref": "fa579ae3-2771-4a03-be9c-06886dc79de3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "32e79840-d1ca-4134-8afa-6d6bc21c1232"
        },
        "item": {
          "id": "7b6f4caa-590a-4626-8327-922c1e9a35d6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2e25fae1-61d2-4604-b9ba-a93072aab351",
          "status": "Created",
          "code": 201,
          "responseTime": 5594,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7614eba1-aec1-4c14-9182-9dc5dfe8eebf",
        "cursor": {
          "ref": "b85b792c-5290-4ea4-947c-4f50f42ab192",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f1e3c7db-d97d-443f-b4a6-f0bc78fa12b0"
        },
        "item": {
          "id": "7614eba1-aec1-4c14-9182-9dc5dfe8eebf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4c2aa576-f135-4255-be87-ff1ed71370fe",
          "status": "Created",
          "code": 201,
          "responseTime": 5543,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3a7342-f0fa-4bee-b853-89abbd3e4000",
        "cursor": {
          "ref": "8fa34b13-f840-4060-99db-ed6e3d05df17",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "052386fb-b6ef-4ede-af18-0a96b60041b1"
        },
        "item": {
          "id": "3f3a7342-f0fa-4bee-b853-89abbd3e4000",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8370c849-9143-47e8-ae5a-678f604c4b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "61333d5b-e3d5-447e-b1ff-a81d6e9f1897",
        "cursor": {
          "ref": "1ffa9298-2b78-49c9-8b39-fe1b307cbf91",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "858c4ffd-0126-441e-ac8c-92f32ac0e3ea"
        },
        "item": {
          "id": "61333d5b-e3d5-447e-b1ff-a81d6e9f1897",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c5d0869a-531f-4f56-8d70-56d66788347f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91f4790-c30c-4f84-a2f0-ad00865550d5",
        "cursor": {
          "ref": "7f27c345-ba98-4708-8728-f5400619f579",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9f969117-bafe-47de-a825-376f6c042bb2"
        },
        "item": {
          "id": "d91f4790-c30c-4f84-a2f0-ad00865550d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "297fc8fc-f54f-45fc-8337-f4bb1a28f17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9162a6b9-8d52-4b7c-b859-48e2012904e1",
        "cursor": {
          "ref": "7f1cf63a-1dfe-42f4-8c8d-9165f8bd8997",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d61651d-5a52-4fb0-8e8d-5574a094d6cd"
        },
        "item": {
          "id": "9162a6b9-8d52-4b7c-b859-48e2012904e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2da73eca-c270-4a01-9169-8d63eca4b6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b5d1f0-ca8c-4518-bd96-6cf2b850f283",
        "cursor": {
          "ref": "ee54e696-d71d-4cb6-93d2-61f170afb299",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "56620914-1ca9-4805-9b76-d28534c8f4e4"
        },
        "item": {
          "id": "47b5d1f0-ca8c-4518-bd96-6cf2b850f283",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9fdae9b6-8c48-4797-bf3b-6dc0221b85df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8ecf66-cf11-47da-9d56-a5679ed92c5d",
        "cursor": {
          "ref": "272c39cf-15e4-4ecd-9d27-25e40bbed219",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de0e8b97-c021-4cf0-98c8-48df3ee31025"
        },
        "item": {
          "id": "0e8ecf66-cf11-47da-9d56-a5679ed92c5d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6138cdb4-05e0-4938-ad60-3f87796d18c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c952a25-7ec0-4afe-9e81-452d7385bc89",
        "cursor": {
          "ref": "f5e10342-69af-4f48-9913-be0448d19121",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cc0bfd6b-b8bf-4feb-93fe-f0883083b657"
        },
        "item": {
          "id": "4c952a25-7ec0-4afe-9e81-452d7385bc89",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa02372b-fef1-48c9-b105-c31f466a4615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bdcabe-f880-40d8-b0e9-e1463cce092b",
        "cursor": {
          "ref": "83dcd592-1fb5-4800-b86b-88250e1c1d59",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c20fe352-c2ea-4eba-b98f-19463e2d1f0e"
        },
        "item": {
          "id": "a4bdcabe-f880-40d8-b0e9-e1463cce092b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c26e0a39-1100-4ee4-bbc9-e57e82b28107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350eabe1-5b5a-45d6-bda2-43da22d077a5",
        "cursor": {
          "ref": "9b22bbc7-7cf2-434a-b448-5573b59dea3f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "681d90ec-f56c-4f79-9066-611002035bac"
        },
        "item": {
          "id": "350eabe1-5b5a-45d6-bda2-43da22d077a5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "098bf60e-0208-49ed-9944-c9d2c7700d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9e5865-eedf-47f5-b966-b8d3d46d5a64",
        "cursor": {
          "ref": "eb0fe134-6ec9-4bee-a68b-64811fa44af2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d98de41-5787-4bb9-bf30-46be5575ef38"
        },
        "item": {
          "id": "5a9e5865-eedf-47f5-b966-b8d3d46d5a64",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af1beeea-cd17-4ecc-9976-ccd0cb0b5b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d84c41-ba4a-4433-846d-c1ee006007f8",
        "cursor": {
          "ref": "963b95af-76b2-4c97-b317-de0bb9202b33",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6987b062-4b24-4165-b0b0-55cca9528b5e"
        },
        "item": {
          "id": "f2d84c41-ba4a-4433-846d-c1ee006007f8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d3df93b-d8d9-4c44-a5f8-070a2852a3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278c6b52-7370-4eb1-887e-e09d5ba4a41b",
        "cursor": {
          "ref": "ad11acdb-038c-4492-874c-46bdf0ed8719",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eb55fa6d-bfd1-48e7-902e-18dc192c26ab"
        },
        "item": {
          "id": "278c6b52-7370-4eb1-887e-e09d5ba4a41b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "362dab8f-d8d1-4b01-8187-67b8a20d0d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8c8a06-755e-48c6-bb5a-a4442710cd9a",
        "cursor": {
          "ref": "9418c0d8-3069-4b7a-82b7-a62d70c2ea8f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa823363-8f4c-4acc-af89-fe2880c9e9e5"
        },
        "item": {
          "id": "3f8c8a06-755e-48c6-bb5a-a4442710cd9a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "88501378-0aa7-4f98-a378-96259c6a3141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb323c9b-8d61-4b63-97e3-15ac89b0dcf6",
        "cursor": {
          "ref": "9a9dcd78-e2b2-47c4-9c88-c50d65c6b069",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8719e6b5-80d8-4dd8-8a78-1748d7492ed2"
        },
        "item": {
          "id": "fb323c9b-8d61-4b63-97e3-15ac89b0dcf6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6f35a71-b12a-4fa7-b243-f8d354880294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58790642-4964-475f-96ed-0a7c7e37121e",
        "cursor": {
          "ref": "594394e5-2207-4a42-8e75-660e26f263bc",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7f2c3174-5583-48f6-a3cf-a2497dad08d0"
        },
        "item": {
          "id": "58790642-4964-475f-96ed-0a7c7e37121e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc383fca-a26c-4e6b-ae84-60c4b0ea3c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03de3f9e-1818-4ab1-ae6a-81edbbc218ce",
        "cursor": {
          "ref": "22323bd1-c2b5-44ab-9c2d-2a2e13767b7d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b709f812-0ecb-4dd0-959e-85c15df35262"
        },
        "item": {
          "id": "03de3f9e-1818-4ab1-ae6a-81edbbc218ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "39c78e81-bb2f-474a-bf5e-39df9f7a0b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb7766-07a4-4141-8263-cbfcf3f25f77",
        "cursor": {
          "ref": "28731726-f958-4fbe-b283-3df837b37847",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bc9b144d-d069-4c6a-90f0-f59c55abecea"
        },
        "item": {
          "id": "1ceb7766-07a4-4141-8263-cbfcf3f25f77",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5bdcfa99-d6fa-489b-992d-acfda02fed24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f238bd3-a740-4961-a70c-a5ccb7bb441a",
        "cursor": {
          "ref": "0d6c06d0-bd4c-4505-a20e-4bfed8e8bd1f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e49701bb-295d-4a56-a9e1-0d5382bbc1a9"
        },
        "item": {
          "id": "6f238bd3-a740-4961-a70c-a5ccb7bb441a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee55eee2-7b6d-4aaf-a873-32cd77845a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb3a1de-938c-4de1-8c74-35e3c2b0dbb9",
        "cursor": {
          "ref": "62585bdc-1205-4881-898a-c6e08e48174b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "07048dba-289a-45c1-af50-adbb372fed14"
        },
        "item": {
          "id": "2fb3a1de-938c-4de1-8c74-35e3c2b0dbb9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "110c57d5-5cb4-460d-a503-e65afbf74c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8920a97-d842-4680-b4a6-28ed38d0ad71",
        "cursor": {
          "ref": "25cdf556-d4b1-4a5e-9410-0bf6a797f6a4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5c2e3986-b699-43be-9351-b9ee6f8db22e"
        },
        "item": {
          "id": "b8920a97-d842-4680-b4a6-28ed38d0ad71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6ed409f8-dd78-4fb0-97d0-11480c7f4238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca20278b-af4b-4e62-862f-9b9fe06c044d",
        "cursor": {
          "ref": "ce9f69d5-de96-4f93-ad83-2e12da89e4a8",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "990d17c9-1fc6-4fc0-a656-15d2db2f2f64"
        },
        "item": {
          "id": "ca20278b-af4b-4e62-862f-9b9fe06c044d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c6177f2c-c95f-4ef7-a167-bd2f45637009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41da6964-32fd-4faa-a9a3-a42c18c3b9f6",
        "cursor": {
          "ref": "aac89dbb-177d-4bb3-98de-1469132e6bce",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "88d37914-9503-4bac-ada8-5a3c790839f9"
        },
        "item": {
          "id": "41da6964-32fd-4faa-a9a3-a42c18c3b9f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7a1ac1f-ad0e-4ac8-be31-cb69ec9dcfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833117f1-7361-4758-800b-d612517af473",
        "cursor": {
          "ref": "2a615260-a1be-4861-a59d-9f03e420ffdd",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "333938b7-c41b-4c99-804c-0ecbbe6a27c4"
        },
        "item": {
          "id": "833117f1-7361-4758-800b-d612517af473",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a860ffc1-1571-4cb5-b5a1-c8f0e46f6ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf7b1f1-fe0a-479a-8fbc-6f86c7b5da2c",
        "cursor": {
          "ref": "59195d7b-9122-4f4d-afa8-9b2d236e9e2e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dad8e4e6-3913-44c9-94e7-9348db6a56ca"
        },
        "item": {
          "id": "2bf7b1f1-fe0a-479a-8fbc-6f86c7b5da2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b03a68f7-1cc3-4535-8638-eacf1aa89e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d1337d-631a-4112-b5c5-87c9b462d9d5",
        "cursor": {
          "ref": "dab5d6f2-57d9-436c-988f-d50160b26e82",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ab761c0f-6112-4074-b46f-60494186008b"
        },
        "item": {
          "id": "49d1337d-631a-4112-b5c5-87c9b462d9d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b8414e79-8f25-48b3-8421-9daf5a9f3c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909d85f5-9c37-4961-aab9-f817994862f4",
        "cursor": {
          "ref": "a3133961-e61e-4de1-b5b7-7bc92010c3ba",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5684344b-79ea-483e-8ea2-0550203205ac"
        },
        "item": {
          "id": "909d85f5-9c37-4961-aab9-f817994862f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4916b5bc-b7c7-4f0a-9bec-08964cd8bf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492aba8e-7a10-4521-a510-be8fef3cd9d3",
        "cursor": {
          "ref": "b7b7c4eb-770f-4f7d-a9f1-0a14db231994",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c1d1cbf9-eefe-4645-bac3-585050041574"
        },
        "item": {
          "id": "492aba8e-7a10-4521-a510-be8fef3cd9d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "462ec55e-338f-4789-9f5f-def5d5ab0e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c1d656-34c1-4305-bb08-b1d8e8366c43",
        "cursor": {
          "ref": "873e86af-fd24-40a1-b6b9-15748c332297",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3493e939-716d-49b1-b9db-039404afd9c8"
        },
        "item": {
          "id": "c9c1d656-34c1-4305-bb08-b1d8e8366c43",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0d69ba2c-fa52-47ba-8877-b91c4b9dc280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9290f689-c050-49c0-bd92-08dab33f3cf0",
        "cursor": {
          "ref": "8443ff9a-2c5c-4f75-931d-68341a481578",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a223cee8-9310-467d-b2af-24218c3580d5"
        },
        "item": {
          "id": "9290f689-c050-49c0-bd92-08dab33f3cf0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cf65dde-6ace-47c9-aa25-bb6428334e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e476f9a2-e7af-4619-be8f-c09c46159b83",
        "cursor": {
          "ref": "a8075664-2d7d-4103-aedf-38ef5a8f92f9",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0792c6e-82a4-4d10-bc5f-cb7c093dc22c"
        },
        "item": {
          "id": "e476f9a2-e7af-4619-be8f-c09c46159b83",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ba30ddc7-b758-47e9-8c2a-b88159b8f350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d6b796-df82-4315-854e-80e5f2a68747",
        "cursor": {
          "ref": "a37ca501-5495-4f46-ab9d-42ab99967f47",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cbdcc2c6-7004-4f64-b922-2d41c76a94a0"
        },
        "item": {
          "id": "46d6b796-df82-4315-854e-80e5f2a68747",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1f7c582d-8be5-4956-8361-4443f5104c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5874e050-17ba-4ea3-9906-a61eeacc90e3",
        "cursor": {
          "ref": "3b525dcb-0e00-4324-b738-f8fb42deab30",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2b7a9bcd-4996-4717-b87a-3522d3706114"
        },
        "item": {
          "id": "5874e050-17ba-4ea3-9906-a61eeacc90e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2a428b6d-869b-443f-bf82-e4feaefeedee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24fc2cb-7a64-47c6-bffb-5b60898e0b15",
        "cursor": {
          "ref": "6a9e48ac-ed07-4e2a-8065-ac0f8318472e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b5f7666a-341f-48bb-96a2-4407bb17f0e1"
        },
        "item": {
          "id": "e24fc2cb-7a64-47c6-bffb-5b60898e0b15",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3509930f-94be-43c1-8fed-b6f4263c743d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a81c1c-12ad-4cf9-8162-8a9e7b552bea",
        "cursor": {
          "ref": "4ba8bcc8-2ced-4c75-a5e2-dd8632c8b510",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8279965d-0f89-4c90-922f-dfb884ce72f6"
        },
        "item": {
          "id": "c1a81c1c-12ad-4cf9-8162-8a9e7b552bea",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "97ca11bb-a62e-418b-a53b-1fca52b11f02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc28e6d9-6681-4af8-8cb6-5220987b1458",
        "cursor": {
          "ref": "15215a2c-6a71-4010-acb6-8810259aeff4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c3e9eb90-9bfa-42b2-9775-2e29850ba872"
        },
        "item": {
          "id": "bc28e6d9-6681-4af8-8cb6-5220987b1458",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "82ddce3a-8f2a-4ba0-98eb-cd5f9b8b8f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ef8497-6606-4cf4-b8cd-71908ae7d81b",
        "cursor": {
          "ref": "105810cd-b603-4d11-a375-39eef96e82ec",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "153f5a40-a8fc-4c55-bac2-36e7c5c67084"
        },
        "item": {
          "id": "24ef8497-6606-4cf4-b8cd-71908ae7d81b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5f4254cc-ab55-4c09-a51e-6d4d00df5a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700aca7-51f3-4ff4-bb78-3ec6efa5da72",
        "cursor": {
          "ref": "55cbfe20-8c0b-42ad-96fa-d3f4b0bd79f4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "86450b16-0401-48df-b3cc-d3b80e56b4e1"
        },
        "item": {
          "id": "f700aca7-51f3-4ff4-bb78-3ec6efa5da72",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "777308d4-2a2e-4cbd-b682-c6ae8dea6e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee43740-c515-4a3c-a870-822df4472106",
        "cursor": {
          "ref": "05c940e0-b583-42e1-8056-8decdd29d948",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "393fae28-5a93-4564-b653-1f4a30b02646"
        },
        "item": {
          "id": "6ee43740-c515-4a3c-a870-822df4472106",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1fb09276-3bc7-4219-ab59-54e499d64eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09efb620-ce06-450b-99f4-fa287a59f70f",
        "cursor": {
          "ref": "9dfd7da2-1f9e-451e-b131-8e707b3fc738",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "be00a8dc-3c8f-4f17-a66a-c59839224404"
        },
        "item": {
          "id": "09efb620-ce06-450b-99f4-fa287a59f70f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e7a09c36-212b-4989-a87b-9b64985841ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe51697-4c5d-4bcf-8729-0faad79f572e",
        "cursor": {
          "ref": "4040c3c9-d0bb-4382-bc52-2a7caf08c5c7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3e2a5fca-768f-43f2-a767-f3a83cd9666c"
        },
        "item": {
          "id": "6fe51697-4c5d-4bcf-8729-0faad79f572e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "789a5464-c8c9-46d8-b866-b066bc276215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583d67ad-328a-4765-807e-ddfd7badfd9e",
        "cursor": {
          "ref": "b00c96dd-b460-4675-b00b-0c69c5e8ff11",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "961d85e2-7b6b-40ba-9053-d24fab35a92c"
        },
        "item": {
          "id": "583d67ad-328a-4765-807e-ddfd7badfd9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f8e5d3c2-c4d9-46fd-84b3-e7ce0ff2e806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eb7faa-bd3d-44db-be5d-0b41e2603dfb",
        "cursor": {
          "ref": "831bad22-5ef5-4265-81ee-7b238f69aa5d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "689af4de-ea27-446d-8293-1292941ea4cb"
        },
        "item": {
          "id": "25eb7faa-bd3d-44db-be5d-0b41e2603dfb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a777ba3e-eb3d-482f-8a6d-b546bbef5ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c717f77c-fb71-48e9-8672-b97120c0209c",
        "cursor": {
          "ref": "84832656-bf23-40fe-90be-7daca112ac31",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3fc0fff0-f1d5-426b-bd8b-2973ecb11334"
        },
        "item": {
          "id": "c717f77c-fb71-48e9-8672-b97120c0209c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72421e4f-ac3a-4dfa-bc43-aaf108cad405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365711c3-2c09-42de-b502-b579578e0e34",
        "cursor": {
          "ref": "b8ec13e1-d43d-4944-904d-546f4157c37f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7ad27a97-75dc-415d-afed-3caaee0efa9c"
        },
        "item": {
          "id": "365711c3-2c09-42de-b502-b579578e0e34",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7d58a500-4649-4c2b-b4fb-00f61597a1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f22bd91-c597-4afc-83d5-9a1ab82091b0",
        "cursor": {
          "ref": "e5ca4b3d-1405-4913-b2fe-8f0fc94bf117",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "85fe25f3-6308-4ed1-8b6c-a3eb75fb165e"
        },
        "item": {
          "id": "6f22bd91-c597-4afc-83d5-9a1ab82091b0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b50bc183-2c93-4cd0-9c96-a562e33ec567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ecf3ed-d576-4415-b7b3-dea35328af53",
        "cursor": {
          "ref": "d56d1e49-aff5-4002-83e5-7b28fd046149",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ebe46152-1474-4c57-9a23-46cd59ee4bc7"
        },
        "item": {
          "id": "77ecf3ed-d576-4415-b7b3-dea35328af53",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d04bd0b9-0b88-479d-99e1-ccf26169a262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e26e13-7ec4-419a-9363-c403163d2604",
        "cursor": {
          "ref": "af4c1096-5172-4e5b-8cb6-0e7ff182b9b2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a6dbdd52-f219-4381-a755-0591db848e47"
        },
        "item": {
          "id": "b0e26e13-7ec4-419a-9363-c403163d2604",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1b35959-0738-443e-b020-b3be84eab9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c71b80-1cd1-44ea-8609-8191f3152f2c",
        "cursor": {
          "ref": "104857a4-3aa8-429f-a037-161ee669edc9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b67289ba-ccaf-4e3a-be5a-ac9eb697c076"
        },
        "item": {
          "id": "40c71b80-1cd1-44ea-8609-8191f3152f2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2b0a8fab-6cca-43b2-a450-e560dd84796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0d101e-ddeb-4786-9609-9216319dc998",
        "cursor": {
          "ref": "81e3eb04-c623-454d-8b7f-790a05ea3224",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9e4ed89-607b-4336-b81f-a1ac8c571601"
        },
        "item": {
          "id": "2d0d101e-ddeb-4786-9609-9216319dc998",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e731f709-dcc0-4924-8093-3c7999d48373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd384a1-3ffb-47c7-858c-0f6fd1ded357",
        "cursor": {
          "ref": "93f3f7f4-81da-4b27-b6b8-8bfa99961310",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f0e0395-a23d-469b-8957-f484231930d5"
        },
        "item": {
          "id": "2dd384a1-3ffb-47c7-858c-0f6fd1ded357",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "26092673-d119-477e-80ec-31cf6e3f0045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7b8185-72ae-4c97-9250-f73bfdaf189e",
        "cursor": {
          "ref": "fe8e389d-8883-4024-9d3a-e852cc1d7957",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a92459f5-bf33-46e8-ba01-be1993820249"
        },
        "item": {
          "id": "2c7b8185-72ae-4c97-9250-f73bfdaf189e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ec6a0bc8-8687-4edb-96cd-f98607733dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cb8b24-3cc4-4af6-8ec1-f2667efa1a30",
        "cursor": {
          "ref": "17faafe7-1620-4923-812c-3394f2e9bdf6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6552f339-11be-4cdd-bd10-9f3c9f03c93f"
        },
        "item": {
          "id": "a9cb8b24-3cc4-4af6-8ec1-f2667efa1a30",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "849e8551-78e6-4f2d-8eed-0f15ea5949f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f28e30-4c85-4416-bf60-3ccfdc008b63",
        "cursor": {
          "ref": "0951fb96-18ce-4eb8-9f5c-c2d98cd9294d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "32d589ef-6882-4578-8ec3-99aa59de0caa"
        },
        "item": {
          "id": "98f28e30-4c85-4416-bf60-3ccfdc008b63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "958d7cde-2b1c-47a3-830f-63789280b762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1d769d-90dc-41b8-8266-b85291b719ec",
        "cursor": {
          "ref": "3d2367e2-682f-440c-b6ed-8649e7643fd7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "052b13f2-a024-4fb1-96f0-241cb3c23322"
        },
        "item": {
          "id": "0d1d769d-90dc-41b8-8266-b85291b719ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b2d29242-b9bb-4b5b-be42-eb93e08d6cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162f9ca3-cdd3-4e29-981b-89beb53b9055",
        "cursor": {
          "ref": "0bbae7bd-ecd5-4d9d-ac49-4227df056aeb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "da3d5350-079f-40dc-be0a-7881980c56fb"
        },
        "item": {
          "id": "162f9ca3-cdd3-4e29-981b-89beb53b9055",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c91b0d5-a1a6-4a7e-a2b5-102299c0ba6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c92b2c-1477-456e-99d9-8c2b67e32e92",
        "cursor": {
          "ref": "f44e35cf-5000-4896-a967-11f22c05e1e6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0e9a6bc2-0fe3-4ce7-95bb-a352f37a941c"
        },
        "item": {
          "id": "86c92b2c-1477-456e-99d9-8c2b67e32e92",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5e80c6b1-67aa-428b-aa63-295dc0553b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad202a-e0c9-4339-b23a-a6537b679582",
        "cursor": {
          "ref": "2b6e828b-0a62-4052-936e-b930d21a4ba8",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d8a0df92-0caf-485a-84dd-bf30767936c8"
        },
        "item": {
          "id": "faad202a-e0c9-4339-b23a-a6537b679582",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "53d5f637-d8b7-47de-86e1-414eb4df7a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b71ec3-3e20-49a7-ab7b-c69ef3a0fe1e",
        "cursor": {
          "ref": "031f4a8c-ff4a-433c-92f4-aada6a930a26",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1046a801-33f8-45f7-aacf-f132e7252c85"
        },
        "item": {
          "id": "85b71ec3-3e20-49a7-ab7b-c69ef3a0fe1e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5f268884-b817-4944-b5cc-c69e671bbc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e4f39-3737-4b87-9c3f-4af02249d07f",
        "cursor": {
          "ref": "d3032d21-a2a8-4950-a680-cbcf77063070",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfc94bb8-ca77-4080-b157-0f84156b4e25"
        },
        "item": {
          "id": "d71e4f39-3737-4b87-9c3f-4af02249d07f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d4c4f103-b910-4bb4-80e8-3512c5033880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc1cc8c-544f-4bac-9931-bc2ddee9eec0",
        "cursor": {
          "ref": "7432ea02-0469-4235-adfd-99387e66b8fc",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7e3756e6-1fb9-4fb2-95e1-737b65413799"
        },
        "item": {
          "id": "9cc1cc8c-544f-4bac-9931-bc2ddee9eec0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9916787-51e1-46c0-8d6d-92af0d0a4e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a918ff7a-8e84-49fe-836e-c311d93ea342",
        "cursor": {
          "ref": "efa184ef-e5d9-4aab-93fb-a8ae7d116690",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "891831bd-a5a5-48f5-8d64-a25feec8e561"
        },
        "item": {
          "id": "a918ff7a-8e84-49fe-836e-c311d93ea342",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f8c3a653-8468-4a0a-ae42-9bbeb81cbe20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4434d7bd-b2ef-474a-ab96-9967b85476b8",
        "cursor": {
          "ref": "ce31cd49-2888-4882-8d62-8e54175e49d3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5ac9e62b-a277-4b61-866c-033b5c3bdd7e"
        },
        "item": {
          "id": "4434d7bd-b2ef-474a-ab96-9967b85476b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "89d4f8a5-86cc-4450-aae9-ecc344efb336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b6e14f-7690-4de4-8d30-72f95d5b014c",
        "cursor": {
          "ref": "808afa78-0d3c-4c1c-a29c-f10e88d74cfd",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4a24e489-9e72-4208-a7f8-0099151c6edf"
        },
        "item": {
          "id": "87b6e14f-7690-4de4-8d30-72f95d5b014c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "09e019ae-1c49-41f7-b0ce-e1c289fc903e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80171ea6-51ad-443f-83b6-ae0751dbc64a",
        "cursor": {
          "ref": "245328c8-e693-46fb-a6e9-a9c923ab8c2b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7e83a3d5-4637-4792-a849-5b1564dbba71"
        },
        "item": {
          "id": "80171ea6-51ad-443f-83b6-ae0751dbc64a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0737550a-0be4-4140-badc-0651be4f6b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50b1b66-0239-4448-86ec-f04bff99ed21",
        "cursor": {
          "ref": "8c4fe220-2b97-4d70-9ebd-959de37beed9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6495827c-0986-44cb-882a-296498890efa"
        },
        "item": {
          "id": "c50b1b66-0239-4448-86ec-f04bff99ed21",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b8294c34-0fbe-4586-8598-7a76e27dc641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39465312-f0a3-46ec-8ac4-8db41e91604b",
        "cursor": {
          "ref": "3a402021-5716-4d32-8e6f-9a8d364769a5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f85edffc-5b7f-46d1-a60e-f08e3d962a66"
        },
        "item": {
          "id": "39465312-f0a3-46ec-8ac4-8db41e91604b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7946aeac-2768-4e68-8709-73633d068502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e9c1d3-7982-4d0e-bdbd-f5068821e323",
        "cursor": {
          "ref": "ef84c63c-9b6e-4772-a39a-8f13625c25b5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e94a675c-8588-4345-ae2c-eaaf1af2594a"
        },
        "item": {
          "id": "58e9c1d3-7982-4d0e-bdbd-f5068821e323",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "452fe9a4-9072-4fb0-bc66-b821fd55abfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1407e78d-d517-4817-9e17-9036c13c488e",
        "cursor": {
          "ref": "cf7685bd-4625-4adb-9f2a-97b9a8df598b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "caacdcf4-9ec1-4aa9-8721-faf21ba3d671"
        },
        "item": {
          "id": "1407e78d-d517-4817-9e17-9036c13c488e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c07edf9a-bed7-465a-ac72-25831b2f7b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dd3221-fcf7-4d0d-8844-31acca6f6427",
        "cursor": {
          "ref": "6b681c55-10b3-4fd3-ad54-6e1113fb475e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bde37396-917c-4226-b966-df4463bf0321"
        },
        "item": {
          "id": "f1dd3221-fcf7-4d0d-8844-31acca6f6427",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "30597f11-eff2-42cc-a30b-f1765692823c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c8c91c-1b6a-421f-befb-3a8712667d8e",
        "cursor": {
          "ref": "509baefd-5fa3-4733-bbef-79c47cb73865",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "52eec735-78b3-4f89-95ae-4f6989845e64"
        },
        "item": {
          "id": "68c8c91c-1b6a-421f-befb-3a8712667d8e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7bf3808e-2be3-414b-bfb7-64641bc8a8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e003799b-10cb-4501-a5bf-5ce39558906a",
        "cursor": {
          "ref": "72a601c1-c4b1-4151-9259-7c0ebb98fd58",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "19eb5b20-ad64-41dc-97d0-6c6eb6ff9eb3"
        },
        "item": {
          "id": "e003799b-10cb-4501-a5bf-5ce39558906a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "91fd3abe-8a66-47df-b5d9-56fd5a33c00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40af8a6b-76dd-418a-9172-3c00eead569a",
        "cursor": {
          "ref": "cc0efecb-7b49-4d1f-b23e-41745c4a2643",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1256b48-e73c-40a0-a4c0-5363e74e530a"
        },
        "item": {
          "id": "40af8a6b-76dd-418a-9172-3c00eead569a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "524dc106-cbd2-4023-b0c1-a63a561f011f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90bf035-cf6d-4315-a187-f1437d511490",
        "cursor": {
          "ref": "d3b94ccc-228e-4cfc-bf94-11736925877c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "24181d95-a5f7-4814-ad31-d9453a45b738"
        },
        "item": {
          "id": "d90bf035-cf6d-4315-a187-f1437d511490",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "07d46466-980a-418e-bb02-890e442dfffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b218b4c-a597-4f53-a8b5-19e23f30e37e",
        "cursor": {
          "ref": "35ef55a0-0d1f-44b3-ab16-7fd0e6a705ae",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d572833c-36d6-4e04-988d-1afbb47a1c10"
        },
        "item": {
          "id": "9b218b4c-a597-4f53-a8b5-19e23f30e37e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eca0a6c4-0f97-45d5-8fe8-da72a1de5d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81b7814-fb5f-4725-b49b-e4974755a6cb",
        "cursor": {
          "ref": "2e1468d7-a486-465b-8c97-c6cd4825c470",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e1a8f86c-a267-4c3f-bb00-5e769b549b83"
        },
        "item": {
          "id": "e81b7814-fb5f-4725-b49b-e4974755a6cb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1eb7e87b-7b5e-41ec-9b72-910d1bbc6d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3e1bd2-3c66-4c23-927a-b82d79c49f76",
        "cursor": {
          "ref": "d1ef8d67-937d-4062-929d-575ed719fefd",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9120bca9-6286-4a59-94cc-5380f376d543"
        },
        "item": {
          "id": "1b3e1bd2-3c66-4c23-927a-b82d79c49f76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b29ceb66-fdc4-4c9c-be6a-2d621698e544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e64fc7-c2fa-4c78-be4d-5cafbf296c97",
        "cursor": {
          "ref": "b932a479-f69c-44ba-a9ad-c8b8b8dfbe1a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "83ab67fe-aa6b-4c36-af83-a95a95d14537"
        },
        "item": {
          "id": "56e64fc7-c2fa-4c78-be4d-5cafbf296c97",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d8314ff1-8ee0-4a7f-81a1-8dd176636605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0755709-bb7d-42d3-92e4-4ad6005b93f0",
        "cursor": {
          "ref": "765fff1a-1b0d-45db-a8aa-4266ed92aff5",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "51460244-8fb7-415c-a45c-9b351c407936"
        },
        "item": {
          "id": "e0755709-bb7d-42d3-92e4-4ad6005b93f0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4f7e92c7-b2d2-4ef5-90a1-4c460e9431b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e493fa4-bbda-49c0-8bca-2a5b31721b85",
        "cursor": {
          "ref": "aaebcd50-4d88-46d0-8bfd-c1af674ea99d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "57f604c4-a27e-455c-be65-81b24cc2a6b2"
        },
        "item": {
          "id": "3e493fa4-bbda-49c0-8bca-2a5b31721b85",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cea8547b-a2cf-40ab-90c9-d26a202d2e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1ba82f-d190-4bc4-b9f4-e13314d07f88",
        "cursor": {
          "ref": "dd7cb05f-d313-4826-9fac-7d1c1cd4be7a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c78dcbd0-172f-4a26-9346-72a3ed384238"
        },
        "item": {
          "id": "1c1ba82f-d190-4bc4-b9f4-e13314d07f88",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2a0f85b5-99c2-4905-bc7f-5ae7e8ead5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fad087-33ff-40f8-9b09-218e907c69cf",
        "cursor": {
          "ref": "9874937f-9903-471d-ab17-e01962064b42",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1093c395-240c-477f-a05a-91b5c05194e6"
        },
        "item": {
          "id": "a2fad087-33ff-40f8-9b09-218e907c69cf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1c13948f-107e-4542-9cf2-9942d61cc2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8bd9c-4870-4ed3-8ccc-b93a5d6663c8",
        "cursor": {
          "ref": "c79acae6-9e4e-423b-84e5-31a9488ab87c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4e1affd1-9034-4a2c-a0ab-3aed55f693d0"
        },
        "item": {
          "id": "a7e8bd9c-4870-4ed3-8ccc-b93a5d6663c8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "12b02201-2c87-4615-a0b0-a175396db45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f70102-b152-4fe4-9802-869ad7fc91be",
        "cursor": {
          "ref": "3daf49e1-916c-414b-9bf6-6b9a13018129",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "889eb250-d795-461e-acf8-8c05675474a5"
        },
        "item": {
          "id": "57f70102-b152-4fe4-9802-869ad7fc91be",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "975b7982-9ace-405b-a1aa-5c952ba18cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52801dc-01e3-47fb-8555-2617a7adece8",
        "cursor": {
          "ref": "55ebaa26-e28d-49cc-b296-18913a8ab015",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f569c84a-b0a5-4ebe-a224-8477a5c6c75f"
        },
        "item": {
          "id": "c52801dc-01e3-47fb-8555-2617a7adece8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7af958bd-8ee0-4d81-a1ca-0912168bb092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc1d1e8-10ec-422a-9cf5-bcfa37137f14",
        "cursor": {
          "ref": "fc06af1a-6b03-42b6-9c3b-aa9be782d963",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "354e5e2e-19e9-4784-8b64-efd343c7e5e9"
        },
        "item": {
          "id": "9dc1d1e8-10ec-422a-9cf5-bcfa37137f14",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "64a035a7-f6d5-4237-984d-f756741e1eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce25149c-313b-4434-8a39-8d53a7cdcc2e",
        "cursor": {
          "ref": "f29dbdfa-1096-4a08-87f0-9b0b794be34b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "969b6b75-1a1c-4964-84e2-c9647bb95818"
        },
        "item": {
          "id": "ce25149c-313b-4434-8a39-8d53a7cdcc2e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1a347792-c5e3-4406-8857-5cf85ed40215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88984398-cd6e-43c0-ba73-614d782ce8a3",
        "cursor": {
          "ref": "a6c22dc9-b202-4f94-a10a-882d476fa385",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "39923fda-d8a3-4761-87c2-4cb5d6c3be27"
        },
        "item": {
          "id": "88984398-cd6e-43c0-ba73-614d782ce8a3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f0b60c8-00dd-4078-b725-e5045a95292d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1818515a-76ec-488e-b1c7-45480247a3ce",
        "cursor": {
          "ref": "3e0096ce-a14e-4c0b-984d-9b75fe87a73a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "85a6a84d-7240-48f0-9acb-cf172e93c96b"
        },
        "item": {
          "id": "1818515a-76ec-488e-b1c7-45480247a3ce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "95913171-7ca1-4853-a59b-06920666ad99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4ba176-531b-42ce-88f2-84890c116e30",
        "cursor": {
          "ref": "e0f346ac-5ea6-4a1b-a197-259f96574edd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ea1404a4-2ddc-4c5e-b536-401374c85942"
        },
        "item": {
          "id": "ad4ba176-531b-42ce-88f2-84890c116e30",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7184171e-e59a-4cce-8655-e974b11db645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec67171-218a-469a-bb8c-2284882b6eca",
        "cursor": {
          "ref": "511d26cb-e576-4ec8-909b-366f841e4955",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b9d66a3-8465-44b7-af08-55810c82a077"
        },
        "item": {
          "id": "7ec67171-218a-469a-bb8c-2284882b6eca",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73d97f60-f3f1-4c10-854a-156f03efe22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b0e574-78cf-421d-845c-f75913ad4fbd",
        "cursor": {
          "ref": "86b379ed-d6dd-4a50-8696-bf8b00800eb3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29d4be34-9e58-40ab-a01d-7c09b28311dd"
        },
        "item": {
          "id": "52b0e574-78cf-421d-845c-f75913ad4fbd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6d94235b-734c-42ef-b5a0-c08efbe442f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e5a185-93d7-464c-9c2c-40307c4de936",
        "cursor": {
          "ref": "9826ddaf-4236-4086-b598-25de1a2d7719",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cd94b514-e8b5-4433-b0b7-41388d477dac"
        },
        "item": {
          "id": "f4e5a185-93d7-464c-9c2c-40307c4de936",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "40452821-45fc-44d6-b869-9c1f4647ddae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7228048c-b205-4fa2-94f4-cb2eb54ef79c",
        "cursor": {
          "ref": "79506780-3cdc-4c78-bb1f-c88300594664",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "323985f4-3bfc-41d7-a730-5753758ba07a"
        },
        "item": {
          "id": "7228048c-b205-4fa2-94f4-cb2eb54ef79c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cb50847e-9e53-422d-a1b5-90c07a82ec59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af144c59-41ee-46b4-bca1-458eebba1a06",
        "cursor": {
          "ref": "3439159a-91dd-4ed1-adad-a66b1b6a2b36",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1aba4492-829b-4619-af4c-4337588397a0"
        },
        "item": {
          "id": "af144c59-41ee-46b4-bca1-458eebba1a06",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac236fd9-ff2a-4564-b24a-d403bec1a9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38ae81f-cf7d-4a54-a944-6f84d3853bc4",
        "cursor": {
          "ref": "bdd815e2-16c8-4cdc-be96-62752697ec0e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "23adba61-fe06-48b7-9f74-4f7f72e44210"
        },
        "item": {
          "id": "d38ae81f-cf7d-4a54-a944-6f84d3853bc4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "72f99681-02fa-4812-9f36-6a5db8e913f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe020c15-0a90-4881-b460-692cf20b7880",
        "cursor": {
          "ref": "ae58a8ef-8aef-43f3-82aa-beef25e71537",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf028de3-67db-4f57-a8c8-18c608978c7f"
        },
        "item": {
          "id": "fe020c15-0a90-4881-b460-692cf20b7880",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "be2913d1-7319-4968-b477-87030d830447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a0ecce-3724-4840-9adf-a102b31c48de",
        "cursor": {
          "ref": "88f31b34-1df3-4704-9bc3-1af1f0c96cd7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3aad79e2-6940-4f9e-b44c-ca8f3486871d"
        },
        "item": {
          "id": "f1a0ecce-3724-4840-9adf-a102b31c48de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c982b936-6bfa-46fe-b175-cdf9176a7f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99fa0d5-3ad1-474c-b17d-903ced8bb8a7",
        "cursor": {
          "ref": "e6755e1b-eaca-4c9f-bac8-0bbef1c7a560",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c0954246-cef3-48f2-9632-1d8d008a1d8e"
        },
        "item": {
          "id": "c99fa0d5-3ad1-474c-b17d-903ced8bb8a7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27e06f98-ee4b-4387-9423-b96f71a3e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9886402b-d794-4ef2-b51c-e41c3ce4d3f2",
        "cursor": {
          "ref": "d48a06f0-2ce8-4e03-8672-372cfa09e790",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0cf7f48e-8482-4e97-9547-5675fb6c6a64"
        },
        "item": {
          "id": "9886402b-d794-4ef2-b51c-e41c3ce4d3f2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "75c554a9-8519-4d82-8c1b-7df8ad4181ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d750325-8f15-4497-a098-bc80fafd8d5c",
        "cursor": {
          "ref": "173d79cb-5266-4057-9b06-e0374a8c2719",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "22ac4609-24f0-49e5-a671-67c7f04f8c7f"
        },
        "item": {
          "id": "0d750325-8f15-4497-a098-bc80fafd8d5c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e272a00d-8153-4643-bda3-8f3d9b8c5242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a986978f-b593-48d7-b8ae-025e07cd85ff",
        "cursor": {
          "ref": "8e0403ee-65ea-44f4-85c6-327677a17714",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "156087a7-1598-45b3-84df-ed1a2444c36f"
        },
        "item": {
          "id": "a986978f-b593-48d7-b8ae-025e07cd85ff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a6f81ea1-1c1b-49f0-b1da-a5951bfad823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de72a71-b0f5-4a96-b8ca-9d98dd104a76",
        "cursor": {
          "ref": "04d382f8-775e-4187-9de7-5b695fc77b16",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bbb3013f-1916-4c68-b830-43e84c378eb6"
        },
        "item": {
          "id": "7de72a71-b0f5-4a96-b8ca-9d98dd104a76",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eb1a9bbf-eb32-4521-904d-f54d1377065f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf8efa7-0d18-4e86-8af5-e4f2fb8a3710",
        "cursor": {
          "ref": "bd6eb1b6-3115-4b82-8016-ee945566f9a0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3e378f73-0100-4044-8cdb-29f655591ecb"
        },
        "item": {
          "id": "8bf8efa7-0d18-4e86-8af5-e4f2fb8a3710",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2fa74ed7-3e4c-453b-95d0-96821ca14ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e1d6ff-375f-44f7-94e3-20f995d8f604",
        "cursor": {
          "ref": "c9e6e90e-5196-4ebb-bf00-cbd60bb5753a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3264328d-bc3e-427d-a02e-c913612872da"
        },
        "item": {
          "id": "26e1d6ff-375f-44f7-94e3-20f995d8f604",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f8438ab2-1c16-4b76-9429-632420e21bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bc9e6f-7383-4cbc-b63c-386ba781e16d",
        "cursor": {
          "ref": "ce923212-5daa-4d4d-bd84-32677580afe6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4ccf380c-f3ae-423e-99f0-7a6d2ef27860"
        },
        "item": {
          "id": "b9bc9e6f-7383-4cbc-b63c-386ba781e16d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a6cc819a-40a3-4219-866d-618fba18e8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b013a1b0-435b-456d-9b40-55753e3e0082",
        "cursor": {
          "ref": "0e2e5e0d-cb20-4054-bfb0-38f73b0e034a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "435ac7bd-1ea9-4ca1-ad50-e8eacd89090c"
        },
        "item": {
          "id": "b013a1b0-435b-456d-9b40-55753e3e0082",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eb4b526e-a836-4d6a-a29f-b495e7401c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee1303-1033-4d2e-b3bb-35813078dfbc",
        "cursor": {
          "ref": "1fd1581d-89b0-4399-8f3c-6e9a9062392b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "07256d65-94b0-4515-87ad-40ffd2b7b0e7"
        },
        "item": {
          "id": "f9ee1303-1033-4d2e-b3bb-35813078dfbc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d0ae31dd-9f43-4707-8071-e34bbcf3ffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887a6d5c-721a-4cc1-a041-c02a459012d6",
        "cursor": {
          "ref": "5793e135-2368-4c51-bc14-38d68c71248d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "392d8df7-e8f3-43cd-b322-3c50e89e9162"
        },
        "item": {
          "id": "887a6d5c-721a-4cc1-a041-c02a459012d6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4cc77e8c-cc8d-419f-8710-07c9be96c4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463c9a37-f97b-41fb-9e82-c5ba9163e137",
        "cursor": {
          "ref": "910d2e3a-a8e9-4f4f-bb4e-c0d5b94a10a7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6a5ba7c2-db3e-4515-8460-8923c16e1dc4"
        },
        "item": {
          "id": "463c9a37-f97b-41fb-9e82-c5ba9163e137",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "705ced43-6dd3-4f18-9843-43a70b13d091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0243b94-446f-4894-83d5-a2eb5166f4c0",
        "cursor": {
          "ref": "29df79bf-f743-42c4-8bc6-1aa0c65ca278",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99933fb0-adfb-462b-bc64-bd5f4cad57d6"
        },
        "item": {
          "id": "f0243b94-446f-4894-83d5-a2eb5166f4c0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "25c85c8f-242f-4042-9eab-6abe92d6de63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e2e2e-31f3-4cba-a65f-32c196db4819",
        "cursor": {
          "ref": "2e33e301-4276-4501-88db-e2a91dec2350",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b5a9d89f-364a-43d8-a8d2-70041201f5fb"
        },
        "item": {
          "id": "299e2e2e-31f3-4cba-a65f-32c196db4819",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "94695177-07a7-439b-bb87-a156a4e968dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c36100-562a-4a46-a9f4-8a36ff8413d4",
        "cursor": {
          "ref": "050aacb5-79e8-47cd-bf6b-39cd47cada25",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9b13d3b-484b-4925-b4fb-f6920cd04981"
        },
        "item": {
          "id": "b1c36100-562a-4a46-a9f4-8a36ff8413d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "eb160858-4a4b-4aba-98f7-eef89afbeee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1661f80-5554-47fe-a320-dced4710656d",
        "cursor": {
          "ref": "815a2df7-941f-4702-8741-6886f639eb22",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2a51784b-f6a0-45dc-b141-508ac175467b"
        },
        "item": {
          "id": "d1661f80-5554-47fe-a320-dced4710656d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4770fa65-a7bd-4534-95eb-72d5d100a514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93374a1e-d3ed-44da-bce6-5ee067b2e417",
        "cursor": {
          "ref": "f5ccbb4a-43dc-46d4-b430-80322336b56a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "77c50c0f-3ba9-4036-951d-cd8d67a32c33"
        },
        "item": {
          "id": "93374a1e-d3ed-44da-bce6-5ee067b2e417",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "977f6cf1-11de-4be4-9224-fa791955409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a10e430-12a8-43c8-b586-67e5dd61c7a8",
        "cursor": {
          "ref": "ea991b48-f1a3-45d9-91a9-1bf089a1aa1d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "24246a43-7431-48d8-b7c5-dab6736c4710"
        },
        "item": {
          "id": "6a10e430-12a8-43c8-b586-67e5dd61c7a8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "373e9cd8-c575-412c-8b35-385a81dc9229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d4b271-0963-45ae-8ce4-712c410f4482",
        "cursor": {
          "ref": "f944351b-e950-44c0-acfd-c5fa9860ccc2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "16e9d0b5-c772-4894-bbb7-e3908264ec6b"
        },
        "item": {
          "id": "a4d4b271-0963-45ae-8ce4-712c410f4482",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "153ac26e-673d-41ce-8c11-0978212cdbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6931a464-aed0-4175-b82a-a060242721c4",
        "cursor": {
          "ref": "a8060611-93f3-4887-b88c-569af156461c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "00617d2b-b855-4c38-8518-03c0c9cef1a1"
        },
        "item": {
          "id": "6931a464-aed0-4175-b82a-a060242721c4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dcc1c39d-a5eb-4f9c-9c47-b4a49f29dba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b85bc33-db96-4a61-9294-65ee78468274",
        "cursor": {
          "ref": "0e320cdd-173e-48ac-9855-1eb573b30ae0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "183cd734-bd69-4971-a88e-55ab536bf555"
        },
        "item": {
          "id": "3b85bc33-db96-4a61-9294-65ee78468274",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "81afd767-e40a-4310-a113-b7d6c09313a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb89700-7519-4d3f-af1f-dcdbfd312cfa",
        "cursor": {
          "ref": "36573843-8af3-47c3-9809-e11e442d21dc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b1da3262-160c-4d57-8e1e-74c2e24531d4"
        },
        "item": {
          "id": "dfb89700-7519-4d3f-af1f-dcdbfd312cfa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45263ddf-ad7c-4460-9109-d5a2a3ee5bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9008a9-48ce-4b0f-a092-7b2a0351f36f",
        "cursor": {
          "ref": "081bb360-9ff1-4d4d-9af2-3e0fa1098665",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0256644b-d1be-4e8a-8411-cffad5cb9ae9"
        },
        "item": {
          "id": "ba9008a9-48ce-4b0f-a092-7b2a0351f36f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "48363d8d-299f-47bf-a1c7-e581cba28df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec86ca2-8926-46a4-82bf-58b97f5e8af3",
        "cursor": {
          "ref": "a2e74691-bf96-44bf-955f-0e0ef0d9f8f1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aa24a480-8c52-444a-87b6-2a662b4cbff5"
        },
        "item": {
          "id": "aec86ca2-8926-46a4-82bf-58b97f5e8af3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0ebd573-c3b1-4f16-9e85-85c441f4b613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec400ba-d8fa-4a83-8c37-d0a62a02d593",
        "cursor": {
          "ref": "a7f9e2eb-f1bd-41f3-91da-c0b94347c561",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c773cfb3-617a-49b4-95e6-7c840a09135e"
        },
        "item": {
          "id": "4ec400ba-d8fa-4a83-8c37-d0a62a02d593",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7f4d966d-3e50-4202-82ab-0e271346e3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0edb872-e1c2-41a8-b8f5-09a5f3c39679",
        "cursor": {
          "ref": "664d52ba-df8d-4cd3-8690-7cddc3cfc091",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c07f8fc-fb14-4e6d-b3b9-336966a2fe0b"
        },
        "item": {
          "id": "a0edb872-e1c2-41a8-b8f5-09a5f3c39679",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1e7798eb-8925-4336-bc9c-bcf7587db3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5625ef8a-7683-40d9-8b1b-d4237e102a10",
        "cursor": {
          "ref": "a9b9f834-d8dd-4f60-ab2b-18db57e04ab9",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9f0a59dd-e068-4cc4-9383-b636e9ba58ca"
        },
        "item": {
          "id": "5625ef8a-7683-40d9-8b1b-d4237e102a10",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "38192e3b-6a07-46fd-8fac-388c005bca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e7cbad-efdd-4a22-8988-6cb16e9c2f9b",
        "cursor": {
          "ref": "d70a3481-c663-4bb5-9c30-9e992f5b70ee",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ccc5989-6de4-4f04-9072-a005f0e06fca"
        },
        "item": {
          "id": "67e7cbad-efdd-4a22-8988-6cb16e9c2f9b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "63940da3-b51a-43d4-8443-3690ada62e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5049c14-140e-47b3-9354-00647bcef4c4",
        "cursor": {
          "ref": "9691fc73-2dd8-409c-b1dd-e8f6050bfaed",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "04c95c2b-f335-4012-8259-504830a29ace"
        },
        "item": {
          "id": "a5049c14-140e-47b3-9354-00647bcef4c4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "30800dbd-3bef-49f3-8a61-44e1c5d67cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1768d4-5750-422f-980e-ae2207707362",
        "cursor": {
          "ref": "e5469f7d-96d9-421d-b955-81ef3e714fe4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94cacce4-9550-47af-864f-072c778eeb9e"
        },
        "item": {
          "id": "dc1768d4-5750-422f-980e-ae2207707362",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46a78425-6d5d-4b8f-bb90-3703f7d6a289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59651ff0-eef1-4438-bf71-81a767af47d9",
        "cursor": {
          "ref": "bf3f0ef6-51da-4de5-8770-6cc2513d5547",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "29e98788-b93f-46e1-9798-1db491bbc1b6"
        },
        "item": {
          "id": "59651ff0-eef1-4438-bf71-81a767af47d9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1ad8dbf1-f200-4040-ac94-9ed893abe774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ac848-80a4-43c6-bbfd-845a3f438224",
        "cursor": {
          "ref": "07a218c6-caef-4a8d-8fc5-6049c652aacb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "42179319-7210-4ecb-88fd-0070931328cd"
        },
        "item": {
          "id": "398ac848-80a4-43c6-bbfd-845a3f438224",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e2aa1247-8ac1-4847-afe6-4a1ccd562b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed2aa15-831f-40d2-bd18-dbfd527f83d1",
        "cursor": {
          "ref": "d9d7bc98-e7bb-46e6-8755-4bcb0889a7d3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a6c051c-a262-4b56-975e-047b279a2d25"
        },
        "item": {
          "id": "bed2aa15-831f-40d2-bd18-dbfd527f83d1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9770f6a1-007d-4b0f-b868-92ddeddb9be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9598d932-e3d4-4b0d-84aa-8525a43325c8",
        "cursor": {
          "ref": "50e7ccaf-7fc6-43c8-8434-afaef8a0f999",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c968e6ce-4ba7-4616-a91b-ca801caf558d"
        },
        "item": {
          "id": "9598d932-e3d4-4b0d-84aa-8525a43325c8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d917ac93-4ebf-470b-9fde-05fe77b57de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222d07c4-d6b9-4167-9915-39ae31f96212",
        "cursor": {
          "ref": "3d528db3-8a74-4b26-8d92-82804eba5290",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5df13702-14fe-423b-a029-82fc7f72f07e"
        },
        "item": {
          "id": "222d07c4-d6b9-4167-9915-39ae31f96212",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7f0f8c1e-9db9-40f6-8eb7-eda28d5f6cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fca920-36ca-4c4a-a420-cb9dd086959f",
        "cursor": {
          "ref": "864ac73d-da72-4bb0-a250-afd1a0338481",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fd7495c0-d85f-4fab-b355-a54de927f8a4"
        },
        "item": {
          "id": "d1fca920-36ca-4c4a-a420-cb9dd086959f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "317c4f58-5a33-48b5-a4c4-24a152b151dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a18f86f-10ab-400c-ad1f-3ac23ae18bbf",
        "cursor": {
          "ref": "b40bb0f0-e5e6-491a-9d9a-594bac039b54",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a60c4ca9-200b-448b-b163-cf2167ae49b0"
        },
        "item": {
          "id": "8a18f86f-10ab-400c-ad1f-3ac23ae18bbf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "55daaacf-bcaa-47ad-91e1-b0e41a2eb5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb159ea-711b-407e-b7b7-fa517a79e71a",
        "cursor": {
          "ref": "166f2c54-2005-498c-941a-2aa42a0d3d96",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "045a71a9-8f64-4164-945a-88794f067743"
        },
        "item": {
          "id": "1bb159ea-711b-407e-b7b7-fa517a79e71a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ad9602aa-a9d9-4685-bebe-12448d7712d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d220e183-99a5-499f-b5e5-de2546e8ac78",
        "cursor": {
          "ref": "dd92510f-b41a-4275-a0aa-f31efe3db80b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b4a8572b-724f-48e5-a1d0-03858841bb41"
        },
        "item": {
          "id": "d220e183-99a5-499f-b5e5-de2546e8ac78",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "957b6ac3-e527-400d-aef1-e4a5d6770a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675ef296-01a8-4b7f-b452-d6432031f774",
        "cursor": {
          "ref": "a1009b7f-f648-4a0f-afb6-a9dddfdc0896",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "680a3213-18c0-4d89-9107-8623d29cdd03"
        },
        "item": {
          "id": "675ef296-01a8-4b7f-b452-d6432031f774",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8e85f2f1-8e98-4e59-967a-45e82c6fed01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b80da3-c0b4-4669-9f6a-c1343f2106c7",
        "cursor": {
          "ref": "3bb45756-604f-42ac-8a0b-730c22aa8afd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7f4b2a77-6f28-4835-b43c-466db85a20ab"
        },
        "item": {
          "id": "31b80da3-c0b4-4669-9f6a-c1343f2106c7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "08dcca96-5458-44a0-ae7d-a3eb2b779e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f555a5f-c5a5-4513-90c3-3986010fa11a",
        "cursor": {
          "ref": "95db811f-7448-4cd7-a7c9-b88bbca2b26c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2efeddad-ca18-46b2-b0f2-11b5c429485a"
        },
        "item": {
          "id": "0f555a5f-c5a5-4513-90c3-3986010fa11a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a0bd4102-7742-4634-9fd1-7395dc5b2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbaa8dde-1fdb-4a79-a1fc-964857a5e7dc",
        "cursor": {
          "ref": "113bd50b-8fdd-48bf-bd0c-ff845f7c72bf",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ccde84c6-f532-4d46-b046-121c106a7f3e"
        },
        "item": {
          "id": "bbaa8dde-1fdb-4a79-a1fc-964857a5e7dc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "83ff6bd5-1250-4c68-890a-4a60e7292b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f599823e-14ca-47ca-b8b7-f0f888d578dc",
        "cursor": {
          "ref": "86b814a3-0420-4a4e-bba8-fd384425e462",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9c52d329-2fed-416a-93a6-88641541100d"
        },
        "item": {
          "id": "f599823e-14ca-47ca-b8b7-f0f888d578dc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ae46e2b1-2a1c-4864-bda2-08bc2331a4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25724da2-9c1e-4f9e-9141-c944f0349b09",
        "cursor": {
          "ref": "41482f30-3d3f-43a5-9586-cebf373d7cc3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "63ed6773-ce7f-4107-8c1c-04ee7a2cd6d9"
        },
        "item": {
          "id": "25724da2-9c1e-4f9e-9141-c944f0349b09",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "031d1ba3-ecc3-4c45-a097-746ef18b181e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf885fe3-5ec5-4140-b3dc-67c21fd6a3a5",
        "cursor": {
          "ref": "7315a600-8252-4833-a45c-e087edb24cbb",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9944e9ef-62d9-403b-9728-47217ef82e9e"
        },
        "item": {
          "id": "bf885fe3-5ec5-4140-b3dc-67c21fd6a3a5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e5e2184e-b2de-4d9b-b59d-103c026c52cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66885868-1bc9-4a9b-8d4b-81328f298e1d",
        "cursor": {
          "ref": "45fd0690-b2ac-4d2d-a4b5-b0d9d2075272",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1422c354-fc4e-401b-93cb-38b0a05df0f8"
        },
        "item": {
          "id": "66885868-1bc9-4a9b-8d4b-81328f298e1d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "01db6c5f-e4e4-4cf4-a911-4e5c652bed5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1242bbef-355d-4fb1-81aa-5f18c3192481",
        "cursor": {
          "ref": "ceb532ec-fff8-4a0d-b3d1-9277edd898d1",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3bfd9be6-454f-42c5-ae70-7cf5be02cd4b"
        },
        "item": {
          "id": "1242bbef-355d-4fb1-81aa-5f18c3192481",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "17a55403-ae86-44db-8c9f-47e2b19099ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d994a667-3af1-47a4-93d0-e25904765fb9",
        "cursor": {
          "ref": "214fbb99-b9c2-4840-8234-4b12f0871d1a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5c246aee-3b52-4221-9597-60e301f5dc05"
        },
        "item": {
          "id": "d994a667-3af1-47a4-93d0-e25904765fb9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "db2f55e7-2cd9-4d95-b3a9-22655d09dd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51f512a-697e-4f9f-bcbe-a2fcc0366f35",
        "cursor": {
          "ref": "9213b183-a273-48ec-9898-282bf307c83a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "93e0be77-09f8-463b-b35f-0c6f639ca383"
        },
        "item": {
          "id": "e51f512a-697e-4f9f-bcbe-a2fcc0366f35",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4e3001ac-e331-47b0-9f5f-00e8bc14a9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef671510-3eba-4921-85e7-1a8fb1c92651",
        "cursor": {
          "ref": "40ea1b95-8dd4-45f8-8537-1b08f69889ca",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bbaebd53-9eae-4c06-ac3c-fd4f3d0ca8d9"
        },
        "item": {
          "id": "ef671510-3eba-4921-85e7-1a8fb1c92651",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7f790d0b-a203-4c53-8d99-149065a3921e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e772ac-fce6-45e7-90c6-e2803cc0c0a3",
        "cursor": {
          "ref": "01533cf2-0a73-4de3-bc6b-d48d15a58ef7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "988b04dd-2f0f-434d-b811-ef37f344e08f"
        },
        "item": {
          "id": "61e772ac-fce6-45e7-90c6-e2803cc0c0a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49190789-1451-40df-9f18-666d9d2b3472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bda806-ab28-4013-9836-98614f35e8e2",
        "cursor": {
          "ref": "54fc9987-81dc-48b8-b920-ec74dd8e8290",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1be11798-596a-4c24-9a31-b4fe4071fb3d"
        },
        "item": {
          "id": "b5bda806-ab28-4013-9836-98614f35e8e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b2e2601a-c660-401f-a8d7-9922d7360171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea58e2f-994e-4ec3-bef4-88d9e0a7f6ae",
        "cursor": {
          "ref": "ca03303d-4e09-4b3e-8d1e-757e66be4f64",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3b1f6741-8dac-474c-a492-7b9f227d8845"
        },
        "item": {
          "id": "4ea58e2f-994e-4ec3-bef4-88d9e0a7f6ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0744828e-a671-460c-a689-747d97432e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf52ed4-439f-45fa-9f82-f89119ccc23c",
        "cursor": {
          "ref": "6c6094bb-a96c-4dac-8278-758c9662159d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e8c91647-47b2-4931-ba42-e93a681f61f2"
        },
        "item": {
          "id": "8cf52ed4-439f-45fa-9f82-f89119ccc23c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "adffd0f3-b57d-4478-8abe-9a25081f2a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2189f0c3-3e7d-448a-819d-55e4dad5b28f",
        "cursor": {
          "ref": "8fd3b8e1-464f-4dce-958c-a2c22e7286b8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2d0529d7-e8f7-43f3-8476-d99ae8d596f0"
        },
        "item": {
          "id": "2189f0c3-3e7d-448a-819d-55e4dad5b28f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "411e90a3-4e74-41b1-aada-364d81c79b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c641e-cfbf-4d4e-a718-19f7f109a818",
        "cursor": {
          "ref": "58e870e4-3bcf-40d8-a908-03a6febedcd4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1b367742-936c-4c20-b744-42799446ed99"
        },
        "item": {
          "id": "240c641e-cfbf-4d4e-a718-19f7f109a818",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e41fa084-561a-4e16-801e-9abb93be03af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1deca62-4696-45b5-876a-ab9d6ad37702",
        "cursor": {
          "ref": "d87ca216-568a-43a6-85c3-cf8026c808c1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "58c4d18e-9a58-4205-8a5a-8e6e98998954"
        },
        "item": {
          "id": "d1deca62-4696-45b5-876a-ab9d6ad37702",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "42f8f86f-574d-4eb6-bf9a-3a01e38f4c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22835a82-8daa-44bc-a65d-c7764d45494c",
        "cursor": {
          "ref": "69e98d04-a211-49c2-9b56-f9e61cefe087",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d29f15a3-265b-41c0-a3b6-fc9ff4610c74"
        },
        "item": {
          "id": "22835a82-8daa-44bc-a65d-c7764d45494c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a767217c-997b-436b-8a43-e74e5b4be761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a918438a-f53b-41c4-a41d-42a02044471d",
        "cursor": {
          "ref": "4a2523cf-e95f-4caa-b118-252abbe61ccd",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3ecb8abe-b5b8-42c5-bca9-49f256900c91"
        },
        "item": {
          "id": "a918438a-f53b-41c4-a41d-42a02044471d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7b7bee8e-aeb4-42c0-affd-ab276d62802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f4b5fe-2c91-48e2-b919-1ff5eca8fe87",
        "cursor": {
          "ref": "81fa0ff1-7aa5-43d4-a645-ce307161a85d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "872217cd-2dc5-473c-baf9-564a68ca1d21"
        },
        "item": {
          "id": "09f4b5fe-2c91-48e2-b919-1ff5eca8fe87",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "567881a0-eef7-404d-8ee5-31a8da21c130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b92f4b-3858-4748-9d7d-798d8f28b2fa",
        "cursor": {
          "ref": "ff308ef9-e4e9-4b88-8fa0-31006359475c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a6db2f2c-ca5f-46a7-949d-e8bea99914bb"
        },
        "item": {
          "id": "10b92f4b-3858-4748-9d7d-798d8f28b2fa",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b2ce7687-8740-4967-8a46-182368851552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3934817f-771b-47e4-945e-5236acf80c17",
        "cursor": {
          "ref": "32254f99-83c6-4ecf-9851-f45900b97732",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "93e48431-a763-4ab1-a196-cb008f7d4ed1"
        },
        "item": {
          "id": "3934817f-771b-47e4-945e-5236acf80c17",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d510f507-179e-4c1a-a6de-5656b5021291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a1a519-fc9f-4739-8e2c-3d57afed55d0",
        "cursor": {
          "ref": "9605d468-58c9-43cb-a5d2-cad440ec2eed",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "175ab748-7b26-4fac-8659-aa88dfe1369f"
        },
        "item": {
          "id": "f9a1a519-fc9f-4739-8e2c-3d57afed55d0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "55c574ae-e0a3-48f8-acaa-b73e43c556b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a91cf7-b534-45f7-ab03-0d5fbb2a9600",
        "cursor": {
          "ref": "58ffbd12-4721-4d2a-939a-9d9e14a5bcd7",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "11da9936-4f91-4742-962d-cf84d3fcbd37"
        },
        "item": {
          "id": "f6a91cf7-b534-45f7-ab03-0d5fbb2a9600",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4f6dec25-2332-49d6-9ca1-10bb0cbcbac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d45305-ac8a-45d9-9a8c-5e0bbd874599",
        "cursor": {
          "ref": "774fe2ae-befa-4e1e-b01f-8c5af4a220e4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "10a3c737-e492-4999-9dbb-13e9a8ac2463"
        },
        "item": {
          "id": "f1d45305-ac8a-45d9-9a8c-5e0bbd874599",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bfed93eb-f831-4791-81db-a4308ebe57e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac060f6f-3769-4142-8b89-f66a8506442d",
        "cursor": {
          "ref": "1604cf65-0136-434b-9aea-4e8ea6accc4b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ed5ae8a1-5072-43a6-9e29-068f98b94557"
        },
        "item": {
          "id": "ac060f6f-3769-4142-8b89-f66a8506442d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "743c9322-8c86-4145-a0b3-aaab9243e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2102911c-1564-4b44-b4c3-94f96d58d84f",
        "cursor": {
          "ref": "646da0b4-9b1c-4788-a82d-d02039076772",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "73dd385a-6260-4d87-aae9-1f3763f305df"
        },
        "item": {
          "id": "2102911c-1564-4b44-b4c3-94f96d58d84f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "76b5eae5-12a3-469e-80e6-9dab7b7b7ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e5e97-5f5a-43dc-9e28-78125da11e6b",
        "cursor": {
          "ref": "9af9e1ae-c014-406f-8fc1-87d38c1d26e9",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "108069fe-2524-48f4-b16a-e9bac770d8fb"
        },
        "item": {
          "id": "fd5e5e97-5f5a-43dc-9e28-78125da11e6b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1432cd55-1f37-4fb9-acd3-6378bf900b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c96e1-800f-4cb0-8f74-41b2fc593082",
        "cursor": {
          "ref": "7d2717b7-6f62-40c9-be41-7e1cce95e4b9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "281d1b39-f91d-4d6e-970e-44788ff2f850"
        },
        "item": {
          "id": "7e6c96e1-800f-4cb0-8f74-41b2fc593082",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5dd22e8d-d134-42e4-b5f2-ec2ebc6fe442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe12031-ddeb-44cb-a60f-2c9f0c76d123",
        "cursor": {
          "ref": "6d4d4ce7-383d-4001-b5a7-cf38b0cba134",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "33736b9f-5835-4477-bd72-7bc474b7379d"
        },
        "item": {
          "id": "dfe12031-ddeb-44cb-a60f-2c9f0c76d123",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "790948eb-2e10-4490-bde6-54cc954471a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b3684e-3040-4cf4-ab7e-f9ce1451e553",
        "cursor": {
          "ref": "1daa425c-e369-4edc-8302-ad33566e3b94",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "65e16005-e357-4328-8ec5-4e5ab5b2a09a"
        },
        "item": {
          "id": "94b3684e-3040-4cf4-ab7e-f9ce1451e553",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "633481cf-a456-4733-834d-29d9af45370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27d5298-4f23-42ed-b9bd-2d841cc3c2a5",
        "cursor": {
          "ref": "b657ccc7-37a7-4acd-90c1-2de663390252",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c4721e8c-1735-4e3a-9b8d-b174f609e050"
        },
        "item": {
          "id": "e27d5298-4f23-42ed-b9bd-2d841cc3c2a5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6683c8c9-e96d-422c-91fe-79d6ed5ad794",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8174f363-59f1-4715-86f6-89129bbff6aa",
        "cursor": {
          "ref": "f0e29614-6c39-4184-b950-c37460d81ee0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2b6f11c8-ce0d-4b0c-8134-99003787c861"
        },
        "item": {
          "id": "8174f363-59f1-4715-86f6-89129bbff6aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cf20e3bf-f38b-4ac8-9efa-570ded3f3378",
          "status": "OK",
          "code": 200,
          "responseTime": 448,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc5dc7a-6c7b-4c2e-9115-2538b77b83c9",
        "cursor": {
          "ref": "a89d7aa7-a40f-40cf-9677-aa1f6565513d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "03ab0e50-378a-4de8-8b38-8cf3b8dcad92"
        },
        "item": {
          "id": "5bc5dc7a-6c7b-4c2e-9115-2538b77b83c9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2771a05f-7113-41e2-acca-59d8a8b1fa8c",
          "status": "OK",
          "code": 200,
          "responseTime": 1550,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ef0ff-8333-4919-80dd-5b1fa4be9981",
        "cursor": {
          "ref": "5e03b804-1757-43cf-ab0e-74629ccd7b51",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5413e1a2-c3bb-4e29-a9d5-d38ed0e96e09"
        },
        "item": {
          "id": "8f4ef0ff-8333-4919-80dd-5b1fa4be9981",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4a3c69b1-e8ba-45e8-8524-62847c738ccb",
          "status": "OK",
          "code": 200,
          "responseTime": 1572,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c2516-a18e-442c-ba2c-06f3fb477ac1",
        "cursor": {
          "ref": "c4fdd8eb-17fb-4c3f-95f8-37c46936a04c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2f376369-3a8d-46a1-b409-dc8948d35308"
        },
        "item": {
          "id": "b51c2516-a18e-442c-ba2c-06f3fb477ac1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b2cb5e2-fb7c-473d-a129-2d24dcbd28e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c2516-a18e-442c-ba2c-06f3fb477ac1",
        "cursor": {
          "ref": "c4fdd8eb-17fb-4c3f-95f8-37c46936a04c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2f376369-3a8d-46a1-b409-dc8948d35308"
        },
        "item": {
          "id": "b51c2516-a18e-442c-ba2c-06f3fb477ac1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b2cb5e2-fb7c-473d-a129-2d24dcbd28e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad7052c-62ff-4bdf-93d2-6fa2c9a14c90",
        "cursor": {
          "ref": "e12b82f9-69be-4adc-9618-89f67c92ba66",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "084646be-3b25-4611-814d-f92d2f71bd77"
        },
        "item": {
          "id": "1ad7052c-62ff-4bdf-93d2-6fa2c9a14c90",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c6746d91-0ac1-4bbf-b9c7-f115b7e64053",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2562b0e6-82ec-4b75-9b40-4039fefc50a1",
        "cursor": {
          "ref": "65656db2-393a-4b74-9ac3-8f72a284a90a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fff4f0d2-19ea-4b73-96e7-b69466a2bc1d"
        },
        "item": {
          "id": "2562b0e6-82ec-4b75-9b40-4039fefc50a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ee80f812-3075-4803-8123-193328d1d69a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}