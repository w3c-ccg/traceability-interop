{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "073d4222-f15b-4b47-83aa-501f5bdc5ee5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6acd2b2c-c91f-44eb-b00b-aaae0f7252b7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "297aa598-314a-492d-90d2-1238aa02b960",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fa0889c3-979f-47f6-963e-e5dcd126899b"
                }
              }
            ]
          },
          {
            "id": "d2ca3704-7e57-4982-b6c1-28bd76a98ec8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4f37588-3745-453c-92ea-ec724533d720",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78933df0-bd22-43f7-9e71-43f92f560f14"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "62fa7254-d9ba-431a-a265-6fde88c336c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "21d95fab-8404-4589-992b-eac7f377e03b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b827bd63-7fbc-49a4-bae6-93f1b6e61c24",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4333b173-c668-4db5-931d-4600468e2757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7aec5615-7fc9-412d-979c-de8fb88e8332"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4fc28bd-820f-4008-b6aa-fda5e6788f08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffdd770c-889f-4ca3-acc0-564d05b57858"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3b2d75d-8a31-40d5-8d72-f550757a3564",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f54e94ad-c85f-4e7f-bb7b-34ec6c2194a2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0a4dba6-a391-4bab-8bdf-291385e22dfa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a4f4db5b-46b8-4713-8904-911efbcf5527"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9820e748-8675-47b5-93e8-ad73ac14c6b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38cb3623-3eac-4e55-aee6-ffadb559fdc5"
            }
          }
        ]
      },
      {
        "id": "1cb21249-6cbd-491e-a7be-432a6155c89e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "66f58086-36aa-4d15-997f-170b930a0eb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9747fc13-6616-4831-ac60-3ecde3760487",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0ed9eed-00fd-4b9d-b5f6-f7ee87d537c1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63fd16e-43cf-4c54-a7b2-ee326bddc134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de70abab-8e57-44bf-a8b5-7961e7287af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54c1a47-0dcd-4440-b620-117b3ef7e6f2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9245419e-e4a8-4d65-8973-743a31baccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a34e1243-76bb-4dad-a8d1-f08b9851259d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616e6515-b225-4184-bfe8-208ea0406d82",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2f9876-2b7a-4fb3-a66a-46b1956ae746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3f40056-541a-4855-8f78-526c50189c8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1561bc3a-5b7a-451d-b6d9-5e094e078ba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8be01a5c-0475-4835-8fac-eda4f3bdb285",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c056670-d05b-42c7-bc6b-1099d5fe0746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b7eb3f8-f7eb-4fad-bb49-d307b18a3689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763cab69-3a88-4712-80fd-ba2c549c83a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eacec62-b01e-4636-aecb-b1e28ced1d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680d792e-1698-460e-bca8-69322edfbfd9",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca7f6c0-48c6-4bed-b7ea-274347072577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51a6fb0f-b979-41ba-89eb-7a31e9dbde8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d25c6b2-1da9-4dcd-b687-ef8278d6e18f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c1057e6a-4700-4c2a-8764-7528864d2c64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4bdc1bed-88c9-4114-8548-a5a48ceba77a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1026708-18bd-4871-a67e-a2c0f64090f8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "effd913d-89f5-44b4-834a-897497495cb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e7bf3563-2721-4533-98af-66a7fb48dd8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8212501-3b37-44cb-952a-bde77bc7d900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "695156cf-eb4f-47df-8049-6f75a43f15a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d29f4df8-5a6e-49f9-a0bc-57a57d9661df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b464209e-5d07-4065-a8a6-0b733a9689bf"
            }
          }
        ]
      },
      {
        "id": "c3d95a81-4a9a-4f3b-88d6-0fcd00d54b6d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "96a43635-7aa5-4350-becf-47dc0a18a923",
            "name": "Negative Testing",
            "item": [
              {
                "id": "193b3726-beb0-406d-9150-3691daab8bc6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8476e564-0c41-41da-ab8c-09bf6de9cb37",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d15fa21-4375-415a-a408-5837386a83dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6108ea65-e938-4cbd-acfc-632b1d5a57bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1f3067-9784-483c-86a7-702fd4eeef77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e04067e1-0805-48e0-b7b1-abb5839da324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6e38e4-662a-4270-8fb4-560544039e6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83c8430-6fd5-4d75-b729-4c540b57d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2de0a4-7f3d-4781-b9b1-4929b729d2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2582e68d-1577-45e3-b779-9b478f8a9783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "159a8611-f4a3-4726-ae20-3cb83270ffec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178261c4-9606-4725-bee5-f863a913bd5c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f6d83b-9ea8-4726-892e-c6fdcc6d4e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee612c07-6d06-441e-a261-dcb9f4636574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd89df80-6187-43e8-9c51-5c0783edeeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b9a2035-f310-42a3-9ce4-4fe174d256f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547acb3d-3d68-4c96-afa6-f3049034827b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8e535e-519d-4d2a-9734-ebaece913367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff49d5c-4fea-438f-bc09-fe876c6a662d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae10cc02-2a42-4969-bb9c-6f89244777ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b3eb86b-8ff3-469b-8a30-7c83fc21ae09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb855c2-f4fd-4014-8124-ec2105038b41",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915eef8f-3cc4-4797-a96c-597df1bac4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0333c7-75a5-488c-9d0e-29ecd8c90411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfae9746-dbcb-44ef-8e31-012527c1fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd751565-f58a-437b-a9d0-2a4938cefcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bccb72-2461-48fa-bc9c-b724d22bfe87",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517f990f-644f-4122-aaca-6a490f09c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d13497-0e5b-44be-ad7d-c6068930c17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8a383c-8f88-499c-919c-2b50d432852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "239bad28-1b74-4cf7-a1ba-2bf3b22a9cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe4f408-a4ce-4f74-b3ad-d6bb7e36adab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9885b5b-43e0-47f3-a68b-00c527deea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8397f2fa-653b-488e-952f-49a6ab1fbeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd433d35-8d65-415d-bfa0-dc8b46c22f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "054e62db-7087-44d7-a2c1-73326e6ad0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63adab61-93e3-4b28-9771-000fe5e8cc9b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7785ebf7-f39f-4763-b7bb-2df99bc24324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c09acd-5f36-4e2f-9a06-f5111a585f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7fb3d7-8892-44a5-8944-612be2e63a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a4efdb-3b49-4953-a1bd-63f16c00937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3d8ff8-8275-4574-af1a-46bffa1b3024",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8401402-5b81-495f-9458-06d443a810b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064d9661-075e-430f-b7b3-09d8a82bdea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2adff-f91b-4e40-b64b-095d2d441991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6e7c663-1492-46d3-a2c2-30faefb835e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc6f495-a513-4c7a-8e31-773a4da0bff8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b51992d-5e21-4684-9866-f05479b3b0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b216e9-eeea-4ce2-8e7b-3ad7829a75a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b4a6dd-da1f-4a65-a73a-6e939130c81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cd7c214-2818-440c-bafe-ff5c62136098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f3acef-980f-44ae-af06-924d8d0e31bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f37d49-5037-4e21-b1e5-707c7671de24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bde540-4a1a-4955-9f97-e93aaa3727dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1dc17c-b349-4a7e-bf58-cb4495ddccff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a503bfee-43d7-40d8-b0cc-17e68c6c9e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff0bb2e-c73b-4752-a209-dc10e31802ac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb109c9-7f39-4417-a77f-9c61eb7794fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4d6a08-c688-49f8-864f-1197cda68ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242cf7d2-b700-4902-88a0-e9f61fa48b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59cad59a-dfba-4f72-a2aa-158e699b16ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f1d761-a8d9-4964-ad52-c99ca58f0719",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a3826a-619c-47bd-bd47-ffa3e2f90a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fe0a1b-b269-46f6-9424-566bb4d731e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabe4601-38c1-4444-ae89-e8a76a0d70a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0be43ba7-0ed3-402e-a957-0076a397aee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d169927d-7b6f-4bd6-9e8d-79670705cacb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885666e7-58ad-412f-9802-686274f8ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbe8bc7-f670-4f84-a38b-1a9b6b32fd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c70d102-67bf-4d11-8a36-876ff489a06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c50c92-74f4-4186-b7f8-fc7691fdff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e342f547-a4e1-4cf1-ad3d-ad5a8173b8b5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad9c7f8-0735-4da5-ba5c-fcb2b0edb4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8174610-4e56-4a15-ba0f-479171b39b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e8cca-defb-4fda-ba9c-619ecb064c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1924fe3a-5cc0-4797-b039-b66eb34b4205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9004e65b-2474-40cb-b8f6-9181430de4b9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4879998b-95ca-4509-a210-ebea1528da10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e8b9c5-b3a6-431a-ad85-19ec75c403dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46ce7e4-7e63-4047-826e-22b87863c6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fa892cb-5a98-4b80-b31f-515863493b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c3508e-ae09-433d-b170-bbdf99837ebe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e5fed0-8dc6-4bfe-800d-9b3fe321f15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fefb62-b181-44ed-8c4c-bba1365f2546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d877565-a63c-453c-a3ac-11313d38aa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e92a77f-dc2d-4378-b365-5cc36b5873f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529d5ac4-28b3-4a92-ba14-75e4e6b61e3b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5daf26a-f5e4-4f92-b3c3-b6c0ea0af902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d1c11e-8bed-436c-861b-058eced9d2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a51a14-761e-4dcd-b4c3-8c02a4e01fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df5dfbf-fdc2-46a7-9656-4690bda52e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65d6c57-fcef-42bb-8a00-37234fe00171",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917e6ef5-bed5-4b41-a2cf-85e38d47920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decb33c2-d779-4c0d-bcf6-e8ad0674a56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41733df3-cd7d-48c2-a89d-07df36f0bb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b737d7f-58b9-43c0-adda-14cd915fd139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb2a246-a29d-4dd4-939b-1be9665de9f8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119a3a08-8402-4f9a-91b7-77b542240d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a59aeb-ef35-4f04-8736-91f5fa4239a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513b81c-e8cf-4575-bf05-752d7cfa86d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "495257cb-c5a3-4ec2-8daf-59cead280642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f950466-e3bb-4741-9051-a12e77b9c921",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831334cc-bd2d-4a85-8890-e9cb46e9af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3473315-270b-4011-ac0f-8fd47269bdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432c28a2-3f05-4206-83dc-2f6357413925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "944fe5c2-09a4-4c95-8268-b3a7beaf7caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7421123a-8373-4d81-981f-29f1c5f8fd7c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30f974b-e5bc-41f1-a3c0-5334ac3e84ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b434905-604d-4676-a028-6baaa8eec7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a875a428-52b6-4ad7-aac3-c41921ff62d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad752beb-53ec-4681-8d22-091ac0e9a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e25fb7c-e0c1-4b89-b936-971e7f31cd5a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d83e2-ee78-468d-8b90-29aa05a6f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ccd538-dfcb-4427-83d6-54b97c80ee7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9650028-cfd3-4d1a-b2ec-119325952284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ad43a9-e871-49c9-abe6-9c1b72f21f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a36f54-e67a-411a-b1f0-762454edaa59",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5109c300-cfe8-42db-8d2a-023f1e399b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc236ba1-6fd3-4354-ab91-412fe9ef1e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a061465-db32-4bc6-a98a-492eda9830bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b984b699-755f-44d8-bb05-ff0abb67da53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5873d4ec-05dc-483b-8b37-2716eacaeaff",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee4523c-d5f0-4ea3-85af-a26842d7bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ceed92-db6c-45e9-9659-848a1d948964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932cf603-f31c-4b6f-8d92-c4a17bda331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a5b567-26c3-4c6f-8607-ac291a3920ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb35c8b2-4fbd-49c1-9030-5165d52ec2bd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c453c5c-24b1-4f76-a618-fdcad0a17eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928cea59-ebd9-4480-a9fb-358679d27cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a78eab-530a-47d2-92d9-b6aa95a6f132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c09153-fb15-41e1-8d85-9109be97edd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0c05ac-5f31-4a61-828c-5c2c7dbc24dc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e700918-e630-4ff8-8245-cc0443dad017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0794a94-c637-4be4-b798-9d2ae9ee6712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c400641-54cf-4545-ba92-63b2cf6bc3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a742a0d3-11c7-46ff-b7a7-26b917ed3a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ceb84f-6fdc-4bbc-94e5-3b6b0411ff50",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4684f47-65d7-4a3d-bb62-d9643f797667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a57cd19-8f69-4b6c-ba3f-cd769db76385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0119b08-0822-45cd-8aed-1b679bb7118f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b917247-0785-469d-8c77-3230bdeb345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2300771a-6dff-432b-b0ac-41ee6cfdefd0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83a4058-913a-4b97-8166-6ed4d920aede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a034fc-3b5a-4880-8323-77b45183b6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db35bb4-10b1-4728-a08c-f82bc9770c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a5dbad-5f2e-44d0-be58-1a82db33176c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad0c5d6-9b72-4352-aa35-a976bfcba413",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746bb2ca-3bbe-4143-8217-da19db6d1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454974e5-7131-488f-97dc-ce395b07cb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add9ce38-9341-4818-832b-a3fd2dab0f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f391bb00-bd59-459e-9363-123b50df5951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bb092e-119f-421e-9b5a-8e3fb2df1e33",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df54b01-9284-4a30-859a-5ce15acc88a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de399d7-779a-45f9-9bfc-0a23c92a480c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f8fcae-e055-4131-9a17-a3a8a8941fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b1d775-7e77-4cdf-96b5-96a862000334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d7fcd4-013c-4f5a-8460-d6da37f8a065",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9ae81c-af19-4f7d-9048-4675286396a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5be651e-7030-4ee7-924d-5dfb04cc08e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea70380-5436-4820-8150-ff4700359637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d47cc14-fd27-4d1b-a86c-446d77a651fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadc3a20-4c18-415d-b7a1-fd25781964cf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244f287b-26a4-4525-aa85-9e595df0e0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58388686-3b63-45c3-96c0-256ffba63d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea4cd4e-5c76-47d0-b656-0a753d1e12fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8efc09c-68ed-44af-9190-03472f6b20c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b140f2-facb-42c7-a9b4-e2cae8b7b99b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd61146c-832e-4d2e-bff6-888e2a951b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036af30f-2b03-423f-bf29-f5e8496390a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a38c2c-0184-4691-b321-730d798d7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda074c6-eb23-4756-8092-02632a9f341b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c640997-a52b-4efa-ba75-56509b4fd049",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee29ac4c-27cc-4d00-8150-f6965c4c635b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d98d574-a451-424c-a255-4900aafbb0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03768ba3-8b2b-45a8-97a7-f30738d18ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3e07e8ba-a2a2-4a27-ac95-71fba762cc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c45079f-b141-45ff-b483-ff968bc41c8e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eded666-bdbf-4c36-9d65-b33a03d62a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc4b8022-b789-4608-b32a-6fa2b5c21bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ccb41-ec09-44bd-836b-6845672fb7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc7bb21-cc5e-46b4-89cc-f6bdd1d3b7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda6e33-509d-45ea-ac03-99b405723b94",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a073998-fae9-49a8-9c99-a09d12d7dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b702cf68-3eee-4481-91f2-da7c10f4be0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d3aca7-fdee-494e-9182-cd528ec21023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2768626c-f06e-4cdd-ab88-0a2631c21570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac8dbb-aa5e-4ce8-a530-435006cc508c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b907b10-fe5f-43c2-883c-5b88fc303842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2867afa5-88b0-4ed8-bce3-bd9df5260832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec4296b-b91e-4065-8142-a3ba8c1f807d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31676c8-438b-4f77-b0d0-76f4876cc098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6c35c1-f9ca-4eae-83fe-e2903b130ba8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385b3015-9657-4155-8d74-c031905b719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df30e19-e2b5-46c7-81e7-79c9669b6ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd656c8b-1927-4753-99fb-6709509052c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e734bc-d1ba-4629-b3f4-f254014069ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb07172-18fd-4269-81d6-c243523baa4e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48eeeb3-ac42-4b74-b015-4f7efb31cd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52d2e4a-434a-4177-8c07-29a2642118be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae84207-3ee2-420c-92d1-89fd4afc1014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "234f4d61-c77d-4f3d-9bbd-5befd94f7ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab684b-7a46-40c3-861d-9a8d3caa19a7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e6a820-0e89-458a-9540-cce7db5707c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b808d72e-b4fe-4885-ac20-9797a1eaa725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2c07d8-6ca7-4e49-9cf6-2b71a7dab49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92f4a449-25cd-4675-bd75-7990adaa2eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de22472-8fc2-4858-8987-1c31655beb13",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cea020-3879-46c8-829c-2fa7ce3b7db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a605e10a-6ca1-4ef9-bad6-ce8089546f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344f8e9b-3117-4689-bef3-fa40c7c09c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2160c206-4c8d-41ac-8ea9-b9076d627115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e6395b-7f10-4614-b8f1-f320c9dc9e79",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5c72db-c347-4899-acb3-c47ad85c0fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8581303-aedc-48e6-a825-da1fd0fb8dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27b557e-1f98-42f0-ae74-d4febe9ba955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82ca8864-a9fc-464c-92e0-8c85e2de4bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7133bc2-78ec-4a38-98c8-188386e3b4f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32492011-b959-4e68-9337-9ac20fb2e587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202c51e2-4625-4eac-bf3d-59dcacb1d372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f373345d-f82d-4e3e-ac83-5d0c860806e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "082d82c9-8803-4a43-8abd-5419a68f8204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57daeb4e-80f8-49f8-8439-285bc7f40568",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824151bd-c0ca-4cc7-9375-272604a5e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0db799-c878-4579-a52c-2bc429a4176a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ba3e9d-af1c-4289-b4f0-96f3e9ca3b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a2bcaa-c3f2-43f0-bf7b-11e16b5cad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c18a921-0a29-471f-86fa-245cbd661bea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bad282-ca59-47d9-80b2-b264ee4d38a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3671390f-4149-4445-a639-a3d9e5b68703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494dce2-9561-47f5-b654-d45272277398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e2c632-6db3-4495-a321-05ba4c0d4eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e02b32-51ed-4281-9ab7-817d355ca1f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740204fd-7b7b-4199-9911-aecad2c6fff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477b60dc-5ea2-4e5d-a9ef-037b73ad2abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaa5a2e-16da-44ad-a0f5-d67b9c567051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "996dee16-d55c-488b-86e8-49f938bfd7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8c920d-7384-47da-9dd4-821e2d2ddb9e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b00518-d823-443b-b5e0-a9a6b412f5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991d935e-c29d-499a-9510-2213dd1c822f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37650dc-3e18-48a5-97a2-7fa60a37820d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b941cbd7-6efe-4268-8db7-20ce917b4477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae1b0c1-3c5f-480b-98ab-7b9203008177",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a0eed-262e-4f56-97f2-f1ea69fcca8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5860afc6-ff3f-4cca-a1a4-93be31a67b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f52c49b-1b27-4298-8afa-58ea235aeed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99fbd823-bc15-42c8-adce-5352ee02dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f06630-fb2e-4f01-a046-2226253a3882",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abca209-743d-417e-97ce-e611d8747547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d533cbdd-0034-46d2-8542-fd9be89ccdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225338d2-0a14-48a5-9e09-11424cfbe007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f3d994-c117-4ff9-a647-cfdc1be73e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d4eade-d4f0-408f-ac62-feca21633d41",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c57ab-6db0-4167-812d-7bcfca6b7f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb12d26-be5d-4f78-88cf-6defe750ddf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c8d3a2-ff30-497f-b5d6-d20ba403840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d05674f-5b25-47a1-be78-fc2f9c013d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b542f3-ede9-40db-82d2-404c5cf459a6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b594ce7a-795d-47b0-8b63-42fdac250a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bd2764-87d1-43a7-8296-b32512b4f70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fc8223-d005-4bbb-95c5-796effda10ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f7df2b-8d1d-48fb-a296-802bf07a4763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abed91b5-cdf5-43df-ba2f-c5c6638912a6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05661be-fec8-402e-b385-7c84a7abcd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76b0b97-bbf8-4564-b9bb-306da5f92cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8343c5b3-f748-4fd1-a81f-007f656df705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44c4900-ac51-431b-8378-792bf61265f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0420b0a9-03ed-4586-bef5-f3ca6a57f5ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e469e7e2-6e19-41b2-ab4d-a6d29e9d94c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64320fa-9939-41d4-9e36-6d91e1319711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9b51c3-f043-467b-b3ec-c61701ca81e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaba9292-c885-4b56-994e-2f947ae41bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fabc8a-0ab9-4945-9898-3013dcb5600f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52269592-da3b-469b-9a1b-2fb1cfd027e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7285c25-ea71-4914-ae0e-2150b151f74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dafee8f-e050-428c-b0f6-317a50b342a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6350de3d-cdfd-447a-8ac9-0f6ed2aef59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29683922-ebbb-4cd8-bb9d-32992a71565f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8378a6b0-ae70-49d3-be3a-ceb375188513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88afa73a-b4ce-483f-9392-11d3fd351428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9535ad-ccc2-480b-a2b0-476766eee10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "efe095e2-30c7-4e99-968c-9a5b6d3816ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc5f940-7f52-4aa9-90e0-799e09e4c2dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b2e2d4-af69-42ff-a913-93c368e9ebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656ff040-60b2-49d8-b041-60c3574109cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bc23f0-a06d-44f2-86f9-7643992ce075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c0e69-1a5c-43d8-9813-dd196d1baba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa35d752-6c77-4eea-b7c0-e8f7509ef66c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2db490-58e1-4a83-8b74-876301a73a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fd51bc-4768-4847-a818-43fccc3a1166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98653b2b-8c54-4d37-83ef-713122eba468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac429ef-05fe-4cf0-8662-ab6144c00aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f0490a-3d31-4e3d-a017-8b83cc412c06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4017c652-fc79-40f1-8787-50e34d5e9de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4245e8c-40bd-42c7-81ec-a5ca43d3806e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12793d4e-1211-46b9-91fa-738e042cc282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96db9067-8e99-49c2-8733-f161b3ff4ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279b8cb3-8006-4bd1-b0f6-b5b5075bd9cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e8e8d7-44bf-470b-a92d-ce0d616ee226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ccaf75-572a-4e5a-8b36-3ee2ca3049eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d300d3d9-d1dd-486b-b6cc-5022b34a0978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "836d7a3b-41f4-4c45-b417-954d7d10399b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c8089b-caae-44d8-9b8d-91aaf0801a18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b63615e-92d0-40ea-93dd-d54b11208c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1912426a-1725-4de8-9172-efb230f02f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbd6569-703a-4c44-bd4f-0bf05ac95814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3edf39fd-e31d-496a-894d-f5ac06e40e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c14400c-33ea-4853-9331-daa7a9d93aaf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaf4b13-20a7-4d0e-a545-8f6f4bdf4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6101ccf7-2fc8-4b55-aad7-29ef9ab699e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebdf35b-886f-46fb-8ec4-4859acc26046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b543367-1bdf-43a1-962b-7f1c22eb9551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c2df71-1a24-45d9-9df4-9ad8298597bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3d1369-a9cf-4867-8f0e-a6b8d618cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1137aa0e-e57b-4736-8569-5f62002f74d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdd8759-940a-4147-98ae-3a8c1e7cd2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d14d8c-a792-4c40-a429-91c7b6dc5581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87016276-b992-42ee-a427-6dedba48ba81",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554e30fe-bcaf-468b-bf3b-ce685a671049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f6f1c6-dc86-4c69-b6a6-089aa56a874c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692642e7-824a-4019-a353-dd2cf60b0c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd05e05-09f3-4dc8-bd26-7c73f82a37f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf596dbc-212b-4048-a48b-a3f4b3d309b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb0ae54-f6d4-40fd-baf0-f7571fee4bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fad8ac0-5a1d-4dfa-97d6-c9182303f13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21c8946-9b28-4bde-808d-594fb453f19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfb8190-9127-4ee3-9d90-2cb34187ee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47824439-dedc-4f60-8415-96ee1f300dde",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a20f2b-3237-4406-a317-c828717bb802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cab111-c07c-4edd-b486-80764593171f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8e5c9-c533-4062-b4c7-a4caa6fb5a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16f4116e-4890-4d3b-b8d9-8efbd05a8e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b31a26-d155-47fe-9fe1-7b92cf26a5e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46474e95-027e-4786-b5ab-3a475e95e0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949064df-b9ce-45d6-87a2-6c1aaecba65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57449218-6f3e-4be2-8aa5-78303b0f04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "871c8909-72c3-42d0-a69f-d2c8e2dfe3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9100ef3a-79fc-408f-b814-b43ac044b5e9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a170c2-76d6-4d61-b5a3-a402635ef5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a670f6b5-85cc-41e5-80be-9cb14c739f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2676bf8-92a1-4fc5-b481-a80660089d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98bc13a1-6e31-4711-a031-43841e034dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cb0eec-b101-4af2-922b-43b0ee82f4e2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a425b612-2795-4612-8c69-39fa52c691db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312e5997-aed9-43c4-959a-46199d8fe687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf40bee-fc9d-4115-aa8a-4531a7cf20be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0564d298-6a71-44fe-9440-26760c96aa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06b2d0-2b16-498e-a4eb-5b69e5627339",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929d6414-a33c-4cc7-8230-5bf311e852ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c78259-42ac-43ca-9951-fd0d0c75462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66128dbd-d19d-4e09-a359-7d9c137fcda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f2fbfb-edff-40de-90a3-98c07dbbee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9390fc-36b8-4b9e-8cb6-769e42019fe6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a94040-5543-41fd-84b3-02af5c3c41a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d01a23-1437-4679-868a-05702810ee9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7218694-d549-4880-93bf-95e4777a16ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17b48ce6-6156-4e52-a627-49e2dbf4de75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79194d93-35d9-42fe-8b22-5853992d1f3a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1a8466-a06a-4e9a-9994-1d048b22daf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5a35fe-031d-45b5-9f54-c1a2c83eb53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4846342e-bb85-449c-b061-6c72c41d888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "141b5f38-ce24-4e96-8d93-11924d3055c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb41495b-9b74-4b6d-bd13-e0708a7c3676",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95fa757-c4d1-4d19-bdbc-7b65a1544d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a253df86-d0fe-424b-982b-24d36d1d7ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d4b5a1-95b9-4a32-a648-0b8ebe15c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee1b3cb-ab04-4162-83e1-a8d4fb8310bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0cc0bc-04f0-4c23-a532-9cd8100d6d8b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30e68fb-df48-45b1-9a66-0310ef57df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb66781-9f09-4ab0-8e0b-cdb31987ed93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5056d2ed-e17c-4145-88d8-e37734d56c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7daf81b9-5c32-41c5-99c7-1dcf501f8ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294ce204-6c02-4973-9179-f15759ccbe40",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5a8a2f-af75-4537-8c9d-f3e2317ff5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f5c48c-2fc4-4858-aae0-9f0fecd76f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1475f583-1764-4b12-8ff4-7a888e9d2fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "792bd400-28ce-4dc8-8412-0b334bfd6781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08574404-2989-4a3d-a062-fe290cb9934a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95af5ced-1569-43f7-b1fd-980dc3961dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8534ef9-4781-4e71-a7c7-488aec507138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61735eef-0e08-494e-8755-68f81252727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a89ed655-7f94-4ca7-b83b-7109ecbeb60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03799e90-97af-4a8f-8c1f-2f29b2b54b24",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9dd32e-b7f7-4f40-8cae-1d26e08201bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a08ddad-2160-4877-b087-dc50e72cfc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a52549c-c194-46b4-9a47-6ea24439169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d89666b-8418-41b0-8cbd-774f6e7bcbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786d3efe-504b-420a-b9fa-b3e57bd5dd92",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b4706f-924a-4a71-8d20-7f9db87bfa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1c01de-62b5-4f78-b5c9-294dfd6df5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcb092c-4da0-4cce-803c-db588af6e371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d97c354-6337-421f-86be-7614264bd127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23047715-79da-4462-ba5a-3434a004f169",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00502ca8-7451-4d14-8079-cadc4dfb95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9312bdfa-df3b-42a8-aa83-32492f89acff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71e4792-816a-496b-948e-2b477afc3397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "149db504-939a-421e-bfad-89ca232b09fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655050f-4381-4ca6-aac2-ccc0cb69b757",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badf2fa8-9500-4f2c-b259-921c11a95e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9284f73-2ded-49bf-a00f-8f4124e835be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abef003-dfdd-40d3-8441-3316dfebf30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f662f8-8a24-4948-a093-a1bae73e7309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2783ed86-dd52-46ea-aabc-fb43902ac858",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab93e5c-dab3-4c62-b1ef-f9b3234d3296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a8d9df-5ff3-4b77-b75d-1bb912798eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5742b649-25a3-487d-97bd-e8bbc916336e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4513b669-0011-4557-9f0c-aa0c15c96b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f838a-bcb3-4c9b-aa36-6988480394f1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b0359c-2f32-484f-927a-b2241c22893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40785fc5-a30c-4578-b2a2-300bbb095bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b34ffff-c4c4-4baf-9780-1335b48ead01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87740be-e362-4b78-bd70-6f7276efbcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d322e6-4446-406d-b7af-56b85d983f26",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97af019-d759-442b-9ba7-8e83a4e5ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec637479-a929-4e75-b6af-7a9b073c40bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7504521f-ffa3-4a40-a299-2ebe383da51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c40b5263-d4f1-4184-9e1a-42fb7fed77ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33cff00-7f3f-48f8-afb6-c3f3eb4bf18c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf12c90-f978-4b53-8dde-159fdabc7db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e5a5fe-4c78-41aa-b730-62caf7d0e75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0e4337-aea7-4be1-9d21-bf53344264a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d82f5c-abdb-46da-b555-d5c7d4a9c022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d89032b-6431-4deb-9e7c-5c76d7eb3cca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3058360d-1682-4db1-9993-14d9eca59a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e3adae-5437-4669-83b2-30f034c85f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d0c5d5-e5d5-47e1-a678-93e281bcc2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaf75bc-0073-447b-809d-1668c922506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe5e615-ad47-4e54-b4a0-bc46e133f09e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a9f4a2-a2ec-41dc-a88d-4e10e007e26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa99d873-26c1-4a11-8599-e5f76cfaa177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee5c026-8517-493c-b979-5515464a99b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6ae947-01b9-4f41-86fd-62b5d6c5bcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dc33a1-ccff-4019-960c-7ec2cce9fcba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db791dad-172b-40e8-9f05-98012af13730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1922045d-d380-4054-9de5-556b394b6eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69889b9-ff90-4ce4-bad8-314ad9bc2046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e25a6b82-957b-43a0-88f2-dc3e6c5c7667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb03555-fa74-446c-8659-3facdc8f6cc0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0e03eb-0044-40d4-9621-eed2e29d28eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d626595-d364-484d-b299-0bdc9e923263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18be146a-228b-4043-8e6e-462302a0751e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaddd1bf-8f95-4be1-a1ff-2c3604e46caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf59b10-4e39-4435-9466-34874e176c39",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f01958-ebbc-4332-9976-970198b20518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404ce5ba-9ebf-4990-892f-824abffae4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45a0a79-7004-4aeb-80bf-0c51cfbb0315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ebd9c3-8e4b-47ac-a792-e784aa5a802f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8bee2e-d5ec-4536-b55e-ed08c74dd30d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d5cb62-667f-4552-9914-4d7c600d298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647952d0-d738-43bd-b7fd-71c461494d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a911466-d161-4ca0-ac3b-33cc446642ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef35cf0-cc92-498b-823c-eaebae45eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1197a9-c34c-46c1-8ff7-f3160b3c28d6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f7d05f-d2f2-491c-b90d-cd0fca1345f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed42a16d-f483-4921-8010-9a4f32f53f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc8f263-0bd7-4c3a-a27a-1da6ae721fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2615df-c64e-4feb-8ba6-1ba3e78ad1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a31deb-e413-4232-b584-2834fea97ef3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699522a-cf8f-4341-ba87-f1fe15a30922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d3aa803a-9a89-4174-ad0c-fd5cfe52f2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1497503a-7e1d-474f-bc1e-a2a79b81d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c53c485-894b-42e5-9c1a-e87c100423ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35a20817-395a-4a50-a6b2-b0c34b77bf54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a275db37-ed9d-4a48-b176-3e9b49b7fba7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b23bb8-a765-4fe9-8692-670cd1da1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4746e415-8482-46e1-86e7-3cb367615d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d6422c-a8ee-4790-9f7e-a54aceb4338b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ccc9180-6aee-49ee-bb39-53a47704b001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af72902b-59f1-49aa-8e7f-862cd449a622",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f171bb1-e8a0-495c-8b7c-0f64a0cfede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd61d63d-2767-4fc7-9e42-31ce90ab03e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04d8ee0-2d1b-47a0-ab3b-d31c3b058d8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "965d9fdf-af0b-4b6f-b7a9-b5844995a3ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeb3e540-5b19-4c63-b6f9-c4e3b5b99287",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9528490b-81e8-4511-9bc1-4d345fa48cd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04ca9db-e5c2-462b-9c65-09a7d88db5cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1eab60d-7c26-4b3a-b938-e721a402b90e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b1fd97d-0d2a-4b4d-8d51-d5db7c2b016e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b071e7ba-2b42-46b8-ac72-dc4a094209ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3b8d906-f4ad-4e3e-8d33-b5e73904d86c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68513199-5aea-4d8f-821b-6200b0b3d85b"
                }
              }
            ]
          },
          {
            "id": "1476dce6-b4b2-4d18-8ddb-c4dc162273ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da8c68ae-b907-49da-9194-a85641dc7021",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b36c0fe0-f751-464e-a18c-3f0792bbabee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fceb1903-cad7-42b5-8d76-8047db6b69eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b47f44e-3f1f-42e4-967d-18a9a457f170",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6347351-be89-4074-bba0-79c06832b79d"
                    }
                  }
                ]
              },
              {
                "id": "6c360f05-2054-4fe8-873e-490e2c602c7a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02672a56-54fb-4bbd-999c-2fa4b47c4fa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7dfe541-319c-492b-a074-369fa5b9ff71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f623e66-6080-4540-9ac7-b363798a5ba6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3bd810aa-03f3-4422-b4b6-4cee67d3ae50"
                    }
                  }
                ]
              },
              {
                "id": "5201eaa5-e354-48a7-aac6-49eb1133b980",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99410a8d-c6f8-4e7a-8b00-ff4cac15dc5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50debcce-f4b1-4ab6-9557-6628686ba4c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef9cd1b3-3dbe-4996-a639-1c33afe413c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aba67778-ccd5-4bf9-a038-f0c7847294aa"
                    }
                  }
                ]
              },
              {
                "id": "d0f75e72-c594-495c-b4c2-4f243bd01c03",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e288544-083a-423b-997a-98fb48a6d4fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e56b1222-1ae6-498f-9997-f560a5f3485e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b433df2a-3b81-440f-a1ed-ab8ae98cbfe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "97b344e0-c566-42ed-8c16-ec629c998fc2"
                    }
                  }
                ]
              },
              {
                "id": "99794688-3ade-4368-9857-04c8b23a48b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf937126-1caf-405c-9144-4f7fe76dbda7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0d3c3ca-6854-4110-bd9c-c997419da8d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4edb3ab-bb08-4b80-8e74-ae601599a9e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65b29296-ae50-447b-9891-905f4e9ecb84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d397a03d-2db6-4946-bf98-e437cfda3ce6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d01dd2a1-5222-4819-8643-e5b60c7efd36"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b47bd71e-a215-4450-88b5-be1f2fef9dc2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5818c753-75d5-481d-bb50-a4917d8bf406"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9d1000e-d5e9-473f-abd6-31a3849cde39",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f5d1e09-904c-4d27-a51b-ce928b1b5149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59bdb1c1-c83e-4e65-a806-ee13f0e4c24c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef37edf9-9b42-4af5-b1be-0b1f5228625e"
            }
          }
        ]
      },
      {
        "id": "42dc8340-0ce8-4b9f-8069-66beed09e17e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f6f2d8c8-ae9e-4263-858d-7dc71aa29b5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5868af83-9d33-43fc-89f4-2850f0dbdd94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9958231-aa52-4bbd-a580-80b991837588",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4d8f57-31ba-4cc4-9cec-40f9b6d47cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1139e3a8-5528-45cd-9e70-20ac85a3ee55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b3b3e1-b000-4c48-9c0d-f9c5a4fdf752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb70727-9ec4-45fa-9478-6d15626566ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4036ac12-e3b5-4097-aa09-0357b472011f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0081a8c9-73e5-47b7-b859-551cbe02dbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343c4b5f-fbf1-4d86-9e0a-6f2404fbd230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d451e5-d667-4234-8db2-d267c45b4473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea71767e-f4b0-45e5-9c85-7c91d156f690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168c0cd3-8e13-4963-8fe2-60a8f5c0a57a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec1f2c1-d904-4af6-aa6b-39f708efcd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4c3f45-9961-4abc-a21d-d23de8f2a74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1a7ad3-ae13-4b16-a54b-6cfc7725ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d4ee66-4e24-4e93-8169-0b717a71b708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c5c9ae-0ed4-4339-9724-60115571415e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802124fc-177b-4c07-9c5d-2be4683c9ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d39bdfc-d903-4215-b860-0b6feb575ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f5d3f2-90d5-425f-b742-fd2d8088369b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b724bfa-945d-41fe-becf-05cda06030ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586cc7a-cc02-435a-b54f-5a802a8c1d96",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692c1d6a-ebc3-4138-ad75-9b8c9d2ea325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429b2ad2-675f-437a-ba3c-900474e976f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b8a05b-2695-4a87-b821-7ebf328ac37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa5de84-0710-4256-935c-97df5cc32417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc1b9eb-4e79-43ee-95ce-4a3b9469ca2d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc677da4-b3a5-4b16-8fee-1917a2e6c988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8ddcba-6d54-4b76-b29f-022c61aa660d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48b5f73-77c8-4cd2-b018-2c37ae413fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a5360f-9957-4069-aa4d-d2ed64f81156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcda4cdd-84e2-4912-af75-0571d2722a01",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cdf030-c0b8-4983-9a66-ebe5affc1cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b41002c-9243-457d-af05-7f6b0f86a0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c84b601-5057-4dfc-8234-4ac41ad5fa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6db498-1324-4117-8921-77519edbafc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec19c3c4-c053-4617-89de-e6d3b14c5b03",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d7261c-f25d-4998-a7be-52e105494c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae935f04-45fd-44e2-b780-349652979d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53925772-4c19-411b-accc-1e3172c63736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b717ae-531a-4a3d-afa7-14070bb2cff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defe1d22-a0b5-4447-b102-280ce3ce490a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dd5882-513a-4c9e-8f2f-77627a9bce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c58116f-ecc2-4d8b-9c2f-0ba40cb1bff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf6f0fc-9670-43a9-80a0-2ccec849cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4710ddfe-eba7-48ee-b35b-42f6ed001667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3166e1-791b-4bc4-95e5-f2762e3030c5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7037759d-d037-49be-8698-f7f5644083ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd7681b-e103-4a81-9295-37bab93cca4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c53209-cbbc-4c3b-add6-584df986192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6e5157-2462-46d3-8233-c58ddaf1c3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da37df59-f6b3-43c5-8e32-a6fcf4cc0f07",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf4bb3e-f2b0-4477-94f3-0ba5113f27f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9121a1-2dac-48cf-ad4a-1cba6591b04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b29943d-4c2d-455f-b3ae-f55f7a815677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae3f3b4-8d95-45ba-af69-f969587eefc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6309c5ee-7b75-4491-b320-b635a42e660a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1da646-aa80-4356-8739-e2fca0373b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b173f0a6-528c-4c11-96f9-2e63750588f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56694903-97b8-43a1-b57f-947e9d3dc37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb78e6e-1539-4c0d-a6b7-496797a82db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de5907-0e47-49ba-87aa-9ed0f347a40b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e46094c-7417-42fa-a613-97c3cfaf9f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb97e6a-7b13-4edb-920f-4dbd5745f78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ae079c-f105-43e9-800d-1e9fc64a2ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89414fd1-69b3-42a2-a2c8-94f4a7e29712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cc27aa-3f70-4432-9f12-2d414acd994e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d744a2b-fa86-4555-af9f-e4e728430354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56903ff-c1a6-427c-a17d-b1a0d773e484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2c0197-c70f-40fd-8004-efe1edd3f3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f002c67c-2e34-494e-a283-5ab9f5ff012f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c97ec5a-43b2-4be4-b709-90c13327dd25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a9d55-8479-41a3-a4a5-80d572923d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bdb3d8-d1c6-4e9b-b799-5fd1a3cf724e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390e7673-de27-4c5f-99ac-390f8ef30ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3936f8f1-ddf5-4267-b2cc-3a20f2bb83e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caab29a-438c-443f-9060-e8fb4557fa21",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de5f8a8-7bcb-44df-a3a0-c90081967fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef94d83-3dde-4261-bb08-f14e5ea81509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6998c1b8-2ff8-4fa9-a0bb-b9d7f125e605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6fc22b-4e3c-4035-bc3e-3a9577f002cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47d73c1-f4c4-448b-b183-5266333bb2b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620f3ca6-670d-4c20-b91d-c24216cea79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf71c05-ecb5-4bbd-ac61-f5fe5c19072a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ade510-05ad-4bff-ad1f-6e57ff0cf45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02d984c-3074-490a-8612-f39e2935c2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5b24a8-10bf-4123-8a3f-e3652d7913d6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e6796-6325-4f02-bf76-7d2e37bb428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff18e1c-fdb4-4942-bea7-890f18f02931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955b0068-6ec1-405b-8bd1-f74f1adb45d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dadf2fd-1fe7-4716-93be-d0d9af0b0d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198e75df-a482-46c3-b88c-cc427100fc11",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0a51da-7750-435f-b780-f81dc3071f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2382bc10-b5ef-4a5c-99e5-206afe85745f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aded8a02-f927-4841-992e-2bfddecc31fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "419d7c11-5f27-4ae3-ac2c-a0a47e9be4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05c2170-45ba-4aa8-9377-0a4c06632854",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6c2fb8-07b7-4542-a575-e4fa626fd880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5616487-860b-4ae5-981e-d9963f110b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c2ab39-d369-49b6-a88d-d5f5523bf429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be89338-146f-4d4e-a4b8-b7f68625d676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf4bc8d-a86b-4e85-81c2-5db684bb9973",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868da9ea-56fd-40b0-80e3-32c83e5b4740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f80bb5-d71d-4662-a55f-a3fc70f2a113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d07d268-9999-4c46-b26a-b8b8e8876549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c8026c-4735-4ccb-bf37-4d9d37297de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfb7f61-66e7-4461-91be-c26254b50074",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db622a-7e1c-4b59-85d9-ddf6d7e32657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650fa6e7-6c90-4f49-b936-b124e6d8646f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e519623-1856-4a52-9635-371ef2f4fef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3628fdb-92bf-4b34-8da9-c4e4cb7fbbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3a9a89-3796-49e1-9c79-436356f114ad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ca6419-14cb-4ebe-b5c4-f3b5b0128e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5a1fab-c193-4015-85d6-69ad75340b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6497d004-b2fe-4b0e-be82-64fe98cdf3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09781eab-b3d5-443d-948b-4fb0c2928b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54af35ec-1505-47fd-907f-ba2b02a8caa0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbd8459-4146-4c93-84d5-ca2ba0519c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f23e697-de65-4b86-9ea6-53dec2e78a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371b8b68-0c49-4d8b-ba0e-d5bf33b67204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e7e710-6fa2-4033-a005-322b54a9e826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751353e9-5af5-421e-ab4b-32dfc0d2e23d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88b98c-98b9-49f0-83dd-5b1d5903c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607af181-521a-449c-beaf-a67e2759aa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b65d2f2-3b8e-47c8-b071-9b8ceb8635fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc176ed3-ae48-486a-8f8a-e5d719379b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e419ad0f-47b2-48e9-a2f7-34f3e8ea2bb7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a5961-92c0-4192-947a-1434783025e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79710d97-1881-4c58-99a1-c6a5b8ef8cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffabc632-6d57-409f-91cf-a186ec1ef4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40295694-8627-4e8c-be14-de64683a0459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4043d3-dc65-402c-8a72-3de4212a383e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15558aaf-2e50-421e-b85c-d4825915224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c11820-e4e5-4d7d-9fb9-a5c1d2941103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4cf5c9-da0e-45bd-b9d2-aeab1038d5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8d3cd8-a9c6-4005-92a0-3d5765ec0bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f256492f-5104-42e2-a626-64dac1ae5c46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59318e1a-3ad8-4a1e-85c4-df2d1968e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26703ca2-9260-4120-9b5c-f665f6341609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a35913-136f-4833-82d9-4c498c89fed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "473923ef-caf7-4cc8-91cd-5068f809638f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befddbba-5f4b-4f6e-a264-046066723100",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50f2589-4e04-4571-8bb5-a7031082d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260f3983-537a-4d71-b232-9c2671f14c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab5c63b-43e3-4cf5-9320-ceb733054d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffb15e6-7f9c-481c-9624-3865d513e5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be23161-4911-4bbd-9a25-e103bee4e5ab",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a83eb9-c4d9-4d05-bd31-eacb9fbcb9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e25c89-0d61-4746-a46c-edb3dcc8e573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90834db1-956b-4b9d-af1e-f0400ed287a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69286e15-7ca6-4932-bf6e-a96b8c922ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d703eed-8047-43b1-b218-5c383adb2496",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f159fe8e-2090-43ff-ad41-d59e636ec078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e4550d-2559-4452-a35b-8170bdd6f9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e56cbd9-99b0-4180-96ec-38e2aa80a086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60d5815-f1b6-4779-b210-3294591ca77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6359aa-10d5-4a67-a450-345fa2d9d304",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0ef640-8cf6-4da2-9e50-254b9b016db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941bc885-e470-47b7-8a90-c673577b89dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef69bed-5759-4159-a18d-417826636f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db67030d-e749-4254-9c2f-254c5297999b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c4f6eca-8998-47df-b127-372698bbee02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26d09258-83f3-47b5-9745-9871f6c2058b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4fce2e-7492-4997-81a2-4a69d4debe4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7068ceea-e409-4ece-8bab-01cf67782095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc2d0c8-a27c-4e9a-9c5a-78d7b60f9cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59e8ab38-ef4b-4fb5-b91f-bcf4202f727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fa2525-46db-4ec0-8233-3c019a69046a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8e0fd3-4ac0-4ef9-a751-b068b0630b7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f059711e-837e-477f-824f-ab66d3108aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6afbe0-13e8-494d-a405-ad021e758bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dce04883-67e2-4dd9-b557-a81f983b2c8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bba9280-bf22-4676-83d7-d37e7c345d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eace40da-e003-4a72-af2a-63f62080d0d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb1e8b17-3419-4fb2-9452-42ec810e077b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af7c7bd4-bed1-4045-96a9-1c3deaf6bafd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc956585-f8b1-42dd-81b8-2fd66b26a863",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b72883b0-d85f-41e7-969a-7151173cc872"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ce14689-6860-4d2e-b6b9-f8c4e7e8d7d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6574c72a-f8d2-4208-8a94-2fc28bd3d534"
            }
          }
        ]
      },
      {
        "id": "3f8cebba-b642-4eb4-9c86-e7de25518cc3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e56a8648-7ab7-42d1-b859-496b17d7da55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b7ee1fd-750d-4528-9a71-330a03395d45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dede3744-04a9-473c-a6dd-92f2ded3dede",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3295f32b-be69-4040-ac46-928e9f5718af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732c3717-d721-4fc5-8ef7-e927ede5da0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f181205e-b409-473e-a873-35e8b5df9ad8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c955bf86-09f5-4d55-b154-b750d13e0725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc645a94-15e3-441d-8947-97f91f3b3361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e02d6c-4734-4ea0-a454-83376c5c1250",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dde81e-78ae-4c27-b2c2-1a9297ea419b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9017dc7a-9ede-461a-be4a-32082cd9eecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fb4eed-c034-48be-b998-aaa4fee32d16",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ec5724-ead2-442c-8085-cf27054be7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fcb741-6ddb-4677-8d42-25a6e87c1764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af2c49b-5fbb-4cd9-9545-d41d7f94c1bf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55244955-ed0e-4f8a-b93d-569b95e1b4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275fc5c0-cb9d-489d-9b8a-6926a64394b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d09343-5683-4967-b56f-0867e874c241",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf2d122-a2dc-4822-afdd-6fc66e9b6dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974a2305-aa94-4bfe-9dce-5d0b2a8db567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a478dc-a8ae-4b5b-a981-136908ef99eb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ab92a7-3416-4342-a861-d2d7bcb9d7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69724b12-2c55-4fe8-899a-903e30b96577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15c8c7a-af13-4445-84f0-5015e9b58500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8fc5b2-6954-4736-9b98-dd307b09cd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0da9ba5-471f-4dae-ab68-ba0c2e777341",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f942e75d-e5ef-4811-88a2-914465b1ccc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c13501-ef9c-43bc-b3d2-5c3ddee3bba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c51838a-6344-407d-8ce2-e1550bf77a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc29b60-2d02-4ea7-9e6d-b7078d4e5c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b016091-b4e8-4b42-9e35-14d3d931bdf5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435e606c-f8d1-4f87-b863-daa84b79a384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fbe668-e92b-4821-b226-8d7cbd5bda2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda69744-6627-4e76-8cf2-5c9d8b26795d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76f5e00-d629-426b-86fb-bb4727bedde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f02213a-c481-49bf-80cf-e04adf8dcf01",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189ed85e-49fe-4e16-9e9c-4aad3daed9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc538dee-d9ff-42b7-ba31-8985cb7da61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d1abbc-30a7-4301-8bb2-e92e4085701a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35edcb1b-bb2c-455a-8f9f-abb4a65dee59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b0a8a9-de1c-4769-9763-ab9f26867095",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b4dc64-f1f9-44cf-8001-a722b6812b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6de6ea-9c5b-408a-9a34-fbf07f32b0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a79c703-91b0-40de-a1ec-3349297f59f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90191bde-597f-495c-8fd8-beefb7c6c2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3088c855-2cf3-474b-8ade-3ac2f72f84eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7839ce4c-daa4-421e-8e8e-9ff6fb3a5126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb68110f-6442-4f86-9f99-2798c0744b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7156aba1-0c71-4d9e-a4d2-e6a7f607b020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb9e06d-24de-4afd-8eb4-5efc2e53fec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f294c6d-bd08-4741-b274-c67ee3c00668",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ca90a8-78d8-41ec-ae6a-3386b97bcf82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080a1c24-34c9-493c-af50-539811d9f58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2494a304-1568-4901-9587-cf9d3e670872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd60c07-3e59-46d9-869a-e1d69a091637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7f46c2-5716-414c-8065-23d4e42c0e08",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d988feb-c4a1-4abc-8a6f-3928011c42fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49cdb4d9-a8bf-4cca-aeba-703b94ac11cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5bc935-3b08-4ddf-aa18-f6b51de8151e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2d203a-2862-4ee7-9dfb-90bd7f295682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb9e330-48a6-462b-8a30-89f0babd1ae5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5f086b-7a54-4d91-8aec-158dd10f3a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5852bad4-e23d-4b11-93a8-aafc41a86e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6f4f38-9da6-45f5-ac18-dd95d1e7c1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d578b9fc-da84-4c5a-9357-14d48f24da70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b22d6-72ba-4e68-b4a7-7f113448f486",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4dcc7a-02f8-4d87-b11d-30ea002dd66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5e151b-8ed0-4b8d-b175-cfdc1f23c0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af897ac-0038-42dc-833e-e26437838d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d97dc2-ff28-4111-bff3-8981b3f64f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b4f3f5-dc57-4f8d-8f84-edaeb2cc4960",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ec67d1-fb35-4e08-b977-9a55b19741df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca02dd6-7ccd-49e1-a419-a1fb98d72573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3023fb-c2b3-4178-8c78-c0436368c4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe8b8d5-3e57-446a-ad60-4f17bb0e49e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827e3f9a-ae23-421a-8a39-713cd76f5805",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b0f77f-93e8-4e0f-93aa-8f584f4f67f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75801803-d1ea-4531-93b6-1ac769453157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdd036-a70b-4b24-9a13-a143fda6f135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904dfc2e-9295-47e8-ad58-f20699cc2ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9057b06-8b94-443b-baaa-1675f07cf43c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b6c18a-ed5d-4c30-bec6-a00a3e7363db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a5a77c-47bf-4678-994f-7cec1cef0dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b05cd7d-adeb-4bac-ab53-ddefd14bdcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69d4664-bc80-4a8f-b46a-bf80979ca7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb92396-b8c5-47c5-a0b6-f71f2cdb1b35",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35696d86-76e7-4de2-b25f-905b32912464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcd0398-6857-4433-aa52-3f401af2c8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e578754e-8251-4c42-be29-aff88d0838ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f66f8a5-d013-4514-87e0-f7da18ab9465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c7139-c45c-43d6-b797-4e798197c66b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628aac90-a661-411b-9e20-11125d8ffbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130d7b38-edc0-4cb0-80a2-1e253d493419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a9e36-a1e7-4c9e-a665-dc3b767e9fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5646f11-2377-42c6-9c6b-8dcbca83bbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef7ebb0-b7e1-4af6-8447-5a85b71dec34",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540a1c23-b8b5-43c1-8944-ae0d931cb84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591f9463-4629-42b2-a480-6cad253c370a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22992d26-75bf-485f-861f-b33186f5dec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c90ceb7-16a6-46f9-a539-1f7b228cf35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5ca215-54e3-42e2-942e-2c467cd7f8f0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b176b483-58cb-4317-ae47-cf09ccea23cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e19c134-e4e5-4bc1-b964-ded96bd61ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe70f7-813f-494e-a257-e02434c14aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc8c8af-0d98-4d22-823e-1ffd3533d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078a5ba1-753c-4fb8-b7e4-e1e615cc6c3e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302ab995-8c64-4a3e-bc0c-fb40549f5559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19675db2-9ab9-4b7f-99ca-514541a8ecbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4102bb37-5152-4b96-b448-183676d3e56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fecb3ce-2260-4ca6-bffc-86cf4cd5b1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878ae164-49a1-4f7d-8aa1-3e5d166b45cb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbec0e1d-aba2-41e3-b0d7-707d5de087e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dba155c-770e-47bb-8ed9-c9a494fc9954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5701995d-83b3-44fc-8222-a4666dc1af8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f247059-c538-49d3-b814-f81191eda05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93df1d6c-e42f-41d1-8cd1-36a490150f60",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6994c31-e963-46c2-bea0-a02c9a78858b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aca776d-e2a8-45c1-90e3-7558410fd4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8f753b-7138-423b-b20b-bc4854f060db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b34794-a3f0-4d9f-93ab-125886b8b354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd99db5-15db-4f3f-99cc-8df38fe4f40d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674f4a1e-a3a7-4c90-974d-73782d71d5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fdc9ddf-cdc8-4dcb-bfc7-63d29637ddb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6641b44c-b8cc-4ec1-b00f-97ad05546a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b54195-41f1-4e25-8147-6d2d2dd5e3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef82eb-55bc-4dcb-8238-f901328e7005",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a56cbe-ed6c-4e55-a191-b02763919a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88693953-fddf-45aa-bc2b-e6b8b2febc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9a136f-f15e-4a15-849e-ba107b8a1c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9114f7-d3b1-4287-8f50-a2fe83b1d1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ab438c-9e83-49ab-afea-2619bbd58d51",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5153bfc7-e40e-466b-9d0b-01faaad73baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6451fa64-56e6-47de-a2dc-3b5cfc012f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862323f8-fbec-4ade-91ce-68c9fa52927a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46ef183-d32a-4f35-96ed-402098b6e24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19864fc2-ce71-4948-9917-886cfecc4119",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b8eceb-5937-4ffb-9dcb-83c466f0caec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa4aecf-d864-4eed-a561-cd06a5c26885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9322701d-e6b3-4d16-90e5-4e7514dfe84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3315b8f0-ad7c-4e96-a2df-1511a25ac604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210047ed-af8a-4ce8-a53c-ca8ab1f6a4d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb61236-49ab-4320-bf3b-476f886192c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f199ce-c32d-43fe-817f-877c0ae9099a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d54bc-8c21-461d-aae7-5e3a1f79b9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a98a101-0566-4ab4-9a9d-773d7d694f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1ec6a2-6b34-4092-ad73-491772c9a0c5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3910d533-3358-4aa4-955f-ceeb59f7738d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8720de6-8d9c-4bfd-85a8-e37dd57d83c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df404d5-9c53-4128-97b9-990d8515fe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b4369f-b84c-4787-88ca-42bbdaec1e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e42b14-44df-4eb0-85aa-5dcbbf2378d3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5228b40-5287-4e2d-ae84-39e1d17ee847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebeabb4a-1dcb-426c-8a59-3d3e70a97b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063635b6-561d-4e28-b599-78cbc44ed4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bed2c1-2729-4c85-ba5f-0815fc08ef76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13ce6f6-8847-423b-9454-477c95f00952",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc4cd7-e62b-48dc-86e9-92edf8cfc50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d107bc-2070-42fd-b831-8bc78a6fd81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0a118a-8ae0-4a71-a2c9-4af9aa8d3de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56da951b-4bac-4e88-a6cd-b510f528b81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf04943-af5e-480b-8368-96ff09f74c77",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758a5a6c-338c-4eef-a36d-e1c4cfcbef65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6408c4-8776-4a5b-993d-27a566274224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e10c686-421c-494d-b760-dec75e382101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b414ed6-86a8-40bc-837d-3eeb543e7fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99f1a61-f2af-40dd-84e8-6fce562fa410",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7a0b74-ac07-4a43-ae39-4cf7bc45cb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956f2cc0-d443-4148-a69f-2bf495e7e139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6834a1-1f6b-4164-b69b-b7dea2684b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2f2f31-7b6c-4e64-b315-e9f9ad6a6cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65136bbf-606c-4b2e-a0bb-eb259d45ac49",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a081518-a6f3-4c13-b878-40af834661dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc92786-f387-4bdd-b9a4-6e5db949f3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102fdb63-f40a-4a32-bd10-cf6d2f1e9014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dbb911-5e53-4b55-ae95-6cf2ba4a865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef38e3e-a1c6-4169-a03a-74a56b10526c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a47ce-e595-4a4b-a7e7-e94bd4fd19ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9fb476-ea64-4539-9151-b3c6dd523256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f78105-8f39-47e0-8791-5572556b6739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7a49a7-5448-4419-a1c5-e700566ee678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c022b4-95a5-4090-b2d1-012fa2906f51",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a44603-6a90-43b4-bc06-086cd4b9836e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169ccf7c-0472-422e-b1bc-787a0995927a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f899503-22e7-450b-9e3a-5275435350dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e26fa7-16f0-4aad-9bda-6ba7ccddb0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc56d51-f580-4ab2-9790-10133590bbde",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5641c77a-bcf3-4c31-b8bf-7d3e2b9e0ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba872ef-3f1d-42fc-9505-a0a2772361d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b12bf97-9f78-48e5-aca2-7b1f7c63b695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66168870-472e-4960-b81f-81de62058bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03911b2e-8cdb-4bc0-bfac-7cf5c3e64530",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b4f6b8-df0a-467c-8d23-a9aa226d1c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe89bf1-3780-42e7-8bb1-a85998519644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f6daa8-d4f0-4745-8bb9-2f59547ca948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46af04da-69b9-4d9f-ad4f-9e1f869ff252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7987a805-9832-4161-9acf-03281ac99f9f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b48634-26a3-46f3-aa83-f807fce7adcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f6ea04-6f77-43be-a1c3-71dcf4654745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feea373-94cf-42b1-b92a-d588b330dd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1502b4-7407-45a1-adfd-85e1460397a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205909c8-8d52-4d5f-ba12-6a616aacd480",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98616a5c-eb37-444d-b956-e162b710ab63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dbf27e-fd59-4f16-b228-0283d0afd1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfce0820-f3bc-4d2b-876b-26f983cdcd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281b7cc9-11ad-4e2a-8df1-eb08419505c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d84d43-a496-4429-9e60-b1eb98c9a9a3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa49b767-52c8-4353-8f04-e2b2d69b02ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c78d2e9-6f3a-4b68-b156-8da7327f5f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4ef569-dee5-4c92-b17d-23b81a213268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e89746-9595-4eb2-8dd4-031c5651e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d485afb-b892-48ae-ad11-228b9a1206f6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbfa330-4b6d-45d7-bca6-8c595596c624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557ec712-25b9-4315-91aa-4e2cc354c913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137235af-43bc-4aaa-a6bd-98c5cc7200cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfdf667-9644-4efc-8dcb-8c0c418736e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf530b-4135-4767-beb5-288ccc764ee6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e107f7cf-b69f-4b06-9c04-2a648e180ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602144f9-128a-45c6-b5b8-75f420f4dd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b97ee67-da79-4334-a78f-67ffc0300d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35cea6d-7b59-40f7-aa02-d1c9be1a8da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e0a6ee-1df3-46d9-a8be-3c918c3c1760",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b1211c-ded2-4610-9fdf-b4416a85578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64e5070-1218-44b9-bac4-0d60eaefb653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac01e52d-1891-46a1-82d9-c3495950ca90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251f037f-7f96-407a-bb2b-c837aff7b97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00800b9-37e3-4d62-bbeb-92cca3515248",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557c0ba-6ea4-4d90-8057-6c27decd2bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52a9d77-728a-47ff-9dbf-8b499d3c66f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5433e45b-e40f-41dd-b8af-0c4106a54171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0748c5d4-af63-4780-8cb4-023967242813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef1302-6432-498c-a10a-917ab094ed60",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8f1024-9c3d-4919-8bf9-c85a14235d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5379bb20-2cae-440f-94ca-8a604c92d87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3a03d4-db00-4932-b9f9-cc5478c17933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ca98d2-3794-41b8-aedd-9098896ad81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd61fe7-7962-4c87-98aa-cfaf8b49bd28",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d2e73-3ae3-429f-ad5a-e3583a693e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9340d087-fcb8-4a0e-9d1f-187786ddbb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c730f88-1472-4e93-a38e-45950e97883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe200f1f-0ee6-492a-b307-4aa999c33d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582d6b09-eae5-4e80-b471-74b179c2a657",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97533888-9035-4b8e-a6aa-241dfc8a99e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28879d51-7fde-43e5-9604-e6ad9f8eee93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452ec58-f8da-471f-8d22-be8bbc8b00ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efda9cd-4bde-4666-ae55-26b885b0aadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c8a7e2-5278-4de6-a86d-259ad286f181",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee565206-f939-4f9a-b6e1-1fe55ceeb652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55422963-360f-4a52-93d8-365bd756affc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08375d4-1c95-46eb-9a71-15addc5e5505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f119a93c-3bb0-41eb-995e-f1d09cc4c19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448332cd-5ff1-4627-b5a8-6a5f8116603a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b178800-42ec-4999-923e-09fd780bf983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0ede40-5eee-4883-ad2d-3c034ba60e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de816200-aefa-42b3-9dbd-03809efb60d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f1ccf4-2ee9-4589-a1fb-9eebe2761cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f271b-a0a3-4d71-851d-8b62b8bfe02d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d04830-b84e-4d69-9942-c8a7bf11b28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690240ca-1c23-49d7-a6c9-306684ce5a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fb34a7-71df-47d2-a92f-a506b9b27f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b99f80-b24b-445d-9ff5-854f59311ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e018939-eae9-443f-b22d-641cc9b4293e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5bf96-0317-4ec4-a4c9-f9b143353837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee920510-a08d-410f-8595-16e34cd974c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca54f0c-db54-41b2-8d0d-eef61558ef80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51e91fe-ae7d-4f8e-9920-b6ff2bc89f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8839398-fa46-49b6-9a36-ea3b54bada47",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47d0dac-ff0e-4216-8951-10e228da54fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c0226b-f335-4f48-bcdd-e9cb7526e921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ece4725-fd75-4fc5-ae22-9379ddb9efe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8725265-2f1d-4c06-a513-bc9622344040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6cfc42-fa5b-498d-a503-04e3692ee707",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981a8154-8432-49b8-952f-978fb9044f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc25ac1-5ce6-4f1b-85bb-6f19464b9a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa663e-535d-4777-a54a-47366c90ff7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eb0c12-e482-4c84-b00d-889a3417cfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e98b171-f853-43ad-add5-a2d87c97058e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf3d209-da15-4498-bcd6-83a5d0792400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e91680-c941-4635-ab7c-f9a9516113e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f021f4-ebf2-4d19-b91c-368dc19d5c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd5ceb8-6ac1-4768-8766-b0f69879189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5deb646-8b0e-411e-9a62-7536e32f2d5a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19efdc59-cf33-47f5-b166-c660e4eb8c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ec2d61-e440-4dac-9473-1f53ee16ed93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5bbdd8-163b-4f5a-b3fa-e9bd2abf509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209dd797-f8ab-4173-b755-5dce046febcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff48294-38c9-4b9c-af73-1c6aafefa709",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2a18e4-60db-48d0-b545-056ceaeeb8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9edc813-1270-4094-b79e-f80bce7aaab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7122057-f9f6-4cc7-98e2-7dc06b442c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10c385b-235a-4da9-946b-f0f38aac0f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2bb2b8-f7ba-4854-a40b-c0e2c4abc730",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93e56b7-d832-41a7-ad52-844ed166c2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37f43cf-42d8-4a55-bb6d-c0dc556fbd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897b27de-4941-4747-9fa5-d6afab364277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ffad7d-f445-4fe4-b746-7fa7d836c435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9319c6e-2a8e-4b6f-af05-aa5d213d6529",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ffa2c-2e8e-4b94-b770-def26affd694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc513eee-b285-44fc-838c-eb841ee7d8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b3447c-82fd-4e47-9b61-1ae35c6900b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668a54ef-57f4-4e92-8114-5ba6cfc382d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88025daf-d9cb-40b7-b78c-664d8cb17374",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f88ef40-8390-446c-97e9-2b9313e26f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e482b5-fb04-4d7e-a52f-4d9022f92608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a437092-e363-4f0f-be29-ed3c0a241d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9830897-5465-4165-b2ca-dbb2e65d74fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f4b188-931e-4813-9715-4aa7f0615df9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dd7f6b-ab37-4499-9f3d-a42fb196a5e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1effdfda-ca73-42c3-b0c7-563ac867cf19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24fc1e-f1ac-4445-b267-f4d553c1e770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f246c7-6695-4c00-8ff3-4e18f1bd6da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210a97c0-b12f-401d-8884-ba201a6d3687",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed35b16-0f34-409c-bbca-b3c702c951ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13405388-730e-40db-a6ad-bcafcd17ccb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a90d5d-310d-4fb6-975d-970f80ba745c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aa6649-df9e-4bf8-81ea-5d8bc480bf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade89d5e-fda1-4130-b50e-19b2bc942744",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306fb214-8226-4de6-b148-55a0a9d78647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afeb168-b2e4-4615-bbac-13ec414bc5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181e1ec1-df0f-4c3d-a44c-17c9014167d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9072c05-3deb-4105-93ed-b7fbeb82a494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcb7f18-13de-454b-adfb-3f55d9966201",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20b1a30-147e-4ec0-a92b-2c3ec31bdedb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68bb0e46-44b6-4067-9596-c7c2038ea8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c051836-21b8-4109-9e31-c46077abff1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdef5ab6-3966-422c-be5b-8cff5b36c5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29f4c9a-0af1-4f0d-bbbf-77766e52a2ce",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97157a52-268c-4672-8000-2c590013486f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc10df6-e216-48a3-9e5f-1e0ec565f5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411136b0-f255-4439-8a57-656af1f55823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b510353-ed33-430d-97bc-67580532a27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1278cdf-64cb-4de8-9ab4-27c60e5e9f96",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a23c176-9423-457a-a6da-631baaee8a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbdc339-6b21-45d6-aa89-53a4e5f8fbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d6844-7792-4f4f-940f-4e9d3886041c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880b58c1-a32f-48c9-8b91-dcdbf188a541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a104939-3bf4-447b-9961-e562ff466f95",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac7db37-b1fe-4247-8ab3-5b1c1503ce48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655dc0ab-c376-4d8e-9a22-5d3ab3be3c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b81ce24-4f04-4b27-8a7a-1645a6d1e486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218d9d16-edd6-45ce-80df-0ccc04039173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df90c1e-9c5b-4d8c-b72d-79b579853764",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87afe7f1-d754-4c2d-8a0d-fcf0e2c587e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4461e7-7057-417b-8533-63701b727686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a263163b-ca73-4bec-86a9-35d3923af1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6ddbea-652b-4e58-ade7-dbd834a8fbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ebeded-7797-4ad2-96ae-646f7c5bff97",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1500bd15-a84d-486f-a099-c2729b2b1a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17eed8c-7b1c-42d0-bc49-827fb67815b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bd8ede-76a2-443e-93bf-f092b2f18c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e08f68a-25f8-4c44-b7e1-c9fc78e22624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2936b05c-2376-4f03-945c-8584d52651ca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b06993-d77c-44f6-9c07-99354880e34f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230f992f-22ae-4032-a239-752b5e5680fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cad421-0c2e-42b9-8765-aeba58e8ac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2153ed92-09f8-4394-bf88-dab02767b55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732cf762-532f-4211-8c6a-78c390816de4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2760e76b-5091-4981-af53-b88405fe9896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4ed975-7359-438e-a16a-e65f31f614d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705fc78d-6e74-4521-8ae4-1ee14628dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b5f87c-4f8b-4058-bbb4-24978efea468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17881ca6-22c6-4a1c-9549-0e549837c8e0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7bba81-73f7-40ec-9ea9-63e407ef8269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b51cac-1cb5-4a20-9166-498167e2fd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3fc8d3-2205-4532-8454-7cba226e4b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f166b3b-c6ad-4390-9a24-63c6a3a50120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b373539-d65d-43ec-92e9-ae44a10b94dd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b89b7ac-8e0a-405c-b1fe-0461ad80f4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d441304-a52c-4df8-85e5-22185d6641cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5103cb9d-b8b3-4ac1-a35a-a9be4dbc0332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7a2b2-171e-4cc1-be9f-9c0b585db6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2ab5b7-0fa2-48fa-867c-2d8f39e375a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc76aff-af76-4cee-b200-446765cce65a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10781eff-8b2e-47a8-8c5c-5903aee0337d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e9dc3b-ea12-44d8-9ddd-0b62357a364c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a6cd6d-f488-46d4-bd85-53d680bdc6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cb2cb5-c446-40d4-b4d2-8ccee986b73b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95945d8-ffa5-415a-937d-3c6ee80d8447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1ee339-8107-470c-ac78-c573b1ebcdea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b6abef-41ab-47c8-8b20-1019b65c0361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b995e0-c6a0-451c-99a1-b7b99981fd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07905752-8322-40ba-bd4e-b34f684a79d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0be539-8fd8-4308-baab-87312a6a2317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8402e39-6d68-4584-8762-fbefe1156047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdb9e5d-291e-4b8f-a297-835ad39ff417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ed04a0-b482-4537-85ee-28181c43fabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec73dd3-636b-4811-bbfc-eeb245fc8552",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b52a61-fccf-4c38-b932-cd6dd125ebed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a48ecc4-d7c4-4bb3-bc4b-a70b3be6a78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bbf3a4-f010-4dd1-8bf1-f7e509b9283c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa23ec4-4992-49d6-bebc-7891b1cf07ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125b1d52-6290-4b8d-aee8-0b66bb5cd3ea",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d44c4b-de83-4ed1-9397-b7ed7c45c035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c24b437-4cd8-421b-bd88-8affa92fa100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8ae5cc-0133-451f-9449-a382ab12da07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1365b2dd-4ee3-4a27-8c97-16fa5e2b2063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bfc1d0-7e6e-4251-bc06-c36229dc2218",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee446ae6-3115-4c4c-b949-4a36ca0884fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292b1963-383d-429f-b884-fd09527a14fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb996c74-a1f8-4281-a005-56eeb73fdb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c124d74-c47e-4ac0-9a2c-cf11927b00d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed40d2bf-efef-4942-8b24-a848cbe77a45",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155a7299-a455-4a87-abed-992ea3a9c0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add92544-bb47-4e66-b77a-e2618db910b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408f15ba-3818-460a-af3c-c04ef7e8f86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2f7f4a-1917-4c18-9013-c2755678e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4463869-efc8-43e1-84a7-79380670ff7e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d12314-6df7-4bd8-8186-c1199145ae40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7b7c31-bb96-4a8c-ab3c-5830c6dcc408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57b5bad-f3bb-41f5-b40a-74e1e31c41bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd8a007-370d-4547-9b9a-1eb3682ac11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e014bdee-5876-44fd-b369-5a3bc57175bf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f157897-efc1-4808-aa3c-c35a314e2be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253c7583-87d2-4f4a-9876-07f9a24bdc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d8e960-74f2-403f-8c37-efcefdbcd206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0797636b-2778-4015-a058-67e899314ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca9ddc5-c74d-4ec3-9ac1-f8f1ff65d788",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4404f2ec-0f57-44cf-aedc-fe12c2d99fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a5eeac-b8ae-4952-81b9-48400ccd5208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2fe187-a508-4513-992b-971fd7b282fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310459b4-7be5-420d-9c89-a4f1a32771ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a37b2c-48f8-486d-89ee-aae28a96567c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85911541-74af-42db-8211-9491b2431495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff6e2e0-4df5-42cb-95ff-1b69feac8a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea73b3c-858a-449b-a00e-c273b534f8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70fd19f-9953-46c1-aaa4-63dda441b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20194c8-0851-4887-8aec-c17512723c91",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e340e251-de79-4629-b451-9fe1ba4853d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ecd2e9-f9a4-4394-b3a1-f6e43f2451df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77e64bb-2040-4b58-b0a8-b040e1ffffae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c27a33-b3f4-4884-bb13-0913a17b6536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33236c5a-0596-4142-960e-14598ac3f938",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe556ba-5c5f-4d18-999e-e0125c291667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd3074ca-8faa-4e11-a6fb-5308c6b69a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d71fd6-51ef-48b1-a238-351fa430717c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d59b9cb-18b0-4262-836a-1cc94e63f6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e0fc1e-6d4b-451a-9d65-a5d6feccc0da",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643b5f86-b0b9-42df-a435-baf9cb106d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4f1485-d5c7-4709-8ae7-94c79c0da6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb3b506-1349-48ab-a8e4-d1dc8c643073",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9d3df8-f262-4c0d-8b68-a740de04d96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95052e5d-1f46-4a93-8b31-87c13f4b450a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91aaf6f-500f-452c-8300-e8c96c2866bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6d2b48-6a05-43bc-94ee-4032e3a5815b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68cfe20-c247-4a36-848c-27b87f19aca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f269cd81-38b3-410f-80aa-f651b4edceb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11bf927-da7f-4949-9146-2dd94f31d0f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf2fb27-2b50-46b2-804e-45352ac8f4dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3c111e-c82c-4bed-9c46-93c6bc5278aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db493e-3fee-49b5-9308-8fb531c1f659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855d5162-f856-4362-a8d4-8dbed74dac77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a7ad9-9f8a-4613-9859-14ed00353c36",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8888e69-ac5a-48f4-a738-b580c4f211a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5074ad84-3149-40e3-bf81-4b8817078555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b96acf5-3727-4534-8ed8-a96978a7b197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb9c5a5-d5a9-4b11-9f8c-cdc7cee6f83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118b6ba4-5c09-4b88-abec-0b55956f275c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cc8c47-b757-401b-a551-f80386b6efe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a7eab3-397a-4665-bcf0-70d9b6385f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38295b8-44a1-4822-af28-29a154c67419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2a90a6-ae4c-4005-9d5c-1ad8b885a7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2b2747-c732-46fa-be6a-b97306e3fdf5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba07b401-0469-40ba-8a41-b00c9218f045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07de6e5f-47b9-4687-85ed-364c10e967f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db88ec37-02ec-4d78-8fe5-c4e4f196f78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c172560-7cd5-4b63-b120-d9015010d174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d46e53-e967-4674-81ba-7756c99df205",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445daf39-c2b5-4b57-83af-16d4587351a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e33f5d2-0029-4572-a596-b393a582a0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e122d6-af57-4c76-99c5-5ea5e038fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed57838-90e9-4285-bade-ef79cf0b5c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74ab0d-0554-41fa-8caf-fa6978c495c8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd053586-1596-4f00-b228-4dad8d3bb25e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bffe1c1-5629-4ba8-9b62-4b7b270c6498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec96c78-ef54-4d04-992b-5d0c8156df9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31718229-2929-4da6-82aa-4e6c46201d59"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e79f2c4b-25be-496d-ac78-5291a7f2613d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e178b440-e1d0-4586-8305-debd2c8a89dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4042d6af-1f41-483f-82b7-cbc96d6603df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d8a62d5-33c3-42a1-b0f2-f613cd14bc5e"
                    }
                  }
                ]
              },
              {
                "id": "2083ce29-edf3-4a0f-a30c-eb6bc0a8defd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9b33d38-c01f-4331-87d4-67db0d13e12d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9871b8e-ad48-4691-b398-99f854d4667b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6ca17b43-2100-4b6c-8b36-f607e5d7b756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b738a7-0dd0-4339-b2af-7cda8b294673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b32e588-4254-4cbb-8306-c03a1250cc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80dbbd2-a584-4297-b4d9-8aa92c18791d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ca88e-1ba5-4893-b3ae-0ce8b8ee704e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b624c067-54aa-49d2-8ca5-ba050cb53805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833b96eb-ea45-46ce-b1ff-edcce2cede27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "666499c2-210c-403c-a5f1-0a2d60964c7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26ca4fb5-2989-444b-bb4f-48dfd0412f51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "721b264b-855c-47c1-9879-66cc92ca24d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "becdb95f-129d-4327-b403-9ceadedb90df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96a4425c-6dbe-4c14-87de-5491a6055e61"
                    }
                  }
                ]
              },
              {
                "id": "85295449-e711-47a7-8926-1111eefd8d94",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "acb8055d-1366-4691-bf2d-7c0484a26415",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80503f8b-b29c-414d-81ab-1f5f70196e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b8e70951-e598-4a08-aef1-73860ebc7c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b29c1a1-3918-4dcc-ba55-0dffb853479a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c60907d-4ea7-4f08-9198-244d5b1269ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45368d08-a2ff-4883-a791-4cbf6b8240f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "556b9a66-df40-4dea-b26a-f14e70ba6791",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a027eb26-f0fb-40ca-960b-34e6426c9057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "232e0e69-a1cd-479b-b298-c5c92d94bd4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbf042c1-61be-4cad-a400-7e3c00373e5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30db6bba-e6a9-4a13-be21-0b9ffe4e568a"
                    }
                  }
                ]
              },
              {
                "id": "5ace410d-9dc3-404f-9482-2ef31b7546ed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d881a7b-ae46-494e-a83e-8fd6ce76f3b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f082ca29-618f-4673-b148-0503bc7a0a03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d552b40e-a0d9-43ce-ab90-99caf95b6d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0073d6f4-a71b-400f-a4ba-5e033f4406b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15eab5ab-687e-47b6-8d7d-86c8150c6974",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ed855b56-d038-40a3-8ae1-0f77dbf3fa54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72f3f882-7169-4e02-99b9-3e2c09c4e12c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "525296fe-c8e7-4702-a168-08971c469de3"
            }
          }
        ]
      },
      {
        "id": "e2315190-07e9-408c-9ea2-d89812609818",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e2f6d014-378f-4448-ba8f-751c04953450",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e06a113-c416-4ece-969b-e9cf6646c535",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e0166b-f4d9-4ffc-823e-297e8630dbd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b98af42-f905-48d7-93fb-3cd0b1bfa00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56180335-49a1-4332-b7ba-1bd96a75bc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "159c147b-e32e-452e-ad6e-8aa3136f91f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1636f507-0221-4f58-877c-33b273684d54",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a42f7-5a63-479f-aa00-7c91e87e2e2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "29b243af-4171-4ff7-a906-192dfc1b623a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e93ec-e317-40cf-8a9a-38abfc3cf5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccea66a7-8c0e-41b0-bf1a-ac9df9ee0f50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee0d6285-3d54-4af3-bde1-b917fe9c97fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dd756cd-ade6-46da-80ea-93b2217ce116"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da1420ec-4e00-4d03-bdc5-25588418ffca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd6b7d4-3ade-4c9c-807d-b8dd9c8348b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "487c088e-bf7c-4e51-9b6e-51bc6fb3cc0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "90ff122c-127f-44a2-841b-1b9febcba445"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f157e243-a7fc-4748-ab48-2711cc38f00d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4d251a6-9275-46bb-b017-cf0fae3445fd"
            }
          }
        ]
      },
      {
        "id": "18f7c9b7-7e78-4228-bcbd-0ba3a0833c02",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "26335117-7b5a-4138-9bc4-c105c5e82465",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a05d6b7d-e61d-4184-bc92-0143595ca10d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4e9b93d-27dd-4521-bb88-d41b8977ab4f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a55db35-d3a5-4db9-a53a-a00464240828",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59ba8741-8065-477c-93e1-db0fecf4b0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106138d0-0969-4e6d-a63b-d1f83f87ae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15d3593b-cc73-4b02-b22a-b74a98e22430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7704cf6-a39a-401b-a8d3-bb6c7bd7fc59",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52cbe61-2744-4dbe-8f1c-266cb0386fd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6299b4ff-a3cf-4aa3-bdf8-85ce7ce3f20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e7ea6-8e41-44b0-aa1a-000333840350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0285b0c3-a0f4-48a7-bcb1-18a5a0101a27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aae742b-f4fc-4f23-9578-7d4e3a4c8a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "061f3026-fa66-49da-a653-b4c62684bdaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "461500d9-35be-479b-8556-90ff765135dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4cdffe1-cd6c-4e21-a898-6f69d33eb4e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "550ae96b-c1fc-4cba-81d3-b949e041b709",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c74cebd6-482f-4eda-b78f-a81cdcb3839a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a1c1314-82e6-4cf1-8eee-b07193103b17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4abee34-55dd-4f34-a13a-515df8401319"
            }
          }
        ]
      },
      {
        "id": "62c932e7-d95d-487c-a528-7c877cba0522",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f0c6e54b-72d9-4c98-ab77-5b0016f39fa2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8e5d87c-50d1-4791-bd1b-9adfc8a93c99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10f99de6-fe56-4619-bb57-458d748a9772",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0929779b-c846-4e4c-8706-9756a24dee63",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b59d7ad-2bfa-4bd8-9fc1-8f496b17079d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32bbc91-471e-4edc-a37c-25e6d219e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ac71455-50db-4e43-a32a-2b90af691bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b7ef49-439b-4041-9bcd-e9aac131fa0d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6d9200-ec53-432a-b5e1-8dd5c19debcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2233a9-93a8-4a77-82de-249ab4b42bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97fa24e-3a1b-435a-bc3a-561fafeb039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6c8f1ab-b44d-40b3-933d-758b5eb7a38f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfadae3f-627c-4c9e-bf2b-416d5cc9ba74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdda54ab-f62f-414b-bd8e-2c38f6fdd99b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fd9b3fb-9004-471b-8f47-6c908d4b1c50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4350b50-4858-4a27-b42c-1def1f6d60fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1a3180c-292e-4673-a878-9b986653f517",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "256b6eea-3b77-4d70-97a7-a9099c4a17e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38dcb994-7e53-4d3c-9a54-12be9a44b265",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e6768cb-07eb-4b6c-ae69-2338a71f4c01"
            }
          }
        ]
      },
      {
        "id": "72638d04-4656-46bd-b0bd-2daa6f740c1c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae3a74ed-fb33-4149-95b8-dd1cea95cfa2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11ee4985-10cf-451a-9414-995ddd6213cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d97aa7aa-b843-40d9-9b39-f9c0fb1d1398",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d8149d9-7c91-410b-8143-9517f3b9f6ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a22629b6-144e-40a1-ab47-373b472d3bcf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 675.355212355212,
      "responseMin": 7,
      "responseMax": 7813,
      "responseSd": 778.2718637477545,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678322550907,
      "completed": 1678322740013
    },
    "executions": [
      {
        "id": "6acd2b2c-c91f-44eb-b00b-aaae0f7252b7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "252b633f-577f-4c8e-9e27-bcf424e80f88",
          "httpRequestId": "d36d1776-9a86-408c-8f44-79be8628ba16"
        },
        "item": {
          "id": "6acd2b2c-c91f-44eb-b00b-aaae0f7252b7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0bba1353-0d95-40de-9cf0-ac017a017157",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "d2ca3704-7e57-4982-b6c1-28bd76a98ec8",
        "cursor": {
          "ref": "3b23ac49-203f-407d-a355-790f684cfe4d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e52764ea-1090-4cb0-9c26-14360d234db8"
        },
        "item": {
          "id": "d2ca3704-7e57-4982-b6c1-28bd76a98ec8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d25375a0-c8cb-421a-9bba-2cabfb806596",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b827bd63-7fbc-49a4-bae6-93f1b6e61c24",
        "cursor": {
          "ref": "f1c8982a-975d-426c-b4f7-2ce7d893798e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f028ecbc-4795-49ab-a33f-f3505cb74359"
        },
        "item": {
          "id": "b827bd63-7fbc-49a4-bae6-93f1b6e61c24",
          "name": "did_json"
        },
        "response": {
          "id": "23d0088a-91e6-4b0a-861b-0350a7a27af6",
          "status": "OK",
          "code": 200,
          "responseTime": 1257,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ed9eed-00fd-4b9d-b5f6-f7ee87d537c1",
        "cursor": {
          "ref": "75233d97-e47b-4a3a-9c86-c65c6c991610",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8e94bb5-3bf8-421a-b49d-34d274c3134c"
        },
        "item": {
          "id": "c0ed9eed-00fd-4b9d-b5f6-f7ee87d537c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7c8a2bd-b7fa-47f8-b39c-8c88e43df76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ed9eed-00fd-4b9d-b5f6-f7ee87d537c1",
        "cursor": {
          "ref": "75233d97-e47b-4a3a-9c86-c65c6c991610",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8e94bb5-3bf8-421a-b49d-34d274c3134c"
        },
        "item": {
          "id": "c0ed9eed-00fd-4b9d-b5f6-f7ee87d537c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7c8a2bd-b7fa-47f8-b39c-8c88e43df76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54c1a47-0dcd-4440-b620-117b3ef7e6f2",
        "cursor": {
          "ref": "be8446b7-b042-44e1-a7dd-81424e68fa0a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "acbb6e2e-0f4f-41d2-9f03-d2062e3cfc3a"
        },
        "item": {
          "id": "d54c1a47-0dcd-4440-b620-117b3ef7e6f2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e1caf06d-2fa9-4207-81e1-03fee7583b0e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 954,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616e6515-b225-4184-bfe8-208ea0406d82",
        "cursor": {
          "ref": "2d4f59d0-2b46-4d64-ae1b-c2f14476b782",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2d2573f5-4db9-447b-97f1-859a36d30286"
        },
        "item": {
          "id": "616e6515-b225-4184-bfe8-208ea0406d82",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "47eb0f68-8c9d-4ad6-b13a-a54473da6174",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be01a5c-0475-4835-8fac-eda4f3bdb285",
        "cursor": {
          "ref": "d68e9af6-39da-4f47-b0af-b6b8bf62379a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a54429a-babc-4f41-8a4d-3328e7d0276d"
        },
        "item": {
          "id": "8be01a5c-0475-4835-8fac-eda4f3bdb285",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9bbfd4be-b24a-41c9-a32e-c750712bcb8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d792e-1698-460e-bca8-69322edfbfd9",
        "cursor": {
          "ref": "8751fd6e-70a4-4e87-99e5-2d74031d3ce7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d12ea7ec-a000-4375-bcf3-62b7e0f05557"
        },
        "item": {
          "id": "680d792e-1698-460e-bca8-69322edfbfd9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "34a2a56e-b6f0-4fe0-9fb9-1a9f0f37feb1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 558,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d792e-1698-460e-bca8-69322edfbfd9",
        "cursor": {
          "ref": "8751fd6e-70a4-4e87-99e5-2d74031d3ce7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d12ea7ec-a000-4375-bcf3-62b7e0f05557"
        },
        "item": {
          "id": "680d792e-1698-460e-bca8-69322edfbfd9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "34a2a56e-b6f0-4fe0-9fb9-1a9f0f37feb1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 558,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1026708-18bd-4871-a67e-a2c0f64090f8",
        "cursor": {
          "ref": "299b6e09-2a15-4e1e-9652-ceb966cd97c0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3952b7ed-de5e-4d84-84ac-d95853305de9"
        },
        "item": {
          "id": "a1026708-18bd-4871-a67e-a2c0f64090f8",
          "name": "identifiers"
        },
        "response": {
          "id": "c29f82ad-2d06-4cac-b459-7d5e87325d5b",
          "status": "OK",
          "code": 200,
          "responseTime": 1072,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8476e564-0c41-41da-ab8c-09bf6de9cb37",
        "cursor": {
          "ref": "b108f9d9-f04e-45a2-b33c-35d6a77a02bf",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "caffbfa4-33e4-4ee5-9194-2eeacd3fc974"
        },
        "item": {
          "id": "8476e564-0c41-41da-ab8c-09bf6de9cb37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8ff41a6f-3400-4001-af79-3f766b4375e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8476e564-0c41-41da-ab8c-09bf6de9cb37",
        "cursor": {
          "ref": "b108f9d9-f04e-45a2-b33c-35d6a77a02bf",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "caffbfa4-33e4-4ee5-9194-2eeacd3fc974"
        },
        "item": {
          "id": "8476e564-0c41-41da-ab8c-09bf6de9cb37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8ff41a6f-3400-4001-af79-3f766b4375e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6e38e4-662a-4270-8fb4-560544039e6b",
        "cursor": {
          "ref": "3bbc2a62-8089-46db-8d09-535329e0eb89",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f67001d5-ee6e-47a3-b970-c00525c68d6b"
        },
        "item": {
          "id": "9c6e38e4-662a-4270-8fb4-560544039e6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a2e2d9d5-b5b7-4e09-9d39-a0c4c8f3ddec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178261c4-9606-4725-bee5-f863a913bd5c",
        "cursor": {
          "ref": "81921b60-538e-4074-970e-a353aa95b35a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "956a2a33-e311-40fe-9118-4274e2646266"
        },
        "item": {
          "id": "178261c4-9606-4725-bee5-f863a913bd5c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "69854658-fe5a-4999-9669-f3fb40acdf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547acb3d-3d68-4c96-afa6-f3049034827b",
        "cursor": {
          "ref": "023ed00e-04f8-439a-b141-b857aeb50486",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6a1849a0-bc34-4788-bfb7-be7c38bbba95"
        },
        "item": {
          "id": "547acb3d-3d68-4c96-afa6-f3049034827b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "99b3c34c-6bdc-4c70-9122-5eea118acf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb855c2-f4fd-4014-8124-ec2105038b41",
        "cursor": {
          "ref": "8a246db9-6c3b-492b-bac6-ee798e95b055",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d513bd3c-9333-4b71-90b4-ebbfaa95ab0f"
        },
        "item": {
          "id": "6bb855c2-f4fd-4014-8124-ec2105038b41",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07e868b0-82ab-4838-89ba-4f6f7a35ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bccb72-2461-48fa-bc9c-b724d22bfe87",
        "cursor": {
          "ref": "25eed376-3aa1-489d-a827-1dc94395fb22",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bda0304-7acc-4410-a129-919872e7862d"
        },
        "item": {
          "id": "02bccb72-2461-48fa-bc9c-b724d22bfe87",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d7957a15-af24-4568-9e0b-d9c12dc6114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe4f408-a4ce-4f74-b3ad-d6bb7e36adab",
        "cursor": {
          "ref": "e4f6a6d8-2f5b-4ebf-9e51-1cc05f6be9d3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "82883719-f514-4cbc-a498-3313b3b10288"
        },
        "item": {
          "id": "4fe4f408-a4ce-4f74-b3ad-d6bb7e36adab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0c7baa19-6370-497c-b7e5-0076727bcd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63adab61-93e3-4b28-9771-000fe5e8cc9b",
        "cursor": {
          "ref": "548e2836-923c-4eef-a0f6-45e3a5858c8f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "957fb11d-8322-4d01-b7a3-06cf7b2356d1"
        },
        "item": {
          "id": "63adab61-93e3-4b28-9771-000fe5e8cc9b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f01db3ba-191a-459c-8009-f5a0e82f8801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3d8ff8-8275-4574-af1a-46bffa1b3024",
        "cursor": {
          "ref": "6c69ccbf-fa0b-4513-b2d8-759b749a9b00",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d10a3d1c-9952-4f83-9f18-61d01de78511"
        },
        "item": {
          "id": "dc3d8ff8-8275-4574-af1a-46bffa1b3024",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "38e4a5c3-fe82-4d68-acef-cd06493f942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc6f495-a513-4c7a-8e31-773a4da0bff8",
        "cursor": {
          "ref": "6ed0793d-71df-4280-b6f2-f6f716e8f0c1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be92cac1-3936-46ff-ab67-c0609fcf4a64"
        },
        "item": {
          "id": "2dc6f495-a513-4c7a-8e31-773a4da0bff8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "610daf3c-8785-4dee-9438-59fa4d08be40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f3acef-980f-44ae-af06-924d8d0e31bb",
        "cursor": {
          "ref": "48baf294-55fd-4f34-8779-07bfc466028d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "142719f0-d91c-493c-b296-43db45bfbb81"
        },
        "item": {
          "id": "c1f3acef-980f-44ae-af06-924d8d0e31bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aea7afae-9ea0-481d-8f33-ba99269aad68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff0bb2e-c73b-4752-a209-dc10e31802ac",
        "cursor": {
          "ref": "7af6cc81-61e2-49f7-83ea-0fea41e1c192",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ce60395b-223f-4e92-b37c-9c893e3854d5"
        },
        "item": {
          "id": "2ff0bb2e-c73b-4752-a209-dc10e31802ac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "95a27f71-9b4a-4f9e-a11f-ef2b220143a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f1d761-a8d9-4964-ad52-c99ca58f0719",
        "cursor": {
          "ref": "07a74fdb-8450-436f-a067-fc429540d583",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1f85e421-f18b-43ed-99fe-fb2fdae30834"
        },
        "item": {
          "id": "a9f1d761-a8d9-4964-ad52-c99ca58f0719",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a68676cc-4ea7-41f4-9ada-dfc96f373a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d169927d-7b6f-4bd6-9e8d-79670705cacb",
        "cursor": {
          "ref": "c6ec4c0c-09f6-4088-b74d-94bf2b63f746",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb554afd-cc8f-4475-93f2-79130ef6fd29"
        },
        "item": {
          "id": "d169927d-7b6f-4bd6-9e8d-79670705cacb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b0eca78-b979-4cce-a6aa-24299c75ae6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e342f547-a4e1-4cf1-ad3d-ad5a8173b8b5",
        "cursor": {
          "ref": "7bb78225-f83a-45e5-87c7-93b55a8221e9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6ef936bf-c9bf-4213-a857-bb4410bb5323"
        },
        "item": {
          "id": "e342f547-a4e1-4cf1-ad3d-ad5a8173b8b5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ea7d15b8-fa13-4c1b-95ae-5fa3a9c4179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9004e65b-2474-40cb-b8f6-9181430de4b9",
        "cursor": {
          "ref": "5d8bb25d-7d05-4da3-a084-8697db6e349e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "393388e9-be3d-4476-8167-9f3cab12e05e"
        },
        "item": {
          "id": "9004e65b-2474-40cb-b8f6-9181430de4b9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6877b783-84d7-4f10-9e9f-879b3329d894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3508e-ae09-433d-b170-bbdf99837ebe",
        "cursor": {
          "ref": "067112ee-5ef5-48aa-be97-43d0e5e2c7c3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fd53526a-5b8a-4cdb-93b8-ef59ff5aa5f0"
        },
        "item": {
          "id": "d6c3508e-ae09-433d-b170-bbdf99837ebe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5d7c29d3-631f-4ab5-bc00-50ebb0155622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529d5ac4-28b3-4a92-ba14-75e4e6b61e3b",
        "cursor": {
          "ref": "32c73c50-ed2f-47b4-9d56-c23a8723e0b7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4bcd35cc-4dbe-4db1-b408-bf0a00eaec28"
        },
        "item": {
          "id": "529d5ac4-28b3-4a92-ba14-75e4e6b61e3b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cda19dc4-a160-4910-8ec1-f923d43d7f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65d6c57-fcef-42bb-8a00-37234fe00171",
        "cursor": {
          "ref": "fbbe51b8-a978-4014-9f11-b01e7bd08a7c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b1d52f50-7202-4bf5-b8f5-200ce628a89d"
        },
        "item": {
          "id": "a65d6c57-fcef-42bb-8a00-37234fe00171",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "19b36789-ff19-4ef8-80d3-5300a3cb38d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb2a246-a29d-4dd4-939b-1be9665de9f8",
        "cursor": {
          "ref": "c2c77a94-71b3-4c93-acf3-0c5e61081ced",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2037f102-17ec-4cea-af4c-b67dd73856e8"
        },
        "item": {
          "id": "3cb2a246-a29d-4dd4-939b-1be9665de9f8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fa58c5d3-f98e-4696-bde6-ceec833fcd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f950466-e3bb-4741-9051-a12e77b9c921",
        "cursor": {
          "ref": "c4423352-17c8-428c-9a04-6f7db3669806",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7c07d0f9-bf51-45bd-bfb5-5946a771efa3"
        },
        "item": {
          "id": "4f950466-e3bb-4741-9051-a12e77b9c921",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4bd6f2cb-497f-421b-8efb-97d4de2368df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7421123a-8373-4d81-981f-29f1c5f8fd7c",
        "cursor": {
          "ref": "68e863fa-8c69-464e-ab64-e481acb10a39",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b15eb816-1af1-4290-880c-d61eeed21228"
        },
        "item": {
          "id": "7421123a-8373-4d81-981f-29f1c5f8fd7c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "38699e8a-f317-4e95-8d58-b00407bdf36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e25fb7c-e0c1-4b89-b936-971e7f31cd5a",
        "cursor": {
          "ref": "57b437ad-c491-4225-b7aa-599d8b876c8c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8a34c305-d915-4ed7-aae3-e4af02ab51ad"
        },
        "item": {
          "id": "8e25fb7c-e0c1-4b89-b936-971e7f31cd5a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "018887f6-402e-4b14-a647-e5643f38bee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a36f54-e67a-411a-b1f0-762454edaa59",
        "cursor": {
          "ref": "44312484-de91-4121-a14d-196d91047f2a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4e358faf-89b9-4a35-bf45-612d304aafbc"
        },
        "item": {
          "id": "58a36f54-e67a-411a-b1f0-762454edaa59",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9738bc31-33d4-4966-8cfa-53d4c51ef7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5873d4ec-05dc-483b-8b37-2716eacaeaff",
        "cursor": {
          "ref": "2821e517-2cb6-4384-b0cf-a982e304076d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dffcaf2b-28de-48f8-b7c4-56c74b200aec"
        },
        "item": {
          "id": "5873d4ec-05dc-483b-8b37-2716eacaeaff",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "822c5fd8-ca3d-4b55-8248-c263a8ba2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb35c8b2-4fbd-49c1-9030-5165d52ec2bd",
        "cursor": {
          "ref": "3e3381b4-618e-42ed-8ca4-ce4e7a8b5f32",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b6e064f7-d2ce-4a61-b96b-8e93c4a512af"
        },
        "item": {
          "id": "bb35c8b2-4fbd-49c1-9030-5165d52ec2bd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5c68ad22-6809-48de-a7e3-3a4ecfec80d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0c05ac-5f31-4a61-828c-5c2c7dbc24dc",
        "cursor": {
          "ref": "a4b66b67-1ef2-4643-a679-ff80fd53c618",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f7527f53-5419-4e2b-b037-3aeb5375254a"
        },
        "item": {
          "id": "5b0c05ac-5f31-4a61-828c-5c2c7dbc24dc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "781f4d11-00ad-4561-882f-3363231aa413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ceb84f-6fdc-4bbc-94e5-3b6b0411ff50",
        "cursor": {
          "ref": "82f0e64e-e498-4048-bb0e-3df2b3d2b638",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a062c4a6-1c02-446d-99a4-b72ed1c22b7c"
        },
        "item": {
          "id": "31ceb84f-6fdc-4bbc-94e5-3b6b0411ff50",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d3b7e7b0-f407-45f3-8ee6-36411e5d43b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2300771a-6dff-432b-b0ac-41ee6cfdefd0",
        "cursor": {
          "ref": "9f53a2ea-7257-45a9-a092-780d268b7b64",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5b18f30-aa72-4c99-9310-b3545f57fbf2"
        },
        "item": {
          "id": "2300771a-6dff-432b-b0ac-41ee6cfdefd0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "149186c4-705e-42ae-8831-7a738a41a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad0c5d6-9b72-4352-aa35-a976bfcba413",
        "cursor": {
          "ref": "536ed11e-82f5-459f-90b3-4735854d7b8f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d30bc348-a002-43b3-9176-79f13135c78c"
        },
        "item": {
          "id": "1ad0c5d6-9b72-4352-aa35-a976bfcba413",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d0e8d5f4-7d09-49a8-8215-e27f88942c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bb092e-119f-421e-9b5a-8e3fb2df1e33",
        "cursor": {
          "ref": "4f107b06-2ac8-4a35-b8eb-7151a2a00adb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fd5383af-d055-480d-befc-5d94d4a8c064"
        },
        "item": {
          "id": "01bb092e-119f-421e-9b5a-8e3fb2df1e33",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ec91a1f1-f5b3-4e7b-8f41-182e76467bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d7fcd4-013c-4f5a-8460-d6da37f8a065",
        "cursor": {
          "ref": "e740fcbd-d1a4-4e35-83a0-b15077615d90",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8263e670-77b6-4a9d-9144-74e48ce7f60e"
        },
        "item": {
          "id": "03d7fcd4-013c-4f5a-8460-d6da37f8a065",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3bc850ad-0d3c-4368-857d-afee011ae869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadc3a20-4c18-415d-b7a1-fd25781964cf",
        "cursor": {
          "ref": "bb1119a0-5bfb-4dc3-a120-3a9e2fea9cc7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f950e4c7-7263-4d95-866d-9b099fee579c"
        },
        "item": {
          "id": "aadc3a20-4c18-415d-b7a1-fd25781964cf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "37595b6a-fcbc-4338-a541-97499c795265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b140f2-facb-42c7-a9b4-e2cae8b7b99b",
        "cursor": {
          "ref": "38050cb7-2359-464e-9b19-ceed6618c063",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2fc73d70-62ec-4766-9432-d360a321095c"
        },
        "item": {
          "id": "f4b140f2-facb-42c7-a9b4-e2cae8b7b99b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "93cb8cbc-c7f7-4828-9333-3f2835f3011a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c640997-a52b-4efa-ba75-56509b4fd049",
        "cursor": {
          "ref": "371e2a59-63cd-4c3f-9a0d-8fa670b3956c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ac4da64b-ff96-4c49-aad1-614e77454f87"
        },
        "item": {
          "id": "3c640997-a52b-4efa-ba75-56509b4fd049",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e8ca6a03-cf15-4066-8b27-cc6fcad58290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c45079f-b141-45ff-b483-ff968bc41c8e",
        "cursor": {
          "ref": "e94dc749-3e48-4ed1-9a05-35c5a2a56e6c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5d404933-5dd1-4c02-b115-c8fcd5152194"
        },
        "item": {
          "id": "5c45079f-b141-45ff-b483-ff968bc41c8e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "37d52c39-0166-4a84-8036-4aaa04a0f6bd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 723,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda6e33-509d-45ea-ac03-99b405723b94",
        "cursor": {
          "ref": "9c3263a6-3ebb-4d54-974f-b735d1a1fb38",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e1c71b60-a7a2-4ade-aedb-679f473e5c3b"
        },
        "item": {
          "id": "2eda6e33-509d-45ea-ac03-99b405723b94",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c296ded5-d56c-4885-8710-3c8bd5b37dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac8dbb-aa5e-4ce8-a530-435006cc508c",
        "cursor": {
          "ref": "90facd87-97d1-4895-9f7a-ac972a0b84f3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9e05129f-3824-4f6e-b95b-b480692b5ea6"
        },
        "item": {
          "id": "0fac8dbb-aa5e-4ce8-a530-435006cc508c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0478d1dc-386b-43c9-bd6d-f003675563f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6c35c1-f9ca-4eae-83fe-e2903b130ba8",
        "cursor": {
          "ref": "a1c89910-8987-4785-8e40-ed153a91b7c9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "95ef2002-e72b-478d-9e69-8d3626d52904"
        },
        "item": {
          "id": "0b6c35c1-f9ca-4eae-83fe-e2903b130ba8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bb13196e-5246-4b3e-92d5-1ae13363591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1040,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb07172-18fd-4269-81d6-c243523baa4e",
        "cursor": {
          "ref": "19d4b4aa-216e-4a95-874b-56128e35a6b0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "282a12cb-1797-4f61-940f-c1fbbf470b51"
        },
        "item": {
          "id": "9fb07172-18fd-4269-81d6-c243523baa4e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1e8116b0-8345-411a-b07e-98ba581fc37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab684b-7a46-40c3-861d-9a8d3caa19a7",
        "cursor": {
          "ref": "a60a3022-abef-42f6-a39b-dfd44edec44e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5a0842d2-37f6-4a57-8d1d-5ebcca92daf0"
        },
        "item": {
          "id": "d0ab684b-7a46-40c3-861d-9a8d3caa19a7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bca47299-a4e1-46b0-8e06-f9f65452f3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1751,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de22472-8fc2-4858-8987-1c31655beb13",
        "cursor": {
          "ref": "875bd392-2f90-456b-95e5-9ad7c1f340bf",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d4307549-3b5c-4d2c-b3ab-1951956dfb29"
        },
        "item": {
          "id": "0de22472-8fc2-4858-8987-1c31655beb13",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d8a9260b-54b5-49a9-886d-d38f9aac8199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e6395b-7f10-4614-b8f1-f320c9dc9e79",
        "cursor": {
          "ref": "3ff3552b-b00e-406e-8e4c-4fd5b3e66287",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b4fccf3d-22c2-465c-bbc2-7ffd19f08cd3"
        },
        "item": {
          "id": "79e6395b-7f10-4614-b8f1-f320c9dc9e79",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c2364d99-1c1e-4689-9d7b-728440cab14b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1167,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7133bc2-78ec-4a38-98c8-188386e3b4f1",
        "cursor": {
          "ref": "df7ae227-bd54-4e3d-a87b-3f0f81fe45a5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8e893d93-03d2-413a-bb92-a338ef1035bc"
        },
        "item": {
          "id": "a7133bc2-78ec-4a38-98c8-188386e3b4f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e047303f-5088-4bc0-93b5-53970db275e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57daeb4e-80f8-49f8-8439-285bc7f40568",
        "cursor": {
          "ref": "b969daf0-1248-4670-8389-d9badad52126",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4058e7c3-89e7-4ff4-90cf-8cd9275ea753"
        },
        "item": {
          "id": "57daeb4e-80f8-49f8-8439-285bc7f40568",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d4ec0e9b-7119-4412-bbdf-bc7c16080b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c18a921-0a29-471f-86fa-245cbd661bea",
        "cursor": {
          "ref": "6b47a2ce-ec5a-4ecd-b0f8-cb4840febcd3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4dbb3fbf-e363-400b-9fcf-ff22b04e4414"
        },
        "item": {
          "id": "6c18a921-0a29-471f-86fa-245cbd661bea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c81e7100-6c2d-45e2-a057-32ab6ce6033e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e02b32-51ed-4281-9ab7-817d355ca1f4",
        "cursor": {
          "ref": "8958479f-6b91-4632-a609-c17f7c79fdcc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6ddbf32f-f460-4068-9e34-8e4ed661d948"
        },
        "item": {
          "id": "a5e02b32-51ed-4281-9ab7-817d355ca1f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "327d8077-cea4-4c37-b5cb-8de91b801025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c920d-7384-47da-9dd4-821e2d2ddb9e",
        "cursor": {
          "ref": "49a4577a-7194-47a1-b425-8d7e65b041bb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "edf6ec96-11f1-437b-86ba-699be77f4878"
        },
        "item": {
          "id": "2c8c920d-7384-47da-9dd4-821e2d2ddb9e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7086f0d0-9880-45bb-a896-f60731b57078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae1b0c1-3c5f-480b-98ab-7b9203008177",
        "cursor": {
          "ref": "1b570150-2bf1-4173-aa0e-aa03c1ca7e10",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "08389552-25b8-4fdd-bb70-186f4debb29d"
        },
        "item": {
          "id": "5ae1b0c1-3c5f-480b-98ab-7b9203008177",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "544b3004-d2e3-47db-97d1-2efbaf41c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f06630-fb2e-4f01-a046-2226253a3882",
        "cursor": {
          "ref": "c18bd6e9-fc89-4ec0-8383-a335d162dc71",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8f75fe20-43d6-48d5-afce-dd60c9b88f91"
        },
        "item": {
          "id": "07f06630-fb2e-4f01-a046-2226253a3882",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "71b6de7d-5593-4bc8-b942-ab9a8b91ecbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d4eade-d4f0-408f-ac62-feca21633d41",
        "cursor": {
          "ref": "cde4ecbc-6949-48dc-ae9b-7b939d9a32f7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0c9f1db7-329a-41c6-a804-3262182c2a86"
        },
        "item": {
          "id": "59d4eade-d4f0-408f-ac62-feca21633d41",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa37bf3a-041f-498a-be74-402cacaae08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b542f3-ede9-40db-82d2-404c5cf459a6",
        "cursor": {
          "ref": "e2b1a61e-c636-4229-9ca1-b46dccb3cc3c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b1a831ac-05d8-4c66-afb4-b5af11cc12ed"
        },
        "item": {
          "id": "58b542f3-ede9-40db-82d2-404c5cf459a6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "71c03ece-065e-45e0-bb66-f6acabc117d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abed91b5-cdf5-43df-ba2f-c5c6638912a6",
        "cursor": {
          "ref": "d6401a0f-9f45-4520-a85a-1b19e2e6f4d5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad055d67-954f-4c48-8a65-471ea75a1a78"
        },
        "item": {
          "id": "abed91b5-cdf5-43df-ba2f-c5c6638912a6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ca75071e-c763-4409-b758-3f50d81a2acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0420b0a9-03ed-4586-bef5-f3ca6a57f5ca",
        "cursor": {
          "ref": "44da0d05-07e6-4355-b086-b0ee049eff52",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "63197609-5c12-493d-a0a2-b369c7bcc21b"
        },
        "item": {
          "id": "0420b0a9-03ed-4586-bef5-f3ca6a57f5ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8dae9918-5855-4d18-92bc-1f373dc81604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fabc8a-0ab9-4945-9898-3013dcb5600f",
        "cursor": {
          "ref": "c59795c3-6709-4125-bb62-24dd8e234886",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "638b54dd-9871-46f6-95d7-98cd3d545696"
        },
        "item": {
          "id": "f9fabc8a-0ab9-4945-9898-3013dcb5600f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "31e8edc2-eda2-43ae-b480-fbdc372c99f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29683922-ebbb-4cd8-bb9d-32992a71565f",
        "cursor": {
          "ref": "6ad8e1ea-3bc7-4b93-bff9-ddebeaf30694",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "72cdc104-2a56-4738-bdd0-3c7bcbc518e4"
        },
        "item": {
          "id": "29683922-ebbb-4cd8-bb9d-32992a71565f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76e3e7cc-cf18-4c3b-ab7e-ee0829930921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc5f940-7f52-4aa9-90e0-799e09e4c2dd",
        "cursor": {
          "ref": "51696925-3bb7-402e-8feb-e0438c28f593",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "47d5de49-0c2c-4480-ad80-a996c920e0ae"
        },
        "item": {
          "id": "cbc5f940-7f52-4aa9-90e0-799e09e4c2dd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ec5ed811-70c3-4afa-a6d7-d6c00af7574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa35d752-6c77-4eea-b7c0-e8f7509ef66c",
        "cursor": {
          "ref": "47c6766b-66b1-4f20-805a-ec01cf6a22e6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b8df239e-be49-4d43-9ca0-b46176afdaab"
        },
        "item": {
          "id": "fa35d752-6c77-4eea-b7c0-e8f7509ef66c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1950708-a355-4c22-a940-80d32e13cd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f0490a-3d31-4e3d-a017-8b83cc412c06",
        "cursor": {
          "ref": "15b7c817-64ec-47ee-b117-3f91bc536792",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7704164a-df49-46fa-8381-6b116828bdb4"
        },
        "item": {
          "id": "81f0490a-3d31-4e3d-a017-8b83cc412c06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "03cb5b4b-d4ec-4d40-9406-f6b01d79b0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279b8cb3-8006-4bd1-b0f6-b5b5075bd9cd",
        "cursor": {
          "ref": "4a07bbca-d2ab-4ba2-b315-d6f92c89ce46",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4d1e69fd-b6a0-4f6c-af3d-6eb45796b4f1"
        },
        "item": {
          "id": "279b8cb3-8006-4bd1-b0f6-b5b5075bd9cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9c0ff349-23a6-445d-815d-d4a7e1b9a727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c8089b-caae-44d8-9b8d-91aaf0801a18",
        "cursor": {
          "ref": "b704fc42-0511-4ef2-b00a-e032c80dc970",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2987db9d-fbbf-453c-bead-268e9bfafaed"
        },
        "item": {
          "id": "b7c8089b-caae-44d8-9b8d-91aaf0801a18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9309aa30-8c08-4ad9-b0b1-61ddeb216bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c14400c-33ea-4853-9331-daa7a9d93aaf",
        "cursor": {
          "ref": "70f3114b-2315-4f12-9796-8e2dbd16b603",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "60492578-bdc5-4ead-9746-4a36161339fa"
        },
        "item": {
          "id": "8c14400c-33ea-4853-9331-daa7a9d93aaf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0cc78658-6d56-4788-9f87-f19e76d36656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c2df71-1a24-45d9-9df4-9ad8298597bb",
        "cursor": {
          "ref": "31b30b63-0749-48c0-a034-61c3d96fa1a8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6580d933-4218-4b25-83a4-ae6479be94cd"
        },
        "item": {
          "id": "c8c2df71-1a24-45d9-9df4-9ad8298597bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "42e81e4b-d437-453e-b766-c167d5e8c3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87016276-b992-42ee-a427-6dedba48ba81",
        "cursor": {
          "ref": "70557169-f9e9-4928-931e-f890ceb9f329",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f7cd0a8f-a1cc-4708-aeb9-2fbc5dc5adeb"
        },
        "item": {
          "id": "87016276-b992-42ee-a427-6dedba48ba81",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0f464bdd-aa3a-4e45-9798-bc121692982b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf596dbc-212b-4048-a48b-a3f4b3d309b4",
        "cursor": {
          "ref": "e53c0d2b-2917-44c3-acad-99285dfe7fc3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "70e9fb6c-e6da-4c8e-9791-94cc3e5edd99"
        },
        "item": {
          "id": "cf596dbc-212b-4048-a48b-a3f4b3d309b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "422e2932-8235-4b9c-8823-c13a9766873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47824439-dedc-4f60-8415-96ee1f300dde",
        "cursor": {
          "ref": "2eed9a29-a999-447f-a459-5c74e8c56301",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2ffdb79-1585-4b91-8d75-944dcbeef3d7"
        },
        "item": {
          "id": "47824439-dedc-4f60-8415-96ee1f300dde",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "212269db-6401-4755-a05e-8d27333f740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b31a26-d155-47fe-9fe1-7b92cf26a5e5",
        "cursor": {
          "ref": "91185c17-f61f-4114-a7f1-9e68fd497bbc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bd78159c-79f4-4c98-abcc-83e59bf3e7dc"
        },
        "item": {
          "id": "f3b31a26-d155-47fe-9fe1-7b92cf26a5e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e56b22b1-ebf1-46ec-9c48-75c92eb1758b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9100ef3a-79fc-408f-b814-b43ac044b5e9",
        "cursor": {
          "ref": "7c723c41-bcbc-434c-9fd8-f5b7f6b201f7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "175c1844-895e-46ac-81c1-a0ebf9a4a3a6"
        },
        "item": {
          "id": "9100ef3a-79fc-408f-b814-b43ac044b5e9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "64df21c8-0a01-49a8-ba57-618144b37fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cb0eec-b101-4af2-922b-43b0ee82f4e2",
        "cursor": {
          "ref": "dbe5a880-a4a6-4577-9f89-53214e4c4ec0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d925e6e0-9567-4881-a9b5-4a7b2d913af8"
        },
        "item": {
          "id": "c6cb0eec-b101-4af2-922b-43b0ee82f4e2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "52450782-b3de-4c94-828c-389ff5679efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06b2d0-2b16-498e-a4eb-5b69e5627339",
        "cursor": {
          "ref": "ed4ff78f-4343-47a7-9558-fa90652e5e4a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9b8411e0-e322-416d-aca4-7888d788526d"
        },
        "item": {
          "id": "5e06b2d0-2b16-498e-a4eb-5b69e5627339",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4411ea51-804d-422b-b2bd-81874540ab41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9390fc-36b8-4b9e-8cb6-769e42019fe6",
        "cursor": {
          "ref": "9b4c0e46-50c1-4fbc-92b5-49089138030f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07748ef5-b06d-49da-bab0-c8616943cf9b"
        },
        "item": {
          "id": "7b9390fc-36b8-4b9e-8cb6-769e42019fe6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c6f8e026-ab3e-4ccb-a4d3-843af3e04d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79194d93-35d9-42fe-8b22-5853992d1f3a",
        "cursor": {
          "ref": "43f3ee45-0b37-4ed2-823f-56c904eda5be",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "041fb0c8-67c7-4014-9d2d-8c06109bf951"
        },
        "item": {
          "id": "79194d93-35d9-42fe-8b22-5853992d1f3a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "95c580a7-a165-46d3-aa7d-854fafd5fdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb41495b-9b74-4b6d-bd13-e0708a7c3676",
        "cursor": {
          "ref": "21ce98d0-6997-4d40-93c3-ebc1a368a29b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "79270f8b-c908-41aa-b819-92b15be2b529"
        },
        "item": {
          "id": "fb41495b-9b74-4b6d-bd13-e0708a7c3676",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7bca1002-5c34-4054-89b5-bbf022b57b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0cc0bc-04f0-4c23-a532-9cd8100d6d8b",
        "cursor": {
          "ref": "b31d5056-5426-498c-a18b-7f9ad560bec8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9f0340ac-b3b1-451b-8de1-52c0e7355cd2"
        },
        "item": {
          "id": "6e0cc0bc-04f0-4c23-a532-9cd8100d6d8b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "70f13e60-b0f9-4e04-b7c3-98a7f8ea78a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ce204-6c02-4973-9179-f15759ccbe40",
        "cursor": {
          "ref": "127354d7-27eb-44b0-9fed-baed647889f8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bafdf67-4786-41a8-b9d2-42e6a04347f5"
        },
        "item": {
          "id": "294ce204-6c02-4973-9179-f15759ccbe40",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "418afb34-12af-4377-8806-0f4eaf33ed96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08574404-2989-4a3d-a062-fe290cb9934a",
        "cursor": {
          "ref": "a687cbc8-3e23-4866-b60e-90634050debb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "785ab43c-995f-4395-b0ed-5c1a6910a51b"
        },
        "item": {
          "id": "08574404-2989-4a3d-a062-fe290cb9934a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0e437fd1-627f-49d6-9196-64877b67f899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03799e90-97af-4a8f-8c1f-2f29b2b54b24",
        "cursor": {
          "ref": "cd579c8e-be39-4c1a-af4f-103d130d2a2d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b5fc71c9-ca3e-46d6-bc79-4b79f8049a3d"
        },
        "item": {
          "id": "03799e90-97af-4a8f-8c1f-2f29b2b54b24",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "873e72a9-8eb4-48ec-9755-fc5036f3928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786d3efe-504b-420a-b9fa-b3e57bd5dd92",
        "cursor": {
          "ref": "68dcbb24-4398-48d3-b61f-58dc8c81e648",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da5985a4-6012-4107-a802-624ef1bd611b"
        },
        "item": {
          "id": "786d3efe-504b-420a-b9fa-b3e57bd5dd92",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "933b6b04-cd5c-40a9-9b10-7274152e602d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23047715-79da-4462-ba5a-3434a004f169",
        "cursor": {
          "ref": "2a18f451-29f7-47cd-b355-7d30bd706b8c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2f0d85f2-637c-4fec-b169-b9b64e941240"
        },
        "item": {
          "id": "23047715-79da-4462-ba5a-3434a004f169",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "014e988b-ec4c-46a7-9005-9bc72ae3f909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655050f-4381-4ca6-aac2-ccc0cb69b757",
        "cursor": {
          "ref": "dab3fd0c-a5c1-453e-ac33-3389f237b520",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "775f1907-f257-44e8-8c06-49f6974c6ce1"
        },
        "item": {
          "id": "4655050f-4381-4ca6-aac2-ccc0cb69b757",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e7a43545-59b4-47de-88a1-5b99b9413343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2783ed86-dd52-46ea-aabc-fb43902ac858",
        "cursor": {
          "ref": "5114787b-d0ff-4f7b-9792-1c86ad115520",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d4d63a18-cb22-490b-b90d-17a02c56972e"
        },
        "item": {
          "id": "2783ed86-dd52-46ea-aabc-fb43902ac858",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "61a549e6-0146-4b93-ac45-3f777788c7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f838a-bcb3-4c9b-aa36-6988480394f1",
        "cursor": {
          "ref": "9a842205-de0a-45a7-87d7-ecf6a2cb82da",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e7491939-9b53-4228-92b5-43ed6cc913c5"
        },
        "item": {
          "id": "2d8f838a-bcb3-4c9b-aa36-6988480394f1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cd8866d4-7d2c-4a5a-8dd8-4469169b874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d322e6-4446-406d-b7af-56b85d983f26",
        "cursor": {
          "ref": "1e11e80f-b1dc-4f82-845b-73920cc4d289",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8cfa8299-8906-4561-9608-f5d19904edfd"
        },
        "item": {
          "id": "51d322e6-4446-406d-b7af-56b85d983f26",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3dd02609-bca8-474d-8b89-a5973c7f2300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33cff00-7f3f-48f8-afb6-c3f3eb4bf18c",
        "cursor": {
          "ref": "42297fc2-9d4e-43c5-8bb7-c88bfede92fe",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0341c77c-f42a-40e4-9a94-59e6b9d4932f"
        },
        "item": {
          "id": "f33cff00-7f3f-48f8-afb6-c3f3eb4bf18c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1b7e3fc9-c6ae-4296-9baf-42e2cf564e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d89032b-6431-4deb-9e7c-5c76d7eb3cca",
        "cursor": {
          "ref": "9fdc0c5e-a330-498a-ad6b-98a4245cdd02",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b40962c8-effe-4e2a-ba2f-530b1c230751"
        },
        "item": {
          "id": "8d89032b-6431-4deb-9e7c-5c76d7eb3cca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a34c655a-62d1-43ae-a3f7-92164d4e4085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe5e615-ad47-4e54-b4a0-bc46e133f09e",
        "cursor": {
          "ref": "209254dc-ff61-4b2d-8213-abc268480f3b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6962925-0550-4486-84da-3a239d361020"
        },
        "item": {
          "id": "ebe5e615-ad47-4e54-b4a0-bc46e133f09e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d40346d-3e80-44b9-bd34-c4781539bb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc33a1-ccff-4019-960c-7ec2cce9fcba",
        "cursor": {
          "ref": "f9a0644f-f990-4e6b-89da-8d16f3daf0d4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05c8a85c-876f-43a3-a963-67390c224f29"
        },
        "item": {
          "id": "64dc33a1-ccff-4019-960c-7ec2cce9fcba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "296ffa36-c2ee-4984-9b15-f2c68fb1b2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb03555-fa74-446c-8659-3facdc8f6cc0",
        "cursor": {
          "ref": "daecef54-2fc7-45fb-874b-27713ac6da50",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1c6786a9-8127-41b8-91b4-625a4f48d45b"
        },
        "item": {
          "id": "4bb03555-fa74-446c-8659-3facdc8f6cc0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f6a4eed7-7632-4ad9-a61f-f229aa05011a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf59b10-4e39-4435-9466-34874e176c39",
        "cursor": {
          "ref": "6537e678-3cf3-476b-8c5f-307471561070",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bafcdd49-ab04-4f26-a213-ee42fcefd047"
        },
        "item": {
          "id": "bcf59b10-4e39-4435-9466-34874e176c39",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97c47787-e0a2-4dfa-8c15-6e58aafa0f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8bee2e-d5ec-4536-b55e-ed08c74dd30d",
        "cursor": {
          "ref": "eef53c93-5e72-4c17-8d8d-587f6b4684d7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0a8ed68-4afa-4b25-8561-aaac3235bf69"
        },
        "item": {
          "id": "7d8bee2e-d5ec-4536-b55e-ed08c74dd30d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "788e5a95-4a79-4a4b-9bd5-373ad38dc10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1197a9-c34c-46c1-8ff7-f3160b3c28d6",
        "cursor": {
          "ref": "975afc3f-f5fb-4a47-8740-bbc52b54e347",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6bf71a02-ccf0-4dc9-ba01-9921e32017e8"
        },
        "item": {
          "id": "7d1197a9-c34c-46c1-8ff7-f3160b3c28d6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "78bf07b7-4c32-4311-bd40-97c82f6c9498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a31deb-e413-4232-b584-2834fea97ef3",
        "cursor": {
          "ref": "c228ee07-8304-40b9-9854-8d37402c7f03",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f10bbee7-b43f-42dd-8fb8-6d3614c1d2b4"
        },
        "item": {
          "id": "49a31deb-e413-4232-b584-2834fea97ef3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a81ec91-a303-4618-93ac-ffa4d3428442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a275db37-ed9d-4a48-b176-3e9b49b7fba7",
        "cursor": {
          "ref": "fc215732-6e38-486f-8a84-1ed058e68c9c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fc52935c-695b-41dc-9835-f2fb7b99b4c9"
        },
        "item": {
          "id": "a275db37-ed9d-4a48-b176-3e9b49b7fba7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "994284f5-ee9a-471b-99ee-3439b629ade1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af72902b-59f1-49aa-8e7f-862cd449a622",
        "cursor": {
          "ref": "75b309c5-9c3b-4b9c-9632-eaab98dc0ecb",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "36b81525-3857-4737-bb33-58638f861972"
        },
        "item": {
          "id": "af72902b-59f1-49aa-8e7f-862cd449a622",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "fd67cffd-976e-4b3f-bffe-114aa65a84d2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 870,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8c68ae-b907-49da-9194-a85641dc7021",
        "cursor": {
          "ref": "8bbce2d9-c586-4b92-aee9-7baa316e6239",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ca04e3dd-8c39-4dad-9277-66be6a46f824"
        },
        "item": {
          "id": "da8c68ae-b907-49da-9194-a85641dc7021",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5d3b0f36-593a-4089-a703-3715b1307d9f",
          "status": "Created",
          "code": 201,
          "responseTime": 6293,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c360f05-2054-4fe8-873e-490e2c602c7a",
        "cursor": {
          "ref": "4d9deef6-98a6-4464-b00c-176982afe2fe",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ad85b87c-71df-4cb3-b0c4-02d7fffa38d7"
        },
        "item": {
          "id": "6c360f05-2054-4fe8-873e-490e2c602c7a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9814d7ae-eb91-44be-9c18-03dd31b66ac6",
          "status": "Created",
          "code": 201,
          "responseTime": 4370,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5201eaa5-e354-48a7-aac6-49eb1133b980",
        "cursor": {
          "ref": "772b1733-cac2-4a8b-8903-37dca4604dfd",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be35fe13-a7db-420e-acef-7669b4616edc"
        },
        "item": {
          "id": "5201eaa5-e354-48a7-aac6-49eb1133b980",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "93696dc2-87bf-48e8-8dd3-bcc6aed7ba47",
          "status": "Created",
          "code": 201,
          "responseTime": 4335,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f75e72-c594-495c-b4c2-4f243bd01c03",
        "cursor": {
          "ref": "dfaf15b1-639a-4228-8cf5-86d115bc780f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d2e5c2a5-a5ae-41ef-930a-0407287ec5d7"
        },
        "item": {
          "id": "d0f75e72-c594-495c-b4c2-4f243bd01c03",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "71e05580-f7e0-4838-8c41-a88c7d7f2b91",
          "status": "Created",
          "code": 201,
          "responseTime": 5562,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "99794688-3ade-4368-9857-04c8b23a48b0",
        "cursor": {
          "ref": "2f269a7f-3c93-41e0-88a5-ad019a46aa25",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d401a01d-e790-4b4d-81f0-bb86fb6435b4"
        },
        "item": {
          "id": "99794688-3ade-4368-9857-04c8b23a48b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "78028151-c492-4e4a-a0c4-670367ab40ef",
          "status": "Created",
          "code": 201,
          "responseTime": 7813,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9958231-aa52-4bbd-a580-80b991837588",
        "cursor": {
          "ref": "ff0d9c69-dd2f-41ec-943b-ed9ec72f3207",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4f78e8d8-4627-4b45-b919-b033eb8eb639"
        },
        "item": {
          "id": "d9958231-aa52-4bbd-a580-80b991837588",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b643921e-68db-4930-b310-5b89e6d3c867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9958231-aa52-4bbd-a580-80b991837588",
        "cursor": {
          "ref": "ff0d9c69-dd2f-41ec-943b-ed9ec72f3207",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4f78e8d8-4627-4b45-b919-b033eb8eb639"
        },
        "item": {
          "id": "d9958231-aa52-4bbd-a580-80b991837588",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b643921e-68db-4930-b310-5b89e6d3c867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4036ac12-e3b5-4097-aa09-0357b472011f",
        "cursor": {
          "ref": "ae952537-cdee-4db9-8afd-b1b4534deae2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "97d14375-6111-48d4-a6af-d9df41b9f2bd"
        },
        "item": {
          "id": "4036ac12-e3b5-4097-aa09-0357b472011f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83affae2-e4d0-4e6e-ac07-339fbe4f658d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1100,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c0cd3-8e13-4963-8fe2-60a8f5c0a57a",
        "cursor": {
          "ref": "616c6307-e4b5-4b61-b4b2-8c0c4369546c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "06b28e57-3099-4c4e-94a9-ef4da1790f57"
        },
        "item": {
          "id": "168c0cd3-8e13-4963-8fe2-60a8f5c0a57a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b25060c7-909e-4409-9483-30d126f03a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1930,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c5c9ae-0ed4-4339-9724-60115571415e",
        "cursor": {
          "ref": "464e6360-9d9c-4d01-a016-8757b01d1974",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "debacdbb-a391-4939-9886-6b0f1f2c809b"
        },
        "item": {
          "id": "26c5c9ae-0ed4-4339-9724-60115571415e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e262a66e-985e-43ac-a078-bd8b05dc7834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1558,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586cc7a-cc02-435a-b54f-5a802a8c1d96",
        "cursor": {
          "ref": "a86c76c4-559f-4223-9d16-b6a13a93af38",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0b52bdb4-0838-45f2-ad05-c6860876a9a4"
        },
        "item": {
          "id": "a586cc7a-cc02-435a-b54f-5a802a8c1d96",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de423c8b-b036-4902-92a8-2c6c97c429d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1167,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc1b9eb-4e79-43ee-95ce-4a3b9469ca2d",
        "cursor": {
          "ref": "beb623e1-2a4a-41c7-919d-ddd3537cbb9b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "82e7e11f-d81d-4e51-849e-f89892aeadaf"
        },
        "item": {
          "id": "5fc1b9eb-4e79-43ee-95ce-4a3b9469ca2d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "094f7936-7895-4a60-b4e1-f88360e8613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcda4cdd-84e2-4912-af75-0571d2722a01",
        "cursor": {
          "ref": "9eec4a29-62e9-43b7-8557-ac340f23eb99",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a2ea1296-e332-4b4b-9346-bd15a381f105"
        },
        "item": {
          "id": "fcda4cdd-84e2-4912-af75-0571d2722a01",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c0982739-3863-4741-b202-fcc24613bebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec19c3c4-c053-4617-89de-e6d3b14c5b03",
        "cursor": {
          "ref": "b02eef2f-fa64-4e5b-b0c0-a62345160b14",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4fadfd7c-2d60-4dd8-99b7-dcedacce4422"
        },
        "item": {
          "id": "ec19c3c4-c053-4617-89de-e6d3b14c5b03",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cff2f2b2-243f-4ff0-bd8f-6c043f37b1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defe1d22-a0b5-4447-b102-280ce3ce490a",
        "cursor": {
          "ref": "0aacc478-7e01-44e6-9e45-f1be48370833",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7cea0bd9-8718-423b-9a0e-f6eb2b383f8c"
        },
        "item": {
          "id": "defe1d22-a0b5-4447-b102-280ce3ce490a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "922871a3-0ec7-4fec-b187-ea86f23b976a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3166e1-791b-4bc4-95e5-f2762e3030c5",
        "cursor": {
          "ref": "088c4f8a-b076-48e5-be19-15a5c5010e5a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "df242d79-3d41-4300-9a52-1ace4d0e53be"
        },
        "item": {
          "id": "be3166e1-791b-4bc4-95e5-f2762e3030c5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f55fcea8-0be7-4ee5-8369-2c089ff88267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da37df59-f6b3-43c5-8e32-a6fcf4cc0f07",
        "cursor": {
          "ref": "24520d02-549b-481d-a23f-e2101a46fa5c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d43f2d6-d505-435d-911b-fbbf90325bec"
        },
        "item": {
          "id": "da37df59-f6b3-43c5-8e32-a6fcf4cc0f07",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "438a84d4-e951-4175-9107-01c7692a0eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6309c5ee-7b75-4491-b320-b635a42e660a",
        "cursor": {
          "ref": "0593b5f9-46c0-4ce8-81ec-d45a408b7729",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69f0f829-bc76-4f9b-9e0b-86eb3444fa3c"
        },
        "item": {
          "id": "6309c5ee-7b75-4491-b320-b635a42e660a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cf5575a7-1d2c-475d-be06-2357a5f5415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de5907-0e47-49ba-87aa-9ed0f347a40b",
        "cursor": {
          "ref": "f35e565d-607d-4636-a9f5-f72653ebbe01",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb8260cb-3659-429c-9838-7007602e39c1"
        },
        "item": {
          "id": "13de5907-0e47-49ba-87aa-9ed0f347a40b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12fb2cb1-ce41-4f52-9f99-15061f581129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cc27aa-3f70-4432-9f12-2d414acd994e",
        "cursor": {
          "ref": "4c74b107-8475-45e1-b5f1-d7b6a6dea005",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b24a8525-a757-4088-bdcc-1417555b1207"
        },
        "item": {
          "id": "12cc27aa-3f70-4432-9f12-2d414acd994e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0dc1adbb-27ca-477a-812b-a8cf7c735ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c97ec5a-43b2-4be4-b709-90c13327dd25",
        "cursor": {
          "ref": "4e446e7a-3649-41d9-b5dd-40a50984ca2f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b3527db5-12c7-405d-a7cd-4f317922d04b"
        },
        "item": {
          "id": "7c97ec5a-43b2-4be4-b709-90c13327dd25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a4cc909c-3991-4850-9bcd-93c78642df97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caab29a-438c-443f-9060-e8fb4557fa21",
        "cursor": {
          "ref": "de0ac32f-5b0c-4df4-8889-bb9cea6d41b1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f045827a-0b01-420b-a23e-2d081318de03"
        },
        "item": {
          "id": "3caab29a-438c-443f-9060-e8fb4557fa21",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3870d86a-e493-4453-9e54-3549ba29d0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47d73c1-f4c4-448b-b183-5266333bb2b0",
        "cursor": {
          "ref": "d51afb65-3532-40d1-bed9-6cc8963aa76d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4205727b-ed86-4743-8fe4-c82a4af2f466"
        },
        "item": {
          "id": "d47d73c1-f4c4-448b-b183-5266333bb2b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0a450e8e-3123-41fd-9521-541f410b2cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5b24a8-10bf-4123-8a3f-e3652d7913d6",
        "cursor": {
          "ref": "4ebbb89c-cbd7-46d5-977e-e462607a48ad",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b85338df-2cdd-472e-b690-6628b135b12a"
        },
        "item": {
          "id": "dc5b24a8-10bf-4123-8a3f-e3652d7913d6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1aadbbd9-71b4-4f0c-bdcb-82b202e44a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198e75df-a482-46c3-b88c-cc427100fc11",
        "cursor": {
          "ref": "2531143f-888a-4dcc-9970-6fa964c19ce3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "de883a22-2317-4ee3-89e6-d15d25046fb9"
        },
        "item": {
          "id": "198e75df-a482-46c3-b88c-cc427100fc11",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b43ed790-24d6-4d0e-b394-b827481abb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05c2170-45ba-4aa8-9377-0a4c06632854",
        "cursor": {
          "ref": "33382639-2132-44e4-abe0-4046f3e198bc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f066a439-915a-41ca-a36d-0d8f77b40b2e"
        },
        "item": {
          "id": "d05c2170-45ba-4aa8-9377-0a4c06632854",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "394e693e-e71b-414f-8d6e-5d0c7a574e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf4bc8d-a86b-4e85-81c2-5db684bb9973",
        "cursor": {
          "ref": "da8b76cc-3311-48f1-98b8-22385e20291d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3d204233-573d-4ba1-bcc3-576ab2b6d866"
        },
        "item": {
          "id": "ddf4bc8d-a86b-4e85-81c2-5db684bb9973",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04c6ffe8-4c9b-4177-b666-5fa60b58b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfb7f61-66e7-4461-91be-c26254b50074",
        "cursor": {
          "ref": "10b10b69-911b-4145-afe0-8ad4547a1064",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8f60366a-57c5-4b41-833b-9d98f2ab62b0"
        },
        "item": {
          "id": "3cfb7f61-66e7-4461-91be-c26254b50074",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9ca0089-f28b-4342-afd4-ecdd1a18d8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a9a89-3796-49e1-9c79-436356f114ad",
        "cursor": {
          "ref": "39bead12-6fa8-4ee4-925a-aaca8716b2d3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07da8493-0c00-41d6-b221-45eec1a3e6fc"
        },
        "item": {
          "id": "ad3a9a89-3796-49e1-9c79-436356f114ad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1e8aca10-f232-4af1-9f50-28645244fd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54af35ec-1505-47fd-907f-ba2b02a8caa0",
        "cursor": {
          "ref": "d03324a1-4a22-4032-b7d9-76897c59cb56",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "41890ab3-c30c-4240-a201-4bd1c08e1933"
        },
        "item": {
          "id": "54af35ec-1505-47fd-907f-ba2b02a8caa0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b4f9d2aa-e71d-4005-9de0-7f38380c2e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751353e9-5af5-421e-ab4b-32dfc0d2e23d",
        "cursor": {
          "ref": "5ca6abe7-8b3a-47b1-a9b0-ae3b9adf9c3d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ab54e729-2d6b-4681-abf4-baff6914ecd2"
        },
        "item": {
          "id": "751353e9-5af5-421e-ab4b-32dfc0d2e23d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0e972002-3ffe-4ee6-868f-a3f87cc07840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e419ad0f-47b2-48e9-a2f7-34f3e8ea2bb7",
        "cursor": {
          "ref": "423fa7b0-cab2-4ca4-8851-609b456404ad",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "61a0f1fd-b23b-4773-ae87-91f7fa3b76e4"
        },
        "item": {
          "id": "e419ad0f-47b2-48e9-a2f7-34f3e8ea2bb7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8746ce2f-3532-42fd-963a-619f773fe4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4043d3-dc65-402c-8a72-3de4212a383e",
        "cursor": {
          "ref": "74d029c0-91ca-41f9-b8d6-c6b483ec02b3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "41e8a526-1274-4f96-bbed-a424cb488d77"
        },
        "item": {
          "id": "2a4043d3-dc65-402c-8a72-3de4212a383e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "002e8822-2ffd-4d45-bbb3-8cb84e70d077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f256492f-5104-42e2-a626-64dac1ae5c46",
        "cursor": {
          "ref": "22122e0d-d076-471b-8d8e-f4536a757997",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "77e4180b-849e-4f5e-84e5-56c5296512aa"
        },
        "item": {
          "id": "f256492f-5104-42e2-a626-64dac1ae5c46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6c1a604-47f0-458a-ac2f-fef124b31d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befddbba-5f4b-4f6e-a264-046066723100",
        "cursor": {
          "ref": "e5da72d0-4022-4d91-908a-a116631ef94f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "af4a68e1-5eb9-4641-8bf3-751f2061398b"
        },
        "item": {
          "id": "befddbba-5f4b-4f6e-a264-046066723100",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d215ff78-006f-45a4-8e6f-993bcddc266b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be23161-4911-4bbd-9a25-e103bee4e5ab",
        "cursor": {
          "ref": "863bbe2e-316a-4d06-b00f-2279f43584a4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c32f1e97-294e-4d29-b19b-36ee80902a29"
        },
        "item": {
          "id": "1be23161-4911-4bbd-9a25-e103bee4e5ab",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "adf5d4c9-5478-489d-8e9e-6e37488583dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d703eed-8047-43b1-b218-5c383adb2496",
        "cursor": {
          "ref": "9634db72-797d-4642-b07b-31f7a448f04a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d3c39522-24db-4075-913a-05aac77cfb84"
        },
        "item": {
          "id": "1d703eed-8047-43b1-b218-5c383adb2496",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0927e61-ca49-41c9-b8b0-898dabc60d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6359aa-10d5-4a67-a450-345fa2d9d304",
        "cursor": {
          "ref": "b6d3a941-5be7-4d33-a860-ea5c9a290676",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ea3b3634-0171-447d-8f0d-a063b6238da3"
        },
        "item": {
          "id": "6f6359aa-10d5-4a67-a450-345fa2d9d304",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4fb66aef-7e70-4239-aa72-cbcf44b75deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d09258-83f3-47b5-9745-9871f6c2058b",
        "cursor": {
          "ref": "0c707f25-3979-4e42-aec0-c31e1e3fbdd7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "91b5654b-3c2d-4932-8221-02ad6c1cf945"
        },
        "item": {
          "id": "26d09258-83f3-47b5-9745-9871f6c2058b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2e10c8d1-16fb-4045-8cfe-fad248c8eda4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fa2525-46db-4ec0-8233-3c019a69046a",
        "cursor": {
          "ref": "a6d4dac1-92f3-4ac5-9de4-148e03af7258",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "141bc375-c5d2-471e-91a2-89204d7168b0"
        },
        "item": {
          "id": "09fa2525-46db-4ec0-8233-3c019a69046a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4bd5b954-5932-4a81-b3ad-f48833ad0938",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 583,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede3744-04a9-473c-a6dd-92f2ded3dede",
        "cursor": {
          "ref": "05d16038-b976-4968-9032-0af433c0a8cb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c0315535-9296-4aa4-844c-84054f65c493"
        },
        "item": {
          "id": "dede3744-04a9-473c-a6dd-92f2ded3dede",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b1f09a5-cc25-4924-89c2-10b3fce1d364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede3744-04a9-473c-a6dd-92f2ded3dede",
        "cursor": {
          "ref": "05d16038-b976-4968-9032-0af433c0a8cb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c0315535-9296-4aa4-844c-84054f65c493"
        },
        "item": {
          "id": "dede3744-04a9-473c-a6dd-92f2ded3dede",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b1f09a5-cc25-4924-89c2-10b3fce1d364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f181205e-b409-473e-a873-35e8b5df9ad8",
        "cursor": {
          "ref": "8b8b19d5-68e6-4e8c-8032-2f8fdfd7afc3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "18d24d18-cdb5-4059-8179-f8330ec9b7db"
        },
        "item": {
          "id": "f181205e-b409-473e-a873-35e8b5df9ad8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "91a4c26d-c466-4adb-85d5-90bf974f6f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e02d6c-4734-4ea0-a454-83376c5c1250",
        "cursor": {
          "ref": "9289fb55-e80c-4a57-ba55-61b90b7a1050",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8c214f2e-cd3b-4280-b052-c155bae58fdf"
        },
        "item": {
          "id": "d9e02d6c-4734-4ea0-a454-83376c5c1250",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b3191691-8cfd-4a9e-ae1a-cfc68bf749e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fb4eed-c034-48be-b998-aaa4fee32d16",
        "cursor": {
          "ref": "f6a4ba14-0dbe-4ea5-84c3-6928341b5fe7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a2e13742-d1c9-486d-b7ab-c5286f0a2277"
        },
        "item": {
          "id": "76fb4eed-c034-48be-b998-aaa4fee32d16",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ac280cda-60e0-4a85-abf1-659b70cdd01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af2c49b-5fbb-4cd9-9545-d41d7f94c1bf",
        "cursor": {
          "ref": "cc99b16d-c608-40cb-8e9f-f52a2ab04110",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ff42146f-b91b-42b9-9388-e902976f9734"
        },
        "item": {
          "id": "1af2c49b-5fbb-4cd9-9545-d41d7f94c1bf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e75c1b49-3818-4645-ae2f-fba3b1ed7a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d09343-5683-4967-b56f-0867e874c241",
        "cursor": {
          "ref": "6fb7e5ad-c73b-4cac-b687-ce27e62d47cc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bd0f789b-4b1b-4ba6-94f2-f6f095297c6e"
        },
        "item": {
          "id": "97d09343-5683-4967-b56f-0867e874c241",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c8ba1759-cf92-4cb8-9857-b8401d72e53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a478dc-a8ae-4b5b-a981-136908ef99eb",
        "cursor": {
          "ref": "bbb41a53-aed6-4d3b-9cc5-e6d83aff787e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a57522fb-5f78-44d4-88d3-46bab8325afd"
        },
        "item": {
          "id": "d4a478dc-a8ae-4b5b-a981-136908ef99eb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "424116ab-9685-4f55-8e9a-02dec28ee882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0da9ba5-471f-4dae-ab68-ba0c2e777341",
        "cursor": {
          "ref": "d7e509d6-f619-4c1d-9f4f-417dc69999bf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "922165a0-ac7e-4583-8d9a-3d7c0b1a97dc"
        },
        "item": {
          "id": "c0da9ba5-471f-4dae-ab68-ba0c2e777341",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f0b669bc-f790-4a85-b891-9df3781e082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b016091-b4e8-4b42-9e35-14d3d931bdf5",
        "cursor": {
          "ref": "5d62ee4d-109c-461b-8ee0-d69cd9a2476d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff36b948-d8b9-4780-9ac1-51815d07f4dc"
        },
        "item": {
          "id": "4b016091-b4e8-4b42-9e35-14d3d931bdf5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6596133a-96c5-4cd9-8845-ddf9dd4c12fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f02213a-c481-49bf-80cf-e04adf8dcf01",
        "cursor": {
          "ref": "d10761c0-f44d-43e1-b1ec-dd1b73309d78",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6115e8b4-9793-46c7-bd1d-ced9af026c13"
        },
        "item": {
          "id": "9f02213a-c481-49bf-80cf-e04adf8dcf01",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ea02deb2-65ab-4ce2-9fad-f7c494666ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b0a8a9-de1c-4769-9763-ab9f26867095",
        "cursor": {
          "ref": "2a6c7aec-6c9e-420b-991a-b6c47fb42615",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "587f1970-f54b-4b25-bc5c-bcfa40f8653d"
        },
        "item": {
          "id": "b7b0a8a9-de1c-4769-9763-ab9f26867095",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "50c202a1-4a65-4629-844b-0a2355dace10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3088c855-2cf3-474b-8ade-3ac2f72f84eb",
        "cursor": {
          "ref": "98ba1cd2-bf72-4668-be91-5252b74ae3e7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c42ce41e-cbfc-416d-b89e-b7e7dca2f293"
        },
        "item": {
          "id": "3088c855-2cf3-474b-8ade-3ac2f72f84eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "691052b8-1fcd-4886-b8fa-de4356a0a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f294c6d-bd08-4741-b274-c67ee3c00668",
        "cursor": {
          "ref": "40c5ecfa-4ef2-430f-97a3-f740f34eb039",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "064d193f-a483-4923-b894-4627a6769195"
        },
        "item": {
          "id": "6f294c6d-bd08-4741-b274-c67ee3c00668",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9924ea8a-5d51-4ea7-80bc-5d3b06befc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7f46c2-5716-414c-8065-23d4e42c0e08",
        "cursor": {
          "ref": "70d09780-d604-481f-9f23-acaf3bdddb34",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "86e6429b-6b05-4ad9-89e7-12b77bec1c7b"
        },
        "item": {
          "id": "9c7f46c2-5716-414c-8065-23d4e42c0e08",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f9af1f44-91ca-4750-9138-449f1f832686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb9e330-48a6-462b-8a30-89f0babd1ae5",
        "cursor": {
          "ref": "4db6ee38-d9b9-454e-a43a-ebb3d8699322",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c481ebf5-cc0c-4de2-95d9-e29ab979c342"
        },
        "item": {
          "id": "bdb9e330-48a6-462b-8a30-89f0babd1ae5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "84febc70-f1b0-4f2f-b2b8-3ad50cb7cda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b22d6-72ba-4e68-b4a7-7f113448f486",
        "cursor": {
          "ref": "9c61cb08-caf6-41a8-a2b2-1e865fcb3199",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "76723265-3afb-4f98-953a-a8b1cbe55a06"
        },
        "item": {
          "id": "b26b22d6-72ba-4e68-b4a7-7f113448f486",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a8c73119-a4fe-4dd6-9c05-e3d2d88a2354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b4f3f5-dc57-4f8d-8f84-edaeb2cc4960",
        "cursor": {
          "ref": "f4c885b4-91ff-456d-a70d-9d86ee2f7d04",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c156a0a5-d2e2-47ce-b429-85b95aa475f9"
        },
        "item": {
          "id": "e7b4f3f5-dc57-4f8d-8f84-edaeb2cc4960",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fc1bce2c-303c-446a-8bd0-7161f0f79365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827e3f9a-ae23-421a-8a39-713cd76f5805",
        "cursor": {
          "ref": "b178a9d3-fc51-46b4-bcb9-80acf74798d4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fd3ef48c-f70a-46dc-a2c5-b95e655095ed"
        },
        "item": {
          "id": "827e3f9a-ae23-421a-8a39-713cd76f5805",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73aa960f-9b71-40ab-82b6-e9793ce4f3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9057b06-8b94-443b-baaa-1675f07cf43c",
        "cursor": {
          "ref": "ac72ff2f-7694-435a-ac42-44bb898d8c68",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "862d606c-0ed8-4a58-99f1-605a71419ab4"
        },
        "item": {
          "id": "f9057b06-8b94-443b-baaa-1675f07cf43c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0cc2f3e8-952b-4b05-aac3-3a4cd67ef1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb92396-b8c5-47c5-a0b6-f71f2cdb1b35",
        "cursor": {
          "ref": "4ef3198e-40b2-4c09-ba9d-ed54873ff081",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e705c397-08b7-431c-a3ad-1528cb8c9bab"
        },
        "item": {
          "id": "adb92396-b8c5-47c5-a0b6-f71f2cdb1b35",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f750f1ac-1be9-4b56-ada9-2896648d840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c7139-c45c-43d6-b797-4e798197c66b",
        "cursor": {
          "ref": "a2129960-9dff-48e7-a29e-252f35f4cf1f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a7d1f60-142f-4217-82f4-44559217ccf0"
        },
        "item": {
          "id": "127c7139-c45c-43d6-b797-4e798197c66b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8bf6334c-ba2e-4779-8899-9a6d378488a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef7ebb0-b7e1-4af6-8447-5a85b71dec34",
        "cursor": {
          "ref": "aa6cf850-ae97-4873-a31a-fe0f2508552b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c9fbecfd-e48d-4783-bd87-69c699bd108c"
        },
        "item": {
          "id": "aef7ebb0-b7e1-4af6-8447-5a85b71dec34",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3c7196c4-f05e-48d1-b162-19ce174bc49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5ca215-54e3-42e2-942e-2c467cd7f8f0",
        "cursor": {
          "ref": "6be36db7-ccb4-4d47-9d77-d2ab9bae0baa",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b17dcaa9-7202-4808-99a6-635299bd3e75"
        },
        "item": {
          "id": "fc5ca215-54e3-42e2-942e-2c467cd7f8f0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d7c9d2ac-743d-40db-9bdc-becc91ae0273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078a5ba1-753c-4fb8-b7e4-e1e615cc6c3e",
        "cursor": {
          "ref": "662acc63-7c26-4763-bdb0-e8cd01d034a4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3deb78bd-c45e-4c99-ba6d-55d50baedb02"
        },
        "item": {
          "id": "078a5ba1-753c-4fb8-b7e4-e1e615cc6c3e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5a3dd9cd-55cd-4251-a42a-39c9d23342e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878ae164-49a1-4f7d-8aa1-3e5d166b45cb",
        "cursor": {
          "ref": "c8c49f8b-3d9c-4ef2-a5da-70cf698c5530",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "06cff472-d8ef-465d-9e0c-00de6397d3bb"
        },
        "item": {
          "id": "878ae164-49a1-4f7d-8aa1-3e5d166b45cb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e7341d3c-9c5f-464e-b43b-a755b9140c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93df1d6c-e42f-41d1-8cd1-36a490150f60",
        "cursor": {
          "ref": "7a4a6409-9900-4da4-afea-ce96bde4685f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a4173918-2cb8-4943-b663-3969e35da5a0"
        },
        "item": {
          "id": "93df1d6c-e42f-41d1-8cd1-36a490150f60",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "21327b91-2fbc-4afb-8516-b89af5d9dff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd99db5-15db-4f3f-99cc-8df38fe4f40d",
        "cursor": {
          "ref": "24f9ec54-b709-412d-8d8c-fe3218fbff14",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "394c35f2-96e4-491c-8745-d6b35617df4a"
        },
        "item": {
          "id": "0dd99db5-15db-4f3f-99cc-8df38fe4f40d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d128d98-ce7d-459e-8a8f-129e82cb4abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef82eb-55bc-4dcb-8238-f901328e7005",
        "cursor": {
          "ref": "28ee87fb-67c2-4101-89b0-21aa295728a8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d29b3e66-40e2-4ef5-a007-bda227dd7487"
        },
        "item": {
          "id": "06ef82eb-55bc-4dcb-8238-f901328e7005",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "07ab8926-50d4-455e-831b-220675422131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab438c-9e83-49ab-afea-2619bbd58d51",
        "cursor": {
          "ref": "d3a6b085-5dad-4045-9c32-bc663040f7c9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1df74e70-f982-4fa0-bb8c-1615ec119622"
        },
        "item": {
          "id": "c0ab438c-9e83-49ab-afea-2619bbd58d51",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b68a71a8-dce8-4f3b-9768-2f03c84cfd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19864fc2-ce71-4948-9917-886cfecc4119",
        "cursor": {
          "ref": "f281e634-32ef-455f-b7a9-1f77a6ed80d6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "36c1f2dc-6c77-4ad2-b528-090d6ff1e049"
        },
        "item": {
          "id": "19864fc2-ce71-4948-9917-886cfecc4119",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d38c3494-30e3-425a-ab79-372bde413e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210047ed-af8a-4ce8-a53c-ca8ab1f6a4d8",
        "cursor": {
          "ref": "109bfc23-930d-4a81-80af-ed0811477afc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1f40dc9d-a54a-4a97-a9ed-67c27afeac73"
        },
        "item": {
          "id": "210047ed-af8a-4ce8-a53c-ca8ab1f6a4d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dd3edb68-e165-441b-bf19-91b2922c57bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1ec6a2-6b34-4092-ad73-491772c9a0c5",
        "cursor": {
          "ref": "e80ab305-82f6-4a6b-a575-82af5f85ced8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bba4cc7c-2791-42d2-a96e-731fac9e616e"
        },
        "item": {
          "id": "1e1ec6a2-6b34-4092-ad73-491772c9a0c5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "924477a1-b74e-46d8-8685-27b01ca4d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e42b14-44df-4eb0-85aa-5dcbbf2378d3",
        "cursor": {
          "ref": "e36db1b5-3484-4638-a893-e0189006075e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68dc6915-8c65-42a5-817b-4fac7ed90540"
        },
        "item": {
          "id": "16e42b14-44df-4eb0-85aa-5dcbbf2378d3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95d57dda-a237-4292-a93d-332ea389e007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13ce6f6-8847-423b-9454-477c95f00952",
        "cursor": {
          "ref": "71d98754-f24f-44b5-a6c9-dcb4a3213f58",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ac731657-0188-4354-84d4-e49769709500"
        },
        "item": {
          "id": "f13ce6f6-8847-423b-9454-477c95f00952",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8c12556d-3ef8-49e2-8ace-f0ecd0bfa010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf04943-af5e-480b-8368-96ff09f74c77",
        "cursor": {
          "ref": "768f1078-68a9-49e6-9efb-0233e9dc5088",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5a07d18e-5d12-4997-951e-0a00e2d894d7"
        },
        "item": {
          "id": "0cf04943-af5e-480b-8368-96ff09f74c77",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "59c4244d-c52d-4b62-aba5-c45f3a94d995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99f1a61-f2af-40dd-84e8-6fce562fa410",
        "cursor": {
          "ref": "b2708649-30da-4213-a99b-da66f6233541",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0dd9d482-3522-4d72-aec8-119022cdb510"
        },
        "item": {
          "id": "c99f1a61-f2af-40dd-84e8-6fce562fa410",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29bc48e4-d5e9-44e8-8ba9-3bd67bada7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65136bbf-606c-4b2e-a0bb-eb259d45ac49",
        "cursor": {
          "ref": "3ad4f31a-26f0-478a-872c-5e0c6dc03183",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9297c084-94ee-4739-88dc-c09df78e39bf"
        },
        "item": {
          "id": "65136bbf-606c-4b2e-a0bb-eb259d45ac49",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1e509e46-0c6e-49d7-a1b5-d3edf9265dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef38e3e-a1c6-4169-a03a-74a56b10526c",
        "cursor": {
          "ref": "506946f9-63a9-4ec8-a261-703137aaa8a9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c929bb48-05fe-4995-9a2b-9a867c20b11e"
        },
        "item": {
          "id": "bef38e3e-a1c6-4169-a03a-74a56b10526c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8aedaa1a-7045-4858-8b62-363a93415bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c022b4-95a5-4090-b2d1-012fa2906f51",
        "cursor": {
          "ref": "db8938d7-b64a-4f0a-aa20-8eda57ea27cd",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ae294ad3-43aa-4d87-af1a-a4c277a1e02e"
        },
        "item": {
          "id": "c5c022b4-95a5-4090-b2d1-012fa2906f51",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4f590020-31af-44ba-9061-8710e2d0a741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc56d51-f580-4ab2-9790-10133590bbde",
        "cursor": {
          "ref": "ebb08e43-5cc0-40da-9cd5-8340c67fdabc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "63808265-b5ea-4c60-8272-8dd257bfc41f"
        },
        "item": {
          "id": "ecc56d51-f580-4ab2-9790-10133590bbde",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e107f3b9-8166-418c-826c-85900972c76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03911b2e-8cdb-4bc0-bfac-7cf5c3e64530",
        "cursor": {
          "ref": "b9ba93d1-1b82-4b16-b188-42c281be3c61",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2ddaff98-5b76-4684-a95b-d79ba9379cb9"
        },
        "item": {
          "id": "03911b2e-8cdb-4bc0-bfac-7cf5c3e64530",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7d527fe9-4f46-43d3-aa20-49f7bb69d21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7987a805-9832-4161-9acf-03281ac99f9f",
        "cursor": {
          "ref": "9c58685d-6196-4514-9aef-cfd6cc30819a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "169e8e27-ef24-4b23-b058-a8bc93d0fefb"
        },
        "item": {
          "id": "7987a805-9832-4161-9acf-03281ac99f9f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c8ec3fd2-d0dd-4406-a773-bdc7c8cd76c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205909c8-8d52-4d5f-ba12-6a616aacd480",
        "cursor": {
          "ref": "49210d7a-d2b1-4c40-afc0-374533fda71c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8cdb8f12-191b-4f42-a78f-168f5870857a"
        },
        "item": {
          "id": "205909c8-8d52-4d5f-ba12-6a616aacd480",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f810bc45-1ae9-4cba-a1f1-57c335b99127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d84d43-a496-4429-9e60-b1eb98c9a9a3",
        "cursor": {
          "ref": "af726d5d-c2e5-4166-ac20-939cfdf3908e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "33c148eb-9887-436d-a387-56fa4f45d8b8"
        },
        "item": {
          "id": "03d84d43-a496-4429-9e60-b1eb98c9a9a3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "39e24b09-6b62-4a3a-b615-7719294f5258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d485afb-b892-48ae-ad11-228b9a1206f6",
        "cursor": {
          "ref": "c9fb6bb2-14fe-483a-aa10-78c836af245c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "982152fb-5a41-4457-a47d-de60d2173e51"
        },
        "item": {
          "id": "6d485afb-b892-48ae-ad11-228b9a1206f6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "91d245cb-2ca7-4697-acc5-f756cb1eed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf530b-4135-4767-beb5-288ccc764ee6",
        "cursor": {
          "ref": "b34914b9-dcce-468a-bf3e-e58d034d3e1c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "117ee558-f17d-47f0-a51a-179ff282929f"
        },
        "item": {
          "id": "baaf530b-4135-4767-beb5-288ccc764ee6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4f6630c2-1d2d-4f92-bc50-f2ccb9016210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e0a6ee-1df3-46d9-a8be-3c918c3c1760",
        "cursor": {
          "ref": "f10f5cc0-e9aa-47e1-a7d9-32f3f2f22247",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ba47c66a-1f82-44fc-8477-41e9a200298b"
        },
        "item": {
          "id": "d4e0a6ee-1df3-46d9-a8be-3c918c3c1760",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a24c3a19-0729-44ac-8281-8e969e7f29ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00800b9-37e3-4d62-bbeb-92cca3515248",
        "cursor": {
          "ref": "d68632c3-1426-4ea7-b992-688ea33c1cfb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a73cb47-3556-4b72-966c-0f101c201e50"
        },
        "item": {
          "id": "c00800b9-37e3-4d62-bbeb-92cca3515248",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f057c641-9019-4a7d-bacd-b36902313909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef1302-6432-498c-a10a-917ab094ed60",
        "cursor": {
          "ref": "8dfbc7da-2a5d-4d4f-a79a-7dfbb91b5e8a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "43a40163-4f17-4ce6-abbf-28fc5008894a"
        },
        "item": {
          "id": "06ef1302-6432-498c-a10a-917ab094ed60",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "03055121-a062-4d0a-acac-22414e3889c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd61fe7-7962-4c87-98aa-cfaf8b49bd28",
        "cursor": {
          "ref": "9f854ba2-1d43-4c1b-8269-543528ea2000",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e0974527-9495-436d-9f82-8b1fcf1005e5"
        },
        "item": {
          "id": "3dd61fe7-7962-4c87-98aa-cfaf8b49bd28",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fd436105-6463-4a0e-8b81-39e27b190aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582d6b09-eae5-4e80-b471-74b179c2a657",
        "cursor": {
          "ref": "d13da161-f6ad-46dd-a6b8-dc82f820ae2e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f97cb683-7ee2-4b9d-9257-01e4925a87c6"
        },
        "item": {
          "id": "582d6b09-eae5-4e80-b471-74b179c2a657",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e56deaac-6b19-4e31-a348-da2026f468a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c8a7e2-5278-4de6-a86d-259ad286f181",
        "cursor": {
          "ref": "6e8cf5df-1928-469b-94f8-ee095b5796ea",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e97a71e9-d280-4ebf-9c8e-2de199bac5f1"
        },
        "item": {
          "id": "e3c8a7e2-5278-4de6-a86d-259ad286f181",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2c590251-f06d-409d-b1d2-b8bb7bd8d230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448332cd-5ff1-4627-b5a8-6a5f8116603a",
        "cursor": {
          "ref": "e1467982-916b-473b-8343-526b322b8501",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cc707541-d9f3-411d-98b7-a6648982e71e"
        },
        "item": {
          "id": "448332cd-5ff1-4627-b5a8-6a5f8116603a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1772ddd0-9999-42f2-b18a-740e7e0e4ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f271b-a0a3-4d71-851d-8b62b8bfe02d",
        "cursor": {
          "ref": "9c35e465-1070-424c-8faf-05b443d49ce2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "797f1cfc-0d02-427b-a961-bb7abbf464f5"
        },
        "item": {
          "id": "4e8f271b-a0a3-4d71-851d-8b62b8bfe02d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "edb5b568-c4b4-479b-8bfa-eae2a5ea3554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e018939-eae9-443f-b22d-641cc9b4293e",
        "cursor": {
          "ref": "0d56c7c1-600d-40c0-b83a-d2f6ef955e3d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "966c1e35-2098-415b-b584-e6e885d39b96"
        },
        "item": {
          "id": "6e018939-eae9-443f-b22d-641cc9b4293e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9c8cb292-34cc-4205-a84d-7ce825101bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8839398-fa46-49b6-9a36-ea3b54bada47",
        "cursor": {
          "ref": "015ea55f-72c5-4456-8f05-d0aacd8371d1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "99a5fba3-40b6-4733-bfee-13a8445f7793"
        },
        "item": {
          "id": "c8839398-fa46-49b6-9a36-ea3b54bada47",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b0a996cc-b03a-4f57-866c-619ff7188ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6cfc42-fa5b-498d-a503-04e3692ee707",
        "cursor": {
          "ref": "9049ed54-1b1a-4562-be89-d644102120b2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9629261f-72a7-4456-a8ad-cbf088ebe11d"
        },
        "item": {
          "id": "2c6cfc42-fa5b-498d-a503-04e3692ee707",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9626a599-3b59-48e2-b6b2-11cacb4092fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e98b171-f853-43ad-add5-a2d87c97058e",
        "cursor": {
          "ref": "627a29f7-5563-4397-8f22-70dd956d605d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f304bc79-47dc-4860-b655-23d167f0d804"
        },
        "item": {
          "id": "4e98b171-f853-43ad-add5-a2d87c97058e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d6079aab-8b27-4e27-bdf0-3ab3ad193323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5deb646-8b0e-411e-9a62-7536e32f2d5a",
        "cursor": {
          "ref": "b0c878e9-c2a6-4122-b811-78c6446b57b2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a0c0c281-6fb4-4c3f-95c1-a2eb6b8ea863"
        },
        "item": {
          "id": "b5deb646-8b0e-411e-9a62-7536e32f2d5a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b0c5fe6a-f93b-4a9b-8f1e-7916d3aa90eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff48294-38c9-4b9c-af73-1c6aafefa709",
        "cursor": {
          "ref": "f110c90c-3f61-4e7e-9f94-7452e3c4a4b6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c4b78519-cde8-4760-9293-9fdd5193f945"
        },
        "item": {
          "id": "dff48294-38c9-4b9c-af73-1c6aafefa709",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91714b34-bad1-47b6-9648-6b5de7c8bb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2bb2b8-f7ba-4854-a40b-c0e2c4abc730",
        "cursor": {
          "ref": "b636890a-30e5-4013-9356-05ef323784cf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a9485649-567d-49dd-ae48-d74062a54780"
        },
        "item": {
          "id": "ea2bb2b8-f7ba-4854-a40b-c0e2c4abc730",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "498fc0d9-fbd3-46fe-ba76-75e5fc8dcafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9319c6e-2a8e-4b6f-af05-aa5d213d6529",
        "cursor": {
          "ref": "af54e239-b2b4-4797-ac4f-514641e9d099",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8f06b303-f18a-4801-a024-a31a4c1980f6"
        },
        "item": {
          "id": "b9319c6e-2a8e-4b6f-af05-aa5d213d6529",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ff05d501-0d9c-465f-9b4d-35ce12cc6434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88025daf-d9cb-40b7-b78c-664d8cb17374",
        "cursor": {
          "ref": "a555e56c-3b45-47ad-a2b8-0ed204e2ab4f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "47f03576-5dac-41c4-9335-b551f1bc0d50"
        },
        "item": {
          "id": "88025daf-d9cb-40b7-b78c-664d8cb17374",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "23e56c0e-1010-4f06-9b06-1e51482e73c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f4b188-931e-4813-9715-4aa7f0615df9",
        "cursor": {
          "ref": "cd1efa93-abed-4820-bb78-a6ade0c75702",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "97a5965b-67a4-4716-9780-9eda29cb9579"
        },
        "item": {
          "id": "87f4b188-931e-4813-9715-4aa7f0615df9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7504f9a0-b102-4d09-9425-9d0c6c1096cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210a97c0-b12f-401d-8884-ba201a6d3687",
        "cursor": {
          "ref": "aea82349-02fd-4bf3-b47c-eca083d32569",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ce28c8b2-a0e4-4b08-8984-b78d1789cd2b"
        },
        "item": {
          "id": "210a97c0-b12f-401d-8884-ba201a6d3687",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a209b87c-baf0-4f68-a592-fc8b6d14f718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade89d5e-fda1-4130-b50e-19b2bc942744",
        "cursor": {
          "ref": "de231713-f09e-41dc-bc2c-cb6b8a86acc8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6f8cebe4-084b-45c1-bf12-e1cce781aa66"
        },
        "item": {
          "id": "ade89d5e-fda1-4130-b50e-19b2bc942744",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7325db25-4161-4f4d-b616-cfb2de70b677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcb7f18-13de-454b-adfb-3f55d9966201",
        "cursor": {
          "ref": "347784aa-6a05-4758-8586-21575fa63f4c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1e1e0f73-f9d5-40da-9a2b-b6945307e98c"
        },
        "item": {
          "id": "fdcb7f18-13de-454b-adfb-3f55d9966201",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6d46746f-01ff-4afa-a7bc-3b72a61cafbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f4c9a-0af1-4f0d-bbbf-77766e52a2ce",
        "cursor": {
          "ref": "6254868d-5962-4493-926d-f88e0c1c728d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4a5af840-f0b9-4460-83e5-055432c0e5db"
        },
        "item": {
          "id": "d29f4c9a-0af1-4f0d-bbbf-77766e52a2ce",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dc94f980-e649-4330-af27-e794800d88d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1278cdf-64cb-4de8-9ab4-27c60e5e9f96",
        "cursor": {
          "ref": "8429e595-7ca1-493e-bae3-38d950db5c49",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1a25ab3a-371c-4842-a035-a8fc817b4edc"
        },
        "item": {
          "id": "f1278cdf-64cb-4de8-9ab4-27c60e5e9f96",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6943ae25-e1a9-4976-8653-e87fc3faceff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a104939-3bf4-447b-9961-e562ff466f95",
        "cursor": {
          "ref": "f992424c-f836-4716-a354-26e47a8e6de6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "478a37fa-0f6a-4d1d-8aef-d46577cf083c"
        },
        "item": {
          "id": "8a104939-3bf4-447b-9961-e562ff466f95",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "14bf8187-1793-4600-bc04-cd4669ff67de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df90c1e-9c5b-4d8c-b72d-79b579853764",
        "cursor": {
          "ref": "4f489b3e-4878-47ce-86a0-a9525329a480",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "19639d7e-66f0-4760-9519-be85ca7d6a6a"
        },
        "item": {
          "id": "6df90c1e-9c5b-4d8c-b72d-79b579853764",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e8e93c40-0745-479d-a7fe-056f99fb2ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ebeded-7797-4ad2-96ae-646f7c5bff97",
        "cursor": {
          "ref": "4ba4ab4e-ff64-40cb-98b7-2cdc29f5e5f6",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "abeadb5b-d834-40c0-9b33-4ec01fc43091"
        },
        "item": {
          "id": "72ebeded-7797-4ad2-96ae-646f7c5bff97",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "005c0474-fe1c-4f31-823a-f7e398934e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2936b05c-2376-4f03-945c-8584d52651ca",
        "cursor": {
          "ref": "fd44256a-c166-4b98-8648-60e3f0caef58",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "48367815-f206-4466-9147-04294af90ae0"
        },
        "item": {
          "id": "2936b05c-2376-4f03-945c-8584d52651ca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e0fc8ca7-a2b7-4c57-8d71-87ca0ac088e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732cf762-532f-4211-8c6a-78c390816de4",
        "cursor": {
          "ref": "662b7ba8-8aff-41c8-80f3-5cb35a14c5f9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4a1a37f3-41ab-45d3-9073-3c79cf6b88da"
        },
        "item": {
          "id": "732cf762-532f-4211-8c6a-78c390816de4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "52904fe2-2d51-4e67-b09f-272138b3c9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17881ca6-22c6-4a1c-9549-0e549837c8e0",
        "cursor": {
          "ref": "e1dd7a9f-b07b-4b01-a0b5-8d37206a1871",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "20fcbc44-e5cc-4ea7-af54-262e2ce33687"
        },
        "item": {
          "id": "17881ca6-22c6-4a1c-9549-0e549837c8e0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bdfa8410-ca6d-4180-9097-66e6572633c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b373539-d65d-43ec-92e9-ae44a10b94dd",
        "cursor": {
          "ref": "93fa5727-86b6-4566-810b-049bedfd2fe5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bb3ddafd-f3c2-4df8-8d76-3b30c6c1b981"
        },
        "item": {
          "id": "5b373539-d65d-43ec-92e9-ae44a10b94dd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "521ba93d-1ab9-4125-8c48-57a96dfdb1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ab5b7-0fa2-48fa-867c-2d8f39e375a4",
        "cursor": {
          "ref": "03984ac8-25c3-4cab-9ff8-a15dd4d7dde2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f365e3bf-f4ef-4571-bf09-1768823380cb"
        },
        "item": {
          "id": "da2ab5b7-0fa2-48fa-867c-2d8f39e375a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f1e48679-9679-429b-9c81-83a917ba74b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cb2cb5-c446-40d4-b4d2-8ccee986b73b",
        "cursor": {
          "ref": "f12df26a-0fb3-44b6-a33c-3069843996b1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ece734d3-d0a5-4841-9431-ec1e51ef9515"
        },
        "item": {
          "id": "37cb2cb5-c446-40d4-b4d2-8ccee986b73b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4d28c427-39fd-43e6-8e2e-fdfd1919004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07905752-8322-40ba-bd4e-b34f684a79d1",
        "cursor": {
          "ref": "82558b91-3d47-4946-9fc8-773cdd72dd22",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1103d774-f2c3-4a57-9bba-6fc0d548dd4c"
        },
        "item": {
          "id": "07905752-8322-40ba-bd4e-b34f684a79d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ef9ce061-0f1c-4a8a-8c40-ff0c7d57e96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec73dd3-636b-4811-bbfc-eeb245fc8552",
        "cursor": {
          "ref": "b9c1a353-936d-43f1-b1fb-99e3335c7286",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d0ffe45a-6685-4f52-a2b9-f9f0a9ab07d4"
        },
        "item": {
          "id": "6ec73dd3-636b-4811-bbfc-eeb245fc8552",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7d565ac3-f612-43b1-8c27-897e0b1f9eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125b1d52-6290-4b8d-aee8-0b66bb5cd3ea",
        "cursor": {
          "ref": "55ba5476-b8dc-4ee5-b902-5f9314361644",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e4e7a858-6e41-46e2-aca0-afc16725810b"
        },
        "item": {
          "id": "125b1d52-6290-4b8d-aee8-0b66bb5cd3ea",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "31fa82ef-64fe-43f6-9834-61fe8e067d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bfc1d0-7e6e-4251-bc06-c36229dc2218",
        "cursor": {
          "ref": "d247452d-cf58-469f-9cba-e20fabd978de",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "553f4b9a-e6a1-433f-8947-372598483fa9"
        },
        "item": {
          "id": "59bfc1d0-7e6e-4251-bc06-c36229dc2218",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13b1abe3-a002-494b-b713-19540223add2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed40d2bf-efef-4942-8b24-a848cbe77a45",
        "cursor": {
          "ref": "b20ebfa8-fa3c-4ae2-bdd9-2b07b18cbc8f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4e6e8e51-7a62-4621-be54-ea06f0f8b010"
        },
        "item": {
          "id": "ed40d2bf-efef-4942-8b24-a848cbe77a45",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "285728c3-4ab8-4939-91ee-45c32c017b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4463869-efc8-43e1-84a7-79380670ff7e",
        "cursor": {
          "ref": "f55f9c95-9f35-40da-96a4-978bc9eb200e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "952ff601-b88a-45ca-ba34-38fd817897e7"
        },
        "item": {
          "id": "c4463869-efc8-43e1-84a7-79380670ff7e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6d252556-2751-40e7-b6a0-c8126524bcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014bdee-5876-44fd-b369-5a3bc57175bf",
        "cursor": {
          "ref": "b0e90420-89d7-435b-bd50-469b4f573b17",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "65b7b2e8-645d-4b0f-8953-12ead5efae06"
        },
        "item": {
          "id": "e014bdee-5876-44fd-b369-5a3bc57175bf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a7643750-fc76-4686-8843-069860719f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca9ddc5-c74d-4ec3-9ac1-f8f1ff65d788",
        "cursor": {
          "ref": "75c1ad25-bec5-431a-ae1a-47cc0da742b7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0ab82f35-ca6e-49fd-9755-b7d5101e674f"
        },
        "item": {
          "id": "5ca9ddc5-c74d-4ec3-9ac1-f8f1ff65d788",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "772d50cc-d65f-4414-b11b-a819191db936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a37b2c-48f8-486d-89ee-aae28a96567c",
        "cursor": {
          "ref": "0505c39a-89ab-4ac5-b3e2-d6cbe3412e9b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c695c0eb-5ef6-4a59-92fe-8d32c22ca173"
        },
        "item": {
          "id": "f0a37b2c-48f8-486d-89ee-aae28a96567c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a975162d-122c-49b5-aa6c-464700b5ec81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20194c8-0851-4887-8aec-c17512723c91",
        "cursor": {
          "ref": "1645b0ba-2d89-4ab7-ac9a-e97a2b3cc142",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d96d5ba0-05ab-4ce4-8f18-601e428fda55"
        },
        "item": {
          "id": "a20194c8-0851-4887-8aec-c17512723c91",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d15094e3-e368-4f8f-9b07-a9b776fe54b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33236c5a-0596-4142-960e-14598ac3f938",
        "cursor": {
          "ref": "ae896eda-23a5-43e1-9f5b-d2188045f095",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9aafc67b-068e-4c47-8e36-2c0f809bdddd"
        },
        "item": {
          "id": "33236c5a-0596-4142-960e-14598ac3f938",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fcceba5c-3b52-4098-9102-4695b53bc6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e0fc1e-6d4b-451a-9d65-a5d6feccc0da",
        "cursor": {
          "ref": "49c95df0-11e0-4092-8565-207865725f8c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5fcbd4c9-8a8f-449f-90e0-292b2579e428"
        },
        "item": {
          "id": "86e0fc1e-6d4b-451a-9d65-a5d6feccc0da",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "60f78458-da23-41e7-900f-8d67c39e73b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95052e5d-1f46-4a93-8b31-87c13f4b450a",
        "cursor": {
          "ref": "04b64b71-c652-4667-9e74-b6d44d8dd9f7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2cf441fe-18f2-4471-a8a6-262b1da473a6"
        },
        "item": {
          "id": "95052e5d-1f46-4a93-8b31-87c13f4b450a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c2c1c0f7-843b-412f-8e03-39b931266d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11bf927-da7f-4949-9146-2dd94f31d0f2",
        "cursor": {
          "ref": "c2c93512-cde5-48d7-8011-37133039e182",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "71184331-2d84-46ec-a895-b957b5bf371b"
        },
        "item": {
          "id": "c11bf927-da7f-4949-9146-2dd94f31d0f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7f4b9924-e624-465f-87fe-5508d565cd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a7ad9-9f8a-4613-9859-14ed00353c36",
        "cursor": {
          "ref": "508f54fd-e899-468a-ac59-046bdb5f4574",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b8fdf16-5a23-4f6a-9708-c8cc0f6ddc4b"
        },
        "item": {
          "id": "f53a7ad9-9f8a-4613-9859-14ed00353c36",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "181973e4-5885-46ab-9e9f-f63166ce302f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118b6ba4-5c09-4b88-abec-0b55956f275c",
        "cursor": {
          "ref": "75c7bd5b-08b5-47de-a830-6f82d21fbd8e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2833f0cd-bf2f-4b27-997c-9b9e4f61d293"
        },
        "item": {
          "id": "118b6ba4-5c09-4b88-abec-0b55956f275c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "28a6f743-d2b7-49c1-8f5c-7c7be420545f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2b2747-c732-46fa-be6a-b97306e3fdf5",
        "cursor": {
          "ref": "c845f674-f513-4430-92eb-a55bd9740c0f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "be5ae4b7-f1fa-4d57-8ba2-b474c9c4febb"
        },
        "item": {
          "id": "ab2b2747-c732-46fa-be6a-b97306e3fdf5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a7261672-cea2-4d2d-adc6-0bab5175c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d46e53-e967-4674-81ba-7756c99df205",
        "cursor": {
          "ref": "5bed811f-1279-4b4b-a3ed-936662385a0e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0a781e3a-4ff1-4660-a885-24e01c744567"
        },
        "item": {
          "id": "71d46e53-e967-4674-81ba-7756c99df205",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b10b369e-e495-4589-87d7-68fd85666156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74ab0d-0554-41fa-8caf-fa6978c495c8",
        "cursor": {
          "ref": "761bc035-0341-46b6-8373-c48038abde9e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3e17f52e-7e00-419a-ab66-11ebe5179e50"
        },
        "item": {
          "id": "9c74ab0d-0554-41fa-8caf-fa6978c495c8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b565fe83-d3cd-4831-90c8-b9d7f90ab64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b33d38-c01f-4331-87d4-67db0d13e12d",
        "cursor": {
          "ref": "2933d6ca-5790-4f0a-8fd0-b85dfa87aba7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7487232b-139b-4335-adaf-42f8782199ed"
        },
        "item": {
          "id": "a9b33d38-c01f-4331-87d4-67db0d13e12d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "33bc4875-de87-4298-af5b-65a5ec9e01df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80dbbd2-a584-4297-b4d9-8aa92c18791d",
        "cursor": {
          "ref": "502ff91e-4684-4e00-b48a-1a34cd02e9ca",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "998a8deb-e78e-45c4-ade2-105b62582a19"
        },
        "item": {
          "id": "e80dbbd2-a584-4297-b4d9-8aa92c18791d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "60fd94ee-567e-434b-93f3-2c8f99702a7b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 709,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb8055d-1366-4691-bf2d-7c0484a26415",
        "cursor": {
          "ref": "5a55acbd-deb4-4f27-a177-3478fe4a45f9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73d23858-153f-4a5f-b911-4d7598a69f53"
        },
        "item": {
          "id": "acb8055d-1366-4691-bf2d-7c0484a26415",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3bb691bb-5926-4576-81f9-f362a326de6a",
          "status": "OK",
          "code": 200,
          "responseTime": 761,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "556b9a66-df40-4dea-b26a-f14e70ba6791",
        "cursor": {
          "ref": "8d339427-277f-4435-a8c1-f1de4aded099",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c1f68fb7-f721-4b98-9e4a-660644b6a5ce"
        },
        "item": {
          "id": "556b9a66-df40-4dea-b26a-f14e70ba6791",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c8bd1710-83c6-4af8-b4d7-7d25eda65e16",
          "status": "OK",
          "code": 200,
          "responseTime": 2285,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ace410d-9dc3-404f-9482-2ef31b7546ed",
        "cursor": {
          "ref": "f44fb186-6eec-4a14-8f55-8bad2860889e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8d3c08fa-a849-4dbe-850c-d7eea157a44e"
        },
        "item": {
          "id": "5ace410d-9dc3-404f-9482-2ef31b7546ed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e84d58ae-3085-4cab-ac26-14e37bd92e26",
          "status": "OK",
          "code": 200,
          "responseTime": 2453,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
        "cursor": {
          "ref": "4cb77da4-beaf-4501-b0e2-aee7b8cde344",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7f8f088f-e535-4494-bb60-61ee680dad2c"
        },
        "item": {
          "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "447251d3-cd2e-423e-a1b8-cd65056df0e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
        "cursor": {
          "ref": "4cb77da4-beaf-4501-b0e2-aee7b8cde344",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7f8f088f-e535-4494-bb60-61ee680dad2c"
        },
        "item": {
          "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "447251d3-cd2e-423e-a1b8-cd65056df0e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
        "cursor": {
          "ref": "4cb77da4-beaf-4501-b0e2-aee7b8cde344",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7f8f088f-e535-4494-bb60-61ee680dad2c"
        },
        "item": {
          "id": "256a8372-7b24-4a41-a4cf-f2e62f151fe7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "447251d3-cd2e-423e-a1b8-cd65056df0e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1636f507-0221-4f58-877c-33b273684d54",
        "cursor": {
          "ref": "1c262590-e8d4-4684-a6b6-333824ebb54d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e8a82f6e-58f9-4532-b8cd-4cc18adb517e"
        },
        "item": {
          "id": "1636f507-0221-4f58-877c-33b273684d54",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "026c8be9-c954-495a-aa85-64d9f30b6b08",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 381,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e9b93d-27dd-4521-bb88-d41b8977ab4f",
        "cursor": {
          "ref": "bc2143f7-1756-4027-afe2-6e6b451f704a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c3aec41-f817-4bdb-a554-5197ebcfb5a7"
        },
        "item": {
          "id": "c4e9b93d-27dd-4521-bb88-d41b8977ab4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "68e2328e-d160-4914-8f1b-06b6fe276482",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e9b93d-27dd-4521-bb88-d41b8977ab4f",
        "cursor": {
          "ref": "bc2143f7-1756-4027-afe2-6e6b451f704a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c3aec41-f817-4bdb-a554-5197ebcfb5a7"
        },
        "item": {
          "id": "c4e9b93d-27dd-4521-bb88-d41b8977ab4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "68e2328e-d160-4914-8f1b-06b6fe276482",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7704cf6-a39a-401b-a8d3-bb6c7bd7fc59",
        "cursor": {
          "ref": "130f4d5c-a5dc-4887-8b35-270fda77019b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b560cc13-2ae3-479e-8e9f-875a4bbfd33d"
        },
        "item": {
          "id": "e7704cf6-a39a-401b-a8d3-bb6c7bd7fc59",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a28ab25a-8c02-4338-8937-4b47ce597c78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 583,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f99de6-fe56-4619-bb57-458d748a9772",
        "cursor": {
          "ref": "39266952-9be1-468c-9ab1-0952d980c46f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fab068c0-9d82-4a42-92a9-cff630467f08"
        },
        "item": {
          "id": "10f99de6-fe56-4619-bb57-458d748a9772",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "30fd4fc5-6614-40d4-aa49-9bca3708cdd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f99de6-fe56-4619-bb57-458d748a9772",
        "cursor": {
          "ref": "39266952-9be1-468c-9ab1-0952d980c46f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fab068c0-9d82-4a42-92a9-cff630467f08"
        },
        "item": {
          "id": "10f99de6-fe56-4619-bb57-458d748a9772",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "30fd4fc5-6614-40d4-aa49-9bca3708cdd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b7ef49-439b-4041-9bcd-e9aac131fa0d",
        "cursor": {
          "ref": "19701a24-7c52-45d6-a694-a5f438f8eb8e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f3b5f753-3163-4b14-b931-365fa15327a4"
        },
        "item": {
          "id": "19b7ef49-439b-4041-9bcd-e9aac131fa0d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "45c178e2-eaa0-489a-8f34-60fcf95981eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 601,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}