{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "36dd7b54-51bf-4166-a7bb-de9105f8252c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4ce1aaa9-56ca-4bf9-843c-2c7abd176fe2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e074d705-c889-4234-ad5a-11db94cde7d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f234d03c-19d9-47d5-99c9-2244c9074860"
                }
              }
            ]
          },
          {
            "id": "c76b6e44-b7af-4bd6-8585-f7ffdfffaa0c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f2a65b6-7eb2-4123-9e93-6f7977511ee7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8925849c-01d7-420e-85dd-652c5420e314"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cb020aad-f6fc-4734-bca4-62c23944f9a6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6f7f760d-dd18-48de-ae8d-5ba8dad1b237",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ff96902-ad3b-4883-86cf-9d4f7d9312ae",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c9466b3-3364-4ed7-9265-1b8735d8d807",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e30d8cc-1faa-4d04-9868-254a4e7175ec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f1f436b-1681-476e-96fa-23defbda0555",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55242f9f-f17a-4a4d-acb1-e6ceb43e82e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "722f7a49-7fab-4cd5-b9c7-fc90b2da5102",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd00f22a-7ebc-46ed-b1ba-d7515d75ba50"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a339408a-ae9d-45d2-b60a-3c646b577931",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "943f7583-73af-4ae1-abc6-68971c950732"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d75a5d2d-2486-4581-8c9b-f163c34e3ba3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d441cf59-ae05-41b4-a6cf-aec417a8e6c8"
            }
          }
        ]
      },
      {
        "id": "fc755203-78eb-4279-8a1d-aebfb1fea23d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9b660ab4-ae25-4f42-9416-6ef3275d5bbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "987b4842-2655-4aa9-871f-928d490e69fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc3ab2d0-2079-4c26-adaf-9d593dba4af2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87880d29-fa67-4ebc-8592-3dbe10fe79e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d22508f3-0f81-4249-8d15-df20685d024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016c0576-b999-4516-94a5-472d0eefbcc2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185b4983-20ca-4890-959d-95a3dedc4140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cb55171-4bbe-4817-971f-f548605ef876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54b87f6-e26f-4d1f-a7ed-1b4bbb87c74f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c270d14-87e3-40c4-9826-2ebc809bd0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5288236-be22-4c34-a691-970850c380d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "212523fc-203c-4950-a140-0f4002d471dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2620b75-2f93-4171-a077-79a0efaa01ac",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48cfce7-0113-4d0f-bd3f-39acd86f3d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c7814b6-873c-4058-8b62-3d09ce2865b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d809e308-66eb-47ce-ab63-d67cdd584efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517adcb6-11b0-43f5-8968-6ab13d863780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc272a4-1475-41f7-92b9-8217f56ad666",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285a5472-a879-4002-810d-33e866c349a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07e05aac-9366-4d3b-9c5e-1f800caeaf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7770018f-2fd6-4e8f-b4a0-cd86894a15f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "38a23b27-bfff-487c-8561-edf4d9623824"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "238f8baf-6ded-411d-9b76-9643269215bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce6a586e-f396-4436-96a1-ec66fe0aa599",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9ed8d1d-3d82-45e7-9296-bbd280989d33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b4406128-a208-4c12-b9cf-03d920b82ffb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85cf9f46-bc6c-466c-b8b9-40a6dadc94c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0db6fd6b-ed62-4781-ba9f-1c2001724e5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e678a1e-87d2-47d5-b14c-f7af5339aa5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "480d2c00-1722-458c-9e3b-54925c9f0450"
            }
          }
        ]
      },
      {
        "id": "d0ffd276-a25d-4aff-ac4c-d4cb6e7bc6b8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d276fdd1-6ed1-4b67-8cf7-da4cb0492f83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "253579d9-941f-4f12-b93d-7b170673b575",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a981fff-8ae6-4d2c-b7b4-72ba3dd058ea",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e3f605-f708-4576-a9de-68d60f96a285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92df34-9b24-4b7d-9a73-4d299e927104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcf3850-9308-4ec2-a498-0692464f34a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f267d653-9a55-4ed2-98f7-736d1e372428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53626a2a-7d45-4bac-9bb6-6d1b689e66ff",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fa8152-5f50-41b0-ac56-32425051e76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60126f5d-c12d-41a8-bd6e-02ff1b0e2315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e20e99-67bb-4f93-8ae4-76b5f63ebc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eaec2f2-1813-49eb-8fd7-179dc2601d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a529d50-a57f-4fe7-b736-c6331a581f7c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeefe77-dca5-4a96-bf30-fca1e5f4ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0565d6e3-689b-4e46-9d0d-8bbe9eac131c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658519a0-4842-4479-af7c-d189cfdd6f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7645c092-423d-4d53-84f7-8a8603561828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dfad39-ca12-4f7e-9cf4-13d538192d40",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf9d3cd-69ff-40de-aadf-03607cbee021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2006b974-8e59-4540-84a7-e6c96125b733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688f9151-e218-4301-9a2b-ec2322d2657d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66cee933-ea96-46b4-9919-b907252d293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d4bfbc-418c-4f08-97f4-342bddded2a9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fd6d2e-e815-4cfe-b1ab-ea0a9db19c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e186f542-279b-4b10-9530-33762c22a7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ff2658-6c42-48a3-8953-ea5611ab8c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "311934f8-e1a7-42e7-b4d2-4d4c00ca4413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5342a3-bcea-4243-b081-afae78d97e06",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfe0b39-d942-4396-b95a-b3862a695173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94153cc-5fde-485c-bcad-5a404e9d3d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce425020-4f68-47ae-a3c3-5f0e0036a852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e38cbc1-8140-4522-a6d0-9b512b3d2c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b293ba-7057-49bd-b6fd-109e2082b8ac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8acba1-2ad6-4d2c-9a85-3cf8214aeb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca5da38-4dcc-4e0a-ad7e-48966a6eacb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd3a151-e67d-43f9-a5fa-d1ac4f5bdb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adc39a24-db6f-4b72-b54f-6150b87f9e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3380a224-9f0a-4935-943f-e310d869723a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6da179-d8ee-4dc1-9826-ce00bcf0b2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9f0eeb-32aa-4bcb-b8f5-0aad71e5e493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f08ca62-2404-4dce-be59-da1908f73c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc1dd90c-b2c9-4c16-a162-1bf8f59cb601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215d6f9d-1deb-4fc1-a852-d17b70e4845d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ebfd61-d38a-4597-816b-824270cabe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026aa2d9-4c19-4615-96ab-204261014fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843f4036-06ce-4a9e-9b58-718b3eb2730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c4498f1-656c-47ee-bee8-82f391df61d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7e053c-d34d-4f11-97aa-5fe8e8b8febf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b252c5-eb81-48e9-8e27-8d51080b2da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dfb930-741e-4386-8141-a96f95545b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f46abf-fe3a-47e4-ac85-8f97978b1394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1bc7688-2431-4a93-b0b1-5173d424787f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8959dbe-ec39-4d25-b6a2-c12880a389f3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2ebe37-7c28-49a9-b30a-d6b4333868a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd0a9cd-d5b3-453f-8216-dafe8c0d7661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94237c14-ab2e-4e36-8d37-711ae1211f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5697545-7d1f-4f59-b845-0c24bb797448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e0c407-d5b1-47b7-bba8-618f27b6e52c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde43014-d9c2-4a56-93fb-6e7bc30aa8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cb07ef-40a9-4fc3-aa5d-b4cb83e994f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9179bd9-1160-4b50-89f5-8abe9565b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415c153b-6669-42b7-ac5c-de0680a398f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f01bf7-eb4a-43a5-b957-da352ed09254",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924af7af-9d1b-44b2-a24f-206c70a06a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1449c00e-7b53-4b04-95f1-81a3fe2b6599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c66482-00ce-4afb-ba6d-e47dde59d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8e51eb-1684-49f2-8e20-2f677e6ce752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0677264-e24c-425b-88a3-d8482c76a37c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6780d9df-fc19-4188-8718-95bfaf0a8800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffeb89c-61b0-425f-8a1b-c3985b73e104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66be2f82-d251-4ecd-9011-b594a46b762e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33201746-7e4c-43ed-aeb5-b5262abdfbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7204138c-f294-4a75-9062-0aa0add685d8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e541e9-9782-4588-ab1f-1c1af28456b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6910a3e-13a0-4b4a-859f-580cb631e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04ea20f-a18d-43a6-b47c-33eba87fe416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eef2f346-701d-473c-9996-2350fd310fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c3d809-3cdc-4477-8f31-e90e2c502d43",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd359c87-c72a-4243-a0ab-9d4e1b921837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81df23a0-5c8e-4701-9df6-ecba6f7d321f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2376e65d-4c44-471e-ab5f-533de9bea92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8768fe3a-4924-43e7-8ee7-accd64d73edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a92cb3-49a3-4c9a-9bc8-fd09d2df0d3c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d393feb-c349-4d5f-97ca-9806ca9fc372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c865c97-a569-453b-ac1b-a430cfe82d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5a66e4-e21b-40da-9a03-9ff1b182f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe41e67b-e7ed-493b-9b5a-b846d4b1a67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad25ccc3-9419-4dfc-b4b7-75cddfb9af8c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78436af7-e763-43ea-8074-4a5a66262ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1f2e5c-915b-42c0-afb8-079e6520ebea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c36b1-da33-420f-88a1-3596d9f37994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdce6698-3448-4f44-ab58-50cc6cc40c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a8c653-2363-4653-b1a5-43d3310a1536",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52734dc-1895-4631-8f49-a5aeee47fae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105b7ab0-9e3a-4281-a1c0-15a4554ea348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9319e544-0729-446c-ae0b-e1bc2247ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a7f6fd-7d80-45b2-af0f-4166213e83b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360ef754-1091-452a-89f9-d2bf17c92956",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e3a9b3-7cdc-482c-a366-931b40fd3eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007ee828-737b-4deb-8f0f-e592e574eeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7373ee53-4823-4732-8758-7f006fdab7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9ccd48-16dd-40bf-964c-f40d1667d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4684a2-4780-470b-86de-6f50a9d96c9d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836b8d5-41f6-481f-9aae-6cd0960b5161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdd1804-72a5-4da0-af9c-eca64115362b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964d2f19-001d-4884-b752-865655ef6ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8fa2c8-0fd5-41f6-9d0c-0713ce869f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8d8c27-7ed3-4715-9004-f2d77e751102",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cdf3ad-7ea5-4d74-8e8b-bd9565e3cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d745ff-d037-4e07-a2b5-76e675dc7b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb2d2d2-d824-4e11-b157-25096809cee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43860d4a-3912-453f-87fb-5d91e10f8a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891e5e0d-7103-4e20-9fd2-68743d6e9572",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf25037-4d1e-4e48-9e92-3a5609be2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1bda06-761c-4784-9836-b77803225f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6484fa7-2ca4-41ba-80dd-6a3747aa22a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3a6c8f-5702-4559-9199-a89c8383b6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdb7dc3-f4f2-4ba4-a76a-485e29a1ff97",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce8f436-aada-4028-9302-0165965921ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0556cfb-0598-48a0-ab14-3dee054b8bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71071c69-faed-47ac-b705-da9a063966ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2907e60-3165-4a84-b2a9-d625fced81a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c188741b-ed98-4d42-9462-9fa99f262413",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0c6d71-d0bf-455b-a0e1-e4741f45efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c8ce0d-284e-4ad0-aad6-01ac50925cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbd7ed0-82a3-49f1-9942-a306c8c02a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc97334-0b92-49c1-a8a3-dd59f01b7803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e92ce95-69fd-456c-8a34-d16a614eee4a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a779c-b3ae-4d64-94b6-cb8d05f06587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110d0a1b-c0b8-4e3c-ad2c-7d143501cd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c411081-8fd9-4d07-99fc-464325dd7388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be79de7e-5099-4a76-b752-a11a4700f240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630f851e-06b9-4aa1-8eef-e6f903c1c7b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e357da87-f57a-43d3-8af4-3072a59f296a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2a8cf5-9ff7-4aa5-994a-774776ea8db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4947640c-08bc-4f03-bbb8-b13f92c9bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a860c84-e639-484f-9b8b-3c42e16005db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fafa98f-b10b-484c-b718-23f3abf251fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01402d45-7fb2-4f33-92e7-f1af67516dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77324e4d-146e-4b07-a472-c674db580f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd99fab8-35fb-489c-bddd-d3b5899f0646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a094fe-73bc-48a7-ab34-262a843fdf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0364456d-e939-47fc-9130-ec02cc8235e8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74f73a8-1fb0-46d4-8b4e-983af09914e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df368af-6a3c-4f0f-9c82-bc1a0755d450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f053972-b5c9-44e9-9a8a-97ea351841ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b104eb47-a5a8-4c4a-865a-d1ae7651d083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408b523d-85bf-4a2f-9c97-53b5ba58f078",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ced8d1f-55f5-4f79-a3bb-03806f510c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd6dce8-57a4-4f60-82a5-ef31a48832b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f05186-4624-4844-99be-c0f225ec8052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8370f8ae-6842-4c8d-b4ab-bc741477162a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca405ab-56a9-4ccf-aa33-6e3193f41bf2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e044dfa-b656-45b9-b4ef-37074fdab5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990bdf1b-50c3-4d99-adbe-a7574d5b1a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c02d531-9e0f-4764-a3c1-06ed37106160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "556408c3-adb9-4133-8e78-26600c2fccc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe36ba-c58e-4bb9-ac60-a34fe2dfa6a1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57634a36-a5f9-4251-897b-5ca47baa9f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c71313-5c60-4cf3-b463-e49aa2275df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42438ad-5422-478c-a651-4d6c0ca4d808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac19a92f-0ab1-4695-a7f8-679d8140b54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fde082b-a3df-42d8-9458-a35ac3b59afe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2af94e6-86c6-4966-9982-c1e1ab3a2a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640d4301-7232-4c78-911f-10fbfa4211c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f396888a-f36f-4dd2-8a89-19a4a582ade3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d897f15-5d2b-46cd-a407-55cad527e978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d662fd2-ea8b-47eb-9481-382857f80041",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d24bb09-b963-4bb2-b459-dd774d46a5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ee44a2-a084-43d1-8a3d-f20208d76df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b95136-22a3-41fd-9d2b-cf148abc31dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8d2d55-9981-49cd-a5cf-58333c182629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eab8e4a-c054-4f34-b1ab-056c43c49591",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a317a93-703b-4206-9f1f-f18817e812ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beb560d-4320-471d-86c8-66d2b7e9ea54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33408ee0-f271-4ced-8fa2-1d6e4a6b2d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8de18a57-c4c5-4a57-9a3b-3e164d2ab73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1bb135-7a92-438d-be22-054f203dab5a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0aa0cb-9faf-48ff-b018-b157e0adb64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17886f05-6101-47ec-9b7a-b04331bbbd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f23237-6290-497b-ad35-d1a91dcd2d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6aefc4-b6a7-4d27-9ebf-f35a48fcbc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1d98b4-7ba3-4997-b8d9-8b6a0c6507a5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab28e25-73d1-4d2b-b385-08c984106c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020a44d5-9b31-453d-9027-5bee16461597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964b192a-24db-4294-a079-4e814bc3d5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef5a42b-090e-45fc-8ada-a8c08d2fdd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cae089-2265-4690-907f-8bcd60e0b4f8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75054c2a-1641-4331-af57-69fe4cac4948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00f0781-6f9d-4eb6-b542-e6e8f2bf715c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20178213-5786-4107-92e9-f25ddfb10627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d49338a5-e961-4227-a383-344c8d9743c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cedd0a-83fe-41d6-beed-d3b0ce25828c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e8343b-72f4-41c7-80ff-0108742436de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb9d67a-d30c-497d-b277-229de223a370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32cfd69-5f50-4088-a953-d0eadc035fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98be7073-e516-4738-83ab-667268ecdd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b58510-2779-41c8-9d87-d24339fac97b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caac50a5-d9ab-4e77-a253-d11e3643b8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa49b121-7ac4-4825-958d-1080ed661027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969b5ad6-9b6c-40db-97e4-96af3dff88b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b30fd51-0b29-4fa3-aed9-e5eef8a427be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61db1b03-fa4a-418b-b529-84eb75ca1d6d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a4324-b7ca-43b0-a4be-f0d20b9d7050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4822b8fd-0d30-44cc-8afb-9b9c553278ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3ac6fc-47e2-45c0-a871-7233da87b880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e362b7e7-12c4-422d-be8a-66c42a1a3626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fae60a-afbc-4aab-9b96-eeeabe437753",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2727792-7cd5-486a-9332-86775aa5349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f73c18-c876-4c6a-a16a-90b3f4b5e936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efec4875-6fd8-47c0-984f-c8e48030db3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "843840d2-d59b-4909-9d01-8d2bb63a10cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3515b5b8-43b5-4877-b147-c7e37a255c15",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d659d9-1ec0-4b8c-a076-74d16ea41eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654d9c75-1f9c-4c0f-9a61-faf92b3ee31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674065df-43be-4d56-a3e4-eb69133e0d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fff81f3f-825b-4fe9-b4cb-c574f9358adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84c399e-ed28-47d3-97d7-40c6d868c255",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543e2411-d4f0-471c-8953-e05c78da121e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb32756-b26a-4d38-be3b-c8bb0b1628c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e91dd4-4f94-4efb-aa47-b26f38881715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a7e4d1-1e04-46cb-a122-c24e83399e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbad377-31f8-408b-8b86-9ac069300dd9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8419854-aeb3-4984-8221-54e9fed5ecfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c28ceb-6155-4d4d-bdbc-09051026f9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4ba6f2-7fb9-4d4d-94c6-9fef0de933ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6238767-c53a-4c44-99ac-058e603b27f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688d6464-d3c0-426b-ba7c-f2eb67322267",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abeda34-85a6-4deb-b76a-32aad4fa81b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c27994-e5a1-476b-9996-c1f3e4adb6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424f08f0-ef9f-445f-85d3-13c9f6aefc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54bf759d-30f1-401e-9ec1-2e0a3d7b48b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd54d6b6-fda6-4bfa-82bb-93d345a4cfe4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a061ff-7b56-4d12-89e6-ac768825ef79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c730326-e909-441e-aa29-e884d357e199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0700e7-6ca4-4514-baea-41c6b0f80073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "114915a2-2701-4760-b5f5-98ca56f97cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd9af9a-98ae-4994-bf1a-01d6f4ac078f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fe03da-2969-4545-870a-e38bc3f65f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4facddd-7778-45c4-922d-c68c2138c3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bcbbe3-3625-4486-8718-91d9ae0b9c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d53ef6-6463-47cf-a85d-929b35c499aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed314e2c-2437-4e01-aa7b-5dd16fa0c292",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ca7d6b-1047-4f59-9bdd-416bc782e180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6595daa-e70a-4dc5-be34-cfec8e7e2d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b62de2-4a11-43ba-9dec-544d6c27b77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d9688d-823c-4e55-a722-f01b8653bcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13389eb-1e2a-4498-84b4-145db0501059",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6373b3cb-adcd-48bf-b3d1-808d2fd78417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96e8366-e6fa-4801-b4c8-e0e464ae88cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3380f8aa-8dc2-431f-b022-837edcecfed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d785b1d4-d0fe-45fc-901a-067cc87be878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44249dc1-b9e1-4a7b-a648-4d2927fe804f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e02d692-ba96-4cc7-a413-839c69c11e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2197de73-1315-48fc-88db-a9ff8d473c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ff49f-d39d-4f22-83aa-e30283a73a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7c549b-b54d-494a-81d2-292c8972d3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef2c92-b24a-4b15-9cd0-b3d476179bf7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b99d8b8-83d9-4304-bac5-0fdcb37993e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e479602-4722-4605-8f5a-16de2c5d972a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35856af-9ec4-4d29-ac3a-4fa3572d9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a27a93-c152-4b3d-8dcd-9a5132b26af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d59d69d-00a5-43fe-a84a-7620907b62ae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7c5d16-3463-443d-80c4-211e6696a77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55316e5c-08fa-46db-ba65-4746f7ba341e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5e85a6-dd2e-4d4b-811c-1d5d00c2a290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00e09ec-4425-47b2-8341-d00cf0e1c184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17394db6-a793-4e17-bf8d-c635e74a60ec",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab85072-ed59-4b89-928b-8714cfae7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b1d8e3-7d79-45df-b2d7-99366bedc65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd157a49-4e5f-40b1-874c-e420809f8850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7619e2-74e3-42c4-baa3-3eada60c481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ce55ee-f06f-43aa-ac4e-ea60d6f464e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b66361-bd39-4b94-8743-fb9ca9408b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffd0864-45ed-4a37-8e4c-2834937b7c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1006c844-c8d3-440b-abaf-416fc58e9b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30d48ef-ed6e-4341-a940-f65b2f1de4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa0ede-05e0-4df8-95e4-5ad4c2c80137",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533c8b59-817c-4012-9ed2-149b62085ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbfe143-16f8-4f44-a6fc-90e1b32d8474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c923d76-b041-4a5f-891c-45cdc9759630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "12a4d1d3-1fff-4045-a463-dafe839640cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a445b-83af-45b9-befe-6b7e933b3e9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d85662-944e-498d-adb1-c1b21b884d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45cc139-f3ba-42f7-b275-31915ab26761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8da0d7d-cead-4da2-85a1-5aefd0600d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02d86fe2-96cb-400a-9b8d-961bb4b561aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f577a1d-5813-478b-b9f2-149d4475e434",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52dd9f5-9527-4ed8-b7da-982add4b38b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f97a45-8404-4648-bded-53148bb77dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af0c38e-4a01-4f5f-9aff-7ec00ba85e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19f46923-8066-4146-a39a-74b8c4e44c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813c1967-9bf0-4d52-93e1-98c31d8cb483",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7c5666-6a4b-4dc9-913b-3f02bfd430b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe03302d-dc6e-43ee-81c6-33ff5aac7cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35c1ee-c9b0-4a13-a40c-f230514298d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eabef5eb-7456-4f1d-9873-cfbcaa7692c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530dba4c-4b19-4ba2-a569-0d6a38b4868e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c7215a-1752-4dec-aec7-8fd94747b149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d4a9b2-2f5e-4d26-894b-9e7d25f5781f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65baf89d-eae8-4194-9930-025339de76f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4268e08b-d231-4dd3-a865-254f9a088070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb7859c-296d-40a8-8c05-e05f7827a2b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0e2239-66be-42e6-8d71-f54319dfb6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37c0f38-168f-4291-b261-0834549f1ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd309529-d3b0-4ed2-ad9c-17f657e0694c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b54a786a-785b-422b-9486-ffe34cb5565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb63021-7209-43c1-9998-b1972479d1b5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870f10a6-9ee9-458a-9df7-5ddbba803402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750b75c6-df7f-48d4-8a5d-37ece4371f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05083f8-78b7-48e9-bdaa-6402cf7a90a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaae0ab3-c6e6-4598-9a98-ac10e23d5a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1cd62-e81d-47b3-86b0-2b20c392c05d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9d5c83-ddd8-440f-ad56-f715c74b6769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63e0605-ebae-4ac3-9d07-7ef756efc267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3261876-888b-48e2-99f9-3534d51dcd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2510133d-87de-4498-a7a8-b2c6707887b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7213a900-62de-4ab4-af72-2cc29e627fd2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50736c9c-4335-4d5e-ac57-a8ec0f4d74c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a01684-e9c9-4a4c-8a5c-3def530291d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0899cb5-2a5b-4fe1-907f-c69f6e97851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34df4342-b987-4062-a1f5-8d7357f69989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30b714f-8271-4ec3-91a3-96d0d53c9657",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8dada8-a1f0-433f-9550-3cd91b86a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e73cde8-d00b-4aa0-a53c-0f71468beec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5e918f-e7ea-4edf-b8ce-3b4702061291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e36854-44e4-4347-b35f-d41856d53ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca6ee36-bfc2-4fcc-a783-a735157259e0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274ca927-b5d3-4b94-b223-2a0a63219f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8a25f-943f-467a-baf8-ca49329ceb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b6ad1a-802e-4f7c-b27d-fccd45338d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d95e62a-3dab-423e-b2e2-b0c7dab721af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e8b478-d33a-4d77-8a68-93e0a54d0738",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc717995-f95a-45f3-9d32-c201dbaca8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9f73ec-2b96-417d-aa34-3c9c4f7f3d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bded24-8d6d-4597-ad50-bccf82ab5467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1e37e1-34ac-4400-8d86-9fa3a7330433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd729799-58b5-477b-b0d4-ec6244f14f32",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce72dbfc-87cb-4dda-8fe7-ab75ce160a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b1fb03-9a42-45ab-b2cc-e23a2db8534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c20624-e16c-4aba-8fbb-759155af6add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05843cb-0bf3-4596-bd94-1ba2f3a8c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2245905c-aa58-41c5-be86-65741db1ece5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6962f311-e47e-4e53-b925-3ff83d12ca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502b8552-a795-428a-ae60-79b2a56cd7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb62d8a2-7f7f-4f07-a22e-34d5558cfc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c69d49-b778-467f-89e5-cc5cfb2329b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cdacd5-ccd6-4794-b4df-045ff9b1f3ad",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16277c8-209d-47e2-94fd-68971fef10dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1647683-b4cb-4ec0-850c-0f92f3db4112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8429448-a1ab-46b5-b6cf-9341f8624ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d21fc9-1b58-483f-a623-1db5a6daf292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a657a096-e239-4eb4-b8fc-ab9c70171c68",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c49a287-21cc-4260-ae78-a483bc14f3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9e5403-6250-4564-948c-26e2aae97304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b1168f-f744-489c-a9ed-4adba43fc227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fc856a-d633-4fe4-a2ea-b800d860774c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcad15d4-fcac-4595-accf-e402d180fefd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715f9f0c-87ff-4058-9e49-5cd0f924b01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03455d07-da35-4b07-b414-cfa07a6e5800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf81b88-a4e6-4bcc-af5f-e3391cd5f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5126d4a8-d276-472c-9a40-29350974f896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c00f631-873e-4ad9-8ea4-1622d1daab36",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7e8722-9cd7-482b-8030-75c99c6dd374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d428a4-0dab-4aa2-9be0-422b8c1c8e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353b649d-18a9-4efa-9bab-71b17a223347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19e5ae33-2e67-437f-93f4-ec84ade057dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad0d059-3003-456b-9e6b-c959fa6b25f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a127b532-595d-4cbb-a9f6-e964c44301ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad6220b-57f7-468e-b7b2-f4644729fc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2168a0-4112-43a8-a6d7-2d15843f9af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0207d67e-231c-4e73-a3bf-a430a86ac32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259541d2-9a85-4331-a4ff-83b8c4346dc4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624e7fd9-2a1a-4f64-a494-f606fb90208b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c740b67-6a86-4ffc-a689-81b0fec90959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402447c-5852-4ead-b6cd-7396102f5a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6e64b1-c4a1-441d-9f68-f2666273cfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6202b18e-b8ff-4faf-a45a-c1738aa81095",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f77c2-086d-4e67-8b47-03298eff5146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4e5ae2-163e-4d5f-bf5b-e77fee52a31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b86a098-de2e-466d-b5a8-3bdd0275c400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a53059-711f-4164-b4cf-24b0003af07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68971b4-2226-4712-9168-963b05d01213",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c4d213-466a-4e21-af66-dfe5cf837678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296ff31a-8d67-43e1-b81b-719cbb04a337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a03e753-23e2-4fcb-93df-76ed26813b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5218286-dd08-4727-9175-09b4994a8e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ceef3a-5093-4ed5-9148-533e9cb97e3a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bca610-8240-4309-88cf-4b1c4e9e368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd28dace-777e-42ff-bda1-94e7a27e90ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45248866-6b0b-4f5d-a5f8-b03571a4141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4f1912-ae70-4041-81cf-167930b2f476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bea604-87c6-4529-99ec-8d99e84e290e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dd374f-a015-4c81-96c9-1caae3902577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f536c42-9ff4-4798-845a-4967cb0ffd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e7b9bb-8b12-448e-8e72-746581c44d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2593fb-57f6-4752-b253-7ff5b26835c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6deb5c-3890-4d00-afec-d161a282681b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9633a2-3ef9-47b5-bd4d-23e7405995e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17e6842-fb51-4274-9b1f-8a7e706ab2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfadbe6-2dc8-41b2-886a-1585f2f6cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e659a9-a3a7-4584-9622-189306411493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6ba9bf-5f6d-4430-9783-cbf07624ab19",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1c2d41-1674-4cd5-864a-8e757932b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90782909-c982-4915-97e4-275c765b9262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5247f5ff-cd55-4d81-9c8b-960947f38034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ff735e-9990-48bf-a320-260d341e6d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc13495-bb4b-4a5a-bb7a-370c104e7621",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98e6f48-ec03-4718-9e42-aae436bb30c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bf5b80-34c2-4373-b203-56225bf598f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9a0afd-bee0-4513-8d7b-aa77f053fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb340c8-19d0-4055-a692-6e329372a6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c759f-10c0-4610-9ddf-76a4e4d9cd68",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2662c1c2-850d-41ee-afd0-5dced464892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1306d4f-5b7f-4a59-b063-d3d338beadcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f0be94-e755-4342-ab80-b6ab858cac05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a014d365-1a8c-4220-ac87-81165d25f6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15febf2-0f26-472b-baff-8ed86e63afb8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7998768-b92c-4dae-b0cd-4ed8be66fd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a65490-6505-459e-b16e-a7784edf1022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1328113d-7e46-49d9-ac15-53040847c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64bcd9b4-be3c-4d05-b790-c88751f0f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69964a1f-743a-4f72-be30-9eea40cbef8d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab08448f-946d-4e71-b587-de4587878605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d853b101-79cd-4cf6-9b2f-24f505300718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249a86ea-6138-4cbc-a230-55540aad52cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "413043c5-4178-4c2b-81cc-729b98626e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaa6200-f789-4f69-ba59-00b12589bbfa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5371ef67-60ab-45c9-bb9b-cedb329a7bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65a57ee-14d9-4466-a715-b37b49744e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8d680-620b-403b-9a79-f2ed6ff752a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e76447ec-ab82-4a5e-a79a-29b391d55cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888a92a0-656f-4b41-8b7f-3663f613f0f2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24fed63-a1e8-4e53-ba0c-3e75d7ec4473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc73ee4-3a4e-4569-b64c-291028b32091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2a16e3-8092-4623-8977-a446b710eba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82b19633-9105-4ca4-9c06-fa7d904db38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc16e886-f8d5-4c01-b2d5-19ba6d6635eb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cbf4f9-127d-4f39-a26e-62dace3b876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9648ea79-5dc8-45f0-945f-7568cf5eee35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f3e74b-b62f-4fbe-bdb0-41e849ae28ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcff1501-cd7c-4282-85c6-7664fd35cf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eea2af6-fb5d-453a-91c6-3bacf43868a8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d76dc7c-794b-48c5-8cf8-f9869a126c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e30031d-3e40-4f29-8127-4414e39b387e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d603ada-4caa-4ce3-beda-ca735a0b2cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae151241-01ea-4665-8859-23e9ee1226ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb9c539-72b2-4408-ba44-801f799efda0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4518c4e-6d58-4336-b068-12a49ce54b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d20b07-f598-45d1-a479-358e7425fa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8eaae6-37bc-451c-b610-7367ca6e8231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e7964d-280c-4cfc-8105-e5ff1fa394f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662b6c9c-3c3b-481f-b64a-cc1ac6c895b1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9fa785-c714-47b6-9587-adeb94fc6058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4755f5a-c6bc-43d8-a66d-3f123754c96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc130e0-5a5e-46ef-82b8-4c195507e22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "56cf5a89-1165-415f-9a4f-25f5a0f295e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb5d8ba-4f3c-4b5f-9d0f-783b2ea798ad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e945748-0eba-498f-9868-4f752c5cd8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8313b644-52e2-439a-9c1e-c0839855dfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207aa028-2c17-4ed0-a47a-71fd3053b117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94911c66-0326-4b56-a7c4-e4a7b92acd1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bc94090-7ace-4ff7-a3d1-5d5a2c9a8edf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a9cb773-a954-4110-a0c4-e6483be60949",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c48335-4390-446f-9d24-4ff94ed479e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca44a43a-642c-4cae-b84c-ace1980a759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8009913e-589a-41a7-b28c-8b4a0fcfb40e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50ad391c-7174-4b07-bf92-f7e410007c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1d59f6-b971-48be-bb76-eb4c7e21254a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f792df-974c-490d-ba91-556f3efecc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15505175-e62d-4a93-9eca-662470253e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e298969-0f1e-4db3-bdaa-018ebcf19190",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f068123-fd72-4706-9774-8d5a02f006ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56646f1e-c594-4f52-9c30-90abe079fe49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4d4000e-2ddb-49dc-bb28-d08961d5e9d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8154fa75-917c-4e66-9251-c35c423b8105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8779f06e-b981-4e76-92b1-c231ef1f9bc3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6174f84-95e8-4b4c-8c55-711d7e7c99a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4cfc946-8e02-41f0-af71-662d63c019e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c690a99-c6a5-4a51-8e39-bdffc6c38d0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93bdc3bb-322c-404b-afa3-e292b5d576a6"
                }
              }
            ]
          },
          {
            "id": "1ec039ed-933a-474e-ab80-45b269f29dac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1e54d52-320c-4354-b6ee-a4caac817e8a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7afe571-a351-41fe-9840-786360e2169e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fcb50fe-e8fe-4c8b-86a3-6f2033a7b27c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac1875b1-7339-4c8c-9946-9a5fc46016c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "744a08fa-a19b-43ab-9fdf-2024c9c4a75f"
                    }
                  }
                ]
              },
              {
                "id": "5f39303a-da30-4d6f-977b-b9b5d0dd9f71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8665311-ea4a-42fb-988f-28d58281e4ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "499bc149-5970-4995-81b5-85a5a736893f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65650cfd-491f-4928-8a7b-a0c624d5722a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df4905c2-fae1-4dce-810a-6960014ade28"
                    }
                  }
                ]
              },
              {
                "id": "fd9cb16d-bfd4-41bd-9b01-c7e0489b3c32",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2c6e3ce-d8c9-4f2b-a990-acbf29d7f2e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "243241b2-17a9-4ab2-a837-6f55ad1054f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a305b5f-4c25-41a8-acd7-ec01570527a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74b0837a-c84d-42eb-a23e-a4421028254d"
                    }
                  }
                ]
              },
              {
                "id": "8c7243d7-5cff-4297-b001-d7975f248df4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f709b66c-cc45-43d8-99de-f328cc12247e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41f993d4-b353-44bf-99a7-ec8076533881"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3c0007a-34ea-4974-a18c-4fe17033fa04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "72c29e39-2ec4-4c03-ace4-4352a2f6b1d4"
                    }
                  }
                ]
              },
              {
                "id": "9b061297-23c1-4c71-84c1-402890d87869",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cefa5d20-1dad-4053-ab7f-63d3b1714531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "887ba6be-8a6d-4329-abd1-1cecd67b8318"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b8c56a1-1ae7-4f2f-9320-2771e80f1eb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfc5865c-4183-40fa-b98b-65bfbd0637ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a4dda8a-2193-4bb2-9d07-3785479089b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "978b9162-01fe-4edf-96b9-9cdc808b8305"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5f1071d-6ebe-443e-9537-714a2dac3540",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38f97ee3-ed6b-4be2-baad-de6f8d3bb3e5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0fe78fc-739b-4512-893b-b123e4743de2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "29f7a852-6e38-43e4-82cf-2a4a11ce524d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54fc3cff-f5b6-4063-940f-8828296331de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cf94a7e-c178-4054-8b51-f4fb420b65cb"
            }
          }
        ]
      },
      {
        "id": "0a701604-4545-42ec-85bb-e055be62c6b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7f8b4170-1e34-4f6a-9d7f-cdc056daf6d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55a769be-d95a-413b-be4f-28c6bf669808",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c416bdcc-4112-482b-8c02-c31f58402380",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790afba2-ab2c-46f3-be95-ebbed64e883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e57607-20bf-41b2-9e1a-7ccc5622806f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e436c5-0cbe-43a6-a765-a12c244f76d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "459c5248-2675-4432-9272-ae8a6c071341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e852464c-1b08-475a-8cda-91a20690eda1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f7b04-984f-4970-b868-32e96d72ca64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c89da40-3a5c-42bf-a642-42ab8dae41fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620ef6a4-76ab-4990-8c01-c56fad2e519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b526c6db-6ebb-46f7-a399-f2263d272301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcaf36e-22c4-40ec-8943-4994b892ef02",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b81fe8-356a-4e00-a027-39275e34e761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b81b81-77a4-4d8c-9553-4c2df936b277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd943b8-a077-45e3-8b51-7db0ed5097d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77fe69f7-a3db-4556-8d83-dac27c29a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e5aa5e-5a64-49a1-831b-7d8aa0bbefb3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c937239a-fab0-4273-9a3e-9e7810d77622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae04b714-6dd7-4da3-8f16-d3979662116e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7d8380-ea64-4a3b-a95b-bdd75b25a63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde3a6f6-69da-47b1-b36e-2ca1908ec521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37fb601-1e2f-4312-9f96-31bac61399cb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6107940-d018-4311-b6c5-5e0dfcb5d398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62378007-409b-43bb-a0a7-71fe14b12a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fc49ea-30a2-4788-adf0-aa9f7a96fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3dd70b-4e0c-44cd-908a-8c4d09427991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f13af8-30e8-407e-b496-0961b1360c92",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4568ba9-5ea7-4b08-ba98-b10feb06c80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc51c2b-012d-4263-ac09-a99e8a3d374e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aecc8d7-a19c-452c-9a3c-61c32c2f679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e40e870-c954-4988-9bb9-49fa38335443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c279ff6-cc08-4e36-aa91-e85c6b789e94",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad04f2f-f29a-4eab-a570-2a4a1653798d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eef0d9-15e1-4fa3-b458-51c52d1ab33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015cc8a1-c631-4159-8309-51b9351cd461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "787ce399-59bb-4e57-af45-e794a1f64c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12701616-0922-4161-a0da-f61fa6988e15",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fa6934-1db3-4377-9ef9-31c688401ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92501206-7cc7-4148-a895-572518616124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6062d3e7-e96e-4429-bbd8-c4c83d4b428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38a08e11-7162-4b51-b47b-9e2c2f28211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d072e3-1798-44c6-949f-4ec3c67620f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56f677a-28a7-4845-8510-f0eb30e91aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518dd70c-47ad-45bc-b901-26d282247f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212d2ac2-aa86-46c0-8bcf-bc4d1aa5ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd20180-abda-4216-844c-89b46253c2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf5dd6-5241-4eef-b834-64b40cf2df8a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0123ba1e-7470-4610-bae1-0bd41c3a15c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a088aa14-ad39-4c03-b826-dc38cac4e20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3403d7f-bdf0-45d2-b354-0505515b2288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "611552ea-9ba0-47a5-ba5a-ad982ed2eb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c923c67-51d7-489f-a4e7-cb2d2e3c3bce",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6294b4f-5946-4953-a7c5-51099bd760ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c376eb3e-73d8-441f-b94a-bfd5ffc4a1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720debc3-273f-464f-b1e8-bf20bef5f040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5adc5ad-6c3b-470c-b2d4-38c5af5cc50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d943c-3799-4a9e-a5c7-9eea810a3386",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb3bac4-78a6-4bc9-a47f-f7bb146c3081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706cbd47-a0e6-4eb7-896e-d7297892de84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d59306d-8639-401c-b947-4f5f221ad26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50a8d5ba-08ff-49b6-972f-3614d3b95118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad5d3ee-64e5-4198-bf02-d49c59763435",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba90853-23e5-4fc3-8bbf-1437d2a3d9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa676ff9-0ed7-424a-ba99-f6b55a4adc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803eeae5-3c16-4dce-b88b-c595f59b5989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d400ef97-207a-4d64-a94b-8e86efdad757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39be0f0a-f4b2-422e-b438-ebb154fcdbb7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ee2b7e-b239-4637-bff3-a183653260f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e46d25-6bd2-4128-a053-8154f97902d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2264165b-782b-4c86-9ace-01506f88bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4dce67-0965-42aa-858d-04519681b76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b961912-c99d-4d22-8f69-4527213d173b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa57f193-3187-4bea-998a-a5171269ad80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77064057-2f91-44b9-9a53-25a31b6a2872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe16a49-554a-4e94-bac6-8518ee9e22a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be224e4f-96be-41b4-a5d8-85394fa2c91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c250a18-83d3-4be5-b9f2-e4e53cb79e08",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93e0298-afc0-4287-be40-8d0decb1a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc923a51-ccdd-44ed-a8fa-eebecc6b3f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d64f8-3a5e-468f-9e4a-2884a4502863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e199f95-edf3-4506-ba5f-2dd4a0a6b138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259d29d8-7a34-44a9-8372-852e0f429c8a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1102483b-0927-4455-ae9e-efd3014ad645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a597ad1e-e6db-4dfc-a4ff-f9522611ee4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87363c62-b19b-449d-b76f-78bf44507cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e661b0-f381-49ff-bbbe-4a4296ce4366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ef0762-ccf5-4282-a26a-26ad122b95d8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9733ac0d-5f3c-4b9a-b44f-3a7bf2183331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3e0034-138a-4543-ba19-5f60081db83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6bd75-680c-439c-a4f4-a5a74112d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44adfdd-47f4-4f01-8101-09dcfab96e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a01a5a-cf8b-4789-a4ab-254b60769851",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68816a63-bc52-4bd6-ae60-e8581e240d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820ffb36-98e0-4ea0-8990-58b3cfd1e0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2842dbe-3712-4d42-96ea-27431e3e3bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee93b049-a16d-4ab9-839e-7bdfdeab0cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dde4ce-be80-48c4-b967-1dbb989b8a1d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e33e74b-d322-4821-80ec-6c481bd88f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0aca85-0337-4397-a004-b51145790a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b9424-3bea-406a-8533-b17d3c1095f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "937a32ab-090d-48f9-9aaa-9cf5f2e65433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931087c0-fdaa-4d82-9f12-0604c22ee280",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1cf5e4-ea82-4585-bde1-de8714541ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6b65f6-cda7-4f35-a530-821ed0640f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce403f7f-c817-4b67-abc4-565f6bfb70f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5244bb1d-7abb-4ee5-a008-72cb28691595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0940b1-98bd-49f6-8624-301a10f9473a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745e97cb-901b-43a8-b672-3c485aa605c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f8926b-95a0-4d96-94c8-9e3ba2f98b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf25a01c-d2bf-46aa-b36a-7be98a432998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e62cb5-753e-4c9d-a0ad-820ec4ed4326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502bd2a7-99d5-4f1c-833c-70b2812814a6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814692c-ee97-4e9f-9501-7684a6d01dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726d4eca-4525-4752-9480-796daa1b0c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f765f2f0-557c-42f5-9781-b158eabd046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c10de4-9eb5-4333-a43a-f1d1b528b81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b57f08-4eca-4145-adb7-a50c11ec2fd5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0842994f-3f1d-4281-aef7-01e757ecf5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6cc346-9a6d-4bf0-afc7-dc42e2123fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb72f97b-707f-4a5c-a303-f55a247086ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d693015-c929-4c6b-898a-3c5efe0e471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea82bb-a774-44af-9ef6-e604711349a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f195281-8860-4ee9-a4c7-ba66ead03b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152da017-8c1a-45ee-b5d6-096a978098db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b2d4b8-59de-4195-bb40-82be1814f958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca70c78d-6c33-4fbc-aa81-f9fda2eb2783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2336dc6-68e5-4394-89c1-e850f5c2d6da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ad7c39-b6bb-4537-9e38-9f78b602064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23df9102-f6eb-4b14-948a-a485f32950f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bd71ef-7be9-428c-8f57-4397a7823999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "803c2f82-2540-41f7-9daf-cc5a7cdb5031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb4d199-da6c-44bb-a803-46707e711bb3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0536e6b-ffe0-45b1-ba1a-7fd7dac196ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea08cfc-f9a5-4dad-ac2d-7ceab324e5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1c5742-2e78-462d-bded-85e50ccdaa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f27d83b-2bad-4795-a4f1-7420e2fc85fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f99ab5-78f9-4246-9b60-ea9da1b53dca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6010800-76e0-4f9f-b635-4f419fd5deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56808c06-e88a-4ceb-883d-09e700fc8c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27b359e-d1d2-4428-abea-a330626b6367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a327f766-1fe4-4eb2-9f37-01ed9c6f63ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fdf4b8-6459-4577-a227-a60c7954fa55",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1544ca97-1b30-4275-ae41-7ed13a48ddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b41458-07ac-4f50-a45c-7f08a6194272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ce2de0-e7fc-4fee-85ed-edb7e8d136bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400aebb2-88b9-4192-8a6d-f176d01f76e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89236224-7f56-49f4-b357-bf84e242bffc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d23b76-e70e-4801-b215-7f4708c2ab3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d55511c-4f9c-4477-b025-df691aca84b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7970a7df-1835-46c1-a05c-848c7fd194a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f72062-c87a-4f94-830a-a05ca8134e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35094ca5-ba48-4169-be00-5a29f8aa6df7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9fc2f4-6e82-413a-be97-a48ca7743f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a78981e-b4fc-41f6-9bf0-9515581af2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815b3f55-923f-4cd4-af85-0df9eda6f3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "663ffd07-d54f-4dad-8a26-bec0a3d00696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f15601-02f2-4cae-ae6c-f437009a87a5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3c29fe-e3f0-48f1-8164-d3ea820d457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49089f51-592d-41dc-afaf-0ecaf5264b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392f4a2b-e507-43c3-9aa9-ebd9e1db65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fdfa77-9f88-40a3-b326-2c8b8d775a94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d487487-601c-4a7e-9462-919717dbf08c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83036040-e591-4afa-a5d7-a009754181a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ebcf8-bfb6-4073-930d-e61067356300",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5efa7d-7a64-482b-83fa-90dd27e431f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c7deb2-6a8b-4c28-bcb4-116ed5e925a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d6d8b17-53dd-4328-a44f-23908262370f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc59c85-5fd7-4b20-a04b-f9c90a498966",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a2339-1758-40af-91d5-1199ff011696",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d43a88-dfc3-4654-8e73-ff3ff8199921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3038226f-4d67-4a8b-b534-d1926f310af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2017c635-fd68-48fa-97d5-d385827df95e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8115c8c9-2792-4c7b-8deb-fb8a44c23da1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90559ef7-56dc-4d1e-847f-a3819140f7d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c859c26-7d79-4552-b49f-7d4f4a683388",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ad71312-6e26-4845-9419-81d162c7733a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ba255a7-a4b9-4869-b139-a0ec2a5912e8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b76f6467-92b6-4160-955d-7545773370dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f949817c-22ec-4e61-b079-f337f7319c4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "924606b2-ba1b-458a-a659-b5d4f71a9791"
            }
          }
        ]
      },
      {
        "id": "7e24fd12-7deb-425c-aaf5-10fc43f94e88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "15a9f418-ba79-4194-b21e-257ca956b923",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db3b440e-b49e-40fa-8f32-acc72a1557b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3db8091-16f4-48fa-b763-4b7c3cf8cb3a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eab70f-994c-4196-912c-640498207789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ea6a00-0f76-426b-8f9d-ad228f29df11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217e33d0-c022-415f-9cae-64bf72bb210f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687973c1-4d28-4623-b062-c4e139805764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e88680-d9e7-44e9-8c2e-d21f3cfc475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f527d-9201-450c-a067-4b783b8b35c4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b52db6-e97b-4dce-80ec-5c2668b9ec7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f101b56-2d78-49cb-8044-7103ccaa0479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b32739-ff60-48d3-aad6-2078159f1a55",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6517b91-f870-4591-9f75-2ef7062f721c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8fa9a0-2c6b-4290-b43e-4371ccfe64e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6be3a1-bc2c-43eb-86df-df6cfe424276",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7566022b-a586-4cab-8eaa-081dd6d86aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b498251c-716c-460f-9db1-546b3dd152ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e87d38-17b7-4366-92a8-71f2eef3ef93",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1233f241-1016-48e7-81f3-ab5991d4f39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0944444f-a84b-4bc6-af45-4b0f2bf93508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35cdc00-17a8-4b83-a4a7-8b00f29f7dad",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cf0534-e6c9-4f27-8fbe-962d5604cf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019cb7c8-3c4c-4fe2-8acb-cbcad1e19333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9864bc5f-631f-465f-b4a9-de4f7ac98319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6ca8ee-945d-45fe-adce-dd754b641773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03121f7f-5ecf-405d-ad45-3bb904730444",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569d078d-990e-4bb5-8833-244c71e28750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb518861-2042-4391-bd30-60b4fec9e503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2c502-9e72-433e-9497-0a56ee97da0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfbcff6-de63-4a3a-aef2-3be1657ef440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944d03c4-f8c2-451e-bbc2-f6ed5ef2b27e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbae5efa-ee1b-4069-bd88-39586c3afe4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7cd6ad7-74fd-46dc-a60f-94942d82f40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef707226-7302-46a3-8ee2-97c7e9099124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9737e9-f093-4ef4-846a-aef9de94e3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9cf2b-87d5-4af2-8e29-a227ed7de277",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a66fd9-8445-40c5-b805-c2a4a441fa32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703f42e0-5879-426f-a890-bdd217ecd0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ca4e85-95ea-4651-b6c3-379f18787249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538ac69b-fccc-4c52-9eef-26f3ba393dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce1da88-05e5-463d-ae47-502c1686c0f9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c2369-99f7-474f-8452-b4f54eda07c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afc1ee2-f032-40c7-907e-bf0bfb0cfa91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ece94a-789c-4fd5-a38c-ea52258d158a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f37737-2859-480f-9572-5d699f4408b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a087f3-d729-4294-b5ce-57690aeda482",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0c8de9-4e78-4b5a-a196-f2a5a78204a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982cc345-c97f-4086-bf0f-d784af035896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdd765e-4493-4670-b363-206c6a24fb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba83d824-d526-4906-8ba7-cbf703461d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fa86bb-1676-45ba-aea3-f69856fb1eb7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0ecf05-d96a-46ba-bbd3-d1e3f353c513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b02ec2-4231-42ab-85f9-c927956deb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad52beb9-6db8-47bf-8184-eb2921a66243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f28b20-f9c0-47e0-9ed7-e4475b61d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c8d2ce-59a1-4d96-956f-74c45fe83773",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2123074f-db50-4dc9-8c2e-bff70fbfef2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a37f33a-86fc-4117-82ec-20d387cef172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c0da01-60ce-4ef3-8493-2f55ad60aea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59477de3-bb0b-4349-ba3e-16914b24fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7d07da-69d4-4d1f-98e1-ea08678aa3b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3330c9-8b44-4e14-afe9-99840267406f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d8cfb1c-9263-42de-9eaa-5e35068558a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51be1457-7d0e-4a5e-8d60-f921bdc51561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ec2e2a-60a5-4059-be1e-bcdc45d8153f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac934562-36d1-4ba5-b910-b3ef8b6f12a2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e5f6c-9672-4427-a797-11819a894add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc0b133-2d4e-452a-bda6-5120581086de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd7f2da-fcec-4fb8-9cce-6e41ae2c90e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7089d58-dd62-46ed-aa1d-68f3493ed201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dc2ba0-7462-4f7f-acf9-9a3d236cdc08",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735b6736-0127-4fdf-b07a-d4f41a04f7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12657c9-f0e5-457a-b203-aec092004909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8629ec25-b230-4cc5-8cc7-6b8ace9ac5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bba9b4-b1d1-47d1-875c-3a3f50366061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d038b85-9c95-4789-bd24-f645e95a8e6d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d167b61a-1674-4cc5-a390-9316fcebfae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129478b4-58b0-4341-96a6-0e958face6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007ce8bd-c271-45f0-bdad-0fb44504fff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dab306d-eb34-495b-87ad-691d4ea34d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fdc1e2-6c8b-4645-b4cd-c3ebb868bf81",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a54b672-eeaa-4009-87f3-ef1e2888f921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7954974-4312-40ec-a174-bdbc3ea5a40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f36c516-2026-4aa8-8237-9093b9fb06b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f07dbc-43d8-4b8a-85bc-b44e33ce3136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8840382b-ccf5-424c-92b2-03f49f7c4c7b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99616b-4137-4c43-a50b-e19972770095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfac387-3ee4-4cce-a618-b775aca95578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179d05ec-cdab-4f35-8c9b-dcb91bbb35c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874a79c7-038d-4d85-a5e6-2594714b0d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf022e9-037f-4646-9607-39bd3cb585ee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b81b9f-70ed-44c8-8abc-2a07bbbbc31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36c5c0e-1249-4269-9de4-862dd877eee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456dfe5e-c3e9-4531-a97f-fe9dcd14b0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af01b02e-ba83-44aa-851f-3d70a7e7f220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0e8a7b-90eb-46d8-9416-7c6d4d128b87",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893577ca-2d62-4cc4-88f2-34192eab80e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3814133e-a779-4454-97d6-fc8e8ebc7724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaefb97d-6452-42f4-b5ca-cccfa67cb592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a351b3-51ee-40db-8d42-d277bc92cf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c3a842-9787-4c17-adc8-d17101ec6ad3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e7e242-6d40-4453-9341-bc78d57fa2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c94c15-deaa-4708-af2d-6f70dd500d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9d73ec-647b-4bd0-bb60-dd01d9b88c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736c328c-ac87-4254-bf2a-867f3c406e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cac6f19-6355-4894-895a-17bf6481666a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a206b16-e70d-476d-960b-11b03e87caaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55afb24d-ba69-408b-ad5b-0b7927617f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caac68f2-3d9e-46b9-81be-70ac1d5e289a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4794209b-05e9-4bbb-91af-67787ea15f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60400dd-4a28-429f-919b-dcdb17728a2a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba767e64-8ef5-4a98-b062-6dcc32057b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacad031-2342-4f22-b8aa-e35af979fe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf99fd5-76f9-43ca-9399-a115fa7e873e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f456e112-f882-46ae-9945-369d774c938d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e452c107-999e-4379-a073-20af6a7ecb70",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9022aef-cf3e-465e-84c2-59d50137853b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0a22b3-6cd6-46c3-b0ee-80c584fc00b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956b1af9-86a0-435e-8824-373c0a636cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676af2a0-69d9-40b8-b53a-1d5e83e7703d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823bd62b-56f6-4eab-95d8-fc017a66c56d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d41284-da4b-4da6-9a1c-5491b4eeed1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7159ceb-3079-4b4d-9b20-ab5ddde3fbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642f71b9-ddc2-4038-99c2-3cb70dab6715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e98a956-9514-4ac6-9a43-e1fe4c1747da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d170c-d8b6-4a64-9702-a505f9bd99d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c27018b-fbc6-4ed0-a58d-8514459b2eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a20178-69d4-4969-9419-9bacc49e5f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60106c6-14c4-4690-8381-5ac38ebc3da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f461e373-5baa-48ae-953d-7c754cbfb226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c91616-3b9a-47fb-81f2-2986cface80d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e611c4a-a29b-4efe-8501-498da3fdc58d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80dbeed3-039e-4d00-b955-4743b5fe2ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925474e7-a0c8-47c2-8073-6570c677630f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5c2596-a918-425c-9ac3-5dc6c71c5381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c66900-17eb-4da7-ae7f-0335d69006c5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87a2ef1-36d7-4e9d-878f-34e027beec2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94d9127-c609-4319-b13f-14ceca7b37c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12beb9db-9ff8-454e-a1a9-b356728736f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2753689-6741-4aba-af17-a53d37aa6fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97da66e0-5f39-4797-a5ab-d659b554fc6d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f136a10b-acee-46cf-88f5-e8ee9e69728e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b53056-40e1-4e02-bcc4-9d26e7b8e258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54efef68-3f8c-4dda-aba9-9392364d07c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d791b1-1331-4f81-bc91-94665f9e7c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e108fa-845a-4616-90b6-fd53b51340c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd50a0c1-76ab-446f-b328-a2abfa6c6ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e5bb03-9de0-4561-b252-3223d2a53b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3703cf32-52a7-48ec-a55b-b3e5dad7a53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed62fea-4206-47ac-9a9e-fa579800edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af47ed5e-d59e-4292-8891-8cc53de72178",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa80fd84-8a7b-42b7-a367-e3b8438fb229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d6fbf8-a615-48e6-ab65-a344ca46cd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f0321e-0220-4bae-803b-6228551c27a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff7e29f-9430-4342-8ab9-d4a4beb7e8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d210c47d-5954-4aa5-b923-6c932a320e00",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faa1fca-5ff7-4d0f-97db-20214045281f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f7500a-ed05-475c-8dd5-c3d57fe6f15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9d60a0-ef76-4de1-8683-e73d775739e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6d7d04-872f-4b88-bc7c-02ce63cc6193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a822f2a9-565a-4793-b2b2-fa852a6a2764",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aec3dc5-ea5f-4021-bb61-d6b71bf01e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bbbff9-0d24-405d-aead-fc4de40f429f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50eb94e-be88-4f31-bf8b-80cc9ce975fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d3d756-8514-4494-80e1-709bbf104384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5211a7-22f1-4749-807c-e3b64a72131e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb73878b-7ebc-4ae6-97a3-6ab98975301b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cb296d-943a-4f69-a6c4-30c04ede85e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29872c2e-d77a-479f-808a-b1086192bc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd95fbde-8209-4765-b619-5566f803372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9669f06-050c-40bb-a8c5-66150354d113",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250fffb5-a1d1-4d5f-b08f-10bc447c326e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935b524b-0a9f-49d5-8610-9f93f0fc281a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eb8c87-f929-4bb9-845e-b59003a6e012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02156b2d-e532-4352-bdae-d7f78c5343ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b734042b-2f56-4572-90c3-fddaa879ee1f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d5779d-eb29-47a2-a6a5-4d53dcdabade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1940454-d2a3-40d0-805e-6787b9a4890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ada7c6e-2b02-434f-aa0d-c82efcac72f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9191ee8b-2ba2-4ba8-81ab-017ef67d932d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe52559-2ded-4fba-b417-5d0d526bf0aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae834578-ffd3-4d58-b48b-6e8b9fcf6d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a01df73-1ad2-43b9-8d6e-af1257ab430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7758e0-3d60-4010-a7bf-49009e6c94b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af1eed6-8e88-4f17-8ca1-1a1d000e6fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bfb758-e74b-478e-9364-8d1b7f9fbd7a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5eee66-f4fa-4847-92ae-de69993f060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96c0a61-f895-4e47-906e-89ba4c241403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d519f479-5222-485b-962e-2e8ea096c11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767b8556-45b2-43be-a4a2-2ec1d658ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473fca45-b497-4314-a8d1-fd6350bb623b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5205f76e-d23b-4af9-bbb2-daebb09ecd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2c127a-1844-4388-9762-e80db890fa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b877ccc6-c68f-4143-9acb-bf5197ca78d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a34046-c089-45a6-9cc6-54addde5d17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27741279-50c7-4227-800c-589eaf693ae6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5af582-da1b-40bc-b0ec-b22f15f5b74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14151267-7452-4098-8886-3c5dcb8b005a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f351ce6f-5c7d-42e2-be21-76595344f53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278ad022-504f-42df-8637-0fc8625201b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc8003-5579-4ac1-839f-7d372832df20",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c4df96-dcf0-4c2c-97bd-bcda75234931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261cbb9a-4111-4095-8316-a789dc1a665c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb13569e-0675-491c-9471-06447203948f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457af36a-0f64-40d8-90ac-833ff67c25cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d9c207-d2c3-4919-a2be-3465ad6c0366",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02a7b53-6ed9-4618-9ff9-62be2ae1e308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb47a5de-3a11-4506-80ae-fb33e5ad3134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74df190e-fdab-42a2-8d00-3b8e6e5376fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a26702-190b-4f1f-9305-4fa660bb5ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b88dec-f757-486e-9352-357946a7ccd5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fff577-2ecf-41ad-bc70-d7708375f43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0456d0-d3e4-43d7-b387-431d46b1b4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a66532d-8e1d-4aa7-9fa6-1d5d5f6e5dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a9ffd0-955e-4bc2-a938-ddcee1c04d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa02bd-d1bb-4b49-9cb7-10903cc78994",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bc5a2e-0eba-41de-b331-9de8a3f0020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe337dcd-086b-4d4e-a886-690347e428f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921dc29b-8222-4ed5-878f-3b40da38d15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fe873a-4e5c-4796-a556-239d7267b9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4d4900-68a4-4530-bc8e-89e851baecf2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2ae8eb-114e-4564-92e7-26274436734b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b347e5de-3e15-463f-9162-6d3eb051a08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fe78f7-c1b5-431b-b834-d3df7a179751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453cd68f-f9b1-4a3b-b680-5aa22381bf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512fd93-e430-4926-ba07-19a54af6f278",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96319ec-8fc4-42dd-a73a-c604e7b80b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e28ea87-ef0f-44a6-8ce2-2adaf296d4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae779740-9c8b-4003-9a2b-bb16e60afb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac435d05-62f7-489c-aff3-84f8b496cdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbfdca7-5a8e-4ffc-a9e3-84f34372cdc1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b57d471-ab2d-4ec6-a2f8-7ec0c95ae247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e850c953-784e-41c6-a8a8-28f20271a6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c9618b-b34e-48eb-af5e-0fa2f76dd153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0587b97-279e-4eea-b57d-e02d542237e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4628799a-6687-4926-99ac-a406436cdf4a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd6f80d-24e4-4f50-aae9-f5b458bce0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d00327a-10c9-429e-b104-9f129721955e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a850a44-47c8-4e5c-9d54-3ed78d753e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfbce63-3110-4527-b3c8-c18ca638cb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7325eee6-7bcc-45ab-9745-7b2e48e36e4c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a0525-fab4-488e-976d-8ff61242c32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493b37c0-8a7a-4547-8146-6230e690dce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e91cd0-13f7-49b1-96cb-4d4357f4e550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120e522e-d47c-4e1b-99b3-10e8d944a98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3f4769-e01b-446a-918d-aec1243984f9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e6c1c8-496f-4ef9-8497-c81e997a2df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919a2487-7362-4a03-8562-26b7f006605d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd3d033-34eb-4e34-bfc1-2cd0823b9f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0605637-f020-471c-a00c-b6b3a4aac329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decf93d3-ac0e-4dbb-9f50-8536775fc6f2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6c6d6e-bc48-4de1-a562-a5c3eb7c30f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8d4569-544f-4ebc-b0f4-f36d97f58807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583f3e3f-8c0f-473d-82a8-42b293eaa437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923ae2a8-b654-4df8-a553-c798b06d9877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0c4b5d-99f5-4a20-a119-0d92c507bd6e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2131d5-22b1-4fd4-b792-64a177bea866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca4df57-dc68-456f-8fb3-487f147a3604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955a1810-1909-4fb2-8890-fee236744f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c055bbb-7fc8-4337-8591-43f2c8478f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a02cc0-c00b-4e90-81b7-e17b7fdad514",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5086015-7103-443b-83df-5dd09babdc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6b1bd3-173f-47bb-9c15-13e04326da16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0042364-56bc-421f-92f3-1df4b93c0c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75fb11a-3d53-489f-9752-8d337f278665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e36998e-0d55-4b23-ae35-6f32f5399797",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb02453d-e380-4c90-a5b0-c2fe3ed7c714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238fc1c9-3bac-4e05-9a17-0a400d670ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bad73c-1a01-4fea-8f21-4cc609f83e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e770e66-62ec-4c0e-a083-8791bc7dbf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eab3f4f-0c7b-42e0-8902-dd98bb09c6cb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7536bc68-a83a-448a-9da8-9993d07dc409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d0f800-2176-4cc3-b14e-7299f1a1cd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a1c7f-6f78-4f6c-9a4b-6e00a2f817a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccd6cc3-1512-485c-9faf-0f4cdba1293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c3bbf9-5b7c-4f5c-b047-7e77f7b9e3b5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44be83f-5f88-43a8-a25e-97058dec3a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e8f5f1-2484-40b2-bee8-21828ff79e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3750386a-c6d7-4ba4-bfa4-7128b606f37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d6d39f-de4f-4ae9-981e-296d9693260c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266be379-95d3-4739-9a9c-09ebc2a3d9fc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa1e492-be8d-4bd0-ace0-9ddf5c4c6fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8d8a7d-9739-4355-8d2c-a33975bb34a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561364cc-ba4d-412b-ba68-f7aed4bccb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd81db46-7bad-4372-8c9a-99fdd830e35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca95afa-27b8-4601-ae72-28775d402f34",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944d3385-4363-4f49-acb9-bc837cb70a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69985838-9ac7-46c4-b40e-035bc1026dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a377841-e746-4eaa-a371-65d3d809860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db849977-69e3-47d0-8dd1-09adef81d742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db87994-3547-46f5-8d0d-c70b4441c77f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10ed6cb-2ddf-49ec-aa14-d5f63bf06a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00d4cc0-f034-4297-b7c5-431af5044bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a79bbc-93d4-4029-9973-d8174987e351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37f20d8-ad27-42e7-b535-80b9d8c30d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c3e12-6cf8-4729-b3f7-2444e31b54a9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b0cbc8-cd23-40f4-8c0c-4225f4bb376e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7736d392-134f-47ee-b09c-94d7b976a2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f4b4d4-d8da-4c7e-9282-9309a2e08693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ceb666-0dfe-4814-8cf1-76be54c724f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabd9ddc-fc1a-4030-82f3-b562cc639138",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19d7c1d-a2c1-4b4d-ac7d-d88d93a315ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dd85c3-b616-4dcd-988f-ebb2775d900a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f392e08-1d76-4a16-ae63-8bbbbc3334d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b0672-4ae0-44b6-9783-63a87560bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c705f8d-35f1-4e05-8a3d-2ebc8429fc15",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c132d753-8a58-45bd-b035-f511cae1fb77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e12dd2b-b5d4-45bc-aa6a-f8d875c7e80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5c2800-e2c0-443f-afed-9ba5529e9d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53a02f4-760c-44ca-b476-71c4fe2e8dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a36abf9-8b81-430c-8b19-2e04d6593dbe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e7b94e-df25-4243-ab93-9f75518e3b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2eddd4-db5d-48cb-9825-f5952cfc3aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99381aa8-c56c-4449-b400-c67633c58cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9248ef3-a4a7-4c0f-baa8-4ef51a2b523b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debbc4a6-b20c-405c-87ca-41c889978eef",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516d29a1-e00d-4e29-94e5-cb954891678b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d907cb11-1183-4dfe-a06f-d4f2d7a7369a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb234ab2-1131-418d-8349-f0a9011fe92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b283a89f-c99b-4964-a0de-e8f70022e49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f372674-d2a1-4de0-a202-867bd2215ade",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7872eb82-b843-4f34-bed1-516d06530bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d789188-6d0d-46e1-9065-e105cd666d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1d4f76-d05d-4167-beef-167069d227c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54484fe-5202-463f-9226-fcc0de55eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbed7dd-88bb-4e4a-bce9-fbc0b7961e65",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661a46a7-2de0-416f-9a21-be87ef2e2e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce309ee8-fbe0-40de-ba2e-2731e1d78727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce153d6-3961-4df9-b45b-367cd33b3960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18692d01-b226-4f05-b789-dcfb59a55ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2053c4-030c-4b29-99bf-e84ce2859875",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f3b57a-acdb-47e1-b34e-81147e73cb23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d502e60-c0d3-4848-ba85-03c436855605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff73cd7-8e94-4eae-a37c-227a77e7e021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f85033-d681-47ca-9df9-7a95c3680341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed97b07-778c-4178-b774-8473501d7883",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9e9545-e447-4ee7-8101-455e3eba8305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6923efa2-0b39-464b-b668-a8baf6051802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fc6f37-6bd1-4129-a0e3-4b781b422c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fec87c-b526-4a99-9052-1aab086e8548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa77880-9703-4106-a72f-ba8e30d6bfe6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159622b0-98e0-4b65-84bd-8f9042b0bcca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bfc46a-2706-487d-bcb6-8a431e728caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19ac342-e8c9-4baf-84df-93d9a09e1e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25921457-af6b-452f-8773-686041364212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600cd406-49cb-4da0-9810-8125f88883b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3158167f-32f5-4955-9df5-daae2dfcc149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "defb6846-6894-4577-8152-3f211c9f3480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7adab5b-987a-44f1-8f2d-586a5de338fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65515b0-2608-406e-a5c8-1f026cbd032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3de795b-7d30-49c5-b1a4-7ee09a0a3362",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeb4bc2-bffd-4c4a-9c08-8aaac141fa42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c0ea79-0376-49c0-a5df-9bd6460fc90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa829fea-04c9-4f68-bfd2-891a886c72ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c474b4d-4ce9-41e4-8cf2-9831015fa3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c86cee8-5775-4e3d-a7c5-367458faeb57",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cc1e5b-b8b1-4e4b-8ee1-f10400e57b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d9e023-f95b-4ba5-af59-3749d75335a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f916668-b8cb-480b-a348-5a4847079b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ce533a-92c0-4be6-8431-efd5fc4e819e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d7d8b9-ac98-4f4a-a499-df8d415c2fbb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8867ff4-d060-4833-8e91-10e098d1ee35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163294a1-3239-4f02-a7a8-e0f15a3f1a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed32b112-f603-483e-b050-54b1c9575a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bebff3-a936-4143-b6b8-5d2f7abde037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1ce8b9-285a-40f5-98eb-a2772b90df9e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc0c837-685d-4fb0-8d08-1f585885ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0f0485-496a-4d81-918f-8bff83f3995d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bb17c8-d7aa-4f06-b44a-df398b60d53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af70fa4c-7c05-41aa-a4d4-14e2e61b1ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1bea93-6c53-4f6b-9841-6d28a97e83df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948838c3-1c9b-4ad6-9c69-562ad2658d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52de404d-79c4-4ae6-878f-44aeb8e908f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdfba2e-e435-4342-a16d-0e953b412e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098fa754-94d8-4bec-8c37-118af9a8a85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e848dad-c5a9-45ce-8278-b31fff37fa98",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdaa625-c9f5-45b7-96f0-140377e09f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8673775-14d5-4945-9d7e-628c8d1a8f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a827db3-06cf-4fae-8568-feb91f4b9666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c980f448-5e39-400a-b07b-9de39b3cfd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532a5ac3-09d9-48e8-8678-66e01d22d1d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50f8ce6-7a32-4c77-b8f3-3955e346e907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fceec164-b78e-4f34-9d4b-308be00300d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ded6f0a-f2f0-4375-8c31-836479f0a3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc1ebb3-b8fc-4766-93b6-992f28e421fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472bf1fa-ed54-4731-8f2b-b5f6ad9f7dd7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd566aed-5934-46e0-b265-e37614dd255e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda47516-ba63-41f2-a9cb-11a88cb4b31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a54840b-4825-4aaa-ae50-80ae8294c792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaeaca1-222c-4b59-a02a-252207484575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868b2957-9aaa-47f6-a18c-dbdd8874e8a8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79e9af5-f9c4-4933-b87a-285a88942fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9159a8-8d9d-4866-af1a-19e5276371fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48468802-4293-448d-a765-b12bc1d3ac87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f9cfde-bb99-4349-965e-92a37c607c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c2364a-07b0-45f7-8ea4-61953005433c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6785ec49-bc96-4085-ac12-530be12b229c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3090c43-c0f6-4efe-9f13-5ab5552e5630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b23eda-3dc9-40d8-88e9-65073e8c10e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e3180c-06c7-4277-8101-085095f91cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61595bb-6f04-4b04-9ac7-30db7502bc9c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc939517-5c00-442d-a264-3fbb40ee877a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390db455-565a-4d56-a037-bac41ae32ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0834f948-b47c-4cf8-8366-dba875584a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b63dde-d181-4c2f-9d01-919c664b39aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e08ed8-23a0-451d-a9ee-c63eea8181c3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16df75da-5d53-4e6a-9e87-781ab14008f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe0496f-fad1-4570-a359-b774b335bf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d289e9-2fb6-4bee-bcb5-27638d96e7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791ff895-c20c-48c9-8cbc-3fe798225469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e110aff1-87dd-465a-b2c5-d9e50024a655",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f194f70-4a09-40cd-9f44-cf0ee039fddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac4fdf1-2f2a-4e67-a267-9085fcaede6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1378ad95-bfdf-4afa-b139-06d9ef36d3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ea6e5a-e132-4cd0-b577-8c31bfcb7042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22ce3f-f48f-4906-9cc8-71230a809783",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d626ea53-6907-47c1-b3c9-52150518f1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60f0154-0195-4f44-9587-db12556aebbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198bae5a-e975-4f68-abb0-5958f4d554e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5087df1d-f7a0-47fb-86b6-0327dec2c4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188f8e3b-0a31-461a-91d5-be62273d4db8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5a3ead-08ac-45b7-8083-6839aca36f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a6bbf0-d993-4b03-9d2b-799d8df18166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294aaa92-f3dc-4023-b081-50f9753fb605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bef389-2c1d-4749-aa1b-79fd54e76d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a82805d-c0cc-4aca-bb15-c496e2c77f46",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf0b931-1ab6-4304-8a59-6204ccb5408e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8841a901-dbf8-46bb-80b0-9440cc19ccaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3713e47c-57cb-4d1f-88a3-17f5741f1d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f5face-4733-4fbf-9221-5e2078d4a0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b227b5d2-2d1a-46e7-b097-46eb5ac718b1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcee158-d95d-4aaa-a67c-f411368b60fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61646c3b-798c-4743-ac2a-a2c11b81ebc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aa5de8-855b-4ad4-8e86-eb1db056dfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8adbd93-5d84-4c99-b043-4770f19990a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca90ea2-598f-4191-937f-54d65589940c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24a6f2c-f4da-4915-a6a3-9515d025d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfdd8d3-4be4-4b46-93a0-9f7d54ad4930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0827708f-291f-470a-a274-de3da3fa12a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21b6bd1-827c-483e-958a-fd4bc20291f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41196df-87ad-46aa-8f47-d4e86880f46f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95c5dd4-d81b-44c4-a119-b97af4ae0f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e98131-c6f1-4819-9cf9-8b5634e30ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d521afdf-bcdb-470a-8759-c385059c960b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f22a93-cf38-4750-bd93-d536feb6bdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153cfa44-ddfe-489a-b339-95a8a89a868d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eec9699-068b-4647-9b65-2a7ccfece4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29dc6a0-276a-4f18-a0c3-2979121012b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a932ef3-753c-4087-b726-33070547aadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb64b12-e30d-4061-a2d7-06f2cfe0be66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cfac95-81fa-47c4-8fe4-792a82fd1e75",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58e48b5-82d7-441c-b363-c1f477401f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed308624-3730-4871-ae8f-75e782d74fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05c27df-a2b0-4c70-92a5-ca552c5db823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63af3ff-39fe-4e69-bc99-fe88a12b79a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ab5429-98ef-4fec-b1e2-1ae59f9135be",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6800d316-bb40-4831-82d0-9625fb704e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45157fa1-f3d4-43f8-a210-005d6944e388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854e0d7c-7ae3-4264-a727-8967d9431046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c199c9-39d5-4f0a-8614-3888a17e5172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c4db2c-3e71-401b-900d-99412b798604",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41e934-0944-475a-94b1-298ab0a68391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8b6249-0cc6-4a25-b6b4-752192286adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d713cfc-21a2-44d0-9c2f-bbb82cb322ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d036bb-bd10-4fef-ac1f-172cde5dea0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8d181-44a9-4a1a-acc8-15e67aacd919",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf63d6-64ee-46e8-8b47-e091fdc2d80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee583cac-4696-4679-9084-790950bab086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3a6f2d-62b1-49b8-a904-b8594babc67b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f9163b-b509-4ebb-a7db-69f46206ae51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65b926f-34fa-44ec-ab78-cab34a283734",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f0ce39-969e-43b9-8c27-5efa9cde2020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb20eda6-8666-4ddd-924b-3d463cfb1435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88b8e3b-1211-447b-9146-2a07d1e30d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebee46b-3ddf-4eaf-9e7d-2f3d8478640b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84a58f19-8c0d-4888-b5df-3b5c090d0b18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9840bddb-e93e-4be9-a370-8f77a9a307db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9baf0c2f-2d61-4bbb-98ba-676e634891fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a8798c6-a154-453a-a3ff-a362f83765f0"
                    }
                  }
                ]
              },
              {
                "id": "d3da8a88-28e0-4a63-99ad-ef2b7c752db3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a196bdcc-8f0f-4763-a4d1-e9df168bf962",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec315ca-5ffd-4b4f-91ff-99d19bdc5af0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ae39c4f6-0944-47c1-90f4-1ab969940ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae3978-a2cf-4d71-a60f-03dbfe9095b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fda8cf19-6ff4-42e4-84cf-f0e8197fa530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25974464-e7ca-4b2e-922d-ff82afdd5013",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3d8f19-e251-49dd-b6f3-3be00c8c4c04",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "10a2227e-03f5-4b9b-9d30-a39a8a2f991b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e4c93b-77e4-4b50-946b-7d5e50a580da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4e237b0-f12a-4116-a005-1b9b7e42e1a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfa4f383-ceea-4eae-9db7-26c17783d3ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2b53d06-0b31-407e-a6ce-1fa05abfebd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5966aef8-f133-45fb-a8d4-95379320465c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e0dd680-5fd9-4296-9812-a59f9d1b979f"
                    }
                  }
                ]
              },
              {
                "id": "8b56e830-64bc-4a82-92f1-cb1b2c973216",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "02bd8f24-bac0-4934-90a8-8239624f5cfc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb5b43b-6901-46a1-a0de-34fe1db34ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "db6e850f-9f61-4e57-9814-1fb98c6a37e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3428ce23-f4d3-43fc-b182-d853d58338fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526466dd-fb4f-4641-8668-d28e9ccbf6ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "57f44284-7b32-4126-a1a3-182c51040a1c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "229cb14f-1c6e-41cd-8cdc-bf4dc79e6c24",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54a424ed-c5f2-45c7-821e-67e0a2b75571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e5d15c8-c93c-4fa2-92c5-c5f64f4357a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76e95a19-3e8b-43d6-8a54-c63444fdbdd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a67dec4-d446-446d-87d4-519a25b8c2ee"
                    }
                  }
                ]
              },
              {
                "id": "d3d0364e-fe09-40a7-a357-bfc9cf9089c5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af86c96f-2e1e-4424-81f6-42bb8089e025",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32d3c167-e881-46fa-847f-c79feec4ec96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8410fb33-afbd-413b-a66e-aaae433bdfd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af255ac6-2b34-4ced-ba0b-234a59d366f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59d1fcfc-9c4d-4f3a-89bf-972a94063d7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5024fba3-34f2-4588-829f-98c1c3409a89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11b77ee2-2aa6-4bf2-b148-cc69fd75a52c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b44bb351-e39c-425d-8298-a7846a759e86"
            }
          }
        ]
      },
      {
        "id": "ee8671c8-884e-423c-9b8a-3a45caf56e75",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e786bd91-153e-4841-bf14-727764c7f903",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03583551-8660-4e87-8330-c3b66b187178",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ce7360-2594-4a6b-b32f-cf64c99887b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0b3ae0d-ce2f-473d-8cb2-297648c7f0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778d8f26-cdf0-41a4-b971-f87482b5ba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58176435-e16b-415f-9c86-183b39f1ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f69d505-bbd9-43d5-b36c-a8d69f401c67",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf1f4d5-f112-43ee-b25a-644cb2e768cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bad9bd7a-6693-4daf-b8e3-fc37a44630c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fb9478-f419-4a8f-ad1f-c1f45bb9dbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3373b1b-69b2-41d6-aede-795265cf8707"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42187c9b-9895-4339-bcd9-9fc0d8f36550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222dbeae-3dfe-4f2f-9286-8c83b0eedd2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f6098d5-b995-4fd1-a982-7f8023ca707b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "332d93f2-8ebd-468b-bd92-5b61411bf6d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41279c2a-5129-42bf-bf83-0c38956748d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c8726d8-cfe8-4b6f-9844-a3dc131d8f85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "144cb1fc-a337-41b3-b520-ae7ed5d7a50e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33334773-3aff-472b-b773-ca4cdd71376e"
            }
          }
        ]
      },
      {
        "id": "7dc5c9a8-633f-4296-ad9a-12da541fff60",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c5ff0492-6eba-4783-8bf7-1ad484401eb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f125ca4b-63af-47ab-80d8-6386f8131577",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b105ac3-0dde-455a-a509-0eacc0fa61a3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10694273-135e-48f3-a63d-a05c333d8677",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f93580e6-24c9-4c51-bbc8-4788bef2a90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d67d487-306e-45b4-b484-b69e45a2ebfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc935655-3613-4965-b090-44524cf8e914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71706fd-d447-4842-916a-31b05b300f79",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9612e526-7ea7-469f-b947-b65306fb0ef4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ccca262e-701c-4e62-99af-dad0470fee0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02bf44-f57e-49a0-96e3-582be7f069b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5dae4d9-96c0-4a17-a425-115d625a0d34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21c14a7c-99b5-42e7-906f-4cd3b78815ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fec64663-9e74-4958-ab04-b4525b74edd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e344b1c5-4199-4c36-88b1-0b8aa62211be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc57fd39-ec13-47a9-b193-ce62cb57a097"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "191fef7b-b9bd-4f59-bd07-949178e2be1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b8ca525-b32c-46f6-89f7-43b3c1de927c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "995425b0-e1b1-46b2-9c74-790039cf5950",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e02f6186-517e-4d9b-aa4b-6d8a8f2c1aa7"
            }
          }
        ]
      },
      {
        "id": "21be46b9-8c47-4486-ba1f-c3016ada31e4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a4fa5c74-b4e2-4a16-83a9-08ff82af8b9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "caaf5a93-7077-4ca0-998c-1976bc7476a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f406eb4f-3db6-46e4-9f7e-945ed4726c9c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e019471-7423-4ec3-bb58-34a7222d43a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ff8eaf-fbe6-49f0-b8c0-566ca54b85e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9a2600-c103-462c-aad5-a2112536ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0cce00c-aedd-4803-9cdc-50a463ff9dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea7d4ba-25fd-4803-8ff9-30e4aad710bc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd6d92-9f8f-4561-b36a-50f27bea6213",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc07a37c-66d6-451f-bb27-09a38a5afd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4022ef07-359d-4525-9d65-4582fea62342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "891b832f-2585-4aff-abe2-330daa90bccd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5fc638d-cb20-411f-ac79-2e2a578eea2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0f077e7-2a82-499a-b81d-85200e9e5589"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11a08b17-9b07-469a-9e9f-ffa36fc9c274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5983e7b0-86b7-4c31-9465-266924ea0f7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "800f0d4c-7a7d-45f4-b6c4-f5d7d48d38ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8d1a03a-68d8-4067-9f90-889a19d824d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72d9972b-2a1d-4074-852f-4634ff29882a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22617ad6-98e3-48ac-8e13-75078d88e4cc"
            }
          }
        ]
      },
      {
        "id": "306dad70-8a9d-4d6a-a1cf-6470abbd5eb4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8e29faa-a5b7-4666-9a73-173e16af0f1b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35a4ce90-98f5-4205-8e34-d7c8a4d4e59a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3db00ea6-2672-4426-beab-cef06c48f8da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fb2f582-ef7a-412c-a87f-f9565317a3e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d33f488f-4ac0-4b6c-a5c0-1c1c383be6b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 18.312741312741313,
      "responseMin": 7,
      "responseMax": 247,
      "responseSd": 37.517649280613526,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678322551939,
      "completed": 1678322567317
    },
    "executions": [
      {
        "id": "4ce1aaa9-56ca-4bf9-843c-2c7abd176fe2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "37686505-e2a8-4928-9540-4ca8fd0631b2",
          "httpRequestId": "0b7d85be-abe9-49e3-a05e-7c925a068c93"
        },
        "item": {
          "id": "4ce1aaa9-56ca-4bf9-843c-2c7abd176fe2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aad53724-b37a-42a6-aa57-6809d81e0cde",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "c76b6e44-b7af-4bd6-8585-f7ffdfffaa0c",
        "cursor": {
          "ref": "dd1be41d-2ee8-443d-a36a-99b3e340b8d3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "32adc044-49be-43c0-97e8-a9f764eebb4c"
        },
        "item": {
          "id": "c76b6e44-b7af-4bd6-8585-f7ffdfffaa0c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "744233be-304b-400e-884a-1804d0419d96",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7ff96902-ad3b-4883-86cf-9d4f7d9312ae",
        "cursor": {
          "ref": "55085e7c-54f6-46a1-a629-3c8d1b788028",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "377e866e-eb5f-481b-ba2a-9cadc80ff27e"
        },
        "item": {
          "id": "7ff96902-ad3b-4883-86cf-9d4f7d9312ae",
          "name": "did_json"
        },
        "response": {
          "id": "7c6e5f49-e62a-4200-8d35-87b8eeb08a95",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3ab2d0-2079-4c26-adaf-9d593dba4af2",
        "cursor": {
          "ref": "c22457ca-ec4f-4f5b-9575-2ad86866057d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba1d5204-e69d-4e1f-b49b-4f12f78cfc58"
        },
        "item": {
          "id": "bc3ab2d0-2079-4c26-adaf-9d593dba4af2",
          "name": "did:invalid"
        },
        "response": {
          "id": "9a414f87-d76f-472a-9a4c-5b8348132454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3ab2d0-2079-4c26-adaf-9d593dba4af2",
        "cursor": {
          "ref": "c22457ca-ec4f-4f5b-9575-2ad86866057d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba1d5204-e69d-4e1f-b49b-4f12f78cfc58"
        },
        "item": {
          "id": "bc3ab2d0-2079-4c26-adaf-9d593dba4af2",
          "name": "did:invalid"
        },
        "response": {
          "id": "9a414f87-d76f-472a-9a4c-5b8348132454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016c0576-b999-4516-94a5-472d0eefbcc2",
        "cursor": {
          "ref": "84627077-89c4-49cd-9e9a-df13c928e05e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9b27a105-09eb-4fdf-b28f-93f2f60f147c"
        },
        "item": {
          "id": "016c0576-b999-4516-94a5-472d0eefbcc2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "52ae5187-656b-44f4-a719-7f03dd9eb6da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54b87f6-e26f-4d1f-a7ed-1b4bbb87c74f",
        "cursor": {
          "ref": "486ed5bb-b902-4aa0-960c-63ff1539f81c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c6623aaf-5229-487c-9c98-12cf1aac456a"
        },
        "item": {
          "id": "d54b87f6-e26f-4d1f-a7ed-1b4bbb87c74f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c7aeebaf-c96b-4812-a9bf-34922084482b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2620b75-2f93-4171-a077-79a0efaa01ac",
        "cursor": {
          "ref": "15fc2a2f-2158-4ff0-98ca-773867d70e01",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e919997b-b854-4432-bc2e-6f01ba2a1d34"
        },
        "item": {
          "id": "d2620b75-2f93-4171-a077-79a0efaa01ac",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1a35735c-a921-4128-b69e-710cce07246a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc272a4-1475-41f7-92b9-8217f56ad666",
        "cursor": {
          "ref": "f3905b6d-187a-4a4b-b20b-35d122564ea9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ae6ae2a-0124-4830-a59f-630ad7d82f64"
        },
        "item": {
          "id": "cbc272a4-1475-41f7-92b9-8217f56ad666",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d691ba92-2337-4a93-96a4-cfe032f40d30",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc272a4-1475-41f7-92b9-8217f56ad666",
        "cursor": {
          "ref": "f3905b6d-187a-4a4b-b20b-35d122564ea9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ae6ae2a-0124-4830-a59f-630ad7d82f64"
        },
        "item": {
          "id": "cbc272a4-1475-41f7-92b9-8217f56ad666",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d691ba92-2337-4a93-96a4-cfe032f40d30",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6a586e-f396-4436-96a1-ec66fe0aa599",
        "cursor": {
          "ref": "69d0e955-19d9-4ecb-8bf3-9ebb49e618f0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff13bcae-9fc8-4224-97c5-35b5240194b7"
        },
        "item": {
          "id": "ce6a586e-f396-4436-96a1-ec66fe0aa599",
          "name": "identifiers"
        },
        "response": {
          "id": "2a697fa6-479b-436f-b58a-de76a27ab6d4",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a981fff-8ae6-4d2c-b7b4-72ba3dd058ea",
        "cursor": {
          "ref": "8e686f90-4499-4918-9fef-7cbf8389d1c8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a38ae6fa-13cb-4409-b1b5-39f84766ff59"
        },
        "item": {
          "id": "9a981fff-8ae6-4d2c-b7b4-72ba3dd058ea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7713f5fb-46af-46e2-a0b2-4abe946ff834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a981fff-8ae6-4d2c-b7b4-72ba3dd058ea",
        "cursor": {
          "ref": "8e686f90-4499-4918-9fef-7cbf8389d1c8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a38ae6fa-13cb-4409-b1b5-39f84766ff59"
        },
        "item": {
          "id": "9a981fff-8ae6-4d2c-b7b4-72ba3dd058ea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7713f5fb-46af-46e2-a0b2-4abe946ff834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53626a2a-7d45-4bac-9bb6-6d1b689e66ff",
        "cursor": {
          "ref": "8f354e0a-9410-4cf3-ab3c-2cdd5478c2de",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "37d9b5ce-71d3-40c2-a4ad-a798a147bddd"
        },
        "item": {
          "id": "53626a2a-7d45-4bac-9bb6-6d1b689e66ff",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "57042913-8424-4087-bc5f-a48287cdd087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a529d50-a57f-4fe7-b736-c6331a581f7c",
        "cursor": {
          "ref": "4d4a8084-27f4-4769-9abf-9d457cff88f5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa0e81ba-6e7e-4cff-9353-359d3505d002"
        },
        "item": {
          "id": "1a529d50-a57f-4fe7-b736-c6331a581f7c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "40629471-51f1-4213-a3f8-73f695f59d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dfad39-ca12-4f7e-9cf4-13d538192d40",
        "cursor": {
          "ref": "37d6d38e-eb3e-483c-98ee-095be20e2d44",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b39ff381-a0e7-4ba0-960a-c156f328886c"
        },
        "item": {
          "id": "46dfad39-ca12-4f7e-9cf4-13d538192d40",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3dd3537a-2b10-49d3-b168-bb8cf502697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d4bfbc-418c-4f08-97f4-342bddded2a9",
        "cursor": {
          "ref": "5734407f-437b-4532-a50b-2bc96df48342",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5e76ee15-757e-42bc-bf9c-f8121121f72c"
        },
        "item": {
          "id": "03d4bfbc-418c-4f08-97f4-342bddded2a9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "93611d4f-f359-48df-beb4-4d6c0afd13cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5342a3-bcea-4243-b081-afae78d97e06",
        "cursor": {
          "ref": "f8acc496-3891-44ac-8a50-65f4d95e175e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cf1b2cd2-f0c6-4a61-92ee-0bf272e05da2"
        },
        "item": {
          "id": "cc5342a3-bcea-4243-b081-afae78d97e06",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be48110b-2f8b-4b51-a8f8-fd065bda8d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b293ba-7057-49bd-b6fd-109e2082b8ac",
        "cursor": {
          "ref": "acbbfe9e-f14e-4bb7-9000-da98d4cab047",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e52453ea-0c06-4cc7-92ff-e299a20d37e7"
        },
        "item": {
          "id": "01b293ba-7057-49bd-b6fd-109e2082b8ac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "63c1886f-4766-4e59-85bb-77c171305cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3380a224-9f0a-4935-943f-e310d869723a",
        "cursor": {
          "ref": "98c23fb4-a514-48f9-a512-aa6a6aae01ff",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1cbb0cb6-07f0-4169-9b96-0f87ec58423d"
        },
        "item": {
          "id": "3380a224-9f0a-4935-943f-e310d869723a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6f6291f4-4a7a-4173-9189-6a41077f5ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215d6f9d-1deb-4fc1-a852-d17b70e4845d",
        "cursor": {
          "ref": "0776404e-f560-4a5b-aee1-c533c0201ca0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e0bcd1c6-40b8-4486-8b2d-f41fffc1e74b"
        },
        "item": {
          "id": "215d6f9d-1deb-4fc1-a852-d17b70e4845d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1ace964d-7eb0-4660-8fe2-ac37b09b8ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7e053c-d34d-4f11-97aa-5fe8e8b8febf",
        "cursor": {
          "ref": "10531dd9-03e4-4853-aaff-5dbe590b5faa",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be5c1812-19f1-4ad1-9040-a7be5ae72219"
        },
        "item": {
          "id": "3e7e053c-d34d-4f11-97aa-5fe8e8b8febf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dea9b22c-6e00-4afe-bfe4-c8169296b5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8959dbe-ec39-4d25-b6a2-c12880a389f3",
        "cursor": {
          "ref": "f5b89f86-8bb6-488d-9d88-ffdd6602bf72",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "84c3f786-0257-4e3a-877b-710cab5b9b84"
        },
        "item": {
          "id": "a8959dbe-ec39-4d25-b6a2-c12880a389f3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "17664d05-afb9-46be-b7cf-b891e97f828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e0c407-d5b1-47b7-bba8-618f27b6e52c",
        "cursor": {
          "ref": "8fe44356-9b71-4be8-ad5b-8073b8c8a132",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1bc9262b-64d9-48db-b9c3-6768d4566ca4"
        },
        "item": {
          "id": "16e0c407-d5b1-47b7-bba8-618f27b6e52c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "11aa46dd-020d-4e8b-8ed0-cec0210c8b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f01bf7-eb4a-43a5-b957-da352ed09254",
        "cursor": {
          "ref": "957c1b57-7e32-4ab0-8717-eeb7734971b7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "635c774e-8457-4273-ad62-672534dad7b1"
        },
        "item": {
          "id": "c4f01bf7-eb4a-43a5-b957-da352ed09254",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e177950-9698-4102-8392-6efbc4edd0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0677264-e24c-425b-88a3-d8482c76a37c",
        "cursor": {
          "ref": "19ea5f8c-550c-48a5-b2eb-26e69417f493",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55b972c9-bdf6-405f-b51a-9c037a71b39d"
        },
        "item": {
          "id": "d0677264-e24c-425b-88a3-d8482c76a37c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "27cf2f22-6589-4771-a2f9-42c9ddfc2f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7204138c-f294-4a75-9062-0aa0add685d8",
        "cursor": {
          "ref": "91d22d7c-a62c-4476-944b-4cbdabea16a2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "17062a0e-d6fd-4203-88a5-0e5391a9d888"
        },
        "item": {
          "id": "7204138c-f294-4a75-9062-0aa0add685d8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6bd0ecff-063e-49ce-9948-f493c51b1fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c3d809-3cdc-4477-8f31-e90e2c502d43",
        "cursor": {
          "ref": "f7c13cec-519c-4c2e-80c8-710f09d00b8b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "33eec74a-6585-4e55-805f-96b2bc00d38f"
        },
        "item": {
          "id": "b1c3d809-3cdc-4477-8f31-e90e2c502d43",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "067da9c0-56bb-4034-94e6-a7ff7eb4f3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a92cb3-49a3-4c9a-9bc8-fd09d2df0d3c",
        "cursor": {
          "ref": "66352815-b556-4f94-b43a-dbf077769bba",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d2a502fb-c49c-4571-8de7-3230f0b1b6de"
        },
        "item": {
          "id": "73a92cb3-49a3-4c9a-9bc8-fd09d2df0d3c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5d8bc036-6f8c-4c4e-af39-09b700ff4286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad25ccc3-9419-4dfc-b4b7-75cddfb9af8c",
        "cursor": {
          "ref": "8ce5f2eb-311c-45ad-9098-430d1efdcff8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d09cdbc1-5054-4ec6-a8f3-d92059bd8f32"
        },
        "item": {
          "id": "ad25ccc3-9419-4dfc-b4b7-75cddfb9af8c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c40b9c88-546b-4bb1-9f3a-fd4cb29d7613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a8c653-2363-4653-b1a5-43d3310a1536",
        "cursor": {
          "ref": "4c3785db-a78a-4486-9803-44782df76db3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3f009326-c9b6-4100-9483-8cd0b6910aff"
        },
        "item": {
          "id": "d8a8c653-2363-4653-b1a5-43d3310a1536",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "292a3e61-a489-4613-9fda-b7734555386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360ef754-1091-452a-89f9-d2bf17c92956",
        "cursor": {
          "ref": "81e4548d-ef67-4f07-ad27-b164339ad6af",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e4068f6f-f2a6-4e96-b0e4-f3a903c9bb17"
        },
        "item": {
          "id": "360ef754-1091-452a-89f9-d2bf17c92956",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8492aace-f5ee-4e2e-b5af-9696ddb60c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4684a2-4780-470b-86de-6f50a9d96c9d",
        "cursor": {
          "ref": "7cafe63d-4639-4279-86f2-73f5bef2a583",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0258af79-c1dc-400d-919f-64f5ce55bed8"
        },
        "item": {
          "id": "1a4684a2-4780-470b-86de-6f50a9d96c9d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d108cfcb-08a3-46e9-8a93-2a998c4b9918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8d8c27-7ed3-4715-9004-f2d77e751102",
        "cursor": {
          "ref": "6aa2f6e5-fec1-4fbf-9424-317507751d36",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4052288b-73e2-463d-8419-e6e559ffe801"
        },
        "item": {
          "id": "0f8d8c27-7ed3-4715-9004-f2d77e751102",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ecf0a623-6da2-4335-8346-b4b2a6427158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891e5e0d-7103-4e20-9fd2-68743d6e9572",
        "cursor": {
          "ref": "24609463-7239-4a89-9f16-f57bc6173b8b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ae4ced21-260d-42ae-9b9a-dd09c5c2a551"
        },
        "item": {
          "id": "891e5e0d-7103-4e20-9fd2-68743d6e9572",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6cb2e5f7-f4bc-480a-bbb4-0f5affa37466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb7dc3-f4f2-4ba4-a76a-485e29a1ff97",
        "cursor": {
          "ref": "7360dbbe-4c6e-47db-98ad-23b70c46c016",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ec7578b0-28ad-4ca0-a403-06aa0bde71a8"
        },
        "item": {
          "id": "dfdb7dc3-f4f2-4ba4-a76a-485e29a1ff97",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2d6c4aa0-d6f2-48c0-aad1-672fde63b1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c188741b-ed98-4d42-9462-9fa99f262413",
        "cursor": {
          "ref": "6f602848-fa60-44df-ab76-1ca7e83cefdd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4a80e185-f896-4c9e-8f95-1f5af9a9927b"
        },
        "item": {
          "id": "c188741b-ed98-4d42-9462-9fa99f262413",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "73ef9367-37c0-44e0-87ab-29cecfdf9ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e92ce95-69fd-456c-8a34-d16a614eee4a",
        "cursor": {
          "ref": "7889676f-fcbb-4002-be58-fc9d7db938fe",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "09c002a9-9bf3-4aa5-91bc-81df530243a0"
        },
        "item": {
          "id": "2e92ce95-69fd-456c-8a34-d16a614eee4a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b7472d6-4c82-4b1c-bdb8-e3739be82a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630f851e-06b9-4aa1-8eef-e6f903c1c7b3",
        "cursor": {
          "ref": "c85f394b-01af-443f-bf96-2e85054fd3bf",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2bb49f08-2e52-43db-8b9a-21d17f9f79f0"
        },
        "item": {
          "id": "630f851e-06b9-4aa1-8eef-e6f903c1c7b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bce4c2d4-63ba-4b1b-b008-cbf98217223a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fafa98f-b10b-484c-b718-23f3abf251fb",
        "cursor": {
          "ref": "6235c636-2b29-419b-9f14-aa5f70377c8b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "59107941-1ada-45c8-ac86-19b4b98f91b7"
        },
        "item": {
          "id": "5fafa98f-b10b-484c-b718-23f3abf251fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "95c26ca2-17c0-4788-b282-a329e1eba65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0364456d-e939-47fc-9130-ec02cc8235e8",
        "cursor": {
          "ref": "3ef25ac3-b02b-499c-8ebf-81013d5c7ef4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "39e9cd9d-7e01-4642-b650-ea47dcccf2ff"
        },
        "item": {
          "id": "0364456d-e939-47fc-9130-ec02cc8235e8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cbeb3575-37f6-4c03-9a0f-1255a536d48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408b523d-85bf-4a2f-9c97-53b5ba58f078",
        "cursor": {
          "ref": "b99150f3-406a-4cd8-baa4-c83a83372595",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2ed98fb3-1a59-476c-ae47-0963d8b1acf5"
        },
        "item": {
          "id": "408b523d-85bf-4a2f-9c97-53b5ba58f078",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d93f936-6f6c-416f-b612-03ae4b463542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca405ab-56a9-4ccf-aa33-6e3193f41bf2",
        "cursor": {
          "ref": "eebf21e7-c03f-4a6e-9927-d63b2b81437f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c16e5248-108a-4c5e-b9ab-3dbabe49c028"
        },
        "item": {
          "id": "5ca405ab-56a9-4ccf-aa33-6e3193f41bf2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "04f416d9-837b-49d0-af8d-c9b68738c1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe36ba-c58e-4bb9-ac60-a34fe2dfa6a1",
        "cursor": {
          "ref": "2c8db7b1-acc7-43ae-9743-19f9801dcbea",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eef0c161-d84e-421a-b77e-bd5cbd9371bb"
        },
        "item": {
          "id": "68fe36ba-c58e-4bb9-ac60-a34fe2dfa6a1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "528f33dd-08df-4762-b8fe-5f04b8ba0fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fde082b-a3df-42d8-9458-a35ac3b59afe",
        "cursor": {
          "ref": "d2e5c1e8-3939-4ea4-b2cb-7547f65ab5d7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6cca74c9-3e37-4627-a720-5f48ba9704d9"
        },
        "item": {
          "id": "3fde082b-a3df-42d8-9458-a35ac3b59afe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48c825a3-5629-4af2-87c1-2bf2f7872590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d662fd2-ea8b-47eb-9481-382857f80041",
        "cursor": {
          "ref": "e2770cfb-857a-40a4-9dcc-9517cbb0dd34",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "26d6bb4c-2f53-45b1-a416-b9cbeff2664d"
        },
        "item": {
          "id": "9d662fd2-ea8b-47eb-9481-382857f80041",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cc078a2d-f26a-474d-803d-26f0f4c983eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eab8e4a-c054-4f34-b1ab-056c43c49591",
        "cursor": {
          "ref": "efdbe3e8-7486-4f64-91f9-d2e1a98ebea6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c17535d1-522f-4455-ae0c-3dd0d9ef4aed"
        },
        "item": {
          "id": "6eab8e4a-c054-4f34-b1ab-056c43c49591",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5d6db2b4-55a3-49fb-9ae9-f5927a3b5ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1bb135-7a92-438d-be22-054f203dab5a",
        "cursor": {
          "ref": "d9b0f153-80fa-4311-ad48-f9b4813c92d6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d92479ed-1079-4a10-bd8e-05c13fb4182f"
        },
        "item": {
          "id": "1c1bb135-7a92-438d-be22-054f203dab5a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26fc064e-e39f-4e84-8c7f-2a6f8b58b15c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1d98b4-7ba3-4997-b8d9-8b6a0c6507a5",
        "cursor": {
          "ref": "47acfbc6-d522-45ca-81f6-e4b0ef417b3e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8c443aac-b6c3-46c3-9a7c-3045fe5ff27e"
        },
        "item": {
          "id": "7a1d98b4-7ba3-4997-b8d9-8b6a0c6507a5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5a7ad4f4-6498-49f3-8b8e-331296c82f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cae089-2265-4690-907f-8bcd60e0b4f8",
        "cursor": {
          "ref": "a89fb401-0958-48f8-937a-97e82e824d84",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "952e776f-d7e4-497c-9233-f061fbe747a6"
        },
        "item": {
          "id": "c9cae089-2265-4690-907f-8bcd60e0b4f8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1c755fc2-cde6-4b56-9285-082858765ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cedd0a-83fe-41d6-beed-d3b0ce25828c",
        "cursor": {
          "ref": "b7edd865-1150-404e-a121-68446fbe0c1f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "13a644ca-5351-4600-aa44-47df6807eb39"
        },
        "item": {
          "id": "a0cedd0a-83fe-41d6-beed-d3b0ce25828c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3c0a9e47-efdf-4bf2-b99a-ae5b76434912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b58510-2779-41c8-9d87-d24339fac97b",
        "cursor": {
          "ref": "eabb0b05-092e-4b72-97be-cd783ee51e0a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c88d0f6c-174e-4f53-bce5-b9f4a37ca4bc"
        },
        "item": {
          "id": "37b58510-2779-41c8-9d87-d24339fac97b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4462c7d8-7c87-4a63-8f81-c4af34e8b3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61db1b03-fa4a-418b-b529-84eb75ca1d6d",
        "cursor": {
          "ref": "aa27be74-9bd4-483a-b5bf-08bd2870aab7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "46c64635-aa5c-49a8-82dd-eb523513455f"
        },
        "item": {
          "id": "61db1b03-fa4a-418b-b529-84eb75ca1d6d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a3e56acf-f974-4f27-ac66-a006549b52f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fae60a-afbc-4aab-9b96-eeeabe437753",
        "cursor": {
          "ref": "6c3e7b60-daba-4bf2-9c90-6a428932b87b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c068e74c-c4c9-4039-b28f-1c9fa6980aeb"
        },
        "item": {
          "id": "89fae60a-afbc-4aab-9b96-eeeabe437753",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "87cb4868-50c0-405f-a3a8-97fbfddbe2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3515b5b8-43b5-4877-b147-c7e37a255c15",
        "cursor": {
          "ref": "64e0fd56-9896-4039-98b6-c1907022df97",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c0f76b7a-2032-43f4-a79f-96f6ab0cb5e0"
        },
        "item": {
          "id": "3515b5b8-43b5-4877-b147-c7e37a255c15",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef2a985f-65ea-4e6f-a323-f2acd0fe5b03",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84c399e-ed28-47d3-97d7-40c6d868c255",
        "cursor": {
          "ref": "7b31e859-cf17-4ccc-ab66-73cac48c34f1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fd90c6f7-868f-451e-82e2-314841e44850"
        },
        "item": {
          "id": "b84c399e-ed28-47d3-97d7-40c6d868c255",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9e5a17e4-3b95-4c31-a490-792fbe475030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbad377-31f8-408b-8b86-9ac069300dd9",
        "cursor": {
          "ref": "c7b86aa5-6f06-478c-a783-5c0005f2b694",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "32061a71-b1c7-4609-80b9-46427d8f38c3"
        },
        "item": {
          "id": "fcbad377-31f8-408b-8b86-9ac069300dd9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ad45663-2f12-4930-b94c-ae9e2f11eab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688d6464-d3c0-426b-ba7c-f2eb67322267",
        "cursor": {
          "ref": "913f5286-70bd-4ddd-86ff-67e4d100f5cc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "170da6a5-a2a1-4add-80e1-1d0466ef5526"
        },
        "item": {
          "id": "688d6464-d3c0-426b-ba7c-f2eb67322267",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ac7ea2eb-eff4-410f-a9e7-1ffba63f6e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd54d6b6-fda6-4bfa-82bb-93d345a4cfe4",
        "cursor": {
          "ref": "b120e95c-f052-4e81-9ff6-a024d9f7372f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eff93c35-f581-4fcd-943c-87b714cdaed5"
        },
        "item": {
          "id": "fd54d6b6-fda6-4bfa-82bb-93d345a4cfe4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b10647a7-54f7-4483-8688-c498749dc346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9af9a-98ae-4994-bf1a-01d6f4ac078f",
        "cursor": {
          "ref": "7958a35e-4f7d-4694-89ab-826a68eedbd5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9487d7d3-51ea-420b-9464-610d9a6c24d6"
        },
        "item": {
          "id": "ddd9af9a-98ae-4994-bf1a-01d6f4ac078f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "63d7bc4f-0ac7-4b5e-a650-c7727674d0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed314e2c-2437-4e01-aa7b-5dd16fa0c292",
        "cursor": {
          "ref": "43a6392a-7cad-4300-bc07-9ccf32584b40",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "61fe2bf9-2d58-4e82-a936-c26b2250a4dd"
        },
        "item": {
          "id": "ed314e2c-2437-4e01-aa7b-5dd16fa0c292",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7bc1ce0f-9eee-4a63-ab3c-e1997b2bc13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13389eb-1e2a-4498-84b4-145db0501059",
        "cursor": {
          "ref": "77d57abb-ebec-4982-b81d-410e7ab9f3c2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "27db9d69-904e-445b-ab1a-2191220b4118"
        },
        "item": {
          "id": "c13389eb-1e2a-4498-84b4-145db0501059",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d1e4413-1046-4207-86c2-66b76ec0e1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44249dc1-b9e1-4a7b-a648-4d2927fe804f",
        "cursor": {
          "ref": "36ae3f86-90f6-468b-87df-bd386175ac57",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9b88b9ae-0913-47aa-9158-64e4aed5c146"
        },
        "item": {
          "id": "44249dc1-b9e1-4a7b-a648-4d2927fe804f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8e16e97d-8adb-4eea-a4b3-da3ff9f691f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef2c92-b24a-4b15-9cd0-b3d476179bf7",
        "cursor": {
          "ref": "5c2c1789-d710-473e-8dc9-44cdbfc9bc9a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a322c37c-6985-440b-af54-db76f1c1c20c"
        },
        "item": {
          "id": "54ef2c92-b24a-4b15-9cd0-b3d476179bf7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6032a832-d7e2-433c-be39-f6e8c80533f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d59d69d-00a5-43fe-a84a-7620907b62ae",
        "cursor": {
          "ref": "cc986afd-6cc1-4c68-853e-96828a9b69a0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bc0c2aba-d0de-47cf-9f75-b92288bc3132"
        },
        "item": {
          "id": "9d59d69d-00a5-43fe-a84a-7620907b62ae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0baa4132-23e8-4842-b925-2679d588424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17394db6-a793-4e17-bf8d-c635e74a60ec",
        "cursor": {
          "ref": "2b7db41b-00ff-438b-955f-36a62366b852",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7ffeee8c-6791-4b22-bbfd-29e48f144830"
        },
        "item": {
          "id": "17394db6-a793-4e17-bf8d-c635e74a60ec",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2b533bb-b96c-43cd-a8d9-cf82fc647ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ce55ee-f06f-43aa-ac4e-ea60d6f464e4",
        "cursor": {
          "ref": "7a32a21a-7a2c-4031-953e-4088c3c861f7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c13bbabb-2c02-4c06-b8f1-1e74dbf048a3"
        },
        "item": {
          "id": "a3ce55ee-f06f-43aa-ac4e-ea60d6f464e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "edd2abfc-4087-4bd8-94f1-752ec6108990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa0ede-05e0-4df8-95e4-5ad4c2c80137",
        "cursor": {
          "ref": "78372126-50db-4771-aebc-39249d4441e2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dea203d0-7dcf-4f6b-8a63-34a55c5d11d2"
        },
        "item": {
          "id": "6eaa0ede-05e0-4df8-95e4-5ad4c2c80137",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "672cc307-4efd-4e4c-a7d5-e55bcbdebab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a445b-83af-45b9-befe-6b7e933b3e9e",
        "cursor": {
          "ref": "17692ffd-fbef-45f3-8f35-b6eec0abb8a0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5c2cecb7-2995-4a78-a8f6-3a4514ae5694"
        },
        "item": {
          "id": "711a445b-83af-45b9-befe-6b7e933b3e9e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d61f6f22-415c-4827-888e-bb4f19c79b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f577a1d-5813-478b-b9f2-149d4475e434",
        "cursor": {
          "ref": "8d931c6a-bb1b-4c6d-8456-aad706070e7d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ac8b118-bf12-4571-bc3c-e9410f164eb7"
        },
        "item": {
          "id": "2f577a1d-5813-478b-b9f2-149d4475e434",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92b7deef-3365-4449-ba43-63284d7cfea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813c1967-9bf0-4d52-93e1-98c31d8cb483",
        "cursor": {
          "ref": "2f857b0d-08c9-4140-bbc8-1604f0149dc7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5b725dff-b186-453f-9a3e-6ea6e1910676"
        },
        "item": {
          "id": "813c1967-9bf0-4d52-93e1-98c31d8cb483",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3ea27971-5994-4288-9de2-73da131e8e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530dba4c-4b19-4ba2-a569-0d6a38b4868e",
        "cursor": {
          "ref": "c93c93a2-0998-4bb9-b528-061326680c32",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b5feca95-d92a-4bbe-a1d6-7bd2acc83a13"
        },
        "item": {
          "id": "530dba4c-4b19-4ba2-a569-0d6a38b4868e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e2071581-c5c3-4aaf-ab29-4b45c5d8abe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb7859c-296d-40a8-8c05-e05f7827a2b8",
        "cursor": {
          "ref": "c6fe730f-0093-4244-9894-31abc843e77c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "968b479c-b185-429d-b1f2-a3d17ec260d1"
        },
        "item": {
          "id": "6cb7859c-296d-40a8-8c05-e05f7827a2b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eb407edb-b3a5-4aab-8859-8f5da1bc1b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb63021-7209-43c1-9998-b1972479d1b5",
        "cursor": {
          "ref": "bcb67df9-ec29-49cf-883d-37d721b6af5f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "627570a2-2ce0-47e9-b51a-38f64b0281c1"
        },
        "item": {
          "id": "4bb63021-7209-43c1-9998-b1972479d1b5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4fdd7055-1ee2-4670-ba69-3ab74877e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1cd62-e81d-47b3-86b0-2b20c392c05d",
        "cursor": {
          "ref": "1c4f729e-eb15-40f3-ad2d-876524811bab",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8e6c7c08-7ab3-479f-b1ff-9654ac514660"
        },
        "item": {
          "id": "9ee1cd62-e81d-47b3-86b0-2b20c392c05d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ad37eeb6-3d84-43eb-99b3-260f79c1b0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7213a900-62de-4ab4-af72-2cc29e627fd2",
        "cursor": {
          "ref": "3cea92a3-c7d8-41d0-9fb8-7d0f92f50ba8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "27fa6818-a7d5-4732-938a-6c17180e30a3"
        },
        "item": {
          "id": "7213a900-62de-4ab4-af72-2cc29e627fd2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3d88727e-48a2-45e0-bbd8-0a29ed879b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30b714f-8271-4ec3-91a3-96d0d53c9657",
        "cursor": {
          "ref": "8004c50d-5f0a-45ca-a7c0-cf0054c32afb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3e94509f-f759-4442-b41b-15fd208f5b08"
        },
        "item": {
          "id": "a30b714f-8271-4ec3-91a3-96d0d53c9657",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "25e810f3-6e31-46d7-8e54-fce5bfa71d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca6ee36-bfc2-4fcc-a783-a735157259e0",
        "cursor": {
          "ref": "1af8a365-feca-423b-9645-726d04c4bdbb",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "43c4024a-e24b-4d2e-b6d2-18d4950ffc5a"
        },
        "item": {
          "id": "aca6ee36-bfc2-4fcc-a783-a735157259e0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "794ab034-8994-4762-b084-73b4ea1c7a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e8b478-d33a-4d77-8a68-93e0a54d0738",
        "cursor": {
          "ref": "abae5acd-3e57-4936-997d-4ea5ee27d77d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cd9105d8-33dc-46e6-a97c-868af808fdd6"
        },
        "item": {
          "id": "96e8b478-d33a-4d77-8a68-93e0a54d0738",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1584772b-60a8-4a00-a10e-a0aef4921f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd729799-58b5-477b-b0d4-ec6244f14f32",
        "cursor": {
          "ref": "cf43e2b0-c2d7-4e03-ae61-f229497b7471",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a212fe20-e161-4daa-a36b-d5965e5278f4"
        },
        "item": {
          "id": "cd729799-58b5-477b-b0d4-ec6244f14f32",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2d1d8d8d-9ce8-4399-9f90-876b67bea6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2245905c-aa58-41c5-be86-65741db1ece5",
        "cursor": {
          "ref": "93148d2a-9862-499a-aaaf-21ffe6dd7b6d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e59f382e-b3f8-40b7-a949-f41d9932dd60"
        },
        "item": {
          "id": "2245905c-aa58-41c5-be86-65741db1ece5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2e68dc9b-e561-4cd3-8fb2-9cff9bdfa8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cdacd5-ccd6-4794-b4df-045ff9b1f3ad",
        "cursor": {
          "ref": "fa99bde1-a4f5-49f0-9889-d0485801f92c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "43ae80da-196a-459c-99c6-5a584c39df26"
        },
        "item": {
          "id": "a8cdacd5-ccd6-4794-b4df-045ff9b1f3ad",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c9edd020-86d6-446d-93f8-d4ccff8beead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a657a096-e239-4eb4-b8fc-ab9c70171c68",
        "cursor": {
          "ref": "0205d51f-2006-4149-ac12-dea57eeebbc6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5b6556e4-f20c-4f2f-93c1-d304666a7b00"
        },
        "item": {
          "id": "a657a096-e239-4eb4-b8fc-ab9c70171c68",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cd42451-7a2e-4758-967c-a5d624374b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcad15d4-fcac-4595-accf-e402d180fefd",
        "cursor": {
          "ref": "50de6662-ef3a-4131-9fda-adf0a14d2390",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "db2c6b31-63c9-486f-bad3-9a124ad5fdaf"
        },
        "item": {
          "id": "fcad15d4-fcac-4595-accf-e402d180fefd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "714b0f51-f246-4b4a-a81e-ad2c2ce0a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c00f631-873e-4ad9-8ea4-1622d1daab36",
        "cursor": {
          "ref": "4076cfb7-e695-44d1-a9a2-e8dd1df56ab8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "405e8ddb-ee21-4741-8159-1504666a21c2"
        },
        "item": {
          "id": "8c00f631-873e-4ad9-8ea4-1622d1daab36",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8442a02b-e2aa-4013-b321-c4b5c0c5f7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad0d059-3003-456b-9e6b-c959fa6b25f2",
        "cursor": {
          "ref": "287f3cb6-77f5-43be-9e9b-d93dc6660442",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e113a437-5837-4bb4-84ca-bba04994fb36"
        },
        "item": {
          "id": "1ad0d059-3003-456b-9e6b-c959fa6b25f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1b67267f-f79e-48c0-aa9f-feed466c4cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259541d2-9a85-4331-a4ff-83b8c4346dc4",
        "cursor": {
          "ref": "be7b4f0a-c0ad-4830-a1e4-9f197b56ca38",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0baddbc5-7216-4d62-9a3d-b92005bf5cf4"
        },
        "item": {
          "id": "259541d2-9a85-4331-a4ff-83b8c4346dc4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "23dcca1b-07dc-4c8e-9ec4-4f9fd98346ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202b18e-b8ff-4faf-a45a-c1738aa81095",
        "cursor": {
          "ref": "8738890d-6519-49ca-b38c-b09822f7da0d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "994f2fda-f947-41dc-b255-1ad1369cade3"
        },
        "item": {
          "id": "6202b18e-b8ff-4faf-a45a-c1738aa81095",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "29d4888d-7ca4-4219-9d3a-69e825d0ce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68971b4-2226-4712-9168-963b05d01213",
        "cursor": {
          "ref": "ea46bcd5-c119-422c-b909-bffa41d3de54",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b3e572f6-83fb-4c2f-9ec2-67ed73ac8def"
        },
        "item": {
          "id": "c68971b4-2226-4712-9168-963b05d01213",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ca9b00a8-1ca2-4ccf-91f3-3bf78c073dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ceef3a-5093-4ed5-9148-533e9cb97e3a",
        "cursor": {
          "ref": "df3b8c3b-0cb0-4c04-9ed8-48f743d1666c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "021b7c25-de26-4fd9-b2be-e9ccb76ea602"
        },
        "item": {
          "id": "c9ceef3a-5093-4ed5-9148-533e9cb97e3a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d7af05d2-895d-458e-ad76-892e55561a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bea604-87c6-4529-99ec-8d99e84e290e",
        "cursor": {
          "ref": "00aff44f-5648-4638-9577-94b5e05464b1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f98b87e8-bed1-4e7c-a045-334909cc4822"
        },
        "item": {
          "id": "55bea604-87c6-4529-99ec-8d99e84e290e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8826a73a-7f1c-4a64-9084-041489010423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6deb5c-3890-4d00-afec-d161a282681b",
        "cursor": {
          "ref": "47a2e9d7-2cf7-45d0-81a1-cc34dac35de9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf173882-20f4-4c6e-8423-04960d05681d"
        },
        "item": {
          "id": "cf6deb5c-3890-4d00-afec-d161a282681b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "27f5a883-eddc-4ffc-826e-bd6896a6041b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6ba9bf-5f6d-4430-9783-cbf07624ab19",
        "cursor": {
          "ref": "b00e7028-a050-4a1c-bae4-529a07e8070f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "46d31e53-fc8c-4355-aec0-96c3d59dcf38"
        },
        "item": {
          "id": "1f6ba9bf-5f6d-4430-9783-cbf07624ab19",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "44eacb5a-c37a-447d-9aec-f4a554792612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc13495-bb4b-4a5a-bb7a-370c104e7621",
        "cursor": {
          "ref": "eb2a8786-c93d-4988-a85d-b0ea885decec",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3ecd353c-957f-4939-a2ba-0caa473b395a"
        },
        "item": {
          "id": "8bc13495-bb4b-4a5a-bb7a-370c104e7621",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "015047f2-ff28-4cb7-843c-c469d5e13bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c759f-10c0-4610-9ddf-76a4e4d9cd68",
        "cursor": {
          "ref": "fd84ade8-99a4-4245-98b2-0db1d9a9b17a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "401f69f9-6a54-4c1b-a5f7-dec22a229e8b"
        },
        "item": {
          "id": "f61c759f-10c0-4610-9ddf-76a4e4d9cd68",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7cf3c6b7-5f1e-442e-83cb-867118fe15eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15febf2-0f26-472b-baff-8ed86e63afb8",
        "cursor": {
          "ref": "cbc58909-777f-4133-970d-18c4d7573278",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23d94f76-bad6-4f24-8994-f4d0076a58cf"
        },
        "item": {
          "id": "c15febf2-0f26-472b-baff-8ed86e63afb8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d492e9f6-edfc-4729-a84f-549fefaf73ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69964a1f-743a-4f72-be30-9eea40cbef8d",
        "cursor": {
          "ref": "93146b60-0302-426a-a4d6-23aeb5782f45",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fe3e8850-4c9b-45fb-bb2f-1f78e57800ab"
        },
        "item": {
          "id": "69964a1f-743a-4f72-be30-9eea40cbef8d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "500bbe44-2fbc-4bdb-bb96-22f896235956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaa6200-f789-4f69-ba59-00b12589bbfa",
        "cursor": {
          "ref": "bc815fe3-241a-4012-be8d-f2d0a7c652ca",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6b1c090-07ae-4ac9-be6f-2c85bd91cfa9"
        },
        "item": {
          "id": "8aaa6200-f789-4f69-ba59-00b12589bbfa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a8818ab-cbfd-4321-b181-94df700d3b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888a92a0-656f-4b41-8b7f-3663f613f0f2",
        "cursor": {
          "ref": "6bdf0a8e-712e-4691-9050-90ef914461b8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dd4f733a-4610-468c-bac6-322069b0b95c"
        },
        "item": {
          "id": "888a92a0-656f-4b41-8b7f-3663f613f0f2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eafef6f0-7693-4be3-86b2-6f5635e7d796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc16e886-f8d5-4c01-b2d5-19ba6d6635eb",
        "cursor": {
          "ref": "0003b500-481a-4776-9e50-b80c17c56a4b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a6947d1d-c38f-4f90-95ff-6b91f1b579da"
        },
        "item": {
          "id": "cc16e886-f8d5-4c01-b2d5-19ba6d6635eb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aa6f8ded-d7a9-4d66-9289-1e5f23928475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eea2af6-fb5d-453a-91c6-3bacf43868a8",
        "cursor": {
          "ref": "86d9822c-f595-4944-805e-a2fff008929b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e05f7539-a9fc-46da-a15e-60f7291dc8f2"
        },
        "item": {
          "id": "5eea2af6-fb5d-453a-91c6-3bacf43868a8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8159a265-46f3-4d64-83fe-ce7b070af25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb9c539-72b2-4408-ba44-801f799efda0",
        "cursor": {
          "ref": "5dcaf742-330a-4fc7-9046-9dfca97c5d33",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "269bd1c3-74fb-4bb3-b0ea-deabe87d339d"
        },
        "item": {
          "id": "cdb9c539-72b2-4408-ba44-801f799efda0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "72f03034-f5df-4c70-af45-7b9894178505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662b6c9c-3c3b-481f-b64a-cc1ac6c895b1",
        "cursor": {
          "ref": "50e5b299-63ca-4d1e-ad83-9d56517c203c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "abee4c8a-d4df-43cb-bc3f-64c4fb4fb005"
        },
        "item": {
          "id": "662b6c9c-3c3b-481f-b64a-cc1ac6c895b1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f671e00-1e70-4017-b478-6b6cf31fca16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb5d8ba-4f3c-4b5f-9d0f-783b2ea798ad",
        "cursor": {
          "ref": "28582818-12ef-4256-9bd3-dead3fe2a727",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3e0bfd28-b462-4448-9e27-c08f060a0a54"
        },
        "item": {
          "id": "beb5d8ba-4f3c-4b5f-9d0f-783b2ea798ad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3f58a56a-e066-43c1-af9a-355fe7d71f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9cb773-a954-4110-a0c4-e6483be60949",
        "cursor": {
          "ref": "42cee99a-d98d-45c9-9f63-082a4cfbeefe",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4dc22a40-0d26-4615-8aa2-e8405571bb24"
        },
        "item": {
          "id": "9a9cb773-a954-4110-a0c4-e6483be60949",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "55df5ea4-7b7f-45f2-8685-69935b62c75b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1d59f6-b971-48be-bb76-eb4c7e21254a",
        "cursor": {
          "ref": "d4804ff1-b1aa-4c8c-9802-6c2bd4236c05",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6178602a-ec81-4b80-9043-916885116aff"
        },
        "item": {
          "id": "bf1d59f6-b971-48be-bb76-eb4c7e21254a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f2103fd1-6090-4ca6-8c12-390cf6c2af22",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 60,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e54d52-320c-4354-b6ee-a4caac817e8a",
        "cursor": {
          "ref": "6955d67d-ac8e-40a7-a433-b68004ef6100",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e7dc9d12-c5eb-4932-8b41-28043a7fc5ad"
        },
        "item": {
          "id": "e1e54d52-320c-4354-b6ee-a4caac817e8a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c6c697a0-6b49-4f14-bd4a-878ebde914cb",
          "status": "Created",
          "code": 201,
          "responseTime": 183,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f39303a-da30-4d6f-977b-b9b5d0dd9f71",
        "cursor": {
          "ref": "17a31dbb-7a85-4780-9f1f-707ac7394db6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9307ba04-a454-46ab-9f3f-6fa41a00efc0"
        },
        "item": {
          "id": "5f39303a-da30-4d6f-977b-b9b5d0dd9f71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aa77bcf2-427d-4fbd-a936-68a602201811",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9cb16d-bfd4-41bd-9b01-c7e0489b3c32",
        "cursor": {
          "ref": "b7e2a071-6b7a-4808-b5f7-8c62f7f2d42e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "04e97010-615c-4545-ad79-f105d672dc72"
        },
        "item": {
          "id": "fd9cb16d-bfd4-41bd-9b01-c7e0489b3c32",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "abd83e86-1541-41d5-a443-bd111a533814",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 924
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7243d7-5cff-4297-b001-d7975f248df4",
        "cursor": {
          "ref": "a3936707-2737-4be7-afaf-e221d9d52009",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "afab4231-caac-4c1d-bf08-f8e236e20140"
        },
        "item": {
          "id": "8c7243d7-5cff-4297-b001-d7975f248df4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1461da7e-cc20-4f9f-ad12-c82000954179",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b061297-23c1-4c71-84c1-402890d87869",
        "cursor": {
          "ref": "33d17470-d686-4b82-bc35-bba412d5027e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "59585b46-46b0-461a-bc9a-be5c5f540c9a"
        },
        "item": {
          "id": "9b061297-23c1-4c71-84c1-402890d87869",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7782f8da-a49c-4846-8108-1b26e817cc7c",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "c416bdcc-4112-482b-8c02-c31f58402380",
        "cursor": {
          "ref": "cc1b35d1-5750-461b-9a38-992d644e959e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "080ce0ab-c204-4019-be99-9a929b5ffb0a"
        },
        "item": {
          "id": "c416bdcc-4112-482b-8c02-c31f58402380",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fb4d3dd-7b53-4800-ab9e-6c4ed77e5219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c416bdcc-4112-482b-8c02-c31f58402380",
        "cursor": {
          "ref": "cc1b35d1-5750-461b-9a38-992d644e959e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "080ce0ab-c204-4019-be99-9a929b5ffb0a"
        },
        "item": {
          "id": "c416bdcc-4112-482b-8c02-c31f58402380",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fb4d3dd-7b53-4800-ab9e-6c4ed77e5219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e852464c-1b08-475a-8cda-91a20690eda1",
        "cursor": {
          "ref": "e02bc46e-ce08-4925-a959-61beb451b242",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "efcd0061-8e8b-466f-ab40-3a19335de1f6"
        },
        "item": {
          "id": "e852464c-1b08-475a-8cda-91a20690eda1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64bce6eb-97b3-40d7-ab1b-04c284f9df0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcaf36e-22c4-40ec-8943-4994b892ef02",
        "cursor": {
          "ref": "6473c6ad-82b2-4b73-b851-4a86bcd3856d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "edf52c00-964d-4c6f-9488-4ad30e735177"
        },
        "item": {
          "id": "3dcaf36e-22c4-40ec-8943-4994b892ef02",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dadcac80-6da9-4f91-a0d8-0dce05926220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e5aa5e-5a64-49a1-831b-7d8aa0bbefb3",
        "cursor": {
          "ref": "29fe5bb0-e9a5-4c79-a187-3e75f4bcaa48",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00297180-ed82-450a-b310-8f15c7878307"
        },
        "item": {
          "id": "48e5aa5e-5a64-49a1-831b-7d8aa0bbefb3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "64d00c0d-822a-4ed5-b394-9e8e7ae9825b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37fb601-1e2f-4312-9f96-31bac61399cb",
        "cursor": {
          "ref": "96efb90f-a2c2-4eb7-bec9-ef3fb1394ced",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "44ffa720-83f4-48d8-881b-1998bef4d66f"
        },
        "item": {
          "id": "a37fb601-1e2f-4312-9f96-31bac61399cb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "73c44d3f-6ded-451c-a2ae-40fcaa013ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f13af8-30e8-407e-b496-0961b1360c92",
        "cursor": {
          "ref": "c87a9c38-045b-431e-b4d5-10a51610b780",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "32df8826-5485-4d1b-aa13-f932a41babcf"
        },
        "item": {
          "id": "72f13af8-30e8-407e-b496-0961b1360c92",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f20ae725-779b-49e2-967b-fd69c19a83c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c279ff6-cc08-4e36-aa91-e85c6b789e94",
        "cursor": {
          "ref": "9a4d2c57-6015-48b7-a443-035d810569d2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ca0dc80d-aa1c-4b9e-a315-83f7bc7be5cd"
        },
        "item": {
          "id": "7c279ff6-cc08-4e36-aa91-e85c6b789e94",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c11be31a-9b13-4c3f-8e06-d64816a95fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12701616-0922-4161-a0da-f61fa6988e15",
        "cursor": {
          "ref": "4405ee01-02f5-4564-9a10-91776acb7397",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fa88f347-d8b8-4cd6-877a-559f39f5373b"
        },
        "item": {
          "id": "12701616-0922-4161-a0da-f61fa6988e15",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3d5afb13-cd7c-4aaa-84a5-8a721e7e296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d072e3-1798-44c6-949f-4ec3c67620f4",
        "cursor": {
          "ref": "0842993f-ed83-43d2-ba97-6b9af6d5bd17",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6711021f-0b2e-4a61-a6b5-ca339a771f8c"
        },
        "item": {
          "id": "72d072e3-1798-44c6-949f-4ec3c67620f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "635b1bbe-c0f7-4481-aa0f-696f45d5f5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf5dd6-5241-4eef-b834-64b40cf2df8a",
        "cursor": {
          "ref": "2c16bc15-405a-418a-9056-44066aa6d885",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5e08f5a0-2318-4adf-abcb-dc66919906e5"
        },
        "item": {
          "id": "7bbf5dd6-5241-4eef-b834-64b40cf2df8a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6fa00c86-0f73-4fe5-b1b9-91c462c0a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c923c67-51d7-489f-a4e7-cb2d2e3c3bce",
        "cursor": {
          "ref": "762f1b32-8251-4f83-a907-b2352aa6bdbf",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "276f20d2-3b54-401a-8ec4-bf5d9411dccc"
        },
        "item": {
          "id": "3c923c67-51d7-489f-a4e7-cb2d2e3c3bce",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a5c4aa04-a1b6-43bb-877d-66be8ef85849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d943c-3799-4a9e-a5c7-9eea810a3386",
        "cursor": {
          "ref": "97d795f8-3686-405a-b725-0cf909cd5284",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dde7bc85-d7ee-4486-a939-741a8a07b8d6"
        },
        "item": {
          "id": "928d943c-3799-4a9e-a5c7-9eea810a3386",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9fa633c2-731b-43d1-9a07-fe7437530f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad5d3ee-64e5-4198-bf02-d49c59763435",
        "cursor": {
          "ref": "ca116701-343e-446b-838d-1dfc445a4144",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ff5ed1cc-550b-464e-b23c-3bad18d1724a"
        },
        "item": {
          "id": "2ad5d3ee-64e5-4198-bf02-d49c59763435",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f9da56bb-ba3e-4171-9e6e-e301ed1daa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39be0f0a-f4b2-422e-b438-ebb154fcdbb7",
        "cursor": {
          "ref": "0eb91678-79c3-45f4-8eb8-343dc8c1896b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "99e86c79-b1e1-4f4c-ac3a-56829b6f6272"
        },
        "item": {
          "id": "39be0f0a-f4b2-422e-b438-ebb154fcdbb7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c7127355-6dd3-4b07-8ebb-b3b539f7a99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b961912-c99d-4d22-8f69-4527213d173b",
        "cursor": {
          "ref": "133d516b-9d0c-45ee-ab35-dc9b7914a205",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a839f8bb-24cd-4ac6-b39a-d2be6d15428a"
        },
        "item": {
          "id": "2b961912-c99d-4d22-8f69-4527213d173b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ae90de66-0589-40ed-a9dd-06cbfaf4dc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c250a18-83d3-4be5-b9f2-e4e53cb79e08",
        "cursor": {
          "ref": "35f4be0d-612c-476a-9575-4ce490a485ac",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c987f33d-7b2a-48ca-9591-8f6f42ac2740"
        },
        "item": {
          "id": "2c250a18-83d3-4be5-b9f2-e4e53cb79e08",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a824c0ff-f8ee-456c-9875-e53101bcc183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259d29d8-7a34-44a9-8372-852e0f429c8a",
        "cursor": {
          "ref": "009eae05-49d9-46e2-a56f-1883967600aa",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1f1dc248-fb4b-42c0-9229-6f565d30a097"
        },
        "item": {
          "id": "259d29d8-7a34-44a9-8372-852e0f429c8a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "10581716-1f63-48e5-bee4-a80b02730161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ef0762-ccf5-4282-a26a-26ad122b95d8",
        "cursor": {
          "ref": "0f810f22-c56c-4998-8753-e9de421d9054",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "54cafc6d-6b75-4351-9b88-15588f1bc6f4"
        },
        "item": {
          "id": "03ef0762-ccf5-4282-a26a-26ad122b95d8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f8f73b79-4c4a-45f0-9bf5-1c5f5fc0ea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a01a5a-cf8b-4789-a4ab-254b60769851",
        "cursor": {
          "ref": "ad5c138c-639e-4479-aacc-b43c145febec",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fda79608-0f57-467d-9055-2e5265a31a34"
        },
        "item": {
          "id": "a0a01a5a-cf8b-4789-a4ab-254b60769851",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d6ac6ab5-577f-49ce-a801-94cf48c5ca72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dde4ce-be80-48c4-b967-1dbb989b8a1d",
        "cursor": {
          "ref": "0ccd120d-e83c-4e40-8b6e-4c609efc4abd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5b18967-5dc0-45b5-b4fd-81fd5bbe7b5e"
        },
        "item": {
          "id": "e2dde4ce-be80-48c4-b967-1dbb989b8a1d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "54392934-4fd6-4f28-9d27-496fbf4c94e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931087c0-fdaa-4d82-9f12-0604c22ee280",
        "cursor": {
          "ref": "b9ccfd90-8772-43c3-ae36-95a18114fa45",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1e18abfd-f6df-4522-a439-8b7eb7f3e7a3"
        },
        "item": {
          "id": "931087c0-fdaa-4d82-9f12-0604c22ee280",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a13246dd-9c88-4821-86c3-06938421086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0940b1-98bd-49f6-8624-301a10f9473a",
        "cursor": {
          "ref": "1d1babe1-865d-4760-800f-ebf0cd81f26b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "43ed495a-8177-49f2-9927-d24ee93b1db0"
        },
        "item": {
          "id": "4a0940b1-98bd-49f6-8624-301a10f9473a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f8e219e-6bb0-48b2-8678-49e306e62557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502bd2a7-99d5-4f1c-833c-70b2812814a6",
        "cursor": {
          "ref": "cc808aec-462b-4823-ba91-d35fd0e879d5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3ca0f476-341c-48f4-aec8-80d4ffc87775"
        },
        "item": {
          "id": "502bd2a7-99d5-4f1c-833c-70b2812814a6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac375f16-3964-415d-a597-a69cd679006e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b57f08-4eca-4145-adb7-a50c11ec2fd5",
        "cursor": {
          "ref": "e49dfede-de8b-4aff-8416-8fa7c34380c1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0d64024-e760-4312-8113-700203254893"
        },
        "item": {
          "id": "11b57f08-4eca-4145-adb7-a50c11ec2fd5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e0bfa76-9fee-432e-856d-bfd8e9edc190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea82bb-a774-44af-9ef6-e604711349a0",
        "cursor": {
          "ref": "2c9aea24-3ec3-45ed-a9d6-0b1ca8fec704",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "024f9ec3-dfb7-45b8-b489-38289892a5a7"
        },
        "item": {
          "id": "c0ea82bb-a774-44af-9ef6-e604711349a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1c83332b-563c-44a0-9adc-e4fba219f9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2336dc6-68e5-4394-89c1-e850f5c2d6da",
        "cursor": {
          "ref": "d166e8ce-5662-492b-80e2-b26d908829e9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "96356947-3f43-4be6-ae86-e28cbc648107"
        },
        "item": {
          "id": "b2336dc6-68e5-4394-89c1-e850f5c2d6da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2b79cd66-b205-478e-9074-958031bedaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb4d199-da6c-44bb-a803-46707e711bb3",
        "cursor": {
          "ref": "9ceafeb6-57cd-40ae-ae2f-36bf71da05ab",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aeef7223-3a1b-4ca8-8487-dbd21eea6f11"
        },
        "item": {
          "id": "7bb4d199-da6c-44bb-a803-46707e711bb3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1d9c66b-37c6-4cd2-8b67-985d80d48891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f99ab5-78f9-4246-9b60-ea9da1b53dca",
        "cursor": {
          "ref": "249f388b-3a48-4d48-a6ae-2614e79e35bd",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "86357c11-644e-4f47-9fb0-d7808ec6ff33"
        },
        "item": {
          "id": "76f99ab5-78f9-4246-9b60-ea9da1b53dca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dbfbe3ce-0069-4f1f-834d-594651af5333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fdf4b8-6459-4577-a227-a60c7954fa55",
        "cursor": {
          "ref": "9ec87b9e-8f91-44b3-8aba-d4704fd189ef",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0f98c75e-e892-4cce-bef2-8cb9790a48f6"
        },
        "item": {
          "id": "42fdf4b8-6459-4577-a227-a60c7954fa55",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5c3707d8-66e2-47e1-abaf-b2cbfbdb76e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89236224-7f56-49f4-b357-bf84e242bffc",
        "cursor": {
          "ref": "932d769c-a6bd-40c8-846c-edfcdd55e2b8",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8051ce4d-03c2-4de6-abb2-7452560bf84a"
        },
        "item": {
          "id": "89236224-7f56-49f4-b357-bf84e242bffc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9f7d1c9-baba-4752-9d6e-411c7cca1907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35094ca5-ba48-4169-be00-5a29f8aa6df7",
        "cursor": {
          "ref": "791f0235-d04b-421d-9b2d-6f12c4b1ff84",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5ac2b25f-d611-4b98-aa8e-98da395549a8"
        },
        "item": {
          "id": "35094ca5-ba48-4169-be00-5a29f8aa6df7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eb4292de-022a-4f10-821e-03a5db2bdbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f15601-02f2-4cae-ae6c-f437009a87a5",
        "cursor": {
          "ref": "918e00ce-3b1c-4018-a208-399314b3087c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80422307-d04f-4fea-91af-71cab62c5528"
        },
        "item": {
          "id": "58f15601-02f2-4cae-ae6c-f437009a87a5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7f7a3505-bdd9-4432-b00e-2f0b4ef107e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83036040-e591-4afa-a5d7-a009754181a2",
        "cursor": {
          "ref": "459bdf41-f873-4c21-b470-5f65b398e74c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6db3893c-ca0e-48f4-a684-7628b5506f39"
        },
        "item": {
          "id": "83036040-e591-4afa-a5d7-a009754181a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "14b556d2-61be-48f2-86aa-fc8f67a6696f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc59c85-5fd7-4b20-a04b-f9c90a498966",
        "cursor": {
          "ref": "872743cd-2dae-4f0b-bf10-f1cba84961db",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6509188b-a758-4086-a361-1a798f6d11a3"
        },
        "item": {
          "id": "3cc59c85-5fd7-4b20-a04b-f9c90a498966",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b1fdd3a3-9fbd-477d-b61d-52037d0f4ebf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3db8091-16f4-48fa-b763-4b7c3cf8cb3a",
        "cursor": {
          "ref": "b49127e5-1f38-4671-82bf-3b72317ec44f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "215a22c5-712e-415c-93ba-83c8aced7310"
        },
        "item": {
          "id": "e3db8091-16f4-48fa-b763-4b7c3cf8cb3a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "06eed011-67b8-4c88-8376-1c6400b4a0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3db8091-16f4-48fa-b763-4b7c3cf8cb3a",
        "cursor": {
          "ref": "b49127e5-1f38-4671-82bf-3b72317ec44f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "215a22c5-712e-415c-93ba-83c8aced7310"
        },
        "item": {
          "id": "e3db8091-16f4-48fa-b763-4b7c3cf8cb3a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "06eed011-67b8-4c88-8376-1c6400b4a0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217e33d0-c022-415f-9cae-64bf72bb210f",
        "cursor": {
          "ref": "15d973ba-fc13-4984-bf2e-1ed0192c5fc8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "44cd6db5-f374-4ca0-b2cd-e14c53c13e4a"
        },
        "item": {
          "id": "217e33d0-c022-415f-9cae-64bf72bb210f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fdf8af8b-4fe7-4583-926d-3ac1ef26b6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f527d-9201-450c-a067-4b783b8b35c4",
        "cursor": {
          "ref": "e659d346-946b-40c1-a77a-e5f418e23a16",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ce5eeacd-c3bb-4d6a-b075-49f2c1594a37"
        },
        "item": {
          "id": "562f527d-9201-450c-a067-4b783b8b35c4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8bbf35be-bf0d-49bb-85c6-ff34755309a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b32739-ff60-48d3-aad6-2078159f1a55",
        "cursor": {
          "ref": "0d9dab8d-92f8-49f5-901c-1a48d249abc2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "484fc092-e996-4b0d-881d-aef1e456615b"
        },
        "item": {
          "id": "a4b32739-ff60-48d3-aad6-2078159f1a55",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e2c5228-b07a-45ef-8bbf-4fce22e7e974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6be3a1-bc2c-43eb-86df-df6cfe424276",
        "cursor": {
          "ref": "2d434c38-67fe-4f5d-a6fb-358307eb2f8a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aae89134-3fca-452d-9ad4-6e13aebca7e9"
        },
        "item": {
          "id": "1c6be3a1-bc2c-43eb-86df-df6cfe424276",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "070962fa-2c04-4822-9f89-6d9a19958a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e87d38-17b7-4366-92a8-71f2eef3ef93",
        "cursor": {
          "ref": "16e07f1b-8126-4086-ac4d-75ecb21adfef",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b58404c-f050-4a86-ac15-a6815a98af1c"
        },
        "item": {
          "id": "f1e87d38-17b7-4366-92a8-71f2eef3ef93",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b098be23-880a-4106-a046-d8e0c9c54bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35cdc00-17a8-4b83-a4a7-8b00f29f7dad",
        "cursor": {
          "ref": "3a5f3b59-b010-4f29-a779-c04c26b4fc28",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a519d55b-48d4-464c-afbc-6f4e5add8c8e"
        },
        "item": {
          "id": "f35cdc00-17a8-4b83-a4a7-8b00f29f7dad",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2aa739d2-a36e-4b19-9458-b9848201b225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03121f7f-5ecf-405d-ad45-3bb904730444",
        "cursor": {
          "ref": "e408c3b7-cfd4-467e-98e8-92e5ff7850e7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b247c387-e4f3-4d79-b744-2a7b12c46c58"
        },
        "item": {
          "id": "03121f7f-5ecf-405d-ad45-3bb904730444",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "14df5044-7c7c-4992-8eb7-1bee82d03068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944d03c4-f8c2-451e-bbc2-f6ed5ef2b27e",
        "cursor": {
          "ref": "610759d1-9c6e-4282-9cc8-0c6fe735dc73",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e1568d58-c7e7-41d8-8620-c077e1fab735"
        },
        "item": {
          "id": "944d03c4-f8c2-451e-bbc2-f6ed5ef2b27e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "214669af-1543-4b49-978c-8289a77971c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9cf2b-87d5-4af2-8e29-a227ed7de277",
        "cursor": {
          "ref": "8b508440-4786-432d-a30e-8b79b671d662",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f39bfff1-5c2e-460c-ae00-391992ac55f5"
        },
        "item": {
          "id": "83d9cf2b-87d5-4af2-8e29-a227ed7de277",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4b6b4993-7fd4-49bf-81ef-56dd7b482906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce1da88-05e5-463d-ae47-502c1686c0f9",
        "cursor": {
          "ref": "1a1dff57-1572-4329-b469-f6acc72c60c4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f69ba24a-7a06-4d2f-94a3-26a482f86d30"
        },
        "item": {
          "id": "5ce1da88-05e5-463d-ae47-502c1686c0f9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e2413dcc-514c-47d5-bd27-e47290190306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a087f3-d729-4294-b5ce-57690aeda482",
        "cursor": {
          "ref": "e92808dd-8f1f-4376-9c17-eb583aea6529",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b5a1d76c-12ce-4ffc-9227-cde39ff0e83b"
        },
        "item": {
          "id": "c9a087f3-d729-4294-b5ce-57690aeda482",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b3c56c2d-3499-48d5-ae7c-904b025dbb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fa86bb-1676-45ba-aea3-f69856fb1eb7",
        "cursor": {
          "ref": "1b164ba4-85ca-43a9-aebb-85ddc2dc8738",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6fa04bd3-2701-4da2-99a3-d2a1711dedbb"
        },
        "item": {
          "id": "f5fa86bb-1676-45ba-aea3-f69856fb1eb7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8e3012ee-cbdc-47b8-9c21-99e4723d162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c8d2ce-59a1-4d96-956f-74c45fe83773",
        "cursor": {
          "ref": "0980bdf6-b9c3-4601-a28f-5404c574e696",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c56768fc-176d-4170-9177-b4808f00ad31"
        },
        "item": {
          "id": "38c8d2ce-59a1-4d96-956f-74c45fe83773",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bbc9eec6-9a3b-44b0-8c88-89efae8939ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7d07da-69d4-4d1f-98e1-ea08678aa3b9",
        "cursor": {
          "ref": "d5e84177-b237-47c2-8430-bd94cca5b005",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "25fc62eb-1985-423f-9264-f16d1d10b0f9"
        },
        "item": {
          "id": "1b7d07da-69d4-4d1f-98e1-ea08678aa3b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c6406db0-601b-4c92-879c-1ea65d507930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac934562-36d1-4ba5-b910-b3ef8b6f12a2",
        "cursor": {
          "ref": "5d7ab39b-99c7-4adb-8578-b6b3f7eb7e30",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b658874d-74a0-4272-afc2-7d5c4f933b42"
        },
        "item": {
          "id": "ac934562-36d1-4ba5-b910-b3ef8b6f12a2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0839c4e4-3616-4719-a43f-d1762cd53ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dc2ba0-7462-4f7f-acf9-9a3d236cdc08",
        "cursor": {
          "ref": "e5e2a420-e1b7-4592-89f7-7cf6ef8f782e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "90a538d6-2855-41e9-ba59-4d99d75b6ff9"
        },
        "item": {
          "id": "26dc2ba0-7462-4f7f-acf9-9a3d236cdc08",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0069fdf4-b8f4-4e0b-83bd-a79e3226aa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d038b85-9c95-4789-bd24-f645e95a8e6d",
        "cursor": {
          "ref": "a620d0f3-c571-4bea-9479-a6ac6a22fd36",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e5818956-3ff2-407f-9b7f-0fd6597b7355"
        },
        "item": {
          "id": "0d038b85-9c95-4789-bd24-f645e95a8e6d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3e2a25fc-7499-4ded-964c-59f228dde383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fdc1e2-6c8b-4645-b4cd-c3ebb868bf81",
        "cursor": {
          "ref": "f39dc95c-21fc-4290-9562-371abdc9eb8e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7754ca37-2caa-4a0c-99b5-d3e3c1d32c97"
        },
        "item": {
          "id": "66fdc1e2-6c8b-4645-b4cd-c3ebb868bf81",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5c1a197d-1489-4093-a9b3-dff0f5d75349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8840382b-ccf5-424c-92b2-03f49f7c4c7b",
        "cursor": {
          "ref": "4b1fc78e-87e8-4e69-9463-125af16e211b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "03761b00-f942-49d3-b2f5-27120bcf05d4"
        },
        "item": {
          "id": "8840382b-ccf5-424c-92b2-03f49f7c4c7b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "07111bcd-94e1-4f9f-9644-dd37b99aceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf022e9-037f-4646-9607-39bd3cb585ee",
        "cursor": {
          "ref": "f237fa16-0600-43c2-9068-926ac1320f4d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f67d110-db17-4cca-8beb-2cf5557c7645"
        },
        "item": {
          "id": "5bf022e9-037f-4646-9607-39bd3cb585ee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bae8c08a-4ba1-42d1-a8c2-e099df0e2475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0e8a7b-90eb-46d8-9416-7c6d4d128b87",
        "cursor": {
          "ref": "3da265c0-f7ac-447a-a6d3-0955f82254b0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8a077d18-4e23-45f1-89eb-8c8abd7f08da"
        },
        "item": {
          "id": "ae0e8a7b-90eb-46d8-9416-7c6d4d128b87",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0e0ccb52-9371-4028-9080-ac5539421541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c3a842-9787-4c17-adc8-d17101ec6ad3",
        "cursor": {
          "ref": "47a5ce19-f76c-4511-8861-b84818f38be6",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c2897719-217f-4a0b-bb5b-e0fcad31065a"
        },
        "item": {
          "id": "f3c3a842-9787-4c17-adc8-d17101ec6ad3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bee6c80a-787a-4693-95d3-209e81cdc71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cac6f19-6355-4894-895a-17bf6481666a",
        "cursor": {
          "ref": "42296f64-0d49-4efd-92ae-24509dae7474",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "628494fa-1aa5-4728-aae4-63c9716bc0d6"
        },
        "item": {
          "id": "1cac6f19-6355-4894-895a-17bf6481666a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "09454e07-d85d-46a7-9e50-f210d21bb7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60400dd-4a28-429f-919b-dcdb17728a2a",
        "cursor": {
          "ref": "ce2ed028-5c22-40e2-a5f1-3f5ba68337a9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7ca7b3eb-80f8-400c-8b06-2331048ea3a9"
        },
        "item": {
          "id": "d60400dd-4a28-429f-919b-dcdb17728a2a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8393251d-fb1a-464e-be7d-9a96c7db6f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e452c107-999e-4379-a073-20af6a7ecb70",
        "cursor": {
          "ref": "386f4895-f39b-48ad-b5b6-126c2c505ce0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1783d153-e8eb-4afd-96d0-fee89a11b8a6"
        },
        "item": {
          "id": "e452c107-999e-4379-a073-20af6a7ecb70",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c0ba528a-0926-4dc3-8aec-de275984e4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823bd62b-56f6-4eab-95d8-fc017a66c56d",
        "cursor": {
          "ref": "763072fd-4a1d-47fb-8c32-5379f1b14337",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "365e3407-54f2-4455-b6c5-a73ca6516621"
        },
        "item": {
          "id": "823bd62b-56f6-4eab-95d8-fc017a66c56d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "415dbe48-a9f5-4108-a87d-06ed593b8ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d170c-d8b6-4a64-9702-a505f9bd99d1",
        "cursor": {
          "ref": "296c0cb9-b173-45b5-bc88-991b869cfe4d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6c7acea1-bd77-47ba-8c36-a5dd9760edf5"
        },
        "item": {
          "id": "3b4d170c-d8b6-4a64-9702-a505f9bd99d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9a2062b-18cf-4d57-87e0-c529f4341f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c91616-3b9a-47fb-81f2-2986cface80d",
        "cursor": {
          "ref": "bd542199-48a8-4106-ab3d-1327bbc4a4be",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b56738e2-3f29-405f-994b-d93d2ca4ef04"
        },
        "item": {
          "id": "49c91616-3b9a-47fb-81f2-2986cface80d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "56659c9c-a1dc-4b68-af92-1a228039625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c66900-17eb-4da7-ae7f-0335d69006c5",
        "cursor": {
          "ref": "5ccb8042-3239-4a95-811f-7bbc3c864886",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4a2b8ba2-114c-468f-8d6f-7b0d62fb922e"
        },
        "item": {
          "id": "49c66900-17eb-4da7-ae7f-0335d69006c5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f628896d-e341-4b5c-abe2-c4e6ec02d489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97da66e0-5f39-4797-a5ab-d659b554fc6d",
        "cursor": {
          "ref": "e5b3ac3f-efe6-4063-9492-2e86b6d5e4cb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "49a7b756-fd69-4ddf-bb68-67eba9e91b13"
        },
        "item": {
          "id": "97da66e0-5f39-4797-a5ab-d659b554fc6d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e75f28ab-111b-4fcd-be6e-e852553fdf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e108fa-845a-4616-90b6-fd53b51340c4",
        "cursor": {
          "ref": "9dedbd18-9149-44d9-9e03-e696c9750291",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "db1c87f8-de63-41d7-9505-ebc9be835c77"
        },
        "item": {
          "id": "14e108fa-845a-4616-90b6-fd53b51340c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b042253e-bb30-4a5c-9b5b-32b2857e1ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af47ed5e-d59e-4292-8891-8cc53de72178",
        "cursor": {
          "ref": "0c96d01a-c5cb-4d65-b4a4-453d37abdb83",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7f6b79f3-76fb-474b-97ab-e25e01bca1dd"
        },
        "item": {
          "id": "af47ed5e-d59e-4292-8891-8cc53de72178",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "26545bb8-19aa-44d2-9f46-ccb617e3d676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d210c47d-5954-4aa5-b923-6c932a320e00",
        "cursor": {
          "ref": "bff278f2-f805-41ed-ae8b-05a2e181ea2e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8b50dc63-0c83-495e-8e19-47c0a1f423f1"
        },
        "item": {
          "id": "d210c47d-5954-4aa5-b923-6c932a320e00",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20623b06-56fa-4f12-a7d3-c724e83c6a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a822f2a9-565a-4793-b2b2-fa852a6a2764",
        "cursor": {
          "ref": "23448b2a-949c-4e98-86ce-32cd651be326",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ac111c67-c74e-414e-8ff7-22a3807e8462"
        },
        "item": {
          "id": "a822f2a9-565a-4793-b2b2-fa852a6a2764",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0dd10110-f066-4f37-badf-88de22afc678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5211a7-22f1-4749-807c-e3b64a72131e",
        "cursor": {
          "ref": "edb26f77-dd1f-48ea-9f21-90828ea1d0a8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fcb6aa03-9163-4cd1-b081-2fd3ed81ff50"
        },
        "item": {
          "id": "eb5211a7-22f1-4749-807c-e3b64a72131e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8a613f8c-ca6c-44eb-af46-c3597492880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9669f06-050c-40bb-a8c5-66150354d113",
        "cursor": {
          "ref": "8f4f4025-97ca-432b-8897-79222c927b4e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d65f4ebe-eb55-45b7-9fbd-d275f49da566"
        },
        "item": {
          "id": "e9669f06-050c-40bb-a8c5-66150354d113",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "446eb2bc-66a0-4ffd-913a-a10b932a450d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b734042b-2f56-4572-90c3-fddaa879ee1f",
        "cursor": {
          "ref": "ab23c469-8850-41ba-a591-7124899ca1ab",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d5037fb-d7d5-4fe2-8423-604d15670c91"
        },
        "item": {
          "id": "b734042b-2f56-4572-90c3-fddaa879ee1f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1fb02347-a53b-4334-9b17-794b0ede6a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe52559-2ded-4fba-b417-5d0d526bf0aa",
        "cursor": {
          "ref": "e9abceee-9d78-4069-9e56-5a76d43b3fe6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9ccb36d2-6cc3-445e-bc1d-98c17acb7106"
        },
        "item": {
          "id": "afe52559-2ded-4fba-b417-5d0d526bf0aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "180ae77e-39d4-490b-aa3b-cf22fc69b10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bfb758-e74b-478e-9364-8d1b7f9fbd7a",
        "cursor": {
          "ref": "fb08327a-7a85-40eb-94c9-ad0b5c616e58",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0540b998-edd8-4699-8c2c-6dd49c72bbf2"
        },
        "item": {
          "id": "24bfb758-e74b-478e-9364-8d1b7f9fbd7a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7fd6ef6a-b0c2-453a-9ea3-02f2a56cbd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473fca45-b497-4314-a8d1-fd6350bb623b",
        "cursor": {
          "ref": "9cb7af13-562d-46ca-9979-7fd7b131ea07",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b72c50f2-aa89-48d8-8453-6332da84742c"
        },
        "item": {
          "id": "473fca45-b497-4314-a8d1-fd6350bb623b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4fd21b28-3ea5-49cf-a921-d8b7c30e0dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27741279-50c7-4227-800c-589eaf693ae6",
        "cursor": {
          "ref": "3f06460b-a0f0-4a4d-a078-1a16bafa6b04",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0ce74bcf-ab51-4b66-bee6-dbe42b3377c3"
        },
        "item": {
          "id": "27741279-50c7-4227-800c-589eaf693ae6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c325f0a5-a588-4db5-8dd3-58cc86798d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc8003-5579-4ac1-839f-7d372832df20",
        "cursor": {
          "ref": "02417062-b3ed-498d-9fd2-ed727868f750",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "93c36893-c74d-4bfb-8125-b15a22bae2e5"
        },
        "item": {
          "id": "ddcc8003-5579-4ac1-839f-7d372832df20",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cb8fbaaa-0e39-4585-b3b9-d6d46f556b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d9c207-d2c3-4919-a2be-3465ad6c0366",
        "cursor": {
          "ref": "f4860416-5aee-4880-bc07-4a2c79f67911",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "11aff408-e14f-4874-9941-be3970204d44"
        },
        "item": {
          "id": "21d9c207-d2c3-4919-a2be-3465ad6c0366",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2aa5210a-e874-4b65-aba9-7fe6782f30e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b88dec-f757-486e-9352-357946a7ccd5",
        "cursor": {
          "ref": "a30189db-acc1-4ef9-bcf4-07adaecd4838",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "931e0f0f-d7c8-48a2-bac6-7ab9fda93a5d"
        },
        "item": {
          "id": "88b88dec-f757-486e-9352-357946a7ccd5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4dd42b15-81fa-4fa7-8b34-f6b78cba22fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa02bd-d1bb-4b49-9cb7-10903cc78994",
        "cursor": {
          "ref": "c28cba29-05fd-4379-9610-2f9cf959ffed",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "839b27af-903d-4c52-9816-484ef7ba00a2"
        },
        "item": {
          "id": "80aa02bd-d1bb-4b49-9cb7-10903cc78994",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6c32b5c8-d7f1-40e1-9f30-59dfdd55d4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4d4900-68a4-4530-bc8e-89e851baecf2",
        "cursor": {
          "ref": "e2376d0f-246d-42ba-bf9e-95ce437fd817",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e22750e4-2393-4c7b-bce9-e63a5b182960"
        },
        "item": {
          "id": "be4d4900-68a4-4530-bc8e-89e851baecf2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "86dc2087-a6dc-4fa1-8eb0-f9c983444b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512fd93-e430-4926-ba07-19a54af6f278",
        "cursor": {
          "ref": "293a5d1a-bc1d-484a-8e1b-4524bcad4523",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2ec2f03b-8e77-4299-8cd0-e712ff14f346"
        },
        "item": {
          "id": "5512fd93-e430-4926-ba07-19a54af6f278",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1120e328-d6c2-4f61-8eba-34fbcc1975bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbfdca7-5a8e-4ffc-a9e3-84f34372cdc1",
        "cursor": {
          "ref": "d85dd815-1161-4527-87ad-40dde14eed70",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "71fc26ba-32bf-4d0f-8e4f-dba3386c46af"
        },
        "item": {
          "id": "4dbfdca7-5a8e-4ffc-a9e3-84f34372cdc1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "289128f0-2177-43d0-b077-6538cdd89b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4628799a-6687-4926-99ac-a406436cdf4a",
        "cursor": {
          "ref": "0e492871-0aab-42d4-8804-f555a37f0572",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "60c0b2d9-85df-49ef-8d66-47d1b72ea913"
        },
        "item": {
          "id": "4628799a-6687-4926-99ac-a406436cdf4a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a742297d-9b0f-4c8e-bb9e-a25c22b7ba27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7325eee6-7bcc-45ab-9745-7b2e48e36e4c",
        "cursor": {
          "ref": "57ee94ab-ed90-447c-9df8-14470b0c6044",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "331952d2-2038-428d-96a9-47b25d70bbb5"
        },
        "item": {
          "id": "7325eee6-7bcc-45ab-9745-7b2e48e36e4c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bdc14525-e9b9-4c00-910c-724f689db870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3f4769-e01b-446a-918d-aec1243984f9",
        "cursor": {
          "ref": "791b2626-29ea-45b3-aaa3-a5c9c74d7835",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7b1ce744-a9e0-4ff3-b226-80d89cc77b33"
        },
        "item": {
          "id": "0b3f4769-e01b-446a-918d-aec1243984f9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e208289e-fecf-4f8a-8167-9ec8fc2f5144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decf93d3-ac0e-4dbb-9f50-8536775fc6f2",
        "cursor": {
          "ref": "403fecce-56fa-4327-b380-b4a717a3551c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8cb204ad-b924-42ca-ab18-244d05206059"
        },
        "item": {
          "id": "decf93d3-ac0e-4dbb-9f50-8536775fc6f2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cf89a253-4466-4643-8e63-447cdc506373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0c4b5d-99f5-4a20-a119-0d92c507bd6e",
        "cursor": {
          "ref": "dd66278d-acdd-4bda-83ae-5c3b032e4064",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0667e217-90bd-439c-ab40-20694d6cac75"
        },
        "item": {
          "id": "be0c4b5d-99f5-4a20-a119-0d92c507bd6e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "15bce912-2cf1-4a74-a00e-792058457a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a02cc0-c00b-4e90-81b7-e17b7fdad514",
        "cursor": {
          "ref": "6e7edafa-000d-4063-a62b-d5750dd84d60",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "63dc87f8-eaa5-4f9d-ae83-a2ac5aac14a6"
        },
        "item": {
          "id": "95a02cc0-c00b-4e90-81b7-e17b7fdad514",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8a7feaf0-70d2-4438-af15-2a5138f8ca0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e36998e-0d55-4b23-ae35-6f32f5399797",
        "cursor": {
          "ref": "018ce621-6bfe-443c-9ddc-45e5514cd9c0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ced5e83-74b5-4f59-8fb8-6c1af0eaa7dd"
        },
        "item": {
          "id": "1e36998e-0d55-4b23-ae35-6f32f5399797",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2ace22ce-0241-44ac-9b7f-f77c25e59387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eab3f4f-0c7b-42e0-8902-dd98bb09c6cb",
        "cursor": {
          "ref": "1541ff86-2ab5-454e-a535-679c3c6c961c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "397f7f75-a03f-432a-9797-1cb2220071db"
        },
        "item": {
          "id": "4eab3f4f-0c7b-42e0-8902-dd98bb09c6cb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "53e473b0-a330-4ea9-80e1-aaddd7459564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c3bbf9-5b7c-4f5c-b047-7e77f7b9e3b5",
        "cursor": {
          "ref": "4165307e-fb22-451f-96ff-1fa98b9c5d57",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c74eff8a-695f-49d0-8d40-a49ec6d5f8b8"
        },
        "item": {
          "id": "37c3bbf9-5b7c-4f5c-b047-7e77f7b9e3b5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aa6cbe13-c7f4-4f73-955e-163d8a9d4868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266be379-95d3-4739-9a9c-09ebc2a3d9fc",
        "cursor": {
          "ref": "4d9c9622-f99e-42ce-839e-da7205004d4c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "53614741-d041-4ddf-8604-1c13d4335c41"
        },
        "item": {
          "id": "266be379-95d3-4739-9a9c-09ebc2a3d9fc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "550526b2-7014-4ace-850b-232e603cc470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca95afa-27b8-4601-ae72-28775d402f34",
        "cursor": {
          "ref": "e256e393-22aa-443a-aea5-c49232172694",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5622f372-8eb6-4fa9-aff3-bdbdee651ec4"
        },
        "item": {
          "id": "2ca95afa-27b8-4601-ae72-28775d402f34",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4fb8d4d0-4319-491b-8ab5-2bf013be1e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db87994-3547-46f5-8d0d-c70b4441c77f",
        "cursor": {
          "ref": "7855662c-4a8d-4fc1-9b50-6c74141625bc",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ee3980bb-2258-44b1-943a-c09f9d46a900"
        },
        "item": {
          "id": "6db87994-3547-46f5-8d0d-c70b4441c77f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "60ecf33b-786e-46c5-a389-d84020aa8418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c3e12-6cf8-4729-b3f7-2444e31b54a9",
        "cursor": {
          "ref": "2a8e17ae-dc98-40dc-98c7-f0ebc471c8ad",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c2cab298-6898-4c36-822a-94fae19a7452"
        },
        "item": {
          "id": "a83c3e12-6cf8-4729-b3f7-2444e31b54a9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4530c0d-f5b5-47cc-8ebc-72fba19c7ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabd9ddc-fc1a-4030-82f3-b562cc639138",
        "cursor": {
          "ref": "2d788733-c5c5-4f49-9107-c4c939738f05",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c2fd054d-c2a9-4f37-bd8c-8f15bc9e8d90"
        },
        "item": {
          "id": "eabd9ddc-fc1a-4030-82f3-b562cc639138",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd1cebcc-190d-4ef6-b225-9b212551db3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c705f8d-35f1-4e05-8a3d-2ebc8429fc15",
        "cursor": {
          "ref": "7554ae20-dc2d-4c87-a746-87123467c4cc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2d6b32da-6486-4501-bcd4-091e37eb8db0"
        },
        "item": {
          "id": "0c705f8d-35f1-4e05-8a3d-2ebc8429fc15",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "709a1e9b-62c3-4042-9754-b46d8226a793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a36abf9-8b81-430c-8b19-2e04d6593dbe",
        "cursor": {
          "ref": "f94f43e1-a401-4244-8a0e-d3fd57103fd7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cb7566af-c721-42e9-b763-2c641f6d8b86"
        },
        "item": {
          "id": "4a36abf9-8b81-430c-8b19-2e04d6593dbe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "317ae4c2-c498-47f1-83b3-ce23d6495610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debbc4a6-b20c-405c-87ca-41c889978eef",
        "cursor": {
          "ref": "7778a48b-fda6-4e44-94ac-2c13b9aed56f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ebe7d71f-f096-4405-860f-170e4051b6bf"
        },
        "item": {
          "id": "debbc4a6-b20c-405c-87ca-41c889978eef",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "07876a68-56f9-4c50-89bf-1cb5545b3e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f372674-d2a1-4de0-a202-867bd2215ade",
        "cursor": {
          "ref": "807b6fd2-3a7a-4f32-bd95-8798d0f2ab8b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a230b50b-96d5-497c-867a-22d0264ac5ed"
        },
        "item": {
          "id": "2f372674-d2a1-4de0-a202-867bd2215ade",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f20612bc-fb14-4add-891d-8d994043f9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbed7dd-88bb-4e4a-bce9-fbc0b7961e65",
        "cursor": {
          "ref": "bb7dfb39-7ff9-453b-a6f5-ae952d98fbe0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cdbc039f-bc83-4fcc-b3c3-b9b5cb37c8a7"
        },
        "item": {
          "id": "4bbed7dd-88bb-4e4a-bce9-fbc0b7961e65",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3924c85d-ba1f-43e2-9a2f-25fea8b7a20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2053c4-030c-4b29-99bf-e84ce2859875",
        "cursor": {
          "ref": "ae184533-6ead-4f82-b078-718da9b0ea34",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "448ed44f-e3cf-4de0-bfb5-602a93679584"
        },
        "item": {
          "id": "ae2053c4-030c-4b29-99bf-e84ce2859875",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e9d895e6-9f2c-434c-9ddd-2fba74404b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed97b07-778c-4178-b774-8473501d7883",
        "cursor": {
          "ref": "fde17ec0-769d-4aed-951f-25da9b90482e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e5a63dd-06eb-44ef-b492-0180ed4ed9dc"
        },
        "item": {
          "id": "eed97b07-778c-4178-b774-8473501d7883",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6342dcee-95be-4604-94e7-e405c211f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa77880-9703-4106-a72f-ba8e30d6bfe6",
        "cursor": {
          "ref": "82fdfd72-0676-4ec9-b599-541ae7cf64fd",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bf29f00f-b0c6-4f0a-8f29-4d0d5e520af9"
        },
        "item": {
          "id": "bfa77880-9703-4106-a72f-ba8e30d6bfe6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ae877e24-2082-4dff-bbc4-1811aa1a526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600cd406-49cb-4da0-9810-8125f88883b0",
        "cursor": {
          "ref": "0fe5f6ad-026c-4e49-8fc6-29a2761b6768",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ecf442c4-3712-4cb3-8824-4cfc7d44ac57"
        },
        "item": {
          "id": "600cd406-49cb-4da0-9810-8125f88883b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0429aacf-936a-4d2d-86ac-b768c10c7b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3de795b-7d30-49c5-b1a4-7ee09a0a3362",
        "cursor": {
          "ref": "51d28597-87fa-4269-b5a5-ed5f85959cef",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f0b9284f-9ad1-458e-a1ce-41507c8345fa"
        },
        "item": {
          "id": "d3de795b-7d30-49c5-b1a4-7ee09a0a3362",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d902b185-3713-4cfc-b350-505dee356fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c86cee8-5775-4e3d-a7c5-367458faeb57",
        "cursor": {
          "ref": "54da57c7-5167-487a-9753-8b561bd96995",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "759d1b6a-fdbd-42b4-82e1-ff10f9b0c18a"
        },
        "item": {
          "id": "1c86cee8-5775-4e3d-a7c5-367458faeb57",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "082a612e-2889-4732-bd99-b8c6548ff2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d7d8b9-ac98-4f4a-a499-df8d415c2fbb",
        "cursor": {
          "ref": "d7782665-846d-4c19-907c-241a7f1f9050",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2c494b20-7505-420b-83e3-7a857b5bc84f"
        },
        "item": {
          "id": "c6d7d8b9-ac98-4f4a-a499-df8d415c2fbb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d02fc59a-5f4f-480c-a30b-7c47e45af6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1ce8b9-285a-40f5-98eb-a2772b90df9e",
        "cursor": {
          "ref": "4342714f-764c-48a2-8ae6-baa17b1d510b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2a1390f6-4abb-44f3-9d31-285466c8192f"
        },
        "item": {
          "id": "7f1ce8b9-285a-40f5-98eb-a2772b90df9e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e24badd-6abd-4b9d-9ebb-09fb73a111b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1bea93-6c53-4f6b-9841-6d28a97e83df",
        "cursor": {
          "ref": "39454cb6-f3dc-47fc-9222-8c404adccd70",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9935c0a0-14e2-459f-86af-a80df8b3691d"
        },
        "item": {
          "id": "7b1bea93-6c53-4f6b-9841-6d28a97e83df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e067ef7b-646f-45f1-ad37-35cad206c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e848dad-c5a9-45ce-8278-b31fff37fa98",
        "cursor": {
          "ref": "04e90381-13a9-4323-ba01-b15914901460",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "46f9bb26-8715-4beb-86ec-cdaa205ca5a6"
        },
        "item": {
          "id": "9e848dad-c5a9-45ce-8278-b31fff37fa98",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15db8beb-2204-4d29-9998-9f3aea94c777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532a5ac3-09d9-48e8-8678-66e01d22d1d1",
        "cursor": {
          "ref": "ad142a54-a1a2-43a5-ae41-eb9fc1872376",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6a0e6e4e-12c5-4be9-94c3-669bd188b644"
        },
        "item": {
          "id": "532a5ac3-09d9-48e8-8678-66e01d22d1d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a4cd39be-4ebe-4f7d-ba58-feabdc116a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472bf1fa-ed54-4731-8f2b-b5f6ad9f7dd7",
        "cursor": {
          "ref": "0a57317f-a4bf-4244-ad95-186377ee0359",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d150490-cf78-4c41-bbff-8540faead9e9"
        },
        "item": {
          "id": "472bf1fa-ed54-4731-8f2b-b5f6ad9f7dd7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "73943ba6-0fd3-4bcf-8f0c-f70c3acfd781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868b2957-9aaa-47f6-a18c-dbdd8874e8a8",
        "cursor": {
          "ref": "e15edc67-911b-446f-87e1-8e3b9ae217e8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fdaa7f4d-87e9-476c-b8ba-11e0a20de416"
        },
        "item": {
          "id": "868b2957-9aaa-47f6-a18c-dbdd8874e8a8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1d566d1a-f11b-4c63-91b0-d4929875fcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c2364a-07b0-45f7-8ea4-61953005433c",
        "cursor": {
          "ref": "e4c17a72-f611-436a-be58-93ae78068285",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "257b947d-eefe-45a1-8c98-82c3fb63fce9"
        },
        "item": {
          "id": "52c2364a-07b0-45f7-8ea4-61953005433c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13c57ff7-58dd-4069-ba4a-cff269f1f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61595bb-6f04-4b04-9ac7-30db7502bc9c",
        "cursor": {
          "ref": "d91940e8-de4d-48fe-87ed-14c0ab2e0ab0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4fda8899-dc53-40d5-b6cd-714fc2bed368"
        },
        "item": {
          "id": "c61595bb-6f04-4b04-9ac7-30db7502bc9c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "14b241c1-16bd-45bb-a6f6-e3d0ec8c5b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e08ed8-23a0-451d-a9ee-c63eea8181c3",
        "cursor": {
          "ref": "e534c1d5-cf1c-494b-ab07-407719d6a3ff",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15f2120c-802c-4e7f-b203-1c3fa6fba5c6"
        },
        "item": {
          "id": "06e08ed8-23a0-451d-a9ee-c63eea8181c3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d497ac38-f806-4fca-aed2-2e65d1ae45d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e110aff1-87dd-465a-b2c5-d9e50024a655",
        "cursor": {
          "ref": "c100c33e-3cfa-45eb-89fa-7bea38c50e67",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "073f4c74-7ce4-417c-9514-ee6a73b61082"
        },
        "item": {
          "id": "e110aff1-87dd-465a-b2c5-d9e50024a655",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1b1104ac-c09d-4cf4-ab55-6cddb096fd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22ce3f-f48f-4906-9cc8-71230a809783",
        "cursor": {
          "ref": "31ff44be-33b2-4a3b-baf2-23b5cd15302a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "46f11577-0910-4047-a9af-dc7316a14184"
        },
        "item": {
          "id": "cc22ce3f-f48f-4906-9cc8-71230a809783",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e4c9af19-d706-4385-aea9-caa731e6fe89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188f8e3b-0a31-461a-91d5-be62273d4db8",
        "cursor": {
          "ref": "ad0c8fb9-064b-45fe-8551-1b7ae3c291bd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "724a10ce-d264-4ec0-8e80-a33922de883b"
        },
        "item": {
          "id": "188f8e3b-0a31-461a-91d5-be62273d4db8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0c49a811-bc39-4edb-8aa8-622cd138719e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a82805d-c0cc-4aca-bb15-c496e2c77f46",
        "cursor": {
          "ref": "be78c94d-59cc-402e-9bb2-d680ea8e2bc9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0b6f420f-1661-4655-983b-8dd90e71d4a0"
        },
        "item": {
          "id": "8a82805d-c0cc-4aca-bb15-c496e2c77f46",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f2072a66-676d-4d3e-9b56-c8382271d866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b227b5d2-2d1a-46e7-b097-46eb5ac718b1",
        "cursor": {
          "ref": "e17d8764-a05f-4c73-b19d-06f3b1797869",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c4259d6b-4ce0-4cd7-834d-d72ff64be850"
        },
        "item": {
          "id": "b227b5d2-2d1a-46e7-b097-46eb5ac718b1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ea936db5-7954-41c9-b99b-3f460e78a617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca90ea2-598f-4191-937f-54d65589940c",
        "cursor": {
          "ref": "00066c99-a2cb-470b-9c7d-be5151dd26f4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "263bcf23-a0d4-460c-8716-157e410b54d9"
        },
        "item": {
          "id": "8ca90ea2-598f-4191-937f-54d65589940c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ebb614d8-4108-4016-a4a5-d28502e90914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41196df-87ad-46aa-8f47-d4e86880f46f",
        "cursor": {
          "ref": "c1135dfc-1aec-4883-b9f5-a783315bbdce",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2376589-0b6c-435a-a35a-6fb03834966f"
        },
        "item": {
          "id": "e41196df-87ad-46aa-8f47-d4e86880f46f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d80a5de7-cb81-4a50-9a66-ac43769cf190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153cfa44-ddfe-489a-b339-95a8a89a868d",
        "cursor": {
          "ref": "6896361c-880d-434f-8495-812039e0f10e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e4ec738d-e6c6-42a7-aa16-78e5477733e5"
        },
        "item": {
          "id": "153cfa44-ddfe-489a-b339-95a8a89a868d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b9489179-221e-4e28-899a-2a66013fac60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cfac95-81fa-47c4-8fe4-792a82fd1e75",
        "cursor": {
          "ref": "6b33d645-7357-4eda-ae11-df7b1ef49d90",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5ed83e2b-9f20-4a64-82c9-084a12d0d7fc"
        },
        "item": {
          "id": "96cfac95-81fa-47c4-8fe4-792a82fd1e75",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "56571779-8cca-4429-8903-2239e2154a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab5429-98ef-4fec-b1e2-1ae59f9135be",
        "cursor": {
          "ref": "c4953809-9810-4d47-a3a8-ec868f2d98a1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c1a5936b-1265-4e49-86ae-513c9c82d2ba"
        },
        "item": {
          "id": "20ab5429-98ef-4fec-b1e2-1ae59f9135be",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5693c729-0fbf-415b-91d4-5bfe0adb3b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c4db2c-3e71-401b-900d-99412b798604",
        "cursor": {
          "ref": "6d9c2c6b-3d1a-4208-b4f2-ce50bf704c66",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c9611f46-5b42-44b0-8dd8-297a1f7e4578"
        },
        "item": {
          "id": "47c4db2c-3e71-401b-900d-99412b798604",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c06584c9-1d2d-4f69-88f5-af46b064f374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8d181-44a9-4a1a-acc8-15e67aacd919",
        "cursor": {
          "ref": "c37fc7b4-b28f-4a0f-8b72-174c2f416d0a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2780e58a-2dc5-407f-b56c-526c1a320a46"
        },
        "item": {
          "id": "dab8d181-44a9-4a1a-acc8-15e67aacd919",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ced81ca9-e1d7-4b51-99a3-616ad1a64acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65b926f-34fa-44ec-ab78-cab34a283734",
        "cursor": {
          "ref": "9d454485-7249-4d9c-a019-69b6b72b14d4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cd9d7b80-aba9-4de9-9949-f9b9b78aa73b"
        },
        "item": {
          "id": "b65b926f-34fa-44ec-ab78-cab34a283734",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "67cd17ce-1047-4ec3-a9f8-ddc451123807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a196bdcc-8f0f-4763-a4d1-e9df168bf962",
        "cursor": {
          "ref": "bce508d5-62ff-4e56-8acc-fc4f7315184a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b0c032f0-f520-4a37-864d-91f2e84c451c"
        },
        "item": {
          "id": "a196bdcc-8f0f-4763-a4d1-e9df168bf962",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "be3ce824-0462-4513-a980-758dea607250",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25974464-e7ca-4b2e-922d-ff82afdd5013",
        "cursor": {
          "ref": "e3387fbd-0abe-4cc0-91cc-ac10958841eb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e27e693c-c40f-4ad2-aa5d-85b779612d35"
        },
        "item": {
          "id": "25974464-e7ca-4b2e-922d-ff82afdd5013",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e26fc278-3eae-4fa7-9fda-8c22815b4fa0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd8f24-bac0-4934-90a8-8239624f5cfc",
        "cursor": {
          "ref": "50df8cf4-1468-4eac-84f7-87b7bbc0d067",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9948c3da-68f8-4ff0-81ed-cfb5e0b638b9"
        },
        "item": {
          "id": "02bd8f24-bac0-4934-90a8-8239624f5cfc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "03110cc7-c156-406f-aa85-30137f42409f",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "229cb14f-1c6e-41cd-8cdc-bf4dc79e6c24",
        "cursor": {
          "ref": "f8c59b33-243c-4ea1-a7c1-df2ed093d9f2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a371999f-ca4e-4745-8536-f72aea802f4e"
        },
        "item": {
          "id": "229cb14f-1c6e-41cd-8cdc-bf4dc79e6c24",
          "name": "credentials_verify"
        },
        "response": {
          "id": "05cf413d-ff4e-4c82-9c66-75e4c9ea1a3b",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d0364e-fe09-40a7-a357-bfc9cf9089c5",
        "cursor": {
          "ref": "9f0e89a0-e548-4b0b-b8e1-5e24651ac707",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8acc5555-9985-44a9-84c1-ca859029c3ad"
        },
        "item": {
          "id": "d3d0364e-fe09-40a7-a357-bfc9cf9089c5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7ea7f1cf-8a4c-4f02-837e-53abed82da5f",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
        "cursor": {
          "ref": "81fae51f-10d0-4d5d-a626-64056da5821a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4fb46866-05c5-47f6-a542-18b5b6e5edfa"
        },
        "item": {
          "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4258dd93-040f-4c8b-899b-8cc81698a09c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
        "cursor": {
          "ref": "81fae51f-10d0-4d5d-a626-64056da5821a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4fb46866-05c5-47f6-a542-18b5b6e5edfa"
        },
        "item": {
          "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4258dd93-040f-4c8b-899b-8cc81698a09c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
        "cursor": {
          "ref": "81fae51f-10d0-4d5d-a626-64056da5821a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4fb46866-05c5-47f6-a542-18b5b6e5edfa"
        },
        "item": {
          "id": "2b4f8d36-412a-499b-b093-ba97690ca175",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4258dd93-040f-4c8b-899b-8cc81698a09c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f69d505-bbd9-43d5-b36c-a8d69f401c67",
        "cursor": {
          "ref": "953c8671-4ae4-4ff6-8c27-3acddec5bd94",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "095ff756-90e4-47c6-9696-161529bd683e"
        },
        "item": {
          "id": "3f69d505-bbd9-43d5-b36c-a8d69f401c67",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "470071a2-a5e5-426a-8016-0e15ca873ce6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b105ac3-0dde-455a-a509-0eacc0fa61a3",
        "cursor": {
          "ref": "9034e730-729f-4d13-9ba3-1da6b547d0ad",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b2c6736-be0f-4c05-8f35-558add8c2645"
        },
        "item": {
          "id": "9b105ac3-0dde-455a-a509-0eacc0fa61a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0ac7c047-0f18-4f1f-8f6e-7cd616af7616",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b105ac3-0dde-455a-a509-0eacc0fa61a3",
        "cursor": {
          "ref": "9034e730-729f-4d13-9ba3-1da6b547d0ad",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b2c6736-be0f-4c05-8f35-558add8c2645"
        },
        "item": {
          "id": "9b105ac3-0dde-455a-a509-0eacc0fa61a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0ac7c047-0f18-4f1f-8f6e-7cd616af7616",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71706fd-d447-4842-916a-31b05b300f79",
        "cursor": {
          "ref": "d09b1ce7-d22f-4f50-9a4b-8e20c6be388d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9cc2449b-7433-4dc7-806c-7422786884b6"
        },
        "item": {
          "id": "e71706fd-d447-4842-916a-31b05b300f79",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a094e1aa-68e9-495a-b1cd-24f6109d860d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f406eb4f-3db6-46e4-9f7e-945ed4726c9c",
        "cursor": {
          "ref": "0edbce1c-7c65-4448-be01-5dd288db0008",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "091ad85c-16fd-4fc4-8aab-3eae4a8eea89"
        },
        "item": {
          "id": "f406eb4f-3db6-46e4-9f7e-945ed4726c9c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9b3bb1cb-dbe6-42e6-a640-cf14f09af606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f406eb4f-3db6-46e4-9f7e-945ed4726c9c",
        "cursor": {
          "ref": "0edbce1c-7c65-4448-be01-5dd288db0008",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "091ad85c-16fd-4fc4-8aab-3eae4a8eea89"
        },
        "item": {
          "id": "f406eb4f-3db6-46e4-9f7e-945ed4726c9c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9b3bb1cb-dbe6-42e6-a640-cf14f09af606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea7d4ba-25fd-4803-8ff9-30e4aad710bc",
        "cursor": {
          "ref": "34c5cbfc-c7e6-4a19-abe8-3240ff350fc2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5bd18990-4e40-4a1b-8991-ba7f624c8648"
        },
        "item": {
          "id": "eea7d4ba-25fd-4803-8ff9-30e4aad710bc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7e403a4f-120e-41ff-8eca-d08e2bf97961",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}