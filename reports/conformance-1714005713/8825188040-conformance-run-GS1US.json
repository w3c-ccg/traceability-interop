{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "24563820-53dd-4174-9d76-dfa0f8e209d1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "665cd1ae-8d68-4a89-a90f-e354739edbf8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "113015aa-9aef-4466-a8a1-d1efeae1698f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb81ddd4-e1b8-439a-9945-95dcb50b1b6e"
                }
              }
            ]
          },
          {
            "id": "61dacddf-fe11-4038-a6fc-979071491e83",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e015f57f-66f6-44b3-a2a9-66833cbfe4bc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3965c6e5-8b30-48ea-abf8-b3f715d642a9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d3486553-b799-4367-990a-29de7ed8bd70",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "04c3b606-a087-412b-8718-aef558130705",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0804ee5a-06ad-4f79-adbf-227dd63016cc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67a8845d-5b97-4fc4-9bd8-70264a21d369",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f5aa34e-a39e-42d0-b9db-b05aeb2035e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01fed789-f564-4191-ad1d-80227cc910cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39f6ee7d-99d3-4589-95a8-edfd5bd04f60"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11292455-3dfe-45a0-a577-cc44c264e667",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eff9f1b-f367-410f-937a-e5b3b64908ad"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0433c646-c648-495c-a324-56f5d4c4d2b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e18a478a-2c5f-4b73-a8b2-9b4d775cb60c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "402ebd1a-0045-40b7-93cc-efb12621f5b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0faae517-10f7-4846-b528-87d9df2dbcfc"
            }
          }
        ]
      },
      {
        "id": "296ccd70-04ed-4c3b-95d2-6eae7e0b32a2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f6472f64-33c9-441b-8656-93816ec8d60c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5cf5165-4a56-4268-bc5d-9613de030776",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7d5673e-2a77-4e12-9f26-8fe0851adb43",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249b01d7-2a2a-4085-bea5-6208d5dfe579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4c17f19-3b1c-4f69-af7d-989e3abe3d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e43e43-d3a8-422c-a58c-b4fb9f614e37",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b554b7-fed5-4434-a96f-e9a55dc93cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c428d0ee-4d78-4e18-8d51-38498d7e46c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a54987-f588-435c-9b8c-63a5ab6e5bb4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e5fc16-b374-4e07-a477-aa9b59c2fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3747bb00-8aff-4761-9a73-2252d5b6a0d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "604c562f-f8c8-4c1e-82d6-199527ce1edd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b09144ce-b3cb-4c91-9155-f34a06b7f6a1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd434ee6-5456-4617-85a0-fac010d8316f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "983f43ae-18db-4ff3-b9f8-df9d285856e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3343638c-6591-43dc-8637-132579322cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b1ee78-a6c2-4277-9b74-8872065de24a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "95943986-a26e-41b3-9a31-a53f0227db13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a3717b6-85ff-4a95-a749-9af4a176a808",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d09e593-1ce2-44d6-85ff-a06d1f580f19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e559612a-0111-4585-830a-fa62419a3a05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35934554-3cf3-4c17-b458-29ceeadb3503",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3427b47b-7465-4f1f-a49f-79329d13ff7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "276a3442-526f-4ccf-83a0-816c9b96eac2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cfa63ff-17e4-45fe-b6ad-660e35ed0b12"
            }
          }
        ]
      },
      {
        "id": "0acbecda-ce51-461c-9468-3bcaf13a1d8d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2186a7d6-0a22-4577-be0f-e0bc1dbfa0fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "538eb069-372a-4d51-9ff9-3a645d91ec52",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "422bdf19-e584-42a6-b547-e874ecca5d13",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8031ed6-8f9d-404a-829f-0246af6005b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7124877-aee1-4131-bc6c-4f118538d23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6724d77-aad3-4223-bfb9-24a76562ccb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf98feff-7f13-430d-91b3-6ed04c502a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdddcc01-d347-401f-b4c7-3bb6df9607b6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f101e0-d6af-44d0-a448-41f46f9859df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38a9d40-641f-4a92-a226-d402d36b7347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72da8f38-e216-478a-8f8c-6d66c20d8af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0f27c43-256a-4a6e-a704-34fc6d027037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96446dec-dc29-44a5-8931-b0907346f226",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f7147d-a0e2-46a7-a058-caf9365d5b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eb81cc-320b-485b-ab7f-81e417bcf371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9dcc40-06ee-433d-975d-5391ef380c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6a5981d-d61e-491b-a90f-28845d804e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d08aafd-bbb2-4426-8417-a9f1b1f18c79",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fef8235-b5ec-41fb-8674-86dc2f4e0f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2e7a1b-5505-4f69-8a47-ed7ebd128b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882e28ef-4fdd-4d2b-8d7a-8a2a06ee9363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de4b9e13-f7a9-4ef9-af7e-0d0f3d9ed631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4640ee65-d13e-40f5-afa9-ec709c079865",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af26fb5-3f63-4573-841b-2e30a60e4503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25753219-e919-4c42-b10a-3319f7416ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d7b92e-6749-4a9e-bb1e-9a9d60543eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aedb0ce-f92d-4b2d-bba8-e99ad8d7c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a13ef90-d122-4814-9801-ccb3e41a15e0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc9e753-fb74-49b3-8a31-f2e0a53111d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54181ad7-c3d3-43ad-a162-26b4eae83f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca7a0c0-0720-4938-bca5-4f8e67455775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c27bb1d4-bcc7-445d-ab40-3586d1ba05fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089807f3-6530-4277-bf17-f74cee44f5fd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449989bd-f1ce-4da0-a3b8-3131e1835e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d99c625-d9bd-4784-a67a-14332c5aa1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d086dd18-f991-43a9-b3b9-4612c1647fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea939093-0439-4bc2-84e5-bcdc06e5c611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570ee72d-c4cb-4a95-8a88-7f061a202c09",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6ddecb-9ed7-43d8-a052-c1d30d21bd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77ea9c4-0aba-4905-834d-d0e23e30c2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da53a7a6-d07f-466b-8560-a58d7bf67785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9f15303-5175-4b2a-bacb-872a8423d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed37fbdf-91ef-40b6-a92c-478e04a017b0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf654f-0a83-483a-ab01-b7b2ecf16988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ad3f85-dcc0-4aff-ab44-f9e244ffeaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9192dfe-9ae5-40d0-894f-97cf6f7ebbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ea33112-512b-412c-8b7c-791cde7f9afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbb9cf7-40ab-4185-adca-0dfd8ab02f93",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc86aa9-7e5f-4c72-af37-3941997ffbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f950b273-6a1a-4cbf-b96e-f251eeea65d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ef0a53-4a37-4ae2-a193-c46eb7a9c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0a6d79e-4f7c-401c-b3ab-b1bf13cd7a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41308ae7-c1b7-4938-9315-bb83884505b1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3796bdf-6422-4960-ab7f-1094d1172ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e09e93-b38d-4141-a009-43057056b46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e05865-7693-4364-ad60-f8bbc73d394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb62964f-2717-455f-96eb-233a2a02402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c544224-46e6-42d2-a539-d9668726094e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c928af-e9c6-46be-a994-29b0b2c83899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62893455-ebce-458c-be48-c402bddc5bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78372559-e9ab-4e69-84a3-5e7567fc07da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1164952-7e4a-46fc-8066-4b675b3965c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0337cf-fa83-4cce-a283-460c25953a5c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc7c8a-cfd7-494c-8fed-ac663fa99cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3ac9b2-3807-4980-b6fb-fba4aabb70b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964bfc83-c76b-4d4d-9abc-213b8bf08e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08f9324d-0b6b-4466-bee5-a36403b8b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e641770-8c9d-4fb7-b3f0-3620fb176746",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e104844f-5398-450b-bb41-0c060f6516ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b6f67f-e864-400a-bad6-be52ce1c0151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1654b318-235f-48f2-8b1f-697fef0dd044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8ec8c1f-3c79-4606-a24c-b85c04292573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aecca87-7eac-4c51-bcdc-b0a1e4c389a5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe52387-01fc-4dc0-8066-33370835cf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337f0238-6f82-4124-91b2-861df5585203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b32da0b-4194-4885-bfd2-d885382ffc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb5ff3b4-d857-4eb8-be07-f6cac696a8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a54259-6faf-42ac-9e47-78340e9d8358",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec1aff2-82b6-4ea8-952c-9b6a3c230dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5149c964-4f36-4657-be52-5a552a8ff831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e781ecc-ea9d-4916-b584-6dd58162c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c61babe0-1652-4fa6-8916-60ec788c305f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2abf38-07aa-4326-a029-fa257ad772dd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af96c31b-3c2c-4c2a-9a50-2e211839a7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b2866b-4dd1-4fd8-a13e-b4c2e0704690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7497ac43-c364-47c6-b2a2-13543708b8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43410f33-7aae-4da8-b504-e6b926db867d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49338e70-7d83-4172-9ddd-7b209047e198",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ed9e72-b8c0-4a4f-84de-fa1084d792fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe17e907-dda5-4194-aabe-feac648fe8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec6f436-fab5-4bbb-a1ff-1ec3b148576d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d684b1fb-fb8f-4710-b404-ae06c58d286f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d1de27-3293-4e79-ad29-17efb50ab0ef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8562e5bc-7d5c-4782-85bf-90e369633873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acaa6db-2470-43cb-9d4b-e1ae1d41e9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608f4051-19ec-48f2-95c4-ffe0987bd24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f596e1d-ea4e-4cab-9260-b4bc28f768f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d02fe72-d30b-46cf-9c23-27b79ba82a88",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efede5d-51bd-4819-97b6-f71bb04b9657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f2770a-7d83-4795-aef4-032b932598d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b280c5c4-d492-480c-a15b-95bf5af6ddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "308e47ab-18a7-4da8-af8c-66ee1ceb69e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ca9318-1858-4267-bf3d-d33160e03eeb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cabd23-7a01-4030-9965-489264102b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d142f67-b433-42ed-a543-f49cd6d60378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2123ccfc-077b-4562-a2da-19e8da8a3759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "084f8d2a-a425-47b6-a8a1-f496ea0c6754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8010b648-34eb-40f4-8dfc-9b236ca2f184",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01819330-2f87-48ee-80bd-6a6bca227ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9899f955-8980-4d02-9d2c-e57512e33ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663b07f5-1189-4494-8c52-f846cc02b52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86922d9b-13a4-4f78-8549-0e1f4c51e32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd6a716-b7c2-49d8-a3a4-23306ca43ed2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c36bf27-50e9-49d1-b487-31e510a76332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be76089-dd06-4820-b1fb-9626a4bf3837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1aa3ec-c18d-464a-bbfb-d9935753fc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8673b537-3fc4-4049-98a4-ef4588c75f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dae8132-a99c-488d-93d4-0339011b118e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f032f71-7340-4761-ba77-c4184628a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d630aa-ae16-4a5f-8f53-271aea7c7b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4041bc23-1bc7-4fb5-8821-3f627ff55df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7193d0cd-7d50-432e-864f-c01f8888e283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e539e8e-85ab-4758-addd-ef028bba7f69",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d739b1-5110-4fae-b784-904f04d18c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd38a4a2-ed91-4d56-8445-cc159ec6cb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e114ac-6ab3-43f5-ae61-4f84351a81da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2644178-1992-4098-b8b7-c4db0d22074f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff816a49-f27a-4ad2-b8c1-d67031dc9105",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f43adba-a9c8-4399-94c9-ea195f3a89f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1108b5c3-a0fc-4efb-b25d-58a4f43a3c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c171e7-585a-4c5c-ba10-8fa6c192e7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1bbf5f-1243-44fb-baa3-5588982dfc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e671d471-de04-4aa9-afae-3f3ac10b9223",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070510c9-fc9a-4203-8159-04721cf6cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19f2b79-a24c-431a-9cd8-ea014a15c337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205d01d9-e917-46a0-8603-025c5318be65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1bcc7d-162a-49b7-ae57-c01eb49e702a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa9da37-6c02-4d4d-8282-7f629421e959",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4873584c-f19b-42c5-a2d9-223b9e97b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a45cf4-8da7-4fd1-a705-8010d02f3a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccb8abd-9469-40df-a6de-161dc1635179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93f11a0-91ea-4548-b858-81774c427c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d072e4b-4bc8-404e-8ca5-b6881ddf07b1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daab542-1f7b-493c-8640-4fd088ec6acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971beded-c765-4abd-a412-631a23f6b09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4902fe5-87bc-4e7d-9054-9f25ca159c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b207c9b1-2d8b-4056-8552-77ae4f4fee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fd05ed-4581-497a-a70a-97cc37d1d713",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da110d4-dbb9-4219-9fe2-2596a7063e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9389d378-4e66-4718-9444-c27bad243031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5583d006-922d-4355-b731-a0b96a1501e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9584cfbd-b147-42b4-bac2-67dd3c859e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fade4842-e12f-4800-897b-5dadc877228e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151f4c09-8469-4abc-ae3e-6fa4adb892e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f5572d-0cfa-4260-a249-b20ff9633ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93205197-3ef7-479a-9a88-9a2bd50411d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb5696d-6c5c-4f80-b867-13f4ff63f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0bd20b-f029-42be-b79a-236cbb5974c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962944fc-db9d-4105-a3e2-45458a738cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f78a95-251d-4a5f-b286-387152b6cee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad4fdf5-cc3f-4689-9039-3faafdfc2107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "235db7ab-a655-4f74-a4d0-acb00ee83290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb220421-2375-467b-84ed-3df6181298e1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873bdb05-4141-420c-a851-e077a541281e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f17329-088b-449b-b6b1-ce0811e43019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b138743a-27c5-46ec-8372-a762a0c489f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcaa13a-ef48-4784-9059-98a70a5021c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f2538d-79e5-4e57-a1d5-63ff27848785",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58383957-3458-4b15-bee0-5558747e7626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36f1907-157c-43dc-a2e6-a6e7e19413da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06678cda-47f7-42bd-9452-516be5b9ff7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6ceeb4-0415-49c9-919a-24bca62545e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ca19cc-3307-42a2-af37-f1cfb1ac8c8e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb1d3fb-0d50-4e03-909f-6dc167eb9171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0521ceec-9502-455b-9a51-577dccd5fee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a431edc8-d51a-4ebf-802b-d3a285e74c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "35ebabfc-c584-4e9f-876c-87ca6d1900b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b16849f-ee81-4e36-9b26-1e635a931d29",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9783861-068c-4275-b9aa-ca2f6a473ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83990ae3-6fa8-46fa-b5e8-c2b12616af81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c40a83-def8-4c77-98c0-d2186fbd0ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bffb54a-e9ae-45db-b853-a4d443570ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db9e84f-5805-4dcd-a581-cfeeb7156290",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfa3df6-301f-4528-8f44-3505f0186bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c8969d-b26e-4467-bd82-91dae408fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a3ecba-a5ca-4cf9-88ae-dbaf81d383bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf94a3a-126f-4290-9bd1-5ea1bd80d2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccd443a-81ae-4884-a632-d571fcef5149",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba54ac48-a1c6-4aa4-a8c4-3771b8ffc05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73ee2ba-9a73-4b56-9f3f-d15b030d3d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9686a56-0fb4-4118-ac3e-95637043651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3ee051-77ba-41e4-a465-ce62347e040c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3f27e2-e418-4159-8b13-396ab819c4b0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759dfef1-891c-4954-974d-c8a0624d96b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622bfd19-fb1d-4b83-90d1-d94a3ec6589e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac76ef05-3735-455a-b8ea-4e5c56f0854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bab36e83-2e7d-43f1-ada0-3c9392f21019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19390a59-cdfb-4cea-8b60-d5c1d4d52bcd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70b01b9-dfa6-4ca2-af4e-1a0c488d96ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e94b52e-e2ec-4115-ab7b-2ef40831c520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2a555f-b4f3-4751-b6bc-340cc1b7cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b007fccd-cdd4-4228-abd4-43a7fd0a867b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e933519-79fa-479a-9877-06086efbfc68",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31efc085-0217-4c11-97af-d975e12b577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ab8348-357e-45ee-87a4-503032eb917c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9026993-9c60-4338-b17e-c6e1f3da1de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7e05ec-6905-4cd9-bc67-d2ec5d6d57d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594fd217-d8af-4b13-a843-1eb987607c2e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a9cc50-f526-4eeb-958b-142e9f6730dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec3c64b-20e5-4805-998b-8b7c91efb423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86124191-6151-4ff8-8f9d-ea3d1c2043ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "42dae830-d73e-4bf8-9dcc-08b622c01960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca82413-1d80-46ad-8fad-78f855007db6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c30760-90ab-4b2c-b567-0c14017fd346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f19a65-2e03-4bf7-af94-6c87030df88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3672d4c-cbc4-4b3a-a0a2-6114b91a697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85874fd0-7db2-41ee-9f78-886cd671459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d24644e-b5c1-4210-876d-eba86a56fb15",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2143ed2f-1195-4390-a8fc-2ae83b4076c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0750ab-e65a-42e1-bff5-e24ea3e55c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b18476-da8d-461c-953f-aa2794d43d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "60dab5d0-ff89-49a6-a7cd-5f3dacab1579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae87b79-3393-4ddf-b9ac-5597c816bd38",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b6fe3a-4f6c-4616-ab03-7112a2a818f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b74d322-6257-4a80-b52e-46f38332201b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224de09c-f895-42b2-b46b-28145d521352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65df2338-0b91-4e3c-b200-608765acd350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac7ce34-dc83-45f7-93d3-de420a83faea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a2664-3a07-4eb5-b290-8917df1637f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f202886-8a72-48f9-a9c4-1052bad48281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385fb741-9096-445f-98bd-cea518924b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb655141-9f53-41c3-8e79-8c0ac3a5fb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0b9c2-4b3b-48d3-bf47-1e6c73bf08ff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f442af-91f9-4306-9108-1249b598ac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a178f32c-644e-488d-b3e5-4a67b22e3831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10f5853-f356-48f3-83f1-a72f17eb6222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04818ffa-ab28-4fc8-ae9e-e46291f6d3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d8c009-ab46-4424-a657-1e578d12f225",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da89b65d-5e72-43c7-a534-a46721a38b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8af1cb8-1608-4018-9d76-e9a4e2f896b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f644bf-98e2-4dd0-b6de-5184cf11004a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5a03d3-78ac-459a-bf1d-2ad16a496519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00318326-4fb2-423b-afd1-030e5e0cd6fa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca4b148-0a2b-4013-aa0e-5ac3ad5c1658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead5ae6a-2068-4427-9574-15ed9601f072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c823e040-fdcf-445e-a380-eaa8127b557e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5911ba-3384-4953-92ab-3963f350e154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a38699-0014-4903-9e1e-b0bf5b65bd89",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa5ef2a-2450-4900-b4d0-7d961711c361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecf16d7-d6e8-4f8f-92a1-788d61c52c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e5aba3-ea3e-4d20-87bf-8610972112e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d365b8b-70fd-4b4a-9a7f-ef551e2ede6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a49557-a316-47b3-b41a-2233810b3f2e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572bafb4-221f-493b-8044-7025c57d3441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d51ffed-bacb-416c-8c23-e36b3cd22fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d90e29-f25c-4cb4-af21-faf1dd658a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "259b93a6-67e2-4553-82b2-98be4b05e6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dbe65d-034e-4011-b4c0-6036f1620d02",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e37a51-95a8-411b-9ea4-999837aa6792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ff164e-73c6-44d4-ad94-153055294abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4bfeb-8742-4d8e-9f6f-a798be2d52b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62aeb544-1429-4734-9be3-5e1039dc062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9097c8-f6f7-450b-bbb9-af3743fec21a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86599dcd-736e-40d8-8e64-0f7e7a17e282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2ac0fc-d6cb-49b3-971a-a1a0023622e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e44b66-de75-426f-927a-bc01d5b76e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2647ed84-ca5f-41d6-8e92-d945178e0aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38900097-d804-473c-9c58-7fcea4463339",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f2be10-7bcf-4a57-981e-622af8eeefec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d8f708-9317-49a2-9312-3c35b583d42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf90d5bd-d27a-4c33-b17a-4ee1cfe8613d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "196cef29-46c2-4c66-a4e5-640cba1398fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0506179-3501-4789-b769-62dfb229f990",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ab16f8-64c3-4270-a663-caadfecb50c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5a111a-315b-4754-b10c-1505583401e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71c56ae-8ab5-4ac7-8300-914eccf0f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0e08e5-910b-42cf-ad46-4d47d7a656e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d07865-5847-4d35-b4c1-aab3bc11c5bf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d5d10-b5cf-4f88-a87a-4978c959f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4228689-4b22-41b7-b4d5-0da42f21c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64b2449-ad6c-4613-8a8b-9581f1687a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f822650c-15fa-433d-a2ba-d9cee74aa221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d67e10d-0c11-4fb6-9074-631822edc372",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff721735-1ff2-4d3d-bfa5-5d88886cfe93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f968b8-fb49-4946-acad-d6be0ca58b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716a08a6-4e8f-4cc0-9868-9795e6dc7aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3bb769-ef10-4460-ab3c-795bfdcc2126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac7a04d-dbfa-4652-94a9-2f3d8889bc45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc2d238-f670-48c7-b68a-9775b25e788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d54ed3-2df3-4e4a-9a6d-69f1c302ad94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab6370b-3e9c-4e3f-8cbb-3516c35979ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ff83f4-22f5-43ff-8275-484247d0768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d22f963-1434-4169-9b49-775239cc51f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7fc0fa-d2d4-43b1-b253-7de7477a1fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c58b24-c542-4927-bc75-6d29785f4c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0261ab16-32cc-4a5f-8894-6c108f1a0cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd85d32-24ce-4166-8c82-4c5051b6e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f1c3d0-0763-4002-a1e5-0a9486c4cd69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaa2f90-7dbd-4be9-afeb-49f70d7662d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74862d87-6fa5-48f8-904b-4417d57baab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1610b13b-1158-4281-b918-0ff017199db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "874ffb63-b4a6-456d-b54b-adb44de0930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e6eb84-48eb-4b1d-a8ee-15c577a96560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac24c0-ffab-46d0-8051-bf345dc3eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2975e73c-22a3-4832-8833-06d01963caac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5b0e9f-a1ff-420f-8250-c6ef8a92c370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b96c8316-5551-43a7-8abe-f29444d7300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0e84e0-666d-45f4-87a4-e939a6b67bd8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8655957-6a23-4fbd-a523-67b9d407071a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918931ca-c001-43ce-a8e1-8caee829df58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd24514-2a14-4b79-bff0-6e48d73fe989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b61850e4-6817-44fc-8a35-e6cf83194a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbc7341-51cf-4e04-8438-7ab2028b233d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab6d978-8ff3-4ea8-b077-36487e7f1fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b463ebd2-6a4e-413a-93c4-945cf0679584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fed453-3862-48c3-a7f5-fc2bc9c94673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd5a291-709b-447f-a62a-1b9b0dd54991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7454605e-aeb2-41bf-9c41-5179937c1ae9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfb822b-88f6-4345-b422-130c89ab43bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fef585b-2182-4ff3-a1e2-21ed1b9dd04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bff82b3-41b4-49f1-8443-60ee969d47a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "560b1b52-1ee6-4f36-8916-b06d8d99fb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fad9c8c-710a-4bbe-98a4-fe2dd69518c4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa25275-7cce-4cdb-af4b-5d229b56cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab44f416-467e-4709-adf0-0f3af36ba75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79aba88-3090-42f3-b814-49a113185e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a21a8b23-49fd-48ef-90ca-1c3d6660c715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8457001-979a-46a0-90da-9966db581d2e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02081c4-c289-4fba-b088-924e38d20dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f919c51-4b2f-4d3b-adad-f0b9dd65e98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8f6029-2fd9-49e1-afa8-1d94556cc4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c21ba1ba-2c6b-4cf7-a951-d16da7c62d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5b91f9-d8f5-465b-a0d1-4ea43d6591b4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd756b56-3909-4c2f-9cd2-390d4780b127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59336b3-c4a3-4437-87ac-3fa1e7dcb1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c3001b-e87a-4574-8e16-ed78280554bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff211841-e0da-47e4-a18b-18a151028e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c3cc90-e9cc-4878-9224-28bcc5ff6526",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0326883b-541c-43f2-a2cd-43b347af16e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5287b4e-c2b7-4d34-8fda-54d16da13980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260e1db0-356d-4ad3-b4ff-a72850e20595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf358dd-635c-481c-9f43-a1a821deee88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e147098-dfdb-4002-b261-3d9d6f92c180",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40880fad-5a71-48ec-8db5-0cfebae1883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a7e423-d20d-4293-a13d-88a8ea89ffdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4004ab-d863-4e3e-943b-cebb73ddb582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "444dadf0-f064-47a4-ae0e-75e784276e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca32d757-fc95-4cd9-880b-1d4a7a304a04",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bafd083-13b7-406f-98cd-3b2972cf3961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194e8ae3-42d9-48c0-a81e-e37652de9d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda3589d-b8c6-4878-9c48-c0d1919210db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3556920-a7c3-47ce-abda-b3cf86e4e477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74f832e-d26a-4846-a65f-f2bebcd5f2e3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1fdb9f-edb2-4545-803d-67deaf5859cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9217dc14-0584-4f7d-8fc4-650bb7d15c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676c1476-1bdb-438a-afdc-96f0b619318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38b3589-e833-4393-b7f4-d2a948e86916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c681207f-cc0e-4f91-949f-d68e1c233f58",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6019c13e-9766-4afe-af9b-2ef31c6f2222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f593e8ca-b982-4032-829e-217fd7034b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b093d4-5711-487e-9e3d-5db0431dbcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78cf280-3b61-40f8-b8c9-04a35008fc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5adb449-ed98-4d10-90fb-d82ba0e6adfe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637cf7eb-f883-4254-9067-8c412f51a99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bcfb76-dc26-403a-9469-75003e1f25d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcb10e5-a467-4f8e-b9b1-eb3798f1745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6faa9fd3-0783-4251-8e93-00c3e554d1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6fbb36-b757-4281-b3f5-e19470146955",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0770fbfd-8c11-4d3c-8fc0-40657e1e633b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffeeec8-5d1c-46f1-82ae-fab6232b2fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e866d663-6811-4717-a6c6-017ee59bf813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b3f4cc-2e28-4f9a-a4f2-fd48e4d46544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e33c00-0f79-4027-b1df-7831d74f8144",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb4e99-4d64-4181-b021-00c844f77725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed719362-5c8a-4b29-80ca-779f734e4495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365072f8-3771-48ef-b2ad-2444df19adf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ede7e8-92b2-40ff-8995-fb48a9eaa7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c8c3b6-83a2-4d60-a5fa-77ec93c7fe52",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca60a9b-e1c3-4b96-ac21-aeefdb694a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271d7f0a-11e8-450a-9856-6b668b8d30fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a2db5f-47d0-420b-a57f-a04d02bea742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b5a840-3b45-42d1-91d0-aefc90344b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1a15e2-8d11-45fa-925b-5c98077a6ebd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cae055-1ecb-485e-af26-9ed00a03114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ae6b7a-bfea-4a5a-a7da-d1cef9f9b025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dba3d65-7bfb-4adb-a633-cf6add109e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "447070a4-5f7c-461a-a003-b5a7b360cc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4db710-cfa3-4d77-89f6-8b20dfe7aeff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99ad8e9-1628-42be-b13a-ade214ad3c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85242d6-205c-46cb-959f-7d046845754f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383298ec-a2a8-42f8-8920-53f4dc66b928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22125095-40e3-4a21-9aeb-394cc759b9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25650d1-a03f-4e18-825e-21971adbb364",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5531e864-0192-43bd-9c86-57c3b016c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64828db-55f7-4a6b-a6cc-77a68eb5d3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6a2cbf-aeb5-4cff-a815-25ebbf4bee3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45b86af4-57fd-41ab-bbdf-cab1c140e2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889a5c90-385a-4ca7-a37e-62840c2d6f40",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40edc3c4-e70c-4ff0-ad65-d64799a5d4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5c6518-1ef8-4006-b011-b761d9fa200d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12582406-0311-42a8-be03-b074d323ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6424f2a6-e486-46d0-8606-21264a128edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b80077-6292-49d2-bf47-012747bbd5d8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e199214-bd7d-4f72-8245-f787f8eec778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cca3ca-5466-46a4-b357-23a73ef1802a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a023f2-3620-46c3-b898-18fedcbf882b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff751da-d791-491c-8576-21938d2ddbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a817af-8923-4d89-8184-ec875eb467ed",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92167faf-c0ed-44c0-86f9-af16fbee9e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab1bab2-dad9-4d4c-91a7-37a9394f3c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fa86db-bfa5-43b2-b845-e4160bddcaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "638f3a86-1514-49c9-9ba8-0e336fed5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222c3ffd-aaaf-46b5-94db-70aab8be87be",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130c980a-fbed-467c-a0ad-773c4573c91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec42625-436d-4a03-87d1-4ffaf56e170c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0120fc37-bc6d-4e67-986a-29fefb9708c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7d3134-3cdc-41e7-9287-b029f1cebe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a6fffd-6ac3-47f1-b3d6-5a57db35c433",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6a21e7-21a4-45c2-b5cf-78ff3c8cf455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56260a34-ce07-4f9a-b2d6-316729513b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236b38ab-4e26-41e4-b9b8-3d266a29b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd95cffd-fe07-42f8-a06f-0a625d0103c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4611132-f856-4c07-97ea-d42ecbf5fe22",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba4b505-f67f-4dc0-a64a-12f9cee28fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870067f4-c8ba-4d0a-a8c6-3c21f036145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aefdf6-5bea-42fd-9a5c-eeffad9fc84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c141fdf-36a5-4894-b714-bb05e1e62b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3c6bc8-8845-49ef-9265-ba21281c516b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985811c7-0747-48b8-bf71-045a172a41bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfa3d2e-eca3-465b-a9a3-3be76badd4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc6d990-a184-4dd1-9e82-4e2d6322b0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "101a01a9-f92b-4022-b3cc-76d2961e41b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a212c4d-4ab3-49f1-af69-d1f0cbe26488",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822cb1b9-9142-42cf-9faa-1f3672c64ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e297a4-7e02-4750-9da8-66696c566db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27098102-0a88-4e88-8f8f-1d99e9d691d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af113d37-7c14-439c-b60e-24a21ee39318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bddbcc5-4f77-404e-857d-ce7c63008bdb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91416b43-2ff6-4823-9d92-cf41a9dc75a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0b74b9-3212-4e7b-8a09-1962ac20f4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad9e592-b426-442c-8c1b-36728e3aaf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "652ecec4-dd52-4c39-bee4-ffcc66bd919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c712ae9d-9b8c-4b82-99a9-0f24839c19bd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfc16b6-b735-4745-93b0-7b2e470c95be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8348d143-7120-435e-afdf-83c98d7bf8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb786c37-ec4b-445a-8bd8-35a6587e4fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da05573-9ab8-4695-b65a-c50999018b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83511fa-af37-4fec-bb6b-2866dd52b9cf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038073ba-f0a8-4973-881d-2dbcf2d79360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6634e290-7e44-4784-93db-308c3cefdbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8713c4a9-9a82-4190-bfd0-93f0b90281ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a55a3547-ce33-45a1-85d4-8f5d42e0a502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e921e-7f32-4411-9098-f160ac938d92",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4f7376-081a-4725-8b75-d455ed591cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7238b1-0150-4343-9e95-ca86b1b3861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8373ee6f-c76c-4d6b-bc66-16038d30c26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f54e877-0cbf-465b-a7c6-e425b4c78ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754118cf-1bda-4233-be66-aa1e207462f2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1d7134-34ba-4310-8d91-3afe811de4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a339fed-c030-4b3d-b2ea-7fbb20d5a57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c8914c-9cbe-4380-99a7-e3db13e0004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "acbf107e-de62-4ee1-bc92-0c51944bd2d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4e86b16-382e-4a51-9014-ac44edf10e9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc9c8b64-83f4-4f7a-87b4-bcb4c86750a1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615b21f-4654-4035-8a31-2409e81850e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7915dcf6-bac9-48de-85c6-a5e796856a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf8cd5a-147c-4700-b3a0-507e0c37beb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "517d5029-ffea-4375-bde0-a93281a38e17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d615e0f9-c199-4a47-856c-ff7aa3d15afc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f186450-136c-4fa9-a899-a3f710ed9e88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "201a1eb3-e556-415a-bc5c-09c10736bbca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "978696f9-668d-451c-9639-e48a395861fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a76909e-d3f3-4b39-a688-62b4ff13b082",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0576be5-9b4d-43c6-8362-734bf0996255"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4c465b9-f156-4886-ac6e-f013ae51949d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e32c9316-a13b-4b60-a32c-90ea02615310"
                }
              }
            ]
          },
          {
            "id": "a3de43eb-d828-4f22-ad58-a4b3550bc8ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90cfad4a-2c4b-4e0c-9143-9557a2984f12",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0a44a9eb-c3e5-4177-9546-f7610683cdcb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbc49ce-08f0-43fc-a181-d17ad59bf025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f22b22e6-04f4-4e6a-997e-13b9caf799c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b86dbd-0cce-4b74-a9bd-dea2848b00a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b28372-cccc-4428-b335-cac29c9d5868"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e10787cd-2128-4db9-9c2c-9feae29502cc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc6feb12-0fc9-41a5-99ce-5b3f370c5ba1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ded4ec3-9604-4310-8eb3-37095283838f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abccdcfc-f01f-41b0-b495-7f45014342e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e41b240-a7ff-45f8-890f-cb6210b5b8b4"
                    }
                  }
                ]
              },
              {
                "id": "9e1acf12-9a56-40d3-982b-81e6a01ee4d7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e1a4b6b-23cd-41cc-be9d-3c9f813a8910",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61828706-3c7b-443a-a5d2-3b85d60e9a35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e7d4370-632d-4ec8-8248-92b275704a2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e612a2ae-342e-4b70-bb31-ba1e1df503e5"
                    }
                  }
                ]
              },
              {
                "id": "ca16188d-c7fb-43a3-b2ca-7c5151bf76ce",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fced7e6a-9cc9-4855-a4f1-91158bb5ef9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff73d4e2-2948-4b8c-b82e-0529b340fc49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c531e912-7f03-4605-8916-a7d01c065861",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d49ac50-ba7e-4960-9b7a-6e90bc868968"
                    }
                  }
                ]
              },
              {
                "id": "bbcd3af7-2107-4c8a-97db-d180efff04b1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d045c1c-3058-4757-8351-6102afc4e8df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e00e052-d5a0-4f1d-ac27-59d3445cf3c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4382460b-a725-48b6-a1ce-35270be36267",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a3443135-e76f-47b3-aafa-807ff12fca66"
                    }
                  }
                ]
              },
              {
                "id": "b433fad0-a286-404a-bfb2-c21018bbea76",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a60988ff-1353-4f94-b74f-f235d1ba8edd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62ee8a92-5fbb-4406-a517-15d515bb4ade"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e52a8c5-8097-4419-b3cf-425a8b1b1c39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "04780c97-d607-4444-96a0-f0314e791f3a"
                    }
                  }
                ]
              },
              {
                "id": "71d990b3-b381-4bb7-8c34-f64032cbe2eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c54eb22-cd6a-4b62-b278-3a86b202df86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e8b93d3-2aca-48e4-a2a1-37d995cdfa97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ec8d30b-d6d3-45d9-9fad-6851e0f036e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad34c1ad-cecc-4c0b-9c77-b2dbf59b9ed0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14decbdb-3ce5-408d-a2eb-34f888c71937",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0b6f463-aa75-4b2e-b3cb-c42e1a16941f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2cd269fa-633d-4da0-8d73-7279cdd49e76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "527f2b4f-52f3-42d0-88eb-238b291b5456"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa250ad1-2439-4995-815e-1169e65a31f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0b18f952-5c47-4673-bbaa-ad8bbc7eb45b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000a1050-4120-483b-bd39-a1183faeb292",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34ef5997-778e-4189-b49a-24954d561948"
            }
          }
        ]
      },
      {
        "id": "60ee29b5-11d5-42f3-adc3-13ab3e29cc8c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fd8763d7-23c5-45f0-ab00-14dabab09fcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be4bbcb2-ae48-44f9-91e4-428d537ba944",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1a5512b-33a4-4a39-91f2-e5949c8890a9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b4dbda-0efb-44ca-b9f2-2fc1bb2a4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e9eafb-bce0-4abe-8762-adf4b1fda364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a208dbc-0ec0-40d8-835b-87f4e4613760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0ed822-3b29-4e45-805c-646bc5fcc5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a757f177-19f2-4198-aca4-62c64acef78e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3846652c-c475-41e7-a46e-3629eba30b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbadc76-90a3-43bf-868f-96ea603e3779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe38e9f-3fc7-4f4f-acd4-eb10d0009de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5ebf2e-b60c-4537-8f86-c7d703345e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bea636-6906-4ee9-b67c-19aab7048e0c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3dce62-07be-42ea-b31a-65ac24b2a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f91b15b-7557-4385-9cf2-080756977cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0912de-a48a-4315-99e1-a1039409d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c72c3c-750e-4149-aa02-589b41c90460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6115a0-1feb-41fb-95ae-89b5e17a40f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032f1317-fbcd-41a1-95ed-5625d3195960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441dfafb-ceca-407b-8c47-c435f9fea5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0524b86-54b1-4a7e-b543-417bf7d0de88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2279b53-a1a8-4006-838b-afc426956b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968d4ab6-fd09-4751-9987-6e354a675295",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec265b1-8e88-4890-9422-b82ad6f6c3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a007b9ec-c7de-4619-ad4f-d1023aef516b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37959b4-92cd-4f11-9d46-c7fd2a77fb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aafe11d-a381-47ce-ba33-c64340397137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733c7bd3-a953-430c-b1a9-fd3b18c91849",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698bdace-dfb5-48a9-9235-f5c366574aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cf5102-a45b-4d6b-ad57-18376553ef1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7297ed32-e956-499d-9b51-bbd7ba3ff1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29bc3f66-71a0-44eb-a62c-8129f2fc00fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ad0781-e706-43fa-977b-7ebe6a4dfbd2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40652c8-f0b8-401d-8288-34105de4f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaee67c8-7c39-4b8e-a3fe-f476eec24ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9cefbc-6000-46f9-8952-38debcce5452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2084dd-872d-4593-a5e9-695388b4e635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6cdacd-d3b4-4f18-8b5e-dcb95650c1f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd4d1cb-3ffd-464b-b10b-cbdde0bbf0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b30605-9f50-463c-a555-1a2b77b5d073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17afe92-eee6-4a9d-a043-d972f0c23433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3032d05-d20e-4057-8f9f-e3211d567170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392e6db9-8dbf-401d-9780-ecbf70d690d2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0bd47e-5207-42b8-b69b-5ff09ace03ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee619f81-9476-455d-a8f8-d3d1ddd6f6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290bb7d1-f50b-4cb6-9db8-fdf062e71ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e680f6-4368-4a82-b832-85bf0dda784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e82ec5-0504-4ba2-9146-cbc663797b7c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb68a68-e080-4d87-81ae-e1e10253ab59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c18caf5-21e7-41b9-9d7a-c858499b4f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3730a0cc-dea8-4057-860c-b304c553cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c7468c-8f91-4819-b9b9-5fc2f9abb273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385c10f2-509c-4016-b1d2-73f5eec04d66",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518bacb8-f934-4924-8fb8-ac1ec1f2aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33fb748-08fe-4a97-a5db-3c959f427e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b810c8c-321a-4926-8cf4-931a29522e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "df1de09d-d9a1-44d4-99e7-fc2579d67589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b3ca70-809f-43ca-80a6-c2a88f04ea3b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3582459-27da-480a-b7c9-243539778e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923ad02a-e60c-4059-a93a-b0e7c28486ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a333945e-b45c-40c8-9f33-0e23fedc7a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dc3669-a484-4acb-9f22-1ba4700d1af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ebc276-b580-4a65-bb1f-7bdae8e7d4a4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541c316f-e523-479d-b007-67a903994406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c03ec4-53e5-45f1-8531-8a930c8e3eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52f36da-3bd6-47da-b2d3-6156f37d7a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf64ff2-b87c-4890-9d64-ba2592fa11d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa0c93-dd31-43c4-8724-da32cb880b76",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002af5a0-e4a8-4f12-a0be-e7e9ceaadf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d45077-c164-4907-a26d-4444eec685e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065918ac-560b-44fc-8fc8-9cd75eb72c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9458255c-d6ac-4702-a160-175219499748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11221ee4-29d2-4b2c-9165-0e72578b2aae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bb4bf1-42e2-4508-83d3-ae3b30a7e5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa761f7-48b6-4496-870c-2b7aa82c9c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecae3f0-f677-4e32-927b-e2d49b4c1c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "322b61a4-b6c9-4139-aa8d-7a432a07688b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f01d5af-3be7-4e44-88b7-decb46d1d4a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b149ed3-756e-4e71-9a62-b2c96a1353a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ad77ec-e5eb-480d-9da4-082b64dd6e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406c7b1-730b-4bd1-a160-3b2bdb50b393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f1e068-cbed-4922-a8ab-c0eb38b735c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c38c190-d890-4a5d-bf47-cb3cee041485",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac26fe92-02b6-430b-8dc7-96febef5ef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9e8536-aa94-413d-b917-1cc3823fe10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fdf2fc-e8fe-4fc2-8581-9facaaf79e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96c3889-862a-473f-b364-054b1ccd174f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736fe55e-3f71-48ef-93f6-2a60c1ffc696",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfe116b-ff67-44f9-bbf7-3d6063e83517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e80a8e-cc59-48a4-a830-4b744020be68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b9c34a-c936-459f-b319-6361429b8f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d5a920-bcb0-4aa7-a32f-18988e3b1f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500f884a-90d9-4a4e-a6c4-6a15c368afec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4b7e10-f623-4d47-a14f-391e77565b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2bce85-cc4f-4612-883e-b7de23ed046d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1ceeda-3c9f-4a96-bafc-ecb4825dbee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ea96e2-58cd-4fb2-9111-dbbabc2826e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6652eb0e-157f-4038-bac1-ae8af97b68d3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d5a1cd-7991-449e-987d-b42619256ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d772bc-43f7-4eeb-9f5a-849137339617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd596df5-7bed-4679-b36b-31b9944e9b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f3fe5f-ca9c-48e9-ad3f-4907634fe00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6820a0-2f0f-48ae-95a1-57e8876734b0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1377178-ed03-4692-a739-53e6464421cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ffb764-2b55-4657-9a69-49d597af79fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86d3d0d-9302-4700-9291-dc70175bc6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1858bcab-f733-4e4e-9db4-e77b733747de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e49ba8d-702f-4ba9-ab4e-55d7fb146785",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb958363-358c-40ad-bf3f-7136d87da65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e6457d-635e-43cb-b54f-e605dd13a4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9be3b-c3e8-4870-bf9f-d21924910928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40af0f5d-f1ab-40e4-a687-c227bbb09a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048d6b6-a218-4d8d-be59-c660c50827a2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a057fbef-ce2f-49e0-b7c6-4be86aff99c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad3c66f-7c5c-44a0-adf7-401d333944f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae709be-e00e-4db4-b22a-7b5a6f59a94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcc2fe6-3d1a-464c-abdc-7798853cd8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b0fe34-072d-4ebe-969c-104ad2636b0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90082a9e-9c97-4090-b448-adc53b0cdac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a185a0-6513-4e19-9eea-ff23f9ffdb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1c0188-2462-485c-a6fb-74c9439abfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d16b9d-8993-4087-b6f9-fb49c87f80e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf7b4f6-166e-4ce5-88f1-07fb2f9261f9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c76b07-9664-44cd-874d-a44bd2d50ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384ca174-56d0-4acf-a7b5-4b4ec30d9961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c0a3f2-e6e0-4441-8251-a5ca022d1c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d4bbc5-5511-482f-be30-613d1d820ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c07e955-eb9f-416b-b41c-abcbecc91d7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2b8d2c-19a0-402c-9271-11ad2c3f2bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4065bb60-6ae6-425d-869d-9ff2b51e27d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b71167-a2a3-4891-8b04-8ed66461ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffa2979-ec5b-4209-95fe-f15eb41959ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e48efdd-f84b-49f3-b824-596b966990fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac8b7f2-0170-4e84-af1c-b6cbf7165c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c49f79-e35e-44ef-8e55-50b30dc3cee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865969ce-daf5-4ff9-a1f1-b872c2b3e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438d1f90-95dd-472c-a20e-cca31c2bfdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e937a8-b00e-4202-918a-d329abe27da4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4caa0ab-58f2-4135-920e-7d1b576b573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85b8efc-aa2c-4177-a057-e176bd441984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880c04ff-6855-441d-a778-5de7d474ba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7599e9-b155-4851-9a1b-f271fd2404f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe73590a-9ba1-498d-a343-72136f7577b1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05aebed-b74b-4900-a862-0ea38dbf82b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac0ec71-ba58-49cc-a4ab-a609f4695003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ede305-66a7-4baf-9d72-5de981cf21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44be4c14-8aa5-4eb2-9793-e0c7365a45ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93b578d-a599-42fe-b19d-8e91976bb5b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4f6891-de2a-4c16-912d-f0e87e417470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0ee499-8966-404e-bf09-e653e057d696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775f271-c30a-4517-8757-0aa13b79d945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36eb5358-3493-4110-86c8-da2078a5dc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a75e11c-d17d-43a4-aa07-8a1f90defadc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140cee17-46f2-43c1-a1e4-f05b40e4f633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1ed94d-5045-4535-9e0b-a127bc307150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bddf77-af96-45e8-b366-4e4f6d362d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db9af8a2-5a9d-4af6-8732-33abedda6cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7394cb40-0b56-4280-ae92-54bad10922c0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d315b2-1566-4689-b36e-d62a3e5ea38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931fbf03-6f68-4567-8b01-4cd0681157b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c0adaa-db5f-4943-a6da-09c1ffd504d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf9660c-16f3-43a6-99c8-210633e734c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5ccac2-fac4-49a8-8e16-d528936950fb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251b0675-3992-40a8-9305-6348c48daeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c69f8d2-7d81-4f1a-ab63-e6df6a8fd8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c038ec6-fe49-4d1d-994a-2dad5287e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdea744c-5dbf-4692-aa6e-9ab9a355310b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb6fcae-db51-41d8-b59f-cc03b8c69ca2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae9ff83-bcb8-45f4-8c05-dc01ca027366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a46600-c684-4e16-a89d-89c04b00cee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632340f0-0c3b-4906-bdc0-5d65c57413a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33388d3-bed2-4225-8fa0-63e0077c4321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7a3268-d19a-4235-acc9-8fb086a56a60",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13e3ede-64f8-421b-a262-66ec46d08002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45533ec1-f5ea-423d-8dc2-06471becfaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed0d08-724e-4e33-b26e-7e5a348adaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268bc4f0-d7ff-4aa6-9143-b325fa08b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d78c10-d9e4-4e21-abfb-157792887530",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c658bfc5-f196-48b6-be0e-3a8ae9078b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cad6d48-72d4-4e04-b55e-4f25c0f5567c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2023fd8c-c6a3-4071-8446-3b89dc4cb522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d798adc8-9bab-4705-a971-1fced8ecc715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2926b841-5186-4b9c-ba70-fa951a06de25",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca664a3f-e474-4fe2-b74f-56d36650748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d43f8b-45e0-42f5-8323-9b920cabfd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a09c43-fde5-468b-a3fb-3203d31dc508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74c2f3ff-58a7-495b-9287-320999c6eeec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "988f7412-06f6-4307-9d00-8212960be48e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd6a31b8-62b6-436e-a7fb-fb46eb840822",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751c0ec4-b2ac-40ba-b13d-a21d94ed2878",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "def90b86-3fb6-43b1-8aae-7db79f84a6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e534106e-cc5f-44af-8256-94a8c4f9b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "897553e7-7841-4752-a452-dd5ca087dff0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f24768f5-99d7-473e-8116-9178eb2b7607",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "750133fd-ef20-43f2-b76e-01600828852a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc16eb4b-0715-42f5-9129-73e61b3514d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "630fbfc3-db06-4cd2-988c-60382e96fad9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16c6224f-63b5-4c96-bf8c-cc4815c32b98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5de02e09-fc34-4a2c-b1e8-9ec525712e69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd1cc13e-be1e-47d0-a47e-928c5e6227fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81d8c4b0-e6db-4107-abf2-e1eefd1448b3"
            }
          }
        ]
      },
      {
        "id": "6336d7e5-60c1-4aa3-a573-2f726aee79a6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "57dfe958-7d86-482d-88a9-d14dd3e820b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17c03028-9297-4b90-91e3-c0e8605de91e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8870c511-24fc-4a28-9834-59956276ef78",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ec70a1-224a-43ca-810e-b01632f63091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8814d0d9-8591-4ed8-b710-990080f415bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a238ca2e-2fab-4d34-a247-d14ae65f18f5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd7c464-fca1-4f9e-ba22-4dad36aa9835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2652241a-0059-461d-ab70-5a99a6a101fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e310a5-a887-4bf4-91aa-a7165f681d1a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e55d6f-6ba6-4578-85e2-59a31b2f940f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d8a705-205d-4529-82d3-1d92d1e6bcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742661be-7ec9-4933-9df5-1b28ad5bd412",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4120f4a-ff64-45fd-b211-3f7c01860d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072c1522-2dcd-4c0b-ac17-527a5a777923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d4a621-f823-4c9c-9d00-48199e3dd96d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad682e4-fba6-4114-9e16-78fba816924f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6e9a4f-0bdf-42ed-8de9-e0f8d3b232dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087b543e-b3ee-40d5-8482-d9642de20227",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6be5a14-73fa-4df0-9f67-3806d0ef6737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd520ac8-b397-418f-a1bb-8042015d6eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237c7776-7a81-4015-b296-d09e5fcb302b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee290e49-523b-4729-8361-00a03b36996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f9cc67-df0b-4673-a521-8ecf03767238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5fb73-0fa2-47be-9075-181be666febb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d402b9-12f9-4728-99ae-4fc2359e6dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dae1b0d-4b33-489c-b285-f0f52f642710",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f767acc-d0d2-40f0-8718-ea5d116ef5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e0befd-1c62-4d09-88a3-c1dc30028071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec5ded9-ce18-41e3-878b-1b3c26c70cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8b21b2-063d-4902-9ca8-e0fe124d0808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d5c578-f878-4b57-96dc-24075d3f89e9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4f701d-29a8-4302-ba10-ccdca6c55f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c67de88-e250-4ebb-9943-c326190c737c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52948849-f650-4e82-8f6f-7f9991fbd5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b8498d-5bf8-478f-b071-f39ca6a903be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e35462c-d9d1-4c45-b5ae-94adbcc5067c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb666c8-f9a6-4444-89aa-00b598157708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbeda4b-5bd8-4370-86aa-66760eefa439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d9f069-d5c8-4937-a24c-0f1faa822bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2590f742-7b0b-4ab0-8aa6-6419c9c3e5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c155fca4-ba7e-4e95-884c-771df1fadc43",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0248801-f5fc-488f-857b-dc52680e876e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100955af-6a78-4b9a-936f-9c4ed837af0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d48bb1-54a8-4073-99fb-eedf706662b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d828d383-00a3-444c-b90c-ff844469b7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5813061-8066-4e16-8f39-576a8a67e003",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22e4954-bf54-4080-8c63-319e0f68f47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90e7e74-6a13-43d9-b400-47ff9f756aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef3b67-a4b9-4a4a-b533-e1d3a6895a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512d00a9-abc1-4a5b-9285-2305d6f95d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90fd80e-7bc0-40f6-895d-4032bd2fbf2e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a0e609-fb1a-4a88-97ea-8e2aa3c51cd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad836fd5-ff81-4835-ba5c-7acfedbc6e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087df4b2-08d2-4162-9b33-150c5921502b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9287e148-dc31-43ec-92f1-e1a49bd1dfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a1a61-bfde-4a63-a2cf-f242282b2aa8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29940a81-6b38-4479-aa7a-cf7dfb7009cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05da8d0-4106-48f6-90bd-482c4adcc1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6ddd15-595b-4627-adf7-1bb9927bb14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae090d2-3632-4970-8088-4effa1a0e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e41721-c501-49e8-a3e1-d39ab8f815cc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb5c61-0688-4c4d-afd5-53ba8ad575c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b31598c-7e43-42ff-ab4e-7b95d7b9621b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58d1384-b7c0-4440-a004-c74023400e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fb1d18-dad5-4af7-85a3-f9e27091dcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb54237-305e-4521-8424-261d1db90df8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e994cbc4-af10-4fa0-a82c-982d56c63d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c0a946-0b6f-4b9a-91f8-60970a323a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93869fc6-32ba-4c05-a1fb-632cb09acc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6db9324-50ba-420f-96e2-cd8c09e1d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95295396-498d-4ce8-9db9-270f0f391dec",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f79ef9-2d5d-463f-999c-69aa123213d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67416734-2324-42ef-84f9-2533ac6d591c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f6c96d-0c6e-4677-a5e4-293de537ae46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28c3dc1-84d7-45f9-8cc7-b57a00d45780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf02e61d-65f9-449f-a646-15d092959cea",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a4c133-6f53-42c5-9402-84b3f975039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69cc7e9-64dc-4d63-b049-ee880d2a56fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32848aeb-4618-4db5-a7da-be43d0047dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff47b252-4e51-4a3e-9e4c-49fb101cab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a5022f-07d5-452d-82b8-71975119a1ea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51151c18-f81f-4ca3-a90e-b621886332d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2308316a-356a-40eb-aaf5-42a47f1c9ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1307bfe0-5e6c-4c40-98ea-5d44e2d3c598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c771f8b-138e-4c83-9be9-e98b8334a6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327a7272-64c2-4300-8571-dedc5e433cb7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d4e221-2ecb-4e6a-ae11-cdf8783871cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c4c42b-7669-4521-993f-f28a3eac46fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6804cd-e2ba-4dae-972c-e73d703e66e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8500a7-e717-4cbd-bc0f-adc81398ffb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48324cb9-7efa-42f9-99b1-2a282c480f51",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be53620b-1fc2-4b8e-982f-08cc5118c2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5301193d-6d22-48b3-b2d3-331d9638686e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa84151d-2f3d-48da-8fd9-15d38bed09e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9e030d-9e46-4392-9b8d-bda91271cd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d229645c-dbb9-4229-938d-91ac8a3eb305",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c2446f-85ad-40df-8970-a7ffe5e55f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc900a4c-1592-4889-87bf-e4418a6b0d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd887f1b-ff7b-4252-88a5-c3c8e728c14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9b9051-153c-456c-a0a1-16f3d83d88f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd52eede-1f25-48d9-a9c3-f209feb74664",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65923df4-6349-412f-972c-5dacc6bf857c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1a9619-5db7-4c2e-9476-1503ba6878eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e921e5-5af6-472c-ad4b-25ddcabaf12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d528b68-a0fe-4359-ab87-970b3434c4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93051473-54c3-4f65-a17a-331ecbe40393",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484deacb-4c41-419e-a602-26adaead6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f7dc98-3a98-4393-a776-ceecacffd378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8507e4df-1910-44b0-831d-2f99bd17de87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593ad928-9642-414a-be73-54f2c568cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf98c2a-5aca-4723-9c66-e18dfdad5ee9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9933fcae-76e2-4e45-a6ec-01ef58bfeb60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0de9087-4056-42dd-9777-a68d24aa71bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899a61f6-5650-401c-8dc9-1a09f8d6cf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1097648-8ce3-4756-8093-15debadc22e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60786d39-8ffb-4bca-9261-5076aea46cb2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25feeb5-bff7-468a-b2f2-1c3b9af6ddc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633b4650-cede-4871-b573-c8e75de59c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a622b6-5625-4f7d-9ebc-82109f492e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d355bf46-fb6f-4fe7-a119-b8929cd30abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efefed5-82c6-4ef8-87e0-f1aa6ed300b3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28963324-c84f-41bf-b3c9-da7235fb751c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379e5494-c50e-44f7-963d-835cef769ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3aca2d-b0db-464e-9733-0ef8cbf9264d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8f4c1b-d8a2-4805-84c6-e706cb55a221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774f4149-c331-4b34-861c-5b6eab62f0aa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d414706d-9204-4ea6-8562-b79caf865b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e405c39-64c4-4031-b210-b720d94e7917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009d5508-fd1b-4999-a982-512bd8d496b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfd398a-7f5d-4448-a23c-f01ca640cd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4931b5-cc05-49b2-b409-6356aa989561",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdbbd62-5629-4d86-98c7-e15fc5fa93c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409fd6b9-84d0-42c0-a7f0-e69efbe84710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d81429-9256-4d1c-9b27-f7e8922fa8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a513120-8d44-42c2-98a1-71aeac5ca7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c63f66a-323f-41e7-8c7c-744dabfec502",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf97c3a-9eee-492c-a1d1-41f87b1fbe88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b4b8c2-4371-4e9b-b92e-82bb6cdc9784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953a867d-26af-486c-aa5c-6865cfe65de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efd0356-3b1a-40c0-beb4-ff1c717f5112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc98b90f-7385-4587-b6a0-bcbb0dac9c93",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544535ba-d98e-4c99-b8aa-4ab67dbc51fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be3d74f-fa1e-4f56-a472-a438e9631f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a2e3bc-6d7e-456b-b891-234da468c101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61ea301-574e-4597-8af7-16dd4ab359e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1200a713-6d23-43ef-8fcb-e7cca9469d5f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ca1647-1942-49a2-a6e3-8ea0b269be7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd26b2e-43f2-4ae7-9213-3e334629529b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26ef94c-5e4a-4261-8c24-2e519e52ea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc46f017-2a8f-4e9f-b2a4-81f7fdb161f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b270dda-5469-42a7-88da-2e2b6cafc973",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ee9bf1-8fed-4d65-9982-f967f4331f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c7f2be-f7e7-410b-a32a-75a9d9bd2a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa9ebd3-8b2c-4e71-9ca3-9c2683b224cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795f41ed-6cef-4935-be57-9064f022e196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0978bb-823d-4eed-a61f-33c0add1e38a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebad910-b763-4094-8e51-907ac8d4b16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09160f3-06e2-41ac-99ba-f079bcd8d7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7f91d2-fdd9-40fa-a6e3-f10b3e0a73eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c135cc8b-1f14-4472-b9d8-cfd16ffeda4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51d77fc-6f7b-402e-b9b3-8f7f3f05c23b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bce2aa-2bc1-40f2-b74c-46e5ab166b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de437870-fd73-4a4a-83d5-42bdcb7db274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe112c6-e7d1-4162-8c04-3596bf1ace44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ade5bca-c02e-4d3c-9ca9-fe9ff432f955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0bffff-0dda-4ace-bedd-0709d159c3b3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808fa648-f6e8-4a22-af80-0400559b6bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c55484-95d1-4310-adc8-c988e1502fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee6da95-5428-4101-97d4-78b8ac8e2c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ef1377-2f7a-4733-bba6-9daec3ff1044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c169022f-e7d0-4984-aba3-6ff8f0bd0ea8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08b80d5-a754-4f7f-804d-2508ddafb73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68486165-b949-46b3-8111-85acbc71bfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed810d4-1079-42e8-9dce-8c01cf07f205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fee4e1-700d-47a4-9d34-21fee408d686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f466d65b-f67b-4dfc-8a1c-495d3109902c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19eb690d-6567-490b-973f-ee388311fc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d8589a-dbb3-481f-91f0-a9cd2fd4c349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054eaa0f-2a4c-4443-8a1f-3366d8e34b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a267f9-9477-4b1a-b287-6389d1c7c7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2fafc7-9cb0-49cc-bc20-9a972103ff51",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a79e5ae-8f06-4e1a-a9ff-87d2a092c75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abbf164-aa49-4105-8c0a-3c7915371915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdadf63c-3ce2-4763-ac24-af91bfbac1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c690e11-120d-4872-9e66-54ef083f08ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a6859b-128c-4cd8-881f-dc2f9f592896",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c4504-53d3-4cd1-ad92-5ea4e435f3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561aa26b-3544-4590-9195-4236327c1452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b1635c-cfc1-444e-812f-80649cb7afdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c437df98-6d8c-4997-af46-d9eeddb338d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e077871-fcee-4a94-ad44-c4d4638d0091",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e76e21b-32f8-466a-a4e7-119747cfa357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e214f6a9-ca70-45fb-a9dd-b3cab0cbd6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f11876-c9d2-47a7-825f-e8cd35f18b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356d29c7-0f82-4d89-b31a-343d873a0692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e244585d-546d-4c58-87f6-39042659abdb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6fb152-a1c0-4305-a330-d85806fbee75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f7c2b0-8d96-43ac-8bec-f59889527c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33899dda-38a0-40a1-bff8-921b4356fcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51b3677-e6ba-4029-8009-e51a638b3271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aa1ee0-15b1-4e7d-bcb4-8202a084ad18",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3109143f-f0d4-4c07-8476-156c80b49f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a5ccaf-d5bd-443e-8e79-7f2d9dabc1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d61555a-8190-48f1-a2a9-146207e9722c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380221bf-dac1-4e66-81ac-169f6d99b703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39f989d-4096-45a9-a8b5-8d5add646feb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125d3079-6df2-45d4-a779-1d0cf69eea54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b7d3f7-9429-42c1-9302-031e9a7b7e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3085954-2cb8-4e05-ac47-3b0e6492a2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b68e59-166e-4347-9634-462da753919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28788d4e-3c26-4148-8767-974999b71056",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c73a5-3934-41a7-b4b0-5d38d99212d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f315e30-1dc9-4788-9052-d4f0e20f9b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a102deb-ea0b-4e25-b4f8-937f374f1f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157ecee1-38f7-435c-af2a-38e195bc7815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202acdb8-68e9-4700-aa47-c35f38d67ed0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd035c3-3f62-48ef-981b-52a31c5d5765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513a5c78-04ab-47f7-a341-d70f87e1e73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1e5a02-9585-4971-ace6-d286d7248c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7c4b12-4a7c-49bc-8d91-b4bff42b6d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4bbcb2-647f-4c60-b38b-e31e0b686839",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07e88ba-0145-4329-84c2-8c6a7e96f7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d5f269-61ec-4c22-84c5-3f47e71da223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b94039-5ef9-425f-bab6-e7b07fdc5319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54eab73-eb1e-45b7-842e-aa367db543ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb5f8d2-5ac0-4dab-94b1-de08bd2f88be",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313cb65e-069f-4090-b186-97f13240909e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f9dce1-6519-47d4-8310-121dfa2a0adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1245c27-551c-4898-9bf6-6a9d74952446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43beaeb-6db5-4ad8-809e-8af5f1c5f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6559e7-5020-40a1-9fcd-73c029edbffb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c7505c-c5b2-4777-b7e9-3b1a34562683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f93bb79-8502-407a-b4f9-62d79d38d158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8e56c1-79af-406e-90d5-162d7f58257f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781af4d2-0a92-4437-9fa3-617bbd2e13df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f97740d-18ee-4a28-8981-b4bb603cdcb3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91a1591-f3cc-4de8-b44d-768217b76db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54e2ccc-0729-4e20-8d0c-bf8fd2574dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ad554b-53a6-464a-b5fb-816359645358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8f415a-33f5-46d5-b713-d1c914057ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fd4b29-46ae-43ba-abee-674cc95cee6f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016d03d5-862d-4bc3-92f9-6f4f19752e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059e1720-4259-4712-925d-258ee87ba9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa934790-233d-4ebe-8287-987869e2cddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8411f617-d325-445d-8718-cc8c60a4dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af587a7-5a04-43f5-8056-81f8b718fcc8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49faacf-4520-4350-95c1-fda625126749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfab34e-2b97-400e-bc40-2078e2a8eeba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaa1300-7b8f-4532-9eab-e6bbe2c2088e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f986a5f-8d5d-426a-920a-1fc95fad3657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53081515-6caa-4806-8bcf-a3d72bb292ef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e559cb00-80a0-4df1-8011-ca7d240cb6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc53077-8a6e-4406-8197-10ab112c3f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e289c99a-f583-410b-8b03-5b34afa03d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4543cf65-896d-461a-b893-b9e38dcc4f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5139e1a3-0a07-47e3-a4ef-2fabbacab1cc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7813e5e1-3cd0-47ba-8006-1ee21a74ab58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a398e338-4fc0-42bb-8669-4820a0bc2a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c51d42-bca5-4fda-8dbf-8fd11fe49b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fb583b-10f9-43f3-9b5e-02cf06c8b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f87a18-bad4-47f1-871d-5b93bfda0df1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd6b65-760b-4bd3-8b28-15df5db816ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cedabb-d489-4ab5-90e9-7b9a5440130b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa294428-9a84-4212-b95e-9139ed5ec820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b77ffde-e146-46da-b52f-54b91d64726d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014691a7-c774-43b6-bd67-afb553091820",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605e8c15-c45f-47f8-8906-f62064a970ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d8b778-3238-476a-b809-be077a6a5278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f3699f-0555-4c56-88d5-511a7f3cd726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a803418-22f2-46b8-a9d7-1cae88273181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bbdb15-390c-400c-a98b-aa1391e5897e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83af6f66-4366-4df6-bbc7-b73d254acebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb894f84-aa86-4890-b26f-ff11711b86ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8290ed08-4d8f-481c-a7cb-2fc26738246c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57423ecb-9997-4516-8de9-0dd247798d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4302ed53-d128-40d6-8e8c-61f90c2fad72",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1792a91c-814f-49b2-9782-199f6a613b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b327aa-0d5d-460f-bc78-4fd45dffd32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c7f44d-065d-4ed6-b9ed-ca2777c37b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6673595a-e486-4832-9dbe-99545d975dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ac927b-b0f2-4a97-94ef-ff73482ad852",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefd4db4-e5da-4ec4-aa1d-722a39f93357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a27f5d1-c3ff-4ed6-b928-5c67a4b327d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebedffba-23bd-4964-92c3-7da6c26f70df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cc69dc-9bef-4fa0-823a-a45ca6781e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebb1f06-cdf3-4bad-a413-8328e111ec8f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae7f47-2748-4b9c-864d-a34fddfc1fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b16314-d0f7-46e9-bff3-a33bafa2cba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1327ca-43ad-4866-9da0-9e7aafcfb9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85b2b99-0861-45df-8e94-83521b16ad50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fded89-6bbf-476e-9eeb-e5d015d9a5fb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1943cc3f-53e3-4dfc-87d9-f7091e5be048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f560758-1562-4097-9bbe-9a3ebb3fa621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd65603-4b09-412b-a781-f576588c12d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b95c81a-1ec7-4940-8e92-ecdce7cfbfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85019f1f-e6a8-4cc8-9b15-71bbca9e7d9f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d97fdd-b438-450f-9630-333871887a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83a3f23-827f-4bb9-8472-68d585469afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28edb4c-3215-44da-9264-809a9da9f398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b5fddd-8307-435f-a115-c950f93c0507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c59f3f-8683-4d23-896d-8400bc4b4f92",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824b7f98-862f-4e09-86a1-6094a54ca1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c083e5c2-7ce3-4ecf-a355-88ac331dc208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb0a616-2eb5-4d60-8784-18503a8eb461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2b2218-e82b-43fb-9159-e07c976661ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de81472a-70ff-4e75-99d5-b45aefab6e60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfff3ea-92e3-4228-bafc-ee3709de52cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf4fce9-5269-4e75-9899-a344e4ad91c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425c2bf1-4cfc-425a-9eb9-e232ac1b672b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bcf73a-a01f-422b-9c10-b1a0685cc97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9af3007-aa3a-4e1f-a5d2-065fbaf5b747",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb647468-98f1-4198-b5bd-311f8d14ceba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b362b3-3992-4c96-a22c-862729cc5b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690e6ca2-d0b6-4d4a-9128-b65ecb76e2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7028effa-1b47-4280-8d3c-7b38df7498bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25502632-26de-49da-98c2-5aa7593a4b76",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71352cde-0a82-42f7-a0a0-b905948a1fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485045e7-0e8c-47a0-883c-92c2889b1e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652889e5-5b46-4e7a-8262-e2dfdc76ed5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe15c7f6-b49c-4d0e-a116-c759efbbef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd4420f-41e9-4975-9a3c-f8217fc43564",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e13bae-d704-4fac-bd6f-e0e14ea9126a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3552d1-b128-4119-aecc-3983d3dc8ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdb1f16-4cfc-48b6-890d-7222f48a53df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d03835-dd3f-439c-aad8-c979f3887e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68f1d0-1e0d-46c0-ade0-680a3742ee25",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd72d2bc-980a-4773-96fe-d43dfee65fdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b222deef-c229-4a2c-a694-98b101d48a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57ff1d0-101a-448c-9078-cf17962c0633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b2e73b-ae8d-4d89-9f3a-7d44baadff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9f9bea-4e1f-4a3f-b8c0-b09bae3bf592",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54b2bf0-3440-4226-8000-d1d3e15630b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5aa799-cb60-4465-976e-c0a55bf0adb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44564f7a-3bd3-4102-9495-67ae43d7347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef234493-0287-4bd9-b570-befc384960e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dab3ab-0f46-490c-8eef-f35525689ad4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1779d54d-4e43-40ad-9c1f-d5a336bccbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be60ec35-acb5-44a3-878c-8bb4f71afafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc3643e-b2d3-4832-bd8c-b5d50219abba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff7c529-40c2-4e27-95f4-641e0adc6a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e33890-f3c1-4a2a-9d1b-ec31007de4d5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d98115-873d-420d-b43f-41a8f8861fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd142e05-7957-43aa-98d6-36ebb6339341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26847efd-299e-4913-b6bd-c11d5d34145d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f1f0f3-b23b-49ec-9146-09f256b9e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b97ba82-2ef4-4f07-ac4b-4739a1d3a988",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68605b2-768f-4890-bb46-9d31694e38cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b19b87-76e8-44fe-b3a5-b7682c42ada1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774f667-ba0f-4bcf-9182-a920f433d8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a915f7-d8ad-47d5-8aed-00dc02b06d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096fb77a-e5e3-4cfc-96f3-ece45c21c09e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294720f4-e500-4660-824c-081249d41fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5a913f-4fb5-424d-a974-00af00f2f68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0a5279-65b8-49b2-8a50-de1b9b973012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f50bf26-792f-445c-8491-c029ca97e6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cb88f2-1d7d-403e-94ea-f156ce3cc258",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25212d8-9533-4946-8bfe-8d50bdfc4d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7066db-d847-48f1-baec-ac1dbb29181f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad93b343-5de4-4bc6-ad32-a22aafc7e7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613e895f-1676-460c-ada4-10019d0ca43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77188ca5-e017-4c05-9890-19f06e39c6dc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc809a87-081d-4efb-9f0f-26850f77867d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e8052d-2ab1-4f84-a982-4e80712798c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471a8edb-aa1c-4ecb-b190-5b67ec04e066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7586d387-6750-442c-ab0e-c482a1c227d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6709a2-a22e-4582-be53-041ae9fb3b9f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f440e430-f5fa-40cf-bf8e-81e91bdce0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e6db5b-9562-4892-9117-693a66b2903d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2c1af7-a730-4598-9fdc-8c96f6fdd9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2c174d-0799-4d0c-8fde-0cea4d47ee59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1892272c-a10a-4732-b4d3-82b934ad7036",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3368a7-bd29-4bca-8289-35bf3635a499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c75359-1ef5-4c7e-bc6c-f55d5a37aa0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626a520c-d599-481b-8406-985c7b84ac42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a79437-b947-4811-b824-3a5fa3c8ae65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c03ef6-5a77-4923-bb65-49ef625dbe06",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5872d5-62bb-47f7-b0fd-34884d266e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2344293-8051-4d36-a738-4d856079659e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99ad635-ec96-4672-98d0-d9e965b3f89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e3acb4-07e9-48a3-8fab-3a6d3b5df96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9bc040-e413-4883-bde3-ad6182fb1412",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f06929-ea8c-410e-8fec-d3b67b83499a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa22958-769c-479b-922d-449afbb634f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b76925-3711-4795-87f2-1e80f19fe8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa46520d-a1a6-4a51-8977-8a462fe2e13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0772bd-8239-4bd3-a74d-ffa58dc01584",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5d8cdf-6d1f-4a9c-b3b6-f2a90ccea671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d015b013-e5e1-4eef-8275-b314f6c5f601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0698fd6-71c4-4cf2-b232-097bf7ca6b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdb6b16-bdb8-4e97-9e20-93ed0a2c6017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571b70c3-af57-4216-8162-d9e881290396",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9db1f4f-df2e-48a5-b3dc-3fa8c946d97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f0f064-0394-4c40-b199-579e4f5433c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64808db5-2a94-404f-905b-b9274774f1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3018bc1-0e91-4565-bbb8-316d180e94f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311ae209-77e7-4494-8ff0-be10b4780f07",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a5d1e5-d35f-451d-8d19-3af48e8cb3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038a585c-85f0-4a68-9d35-425a1b5ad63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816f31b5-746e-4b96-8348-611020cca78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa253e3c-250d-4ee4-a141-45ff145133c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a18cca6-0ff8-4e16-b305-b605ccb1cd2d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb8699e-9fa4-477a-b334-cdbb8e6d5407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d61b797-ffec-49e7-8a52-357f9f786a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf99b4a-f72d-4b96-a439-694adf58e3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5717e0-640e-4c04-a609-a1f2343bddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e8f05d-cc35-408c-bc80-b923be6f8506",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b38564e-5382-4a16-998b-7438f9873d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6878f800-3bd9-4f08-a527-1353ed7a0685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8accf17a-d25d-49e1-bf4a-98689b08015f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9550d819-fb7f-4d81-844e-dab560bc426a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34f3b9f-14ae-4a2e-a383-37bf23a48052",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd19f66f-0939-48e3-b6a1-9a2acd72a577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dfa2881-59c1-4fdb-a992-0be9696ce2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152fdbbb-9e11-4ed1-a6e9-f117f2d8bab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20571a36-5b36-47c8-9e50-d705f9b7a181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69803610-ffa5-4131-ade8-f6209313c608",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2af482-f17e-4c04-a2f3-af3d65746e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f256050a-dd73-49e4-b76c-ebf28f5e8339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4ec93d-155d-46ad-b16f-9b5b1df1b876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c128b6-a678-4dcb-a8c3-7d8503d7f233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f519ffdb-056e-4af7-87b2-42f22b309187",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd59a8b-35f7-4f74-a3bd-91db0b55b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def50c43-2a09-4411-b07d-9694dcaf4105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d43ad6-a3b1-43b1-bccf-8254f9519a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77daad2-ac28-46b0-894f-0f7bda557408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9d5ee1-3e54-4180-9b21-02091f980766",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb571600-697d-4a2f-86a0-a618cb5d3ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a958b89-d84f-478b-9b20-343e53568479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dccf09-6c3d-44e4-92fb-559d456deda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6fda45-c409-4fb3-b2a8-204a42413cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19956357-90f0-4dca-a427-e9d4e9cc5933",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df5f601-73a5-40ec-a773-f274c7834d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c010a52a-78da-4831-8aaa-f6f4540b184a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc40fb1-decc-47ff-ad2d-69d94cec0de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c5300b-5c14-48e2-afa1-5f2b0a66b827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208d9a1e-5a4e-4b8b-8f60-21e668e10843",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848a8670-c088-49e7-bacb-9e30a297dde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b50f10-bd12-41ef-a725-2bcfdcbcdd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e73e33-9e86-4e3f-9ef6-19e5921877e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c098d5c4-fc34-42c1-8110-a902c9f80b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c90a4e-daf9-46d6-ab5b-27efc231152e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01473b93-7d62-4da2-9d49-86d681bdf848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d1c214-63a8-40af-9edc-2d5dda795a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842e6a7b-c3e7-45c5-8c71-e28c82a7d21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ceba08-4723-4566-a4f0-aa66758d39d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5fb316-208a-4992-a3b2-2ad46c42a4ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c8843a-3929-4bf9-b295-7e864f264def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65e6858-1ee5-4d92-a0a4-b4d41831fcc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a3eb97-8d3a-4c10-a37d-4f27cb0e7735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fac9d9-d883-45d4-9553-affa9ce15dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac50b0f-1ce4-4202-b075-eacbd5b6f089",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80ccfb5-fa65-4ea4-9521-13ff24608078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c729322-b0ba-49e4-90cf-f17f6eb52ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0bd623-5c73-45d3-8ffc-bbad4795b202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bf788f-05fb-4280-b6ba-57a4087dad4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f99e83f-540e-4c32-892c-3670086b7af9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6ae13d-9c3e-4ab7-95b3-7bc75ee487f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38964410-e4b7-489b-b4db-884167f70262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4fd761-8cc3-4e45-9e4f-a225a043f73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29616465-4350-42b3-b73b-f8c53b191381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76812a0f-48b9-4a65-bf77-9a740474def5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ba5250-e5f1-47e2-8d02-ae8b7c680e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba81712a-dec5-4131-b38d-e0da4ec25bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4340eaf7-dafd-4d07-aa55-05211b2bac55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e24c1b3-4716-4e28-9cef-f4fb7a3bedec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1ea1e0-8d91-41d3-a73c-38f0fd46c217",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed33cc1-467c-4523-8efa-b40d79b2673b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f7203b-bea7-4343-bacf-0a8c787e3c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9475224-d23b-47f3-a013-6e4d8d91424c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519aa4b8-9ad0-4b0a-a397-3ca3a7f5d6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108ef043-1f3a-487e-adcc-30558c5e5b50",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5fbedf-a3a4-4ca2-a080-db3c0933a57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e9ac76-a686-4901-8447-8f7b59e589a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43da747-2bb5-4337-98be-8e7404f7ce0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b3f377-109c-4771-a7f7-48d628e741af"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67b14dae-271d-4bab-bb15-0a9e451ce6c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f203c18-093d-494a-b6e3-71312ece7be7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90372128-da96-403d-9aa3-75742655a364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "469c58e6-444c-40d7-82d2-d2d5b52ab78b"
                    }
                  }
                ]
              },
              {
                "id": "286ff575-90ca-45c3-a7b8-8d65b8e0d02f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5c419ef-ad00-47c6-a641-3bbae84d63b2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387e99b3-63f9-4ba9-acc6-7206184374d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0ede9b47-3f3f-437b-a411-8f4261258920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5a082a-df91-4bf0-8708-c2ae8fe609c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "201f146b-1c8a-420d-8a26-3deb9abf6b7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "290d9541-0fc5-4fbd-a3ba-7ed7822a75a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5878cf36-f47f-49e1-bf2e-e8642a0de105"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e29760ec-121e-4054-9fa5-7f8213ac4d0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7a4b5f-d1d1-4e8e-b006-a53cb4fe7ded"
                    }
                  }
                ]
              },
              {
                "id": "4a6db16a-09a8-4c95-80ce-9e84beffd4bb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4aba09c8-fc0b-4f02-9565-6f4979341c1e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6728f990-c419-4b0b-bd56-946dcdc3d294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97c1bbe3-b82c-4372-9f7b-2fd1aaab9af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854badb-ba76-4831-a461-d9ad0a8c9804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0d3315-603a-4cc7-b32b-5e6c6c0d9693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a2796449-705a-497e-bd62-5190ca995276",
            "name": "Positive Testing",
            "item": [
              {
                "id": "797729a4-702b-4b1f-ba6f-d7c19b5169ac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27555f04-519f-4b3e-9afc-9402d865e112",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1391d4ae-4b9e-4bf1-9cb4-4cda0d922c27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddbd36b0-7fe8-4e3d-b544-7d26d0ae23cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9c101ab-ab31-4ce7-9605-2306102f2b06"
                    }
                  }
                ]
              },
              {
                "id": "b9912d56-408c-4abd-b0a9-9c2fc96557ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17f59ae1-7bac-4328-b33c-cd2845f5d926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7386918f-8dde-4883-ba3c-c9111cf6fad1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0eb97d2-73fa-41e8-a645-ec07ac56950b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e51c6e12-61ec-4104-85ce-3a6ee99ef5b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e756f9b4-e77a-45d0-a4f0-0745e23e2908",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "60fdf441-5318-422d-8fd9-a2ec5aacd9a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c9e6f12-d815-4f80-bc32-f0e04c8942a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f3bd54e-4771-4224-840f-dce7ee3a504d"
            }
          }
        ]
      },
      {
        "id": "15cc1e9f-e46b-4603-8d11-60098dee1b71",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "701972a1-0fc5-4db7-80bd-b6f88e2c2d9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b1595d1-e3b6-4d0e-ba50-bf334e2b8309",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5dc4363c-4037-4567-a481-3be9390a3840",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cdb12e-be1e-4b91-8d1c-ca9bdd86f51c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adda5c7f-8b3a-4af2-bbdf-fd5de23242d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce1b082-de52-4457-a782-fbb3ee57d779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2237fca-2e6d-43eb-b859-dfc212e34aeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2209ce1-ed98-4b76-8eb4-679cd5b88cd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "370ef4c0-fb36-45be-91c1-ed65afb34eb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c70b9f1-4cec-418c-aad3-4e2eab166abf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b7dceca-090b-4ce2-941c-7029a5e88f11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b07d1ee-4200-4ce4-9d5a-2ec9ae20864a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a9720745-7a19-4edf-bb7d-0e45a722e773"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e4dcb91-e158-4f76-be56-0eb4cb43d725",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c78e78a1-5d6d-4855-ba99-583f980e5293"
            }
          }
        ]
      },
      {
        "id": "e27fad40-3f9b-42c6-961e-dcd504e79f24",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "53205ebb-e52d-4186-b538-2f79006615af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "232646b7-84b1-4718-9cea-82a41ea62924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "817d3779-6f8d-4470-bbfd-912a00faaa8e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a717c1-3402-4281-ade1-31ce7accd347",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133215a0-6348-4348-9741-89e4e52aa528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff03d13-72cc-4778-bdfb-97b0da46a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b22ef4c-ce54-4345-af93-6ab9a162779d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d49c22b2-fc20-4f64-9733-65f7f82de3e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1ff5e48-8442-46dc-86af-3f988c0bd80b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28260641-19e3-4dd1-93a5-b80f0533e3e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "267b4966-c15f-4316-a002-03fa650ccf3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe25c4c0-bf5d-4088-ae63-e51e58583574",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "260e8d47-9001-4463-899c-fc7a5aba2626"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83c0b853-5dba-4df7-a195-9ed4cd2f5acf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b37ca07e-bc77-43d2-81a5-c24f578e994c"
            }
          }
        ]
      },
      {
        "id": "af0ababc-564b-4d19-b06e-cbb08608f3f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b0bded2b-706d-42f9-a838-98e592c121d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "593a9c77-d43a-475c-af61-56ebac3c49f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed551187-e5c9-4cbd-bca2-35944d9c9908",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04013f84-d05e-46de-895f-d06f0ce1258e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ad11be4-8ce2-4bfa-b187-db127efa6bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaec1e6-b92c-4cd4-8073-4cf90f24a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c01a270-7799-4824-933c-4fd0ecae9efc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44909dfe-c3e0-4584-9017-691007dc4ac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2451c170-a203-49b0-920b-1967ca78b3ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c0b7a49-60d5-4108-86de-3a6eefd1e4b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e089d479-d831-42dd-b581-43ea19bf3735"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36be9757-b820-41bb-b230-29789c6e92ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6b604683-9bb1-4985-a24f-344cf6fc1f23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90b258ac-22a3-4285-9edc-2285515abb96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e95659f-488e-4f81-a88e-4deaf29bd6a6"
            }
          }
        ]
      },
      {
        "id": "dfe656ab-a501-4dc9-aad9-37315e28373d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0355fc8a-8e8c-444e-947c-8e043c6b4bc4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e15ff56a-5b84-4dc8-8ab5-291cbc954de3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a696bf5e-d410-4dc7-aa11-18f70948ccd7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f63207-f500-440f-9dfa-fb59ea6e3c00",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afb69ff3-7fc6-4f9b-bf14-f6f073c2c451",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 83.13888888888889,
      "responseMin": 4,
      "responseMax": 8579,
      "responseSd": 588.1153249761315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714005495839,
      "completed": 1714005524949
    },
    "executions": [
      {
        "id": "665cd1ae-8d68-4a89-a90f-e354739edbf8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3cd8761-c06f-45fa-86c5-938de6a262dd",
          "httpRequestId": "58b602c3-4a24-4489-8b7a-363945714ce0"
        },
        "item": {
          "id": "665cd1ae-8d68-4a89-a90f-e354739edbf8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ab7eec10-b709-4325-84b9-17511f9a306e",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 0
        }
      },
      {
        "id": "61dacddf-fe11-4038-a6fc-979071491e83",
        "cursor": {
          "ref": "453f69b5-bb80-4dbf-976f-7522c159b120",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "519a21af-adb7-4a6e-8a37-255fa72a5554"
        },
        "item": {
          "id": "61dacddf-fe11-4038-a6fc-979071491e83",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a4ec3841-f9e7-461c-8d4f-8bbb9d33657d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0804ee5a-06ad-4f79-adbf-227dd63016cc",
        "cursor": {
          "ref": "a1fc92e2-ebe2-4448-b10e-34ab7b28a308",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "515dd00d-4b65-4efb-b618-54a22c0eb176"
        },
        "item": {
          "id": "0804ee5a-06ad-4f79-adbf-227dd63016cc",
          "name": "did_json"
        },
        "response": {
          "id": "ba3949be-dd92-4be9-b1ce-64b70261622a",
          "status": "OK",
          "code": 200,
          "responseTime": 241,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d5673e-2a77-4e12-9f26-8fe0851adb43",
        "cursor": {
          "ref": "cc6d0480-cac9-460d-9f22-925ed3674571",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c04b67b3-1fcf-4808-b905-90cd246116ba"
        },
        "item": {
          "id": "e7d5673e-2a77-4e12-9f26-8fe0851adb43",
          "name": "did:invalid"
        },
        "response": {
          "id": "bfd1d8fa-6134-4bcb-b9e2-682026c5100b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 481,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d5673e-2a77-4e12-9f26-8fe0851adb43",
        "cursor": {
          "ref": "cc6d0480-cac9-460d-9f22-925ed3674571",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c04b67b3-1fcf-4808-b905-90cd246116ba"
        },
        "item": {
          "id": "e7d5673e-2a77-4e12-9f26-8fe0851adb43",
          "name": "did:invalid"
        },
        "response": {
          "id": "bfd1d8fa-6134-4bcb-b9e2-682026c5100b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 481,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e43e43-d3a8-422c-a58c-b4fb9f614e37",
        "cursor": {
          "ref": "665cec78-29c6-43a1-afb1-fff9c3184107",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c000064c-bec3-4048-b593-bf524e39d7eb"
        },
        "item": {
          "id": "c9e43e43-d3a8-422c-a58c-b4fb9f614e37",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2881b122-ea1a-4d57-b3ce-caee69cf0554",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a54987-f588-435c-9b8c-63a5ab6e5bb4",
        "cursor": {
          "ref": "fb6d99ed-65c0-42ae-bea5-73975fe9c116",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa5b9a05-c2d7-442b-9eb2-264eac1c9341"
        },
        "item": {
          "id": "69a54987-f588-435c-9b8c-63a5ab6e5bb4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aa7e5e2b-54dd-4b3b-aed6-b681f1b7a365",
          "status": "Not Found",
          "code": 404,
          "responseTime": 20,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09144ce-b3cb-4c91-9155-f34a06b7f6a1",
        "cursor": {
          "ref": "f742c10e-267e-4ff5-a7a4-11801dd3ea10",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c18f8ebf-5c7e-4975-83b7-f9913bb6b866"
        },
        "item": {
          "id": "b09144ce-b3cb-4c91-9155-f34a06b7f6a1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6ec7af9a-a092-4b8d-8400-d69a399cea12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 166,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3717b6-85ff-4a95-a749-9af4a176a808",
        "cursor": {
          "ref": "8b100132-b6b6-4345-af21-46f8c182cebc",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "58655ea3-6487-4598-bf6d-3b2fa5cc0c59"
        },
        "item": {
          "id": "9a3717b6-85ff-4a95-a749-9af4a176a808",
          "name": "identifiers"
        },
        "response": {
          "id": "05c8f443-c43c-4d71-8b54-2138e6ceab09",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422bdf19-e584-42a6-b547-e874ecca5d13",
        "cursor": {
          "ref": "78a0be62-11a4-4a20-902a-bdea1c812e7d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b1617fc3-03c2-4d25-9be0-646bf461a452"
        },
        "item": {
          "id": "422bdf19-e584-42a6-b547-e874ecca5d13",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4041180a-ef89-40c5-8cbe-478750a855ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdddcc01-d347-401f-b4c7-3bb6df9607b6",
        "cursor": {
          "ref": "d429c759-2505-450c-b7d5-0bf9c0a1e937",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7ada4f4b-90ea-4e25-9c19-d541de205138"
        },
        "item": {
          "id": "cdddcc01-d347-401f-b4c7-3bb6df9607b6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "667f8bf5-be61-4b93-9a84-c54305e1888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96446dec-dc29-44a5-8931-b0907346f226",
        "cursor": {
          "ref": "94b590a6-f8bf-4570-a612-f609f8179567",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "34d6c0dd-f509-4088-8dde-09d20118fa33"
        },
        "item": {
          "id": "96446dec-dc29-44a5-8931-b0907346f226",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "135de90d-45c8-4270-b7fe-4dfa59126929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d08aafd-bbb2-4426-8417-a9f1b1f18c79",
        "cursor": {
          "ref": "48991fdf-4cd3-4f99-856c-520d4755e000",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "736cc19b-aa0f-49d3-8f75-82365b3a1604"
        },
        "item": {
          "id": "9d08aafd-bbb2-4426-8417-a9f1b1f18c79",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "17048d58-2b1e-42cb-a673-cac63d64dcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4640ee65-d13e-40f5-afa9-ec709c079865",
        "cursor": {
          "ref": "7977a7cd-cf3f-4d11-83fd-f32916d2ebc5",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a8a03291-f958-42ee-83eb-fa9debcffee0"
        },
        "item": {
          "id": "4640ee65-d13e-40f5-afa9-ec709c079865",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "13a2d94a-a415-4d0b-8496-00474e19ef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a13ef90-d122-4814-9801-ccb3e41a15e0",
        "cursor": {
          "ref": "78b87e84-3df6-4c85-a654-3410a5f1835f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6c67b540-9160-454e-a4f5-d240c37cb4f7"
        },
        "item": {
          "id": "9a13ef90-d122-4814-9801-ccb3e41a15e0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f72cb74c-2557-4aeb-bd6d-ab2f1a292ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089807f3-6530-4277-bf17-f74cee44f5fd",
        "cursor": {
          "ref": "fd14bb64-77ca-40fc-b0d1-5e0ea5d206e8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ffabeea8-a624-46f9-ad00-43666d724d6a"
        },
        "item": {
          "id": "089807f3-6530-4277-bf17-f74cee44f5fd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "790fdc3f-cd73-4da7-a7e5-38e169013efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570ee72d-c4cb-4a95-8a88-7f061a202c09",
        "cursor": {
          "ref": "d942f9b3-7d1e-49e3-8ea6-4c47b62f86fa",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ee0348c8-b1bb-4294-8eb2-2631c5adedf9"
        },
        "item": {
          "id": "570ee72d-c4cb-4a95-8a88-7f061a202c09",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5141c87b-7c7c-4d66-9fa5-a4b6ec049974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed37fbdf-91ef-40b6-a92c-478e04a017b0",
        "cursor": {
          "ref": "8ad05af0-7922-410a-b8a6-c1aca7eb6e9d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9b5ad24f-fa45-47b4-b9d1-33b2730fc61c"
        },
        "item": {
          "id": "ed37fbdf-91ef-40b6-a92c-478e04a017b0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f66521da-ec71-4e1e-b5a1-6f71859cb779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbb9cf7-40ab-4185-adca-0dfd8ab02f93",
        "cursor": {
          "ref": "7fc1a6d6-a3e0-4dc6-bf50-d7cf98993603",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "44698a94-e22c-4d7c-b79d-39ff9ba71c51"
        },
        "item": {
          "id": "6bbb9cf7-40ab-4185-adca-0dfd8ab02f93",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f9392233-d206-4a84-a866-cc6e055194d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41308ae7-c1b7-4938-9315-bb83884505b1",
        "cursor": {
          "ref": "8b127c7c-4b2e-4c76-a062-7d9b7496b508",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "098f1afb-c986-45be-825e-ba3b65f3369d"
        },
        "item": {
          "id": "41308ae7-c1b7-4938-9315-bb83884505b1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f5479cf-e0e3-44ec-9ef2-c76f6c11a339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c544224-46e6-42d2-a539-d9668726094e",
        "cursor": {
          "ref": "d2f4bfae-7d73-48e6-90f4-b9416d843b9f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7f261cd-326d-4f09-be32-202c79179b60"
        },
        "item": {
          "id": "0c544224-46e6-42d2-a539-d9668726094e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "16041e5c-f51a-4c3f-ad1b-72dfdc0af99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0337cf-fa83-4cce-a283-460c25953a5c",
        "cursor": {
          "ref": "38c22654-a84b-4537-b6c2-1e88724ce9ec",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7c21d9fd-43b5-42db-a357-8c2c5971eba2"
        },
        "item": {
          "id": "aa0337cf-fa83-4cce-a283-460c25953a5c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "68d49331-07ef-4eaa-8a6b-8323010259ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e641770-8c9d-4fb7-b3f0-3620fb176746",
        "cursor": {
          "ref": "b2612773-d4fa-4bed-b12a-f01d9d6ba9c1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e61bc77b-0f39-49c3-b66d-b0d5d7a6fd52"
        },
        "item": {
          "id": "3e641770-8c9d-4fb7-b3f0-3620fb176746",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd2b4717-4242-4807-9a65-8e3aa5115ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aecca87-7eac-4c51-bcdc-b0a1e4c389a5",
        "cursor": {
          "ref": "b7032fed-6af9-4957-b217-1f18dc1e5b5c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8f469754-4f51-4653-abbe-596b66932240"
        },
        "item": {
          "id": "7aecca87-7eac-4c51-bcdc-b0a1e4c389a5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "281da106-6854-4e67-ab9a-0054c1956473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a54259-6faf-42ac-9e47-78340e9d8358",
        "cursor": {
          "ref": "9b400188-2a42-412c-8d17-c041f944b84d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5bf091ad-77be-4f65-bb65-0ace020ff653"
        },
        "item": {
          "id": "88a54259-6faf-42ac-9e47-78340e9d8358",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c3a18c46-ebf2-49df-ba4d-033b8d504311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2abf38-07aa-4326-a029-fa257ad772dd",
        "cursor": {
          "ref": "a88d07a2-44b0-46f3-ae1d-49d400ae614f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "39e6d57e-7af3-4844-9786-4f6070403b99"
        },
        "item": {
          "id": "be2abf38-07aa-4326-a029-fa257ad772dd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fb3e5ec9-8132-454d-9cd1-50bff5b1375e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49338e70-7d83-4172-9ddd-7b209047e198",
        "cursor": {
          "ref": "4a471d8c-6ce5-453f-b7ea-3575a8a0cb00",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "15024a18-03ee-4147-b88b-64c41be3317f"
        },
        "item": {
          "id": "49338e70-7d83-4172-9ddd-7b209047e198",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0f20d957-c385-4497-bb0d-f78f4190fbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d1de27-3293-4e79-ad29-17efb50ab0ef",
        "cursor": {
          "ref": "fa29a870-6011-4cad-a40d-0eac10a425ef",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1e7e106-7b94-42aa-8ce7-656d472ac95f"
        },
        "item": {
          "id": "93d1de27-3293-4e79-ad29-17efb50ab0ef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b798daab-ee53-455c-8618-657ffc0b9702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d02fe72-d30b-46cf-9c23-27b79ba82a88",
        "cursor": {
          "ref": "9e836f12-2543-4a9f-bf60-7767bc3dfe01",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fb3b5654-9ce1-408d-9576-ba2bea62f981"
        },
        "item": {
          "id": "7d02fe72-d30b-46cf-9c23-27b79ba82a88",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "97240a6b-d24e-407f-9177-80e459d3c7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ca9318-1858-4267-bf3d-d33160e03eeb",
        "cursor": {
          "ref": "975aee2b-6c77-4f4b-b53c-d013af7a5f0e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ed44994-1fc0-468a-b228-c37e9240c28b"
        },
        "item": {
          "id": "42ca9318-1858-4267-bf3d-d33160e03eeb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4a3f2842-0682-4ff6-8784-02f154c2e9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8010b648-34eb-40f4-8dfc-9b236ca2f184",
        "cursor": {
          "ref": "5c1c2552-231a-4269-b30d-852623959aaf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a4ca9bad-c93a-4edb-a358-8bb93ac3375f"
        },
        "item": {
          "id": "8010b648-34eb-40f4-8dfc-9b236ca2f184",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "83efd1f9-c9d8-48eb-813c-c60dd0fadf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd6a716-b7c2-49d8-a3a4-23306ca43ed2",
        "cursor": {
          "ref": "e8bf9891-1f72-44cb-a31f-efac9f991935",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b9304870-4f70-4c9c-9085-4db136d82a37"
        },
        "item": {
          "id": "0bd6a716-b7c2-49d8-a3a4-23306ca43ed2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ea8d640f-30e5-45d1-b2bd-c3ada170409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dae8132-a99c-488d-93d4-0339011b118e",
        "cursor": {
          "ref": "586e2f79-683d-48a7-80df-373026c79493",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a00dac43-0b97-403f-a9d1-a1357c1c4a86"
        },
        "item": {
          "id": "7dae8132-a99c-488d-93d4-0339011b118e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "757121bc-f3a4-4917-9488-bcc5dbf08e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e539e8e-85ab-4758-addd-ef028bba7f69",
        "cursor": {
          "ref": "7a5aaf6b-1cf7-4550-928a-86dbfa9929b5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5b909305-1e29-4037-b503-dbcd9cc92de5"
        },
        "item": {
          "id": "9e539e8e-85ab-4758-addd-ef028bba7f69",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e23eca6c-3291-4214-9ec3-35f288e60d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff816a49-f27a-4ad2-b8c1-d67031dc9105",
        "cursor": {
          "ref": "a1679c12-c51a-45d3-bd03-978fbd85443e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "28300af9-2f72-45bf-b3c3-7313569f8d7c"
        },
        "item": {
          "id": "ff816a49-f27a-4ad2-b8c1-d67031dc9105",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f584c1db-81ca-45df-b390-d7246446b435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e671d471-de04-4aa9-afae-3f3ac10b9223",
        "cursor": {
          "ref": "161934fc-a3ad-4f8f-bc51-3f08237e5ebc",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46cca1b9-3b0e-4662-8eb4-2c41368e9882"
        },
        "item": {
          "id": "e671d471-de04-4aa9-afae-3f3ac10b9223",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6df477cf-a282-46fc-b36d-f53753260aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9da37-6c02-4d4d-8282-7f629421e959",
        "cursor": {
          "ref": "38e6c683-becd-4160-a40d-d61666dfeb36",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49773b0d-454b-47e9-aae3-b022b683e9cc"
        },
        "item": {
          "id": "5fa9da37-6c02-4d4d-8282-7f629421e959",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a50d016b-0838-467e-9544-cc37fc9a7dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d072e4b-4bc8-404e-8ca5-b6881ddf07b1",
        "cursor": {
          "ref": "c28a8019-4541-45c3-a32b-deacb59f02f1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "64363550-7607-44bf-aebd-46f2d21c2fca"
        },
        "item": {
          "id": "7d072e4b-4bc8-404e-8ca5-b6881ddf07b1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "45aae0b8-ad52-4f97-9ade-a85f65ab07ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fd05ed-4581-497a-a70a-97cc37d1d713",
        "cursor": {
          "ref": "44550eec-fd5e-4090-8960-b34f45df23b5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c3e605bd-4767-446f-8be0-2eaf95eef0da"
        },
        "item": {
          "id": "24fd05ed-4581-497a-a70a-97cc37d1d713",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "56505ac1-30b4-4882-8979-585ce695ab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fade4842-e12f-4800-897b-5dadc877228e",
        "cursor": {
          "ref": "4846bae1-27e4-4a3a-ae9c-2d9557668fcf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b40cbb0-1149-47f5-a97a-0e35334d9e6a"
        },
        "item": {
          "id": "fade4842-e12f-4800-897b-5dadc877228e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "177da904-64db-4d69-a672-17208d995da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0bd20b-f029-42be-b79a-236cbb5974c0",
        "cursor": {
          "ref": "874d14d6-59fe-4bdc-ac07-b443f579ce89",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3c6646c0-8ac2-48b5-b53e-651b970d185e"
        },
        "item": {
          "id": "ed0bd20b-f029-42be-b79a-236cbb5974c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "efbcf4d2-34b9-475d-a998-32ddad154c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb220421-2375-467b-84ed-3df6181298e1",
        "cursor": {
          "ref": "463b5e00-f649-44fc-ba6e-bac8c2ec7d73",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb935a73-67aa-4d68-86b3-b188983f6f13"
        },
        "item": {
          "id": "eb220421-2375-467b-84ed-3df6181298e1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "65c7c810-4934-490b-86ec-8af4d5f4a73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f2538d-79e5-4e57-a1d5-63ff27848785",
        "cursor": {
          "ref": "5d4ca01f-9fca-489c-bb0b-f16931c9e81a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e72c8bc6-c6c0-44ab-ad8f-7d385f191b66"
        },
        "item": {
          "id": "e1f2538d-79e5-4e57-a1d5-63ff27848785",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "088f3901-8f0b-4eec-a082-bded34956959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ca19cc-3307-42a2-af37-f1cfb1ac8c8e",
        "cursor": {
          "ref": "d5d136d5-d3d7-4c56-92bd-dbf69a9ec76e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f3583a64-cc46-4b3d-b56e-593364315817"
        },
        "item": {
          "id": "59ca19cc-3307-42a2-af37-f1cfb1ac8c8e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4fd7d767-02f7-483b-a72b-9390e8792857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b16849f-ee81-4e36-9b26-1e635a931d29",
        "cursor": {
          "ref": "fd96ebae-6828-4675-99ce-f82407b6a35c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8bb6c5b2-6a94-4cab-8656-9733bc0f54d5"
        },
        "item": {
          "id": "2b16849f-ee81-4e36-9b26-1e635a931d29",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2c092097-5f8e-43ef-ad74-060bcbe1cf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db9e84f-5805-4dcd-a581-cfeeb7156290",
        "cursor": {
          "ref": "9f1d17f8-5d53-4a00-ba7f-e9940badbd48",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e5c8eff0-9328-4a55-9ccb-69581ed366b1"
        },
        "item": {
          "id": "3db9e84f-5805-4dcd-a581-cfeeb7156290",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ee2ec27b-6a70-4cbb-b83a-77e028ed06fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccd443a-81ae-4884-a632-d571fcef5149",
        "cursor": {
          "ref": "ec89ed94-1804-42c6-8797-adf28574faee",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7a86650e-aa66-4066-9302-4c2fe7ca131e"
        },
        "item": {
          "id": "bccd443a-81ae-4884-a632-d571fcef5149",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e51a6316-4982-46cd-976f-c89a0d1a7a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3f27e2-e418-4159-8b13-396ab819c4b0",
        "cursor": {
          "ref": "92ff5b18-59d8-4c55-96e8-efa4ee91d122",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "697bbb22-4347-4baf-b704-b04efdc558e2"
        },
        "item": {
          "id": "0b3f27e2-e418-4159-8b13-396ab819c4b0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "68af57b1-4832-48fc-b16a-a1de59460ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19390a59-cdfb-4cea-8b60-d5c1d4d52bcd",
        "cursor": {
          "ref": "3c86f492-973f-44e2-98e4-eaabc2da0731",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ea991455-85e4-49e5-8685-67dcd01a90ea"
        },
        "item": {
          "id": "19390a59-cdfb-4cea-8b60-d5c1d4d52bcd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "80f9d1e8-98d1-4b3e-8afe-a2df8a217b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e933519-79fa-479a-9877-06086efbfc68",
        "cursor": {
          "ref": "55267aa7-44c5-4a47-b01a-0db874d250d1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1f2490cf-a80a-4a4e-9f3b-a12236c68997"
        },
        "item": {
          "id": "0e933519-79fa-479a-9877-06086efbfc68",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f5f6121c-0a06-401b-b307-5db1341bb789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594fd217-d8af-4b13-a843-1eb987607c2e",
        "cursor": {
          "ref": "13444670-492a-4417-a4a7-e2552bef161e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d54087dc-6e0c-453c-9a10-6b9840f086b6"
        },
        "item": {
          "id": "594fd217-d8af-4b13-a843-1eb987607c2e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d2c329c8-beb3-4353-814b-50c2167a1c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca82413-1d80-46ad-8fad-78f855007db6",
        "cursor": {
          "ref": "32f069d6-b1e2-4e52-9397-f0cd1b3a1350",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c15acf6a-4951-456d-9f8a-7d3e6f513446"
        },
        "item": {
          "id": "2ca82413-1d80-46ad-8fad-78f855007db6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aac858b9-58ad-4925-a22b-0478a834f98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d24644e-b5c1-4210-876d-eba86a56fb15",
        "cursor": {
          "ref": "907b3610-bf17-43e4-9e36-2b3d58eb4890",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1cced49c-3a41-41ac-9259-29ffbe5dbd16"
        },
        "item": {
          "id": "1d24644e-b5c1-4210-876d-eba86a56fb15",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65679f45-5b7c-43ed-915b-1f4bad19df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae87b79-3393-4ddf-b9ac-5597c816bd38",
        "cursor": {
          "ref": "ad209d26-edc6-43a1-8e00-553e2fb63f1c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "039ed733-a0b6-4429-a155-00dcedb5f771"
        },
        "item": {
          "id": "bae87b79-3393-4ddf-b9ac-5597c816bd38",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "59c8d1c0-9a6d-4158-a143-cdbf8f742b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac7ce34-dc83-45f7-93d3-de420a83faea",
        "cursor": {
          "ref": "dc8f01a2-5438-4e1f-82ea-226e997b2bf7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7b519147-c135-4508-8628-35205f5dfcea"
        },
        "item": {
          "id": "3ac7ce34-dc83-45f7-93d3-de420a83faea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0af06662-1d5d-4154-acd6-af580ca9ba07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0b9c2-4b3b-48d3-bf47-1e6c73bf08ff",
        "cursor": {
          "ref": "90b183ff-390d-4bf4-b113-ff0dbe2a9036",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fda3e1ce-b9b7-4823-81b0-ce0309220612"
        },
        "item": {
          "id": "94e0b9c2-4b3b-48d3-bf47-1e6c73bf08ff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "009828f6-a94b-4fa1-bc3c-6c4fdeace9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d8c009-ab46-4424-a657-1e578d12f225",
        "cursor": {
          "ref": "352d9755-46e6-479d-bc2c-2f8f7d7621d2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7ac12bd7-df26-417f-97c5-ea6b10fd3ac9"
        },
        "item": {
          "id": "47d8c009-ab46-4424-a657-1e578d12f225",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc3595af-a2b0-4cdd-9ec1-c4d1d1d51f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00318326-4fb2-423b-afd1-030e5e0cd6fa",
        "cursor": {
          "ref": "0cac4564-b887-4066-abf6-8bc601afbb37",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "323556d0-aa42-46bd-98b5-a334ad10e3d2"
        },
        "item": {
          "id": "00318326-4fb2-423b-afd1-030e5e0cd6fa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7f1df33f-4543-4544-ba7c-29ffedf4dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a38699-0014-4903-9e1e-b0bf5b65bd89",
        "cursor": {
          "ref": "ba92f34a-e3dd-44e3-8cbe-b7e2b9dd7de1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "03b9c130-6406-4129-ad67-51fa592008ff"
        },
        "item": {
          "id": "01a38699-0014-4903-9e1e-b0bf5b65bd89",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cbb8bf03-2ced-4b39-9e3b-e48a4dc63e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a49557-a316-47b3-b41a-2233810b3f2e",
        "cursor": {
          "ref": "09684cb5-43c7-4dea-b3c3-0d4ebdb9a2fe",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "14026e99-e53b-4cd8-9d8c-8e70fc3a39f0"
        },
        "item": {
          "id": "67a49557-a316-47b3-b41a-2233810b3f2e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e51bc91c-e386-46c0-a010-2a837928644d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dbe65d-034e-4011-b4c0-6036f1620d02",
        "cursor": {
          "ref": "54f65cc1-be69-4bbb-b6a8-041a68d17e59",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cac7fabf-bb80-4cb0-8a89-86deac7c50f1"
        },
        "item": {
          "id": "c0dbe65d-034e-4011-b4c0-6036f1620d02",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e765b880-d169-4ad1-a605-7b9ff2be9acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9097c8-f6f7-450b-bbb9-af3743fec21a",
        "cursor": {
          "ref": "fb33d7ce-b183-41c9-a0eb-83738749148f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ea571872-a1f7-46c0-8b01-b3a647c29b2f"
        },
        "item": {
          "id": "dc9097c8-f6f7-450b-bbb9-af3743fec21a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d1c6aa3-37d9-4058-a1c7-1748060414bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38900097-d804-473c-9c58-7fcea4463339",
        "cursor": {
          "ref": "3cf88f81-919a-4e39-b724-256bbbe7b574",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9b04735c-b11a-4ab2-8313-812dd8c239de"
        },
        "item": {
          "id": "38900097-d804-473c-9c58-7fcea4463339",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5ba06d14-79b9-4a08-bac6-446d3344fedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0506179-3501-4789-b769-62dfb229f990",
        "cursor": {
          "ref": "98bb7c02-4c4d-4242-8a48-9afc6d2b43a1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8e659ff7-5d3b-416b-8b96-7e44ac798b62"
        },
        "item": {
          "id": "b0506179-3501-4789-b769-62dfb229f990",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9ce177af-bf9c-463c-a698-1ff90c45b6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d07865-5847-4d35-b4c1-aab3bc11c5bf",
        "cursor": {
          "ref": "ec57ee3f-677e-47fa-92d1-da607804a38f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "821a0a10-8f9a-4839-acbe-22b551ef4784"
        },
        "item": {
          "id": "45d07865-5847-4d35-b4c1-aab3bc11c5bf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "de1b0d31-2e28-43c1-8f87-94c31788b1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d67e10d-0c11-4fb6-9074-631822edc372",
        "cursor": {
          "ref": "beaea150-ac39-4b95-a9d7-84fe8bd4651d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "69ec28f5-55e0-4f00-b2b3-750f57d2b713"
        },
        "item": {
          "id": "3d67e10d-0c11-4fb6-9074-631822edc372",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "04b2cb8d-1531-49c6-bed4-35b2d4a69cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac7a04d-dbfa-4652-94a9-2f3d8889bc45",
        "cursor": {
          "ref": "8e840066-ab82-4ab1-960e-edbe3b3dcda9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c9b7036-af52-450d-aeed-8eb89d619bae"
        },
        "item": {
          "id": "eac7a04d-dbfa-4652-94a9-2f3d8889bc45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3feaac2f-9d79-4a2e-aa2a-b307d79b159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d22f963-1434-4169-9b49-775239cc51f0",
        "cursor": {
          "ref": "eb0e4bb5-5a8f-4621-a7c5-ea65f59fd9d5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e77aa88c-30c7-4354-a37e-0f813c7316b4"
        },
        "item": {
          "id": "5d22f963-1434-4169-9b49-775239cc51f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "afd8c2b3-1758-4829-a8ed-0f2c06663ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1c3d0-0763-4002-a1e5-0a9486c4cd69",
        "cursor": {
          "ref": "b0c7404c-8b21-44f6-9316-4310b8128a5e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5b96bb5b-049b-4af5-87b7-ddc201462a60"
        },
        "item": {
          "id": "f8f1c3d0-0763-4002-a1e5-0a9486c4cd69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "62d88f22-77cb-4b9f-8a55-ecd1a265b5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e6eb84-48eb-4b1d-a8ee-15c577a96560",
        "cursor": {
          "ref": "d9114645-0436-45d9-84d6-4c11368f53dc",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "24cb92f5-9bb1-4df7-8427-fb8d5a7c8601"
        },
        "item": {
          "id": "a7e6eb84-48eb-4b1d-a8ee-15c577a96560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "971e3221-ea0d-4a48-b994-01672502fd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0e84e0-666d-45f4-87a4-e939a6b67bd8",
        "cursor": {
          "ref": "3bb2d32d-1947-4d43-80ca-355cf588fb44",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c710501c-d488-4451-bc6f-9ab4efd51197"
        },
        "item": {
          "id": "2d0e84e0-666d-45f4-87a4-e939a6b67bd8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "da0d1b8b-497d-4a9e-a845-24e42bf100ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbc7341-51cf-4e04-8438-7ab2028b233d",
        "cursor": {
          "ref": "6a93f47a-b5fa-4786-8301-d141628cb74f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cba86cfb-c7d6-49d5-9356-81da35a0f1d6"
        },
        "item": {
          "id": "5bbc7341-51cf-4e04-8438-7ab2028b233d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fd392bcd-e6be-420d-9258-bb8aa51f00ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7454605e-aeb2-41bf-9c41-5179937c1ae9",
        "cursor": {
          "ref": "7bd0115f-3a5a-41f4-bc7f-76d15f3273f4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dc24d5fb-7fdc-4ef3-8705-069377c06b51"
        },
        "item": {
          "id": "7454605e-aeb2-41bf-9c41-5179937c1ae9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "83543194-e4bc-476e-889e-d325e99196ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fad9c8c-710a-4bbe-98a4-fe2dd69518c4",
        "cursor": {
          "ref": "7e6e195b-ea62-42ad-ba7e-c5958ca9e481",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "da8878f2-4155-431e-8bb3-a5bf4c67b50b"
        },
        "item": {
          "id": "9fad9c8c-710a-4bbe-98a4-fe2dd69518c4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "91affeaa-0703-4934-b357-e1ba45a2a638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8457001-979a-46a0-90da-9966db581d2e",
        "cursor": {
          "ref": "a1bf1500-92b7-4b9f-b205-6f7cad53a0de",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1dc21830-a020-428d-b6c7-6c902e8cacb5"
        },
        "item": {
          "id": "b8457001-979a-46a0-90da-9966db581d2e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4db1372b-0ac1-4dfb-bbef-efcd445e71c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5b91f9-d8f5-465b-a0d1-4ea43d6591b4",
        "cursor": {
          "ref": "a8080407-f572-4d44-8a5e-1cfd776d57ca",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b3fbdc03-2136-48d3-b40d-5bd6cd31f17e"
        },
        "item": {
          "id": "3c5b91f9-d8f5-465b-a0d1-4ea43d6591b4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b5f1a040-4030-4f89-8797-54292f0de49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c3cc90-e9cc-4878-9224-28bcc5ff6526",
        "cursor": {
          "ref": "992e9c05-bbac-479f-ba56-c602a24776e1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ff23a21e-f9ea-4dc1-aaa9-93fe45abce8a"
        },
        "item": {
          "id": "f8c3cc90-e9cc-4878-9224-28bcc5ff6526",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3410ab37-aba7-4ebe-a995-6878ebc3e2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e147098-dfdb-4002-b261-3d9d6f92c180",
        "cursor": {
          "ref": "35b77bf7-979a-45a3-bf31-d807097db65d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "21032802-4b7a-4fb9-bc1a-b58a2f26e717"
        },
        "item": {
          "id": "5e147098-dfdb-4002-b261-3d9d6f92c180",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9929d146-6e43-4174-9429-c07ec7244289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca32d757-fc95-4cd9-880b-1d4a7a304a04",
        "cursor": {
          "ref": "0efa3df8-bfcc-41a7-b613-dd287ce24332",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "526afff9-479e-490a-a0af-18e00b19a21c"
        },
        "item": {
          "id": "ca32d757-fc95-4cd9-880b-1d4a7a304a04",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b2de310e-7441-468e-be56-8acd2cae841f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74f832e-d26a-4846-a65f-f2bebcd5f2e3",
        "cursor": {
          "ref": "b74d0172-92cf-4bb3-8acf-dd1c3cbe4edf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ba207d09-c9ab-49b2-abbb-9ab12a4e8045"
        },
        "item": {
          "id": "b74f832e-d26a-4846-a65f-f2bebcd5f2e3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3e019a4b-2090-4e9d-acb6-3b1ee7b14e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c681207f-cc0e-4f91-949f-d68e1c233f58",
        "cursor": {
          "ref": "de000a01-16a1-4b3c-97ef-cc436e78fd67",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8230798c-f937-49bb-9392-fc5310502214"
        },
        "item": {
          "id": "c681207f-cc0e-4f91-949f-d68e1c233f58",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e443adf9-34fe-4102-9ee7-e6da4324c038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5adb449-ed98-4d10-90fb-d82ba0e6adfe",
        "cursor": {
          "ref": "8915cc89-b751-4563-b792-750608a5c5dd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "99f2eb4b-f4c8-49e3-9b9b-249060bb7be1"
        },
        "item": {
          "id": "e5adb449-ed98-4d10-90fb-d82ba0e6adfe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a2be35af-cc47-4bec-8bd6-f21556a7102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6fbb36-b757-4281-b3f5-e19470146955",
        "cursor": {
          "ref": "705be0dd-8aaa-4b1c-a283-dba1ed2f77fa",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "724f39f0-c134-428c-96cc-e5112f640b04"
        },
        "item": {
          "id": "1b6fbb36-b757-4281-b3f5-e19470146955",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7a0ad35f-703a-4089-abe5-b897cfa21dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e33c00-0f79-4027-b1df-7831d74f8144",
        "cursor": {
          "ref": "22aebf85-13e1-4bd1-b1cf-5949181bbe9d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5faec9fe-1d78-4c83-bc78-f43d211795d0"
        },
        "item": {
          "id": "41e33c00-0f79-4027-b1df-7831d74f8144",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "122ad3be-b333-4fc3-8a21-facdd25fc353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c8c3b6-83a2-4d60-a5fa-77ec93c7fe52",
        "cursor": {
          "ref": "29e0ed10-89c0-431f-a889-c3cb46e2a29a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6160c587-6ab5-481c-a2ef-375b674e1a93"
        },
        "item": {
          "id": "e9c8c3b6-83a2-4d60-a5fa-77ec93c7fe52",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5fdc693a-3de6-4de9-bb2e-14b5aff060de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a15e2-8d11-45fa-925b-5c98077a6ebd",
        "cursor": {
          "ref": "fb8d909e-ccb1-4231-85d9-120e36a7afb4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "739a434f-17e0-4da1-8850-d67e7240ea87"
        },
        "item": {
          "id": "3e1a15e2-8d11-45fa-925b-5c98077a6ebd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c5dc79e2-7ae8-4eff-86bf-ab27560dd21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4db710-cfa3-4d77-89f6-8b20dfe7aeff",
        "cursor": {
          "ref": "fc9a4c20-c3c9-4df4-a6b2-d9064d4605a2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb10a1b2-2caf-473c-8dc9-d6f6c11999d6"
        },
        "item": {
          "id": "ce4db710-cfa3-4d77-89f6-8b20dfe7aeff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fd01ab4c-9ca9-4c63-ace1-55e98e88891b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25650d1-a03f-4e18-825e-21971adbb364",
        "cursor": {
          "ref": "7f8e18dc-0c4d-4778-a8a1-cfb2ea9980e9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "98a6173a-a505-42ef-b0b2-49944435a016"
        },
        "item": {
          "id": "a25650d1-a03f-4e18-825e-21971adbb364",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3b044c04-d226-48b3-8065-22dd17489c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889a5c90-385a-4ca7-a37e-62840c2d6f40",
        "cursor": {
          "ref": "a2c8678e-c2eb-4bc6-a68e-6c9781609397",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "34943109-e5a2-42e7-b219-9e39a7487f4d"
        },
        "item": {
          "id": "889a5c90-385a-4ca7-a37e-62840c2d6f40",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "394aea6f-67d0-4836-ab60-736a5949b087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b80077-6292-49d2-bf47-012747bbd5d8",
        "cursor": {
          "ref": "88df7298-6e8e-4b96-b0b2-ae28017b67b6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "41badb42-9f1f-4e89-822d-4d00aa5d1b48"
        },
        "item": {
          "id": "e8b80077-6292-49d2-bf47-012747bbd5d8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2c0d0b96-3daf-4508-a360-5b3974a08e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a817af-8923-4d89-8184-ec875eb467ed",
        "cursor": {
          "ref": "940063a3-b24e-4833-b8b4-032fd2e0a5c4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9e3a0edc-562a-48be-8423-3d94973c4999"
        },
        "item": {
          "id": "56a817af-8923-4d89-8184-ec875eb467ed",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3b8664c7-d1a1-445c-a754-4d594c03b133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222c3ffd-aaaf-46b5-94db-70aab8be87be",
        "cursor": {
          "ref": "6df0dc4c-214d-4043-99d8-7bbf91cfd6aa",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62bd8682-1dcf-4784-9df6-400387788de7"
        },
        "item": {
          "id": "222c3ffd-aaaf-46b5-94db-70aab8be87be",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f7cb5473-6cc8-4583-912e-81c2390ebef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a6fffd-6ac3-47f1-b3d6-5a57db35c433",
        "cursor": {
          "ref": "2e7dccd1-7831-4402-a4d9-6c566575ebfb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3bbd5bbf-aad6-4709-9737-4a4bacccdedb"
        },
        "item": {
          "id": "f1a6fffd-6ac3-47f1-b3d6-5a57db35c433",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b7a0b2d5-9ea0-4fe7-b652-89f9473e7bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4611132-f856-4c07-97ea-d42ecbf5fe22",
        "cursor": {
          "ref": "cd2433cd-54b8-4769-b914-7ec540984bf4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "890b58fc-a8e9-401a-80a8-957f71ff3670"
        },
        "item": {
          "id": "c4611132-f856-4c07-97ea-d42ecbf5fe22",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "214fab00-239e-4a69-a5a0-0e9bfbfa3259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3c6bc8-8845-49ef-9265-ba21281c516b",
        "cursor": {
          "ref": "d93a82ae-fefb-4bb5-b24f-a4d88998dc6a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3b78b429-ce89-4232-83b1-ae37b989e19c"
        },
        "item": {
          "id": "8a3c6bc8-8845-49ef-9265-ba21281c516b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "308de13c-ec4e-4ab7-b78f-b3d0587d6e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a212c4d-4ab3-49f1-af69-d1f0cbe26488",
        "cursor": {
          "ref": "7e2fef30-8d55-40b7-bae9-c706fa2bca9f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0acb4878-d978-4126-95b2-67824d2f1724"
        },
        "item": {
          "id": "5a212c4d-4ab3-49f1-af69-d1f0cbe26488",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b3d1cf68-5200-49e2-862c-29728377f5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bddbcc5-4f77-404e-857d-ce7c63008bdb",
        "cursor": {
          "ref": "b3d5489f-e4e3-46ed-8b7e-e49dd58f2880",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3bc109da-879b-41bb-b286-b0c59fbbb5df"
        },
        "item": {
          "id": "7bddbcc5-4f77-404e-857d-ce7c63008bdb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "edee91d3-6601-47c9-95bc-f502207fe495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c712ae9d-9b8c-4b82-99a9-0f24839c19bd",
        "cursor": {
          "ref": "57ba8436-d7cf-414f-87f1-b39d7f7bf85b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a816cb29-95f2-48d2-b7bd-7fb025e204e2"
        },
        "item": {
          "id": "c712ae9d-9b8c-4b82-99a9-0f24839c19bd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a3f7b782-4a64-4759-affe-1df51811afb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83511fa-af37-4fec-bb6b-2866dd52b9cf",
        "cursor": {
          "ref": "2fea63c5-188c-4cb3-9f47-38003a8bf7dc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d3cadc29-d6c1-41c3-8f4a-6aba7c3b13ec"
        },
        "item": {
          "id": "c83511fa-af37-4fec-bb6b-2866dd52b9cf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2b52e469-e5c5-457d-a2e2-6f24d69c173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e921e-7f32-4411-9098-f160ac938d92",
        "cursor": {
          "ref": "14a03c8c-bac1-402a-aacb-01b8dcb03dc6",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "70f45191-44ed-4939-811c-0b8967df58e1"
        },
        "item": {
          "id": "910e921e-7f32-4411-9098-f160ac938d92",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f972631c-c938-4e9c-9070-7f201002aa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754118cf-1bda-4233-be66-aa1e207462f2",
        "cursor": {
          "ref": "2a8516ca-eca2-4c47-bd10-789d5053629a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "28e0605e-ddb3-4e40-9024-0ba26d26d63a"
        },
        "item": {
          "id": "754118cf-1bda-4233-be66-aa1e207462f2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6655bfd9-71fb-498d-9522-fa6bf1f5cc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9c8b64-83f4-4f7a-87b4-bcb4c86750a1",
        "cursor": {
          "ref": "4966bae1-c8c2-4ede-97c3-12fc90bec493",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a059abf4-48bd-4b43-8089-33d39bb872ba"
        },
        "item": {
          "id": "cc9c8b64-83f4-4f7a-87b4-bcb4c86750a1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a1dd28bc-9eba-4b62-ad08-c70b3d2c6d1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a44a9eb-c3e5-4177-9546-f7610683cdcb",
        "cursor": {
          "ref": "ab4718e6-edab-4855-97cb-3f9cd65a9f08",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "41a0371d-e8b1-4bc6-990a-5143e411b32c"
        },
        "item": {
          "id": "0a44a9eb-c3e5-4177-9546-f7610683cdcb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fbf2d11d-01d5-4fad-bc16-e979d8ca47fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e10787cd-2128-4db9-9c2c-9feae29502cc",
        "cursor": {
          "ref": "c56f3bc5-6e3b-47a7-8653-9e75a0a7d55f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "209f00f7-cc5c-492d-9d7b-978dee8e1b71"
        },
        "item": {
          "id": "e10787cd-2128-4db9-9c2c-9feae29502cc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e828ee75-394b-4eac-8dcf-273d9aa52a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9e1acf12-9a56-40d3-982b-81e6a01ee4d7",
        "cursor": {
          "ref": "7e7387a3-7cf2-4a2c-9a53-9e53f391dfaf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ac0f2a1f-e2d5-4a72-9f28-2cc7694523e7"
        },
        "item": {
          "id": "9e1acf12-9a56-40d3-982b-81e6a01ee4d7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8f0b1092-3d94-4800-9a98-6c799979174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ca16188d-c7fb-43a3-b2ca-7c5151bf76ce",
        "cursor": {
          "ref": "c2bafba4-e763-4678-9677-be8d3046f74a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a3d46109-546f-42d9-8e62-468b96921515"
        },
        "item": {
          "id": "ca16188d-c7fb-43a3-b2ca-7c5151bf76ce",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "832a03ef-68af-49aa-bbd9-e66a87252401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bbcd3af7-2107-4c8a-97db-d180efff04b1",
        "cursor": {
          "ref": "d836d1d3-44e3-44d6-8526-2f3a64280882",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ca556a12-dfc3-4fe5-bf98-4b17782d4131"
        },
        "item": {
          "id": "bbcd3af7-2107-4c8a-97db-d180efff04b1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "59f5dd60-6033-43ea-b22e-ea039722e5ee",
          "status": "Created",
          "code": 201,
          "responseTime": 8579,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b433fad0-a286-404a-bfb2-c21018bbea76",
        "cursor": {
          "ref": "00e7320f-5b59-4b25-a956-b54ac384699f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "107025c1-3427-4dbd-bea0-809363629d4b"
        },
        "item": {
          "id": "b433fad0-a286-404a-bfb2-c21018bbea76",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "427e8bc4-f5eb-4961-b271-70140ec9b9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "71d990b3-b381-4bb7-8c34-f64032cbe2eb",
        "cursor": {
          "ref": "a985faba-6668-4237-916c-8aa9a895af49",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fa0062bb-a4d1-4ad2-9171-f07fd255bdc1"
        },
        "item": {
          "id": "71d990b3-b381-4bb7-8c34-f64032cbe2eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b2348f68-66fd-4605-97d2-513a5f6f83d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e1a5512b-33a4-4a39-91f2-e5949c8890a9",
        "cursor": {
          "ref": "a0272dfc-ba12-47bf-82ca-d9e687cdaac1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4bc2d487-d109-4513-9b9e-6615b8c40db8"
        },
        "item": {
          "id": "e1a5512b-33a4-4a39-91f2-e5949c8890a9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8ed6a69f-dd6e-469d-80cf-2790fb4e2439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a757f177-19f2-4198-aca4-62c64acef78e",
        "cursor": {
          "ref": "cedf5a50-4d07-4eae-b2eb-9d1989fedea7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec83faeb-3b19-457f-8434-da3471b89ecb"
        },
        "item": {
          "id": "a757f177-19f2-4198-aca4-62c64acef78e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ea75f1d9-2660-4c56-b6db-e239f729dbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bea636-6906-4ee9-b67c-19aab7048e0c",
        "cursor": {
          "ref": "bf6c2013-f56b-46e1-80ac-509989d49769",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d515d77-dc39-42a4-bc51-81077799bdb0"
        },
        "item": {
          "id": "75bea636-6906-4ee9-b67c-19aab7048e0c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "90932974-b3c6-4120-81cf-7580065873f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6115a0-1feb-41fb-95ae-89b5e17a40f6",
        "cursor": {
          "ref": "388cde17-fee4-47ea-a2e9-a34ab85ad8fd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "18ab1adb-6a25-4567-8c17-9f5f9f8cca04"
        },
        "item": {
          "id": "cb6115a0-1feb-41fb-95ae-89b5e17a40f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d89d8821-cc12-480b-af92-a6d32f5983b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968d4ab6-fd09-4751-9987-6e354a675295",
        "cursor": {
          "ref": "c997e473-4a8a-4da5-808c-dec02e6c9dc6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "876bf981-9adf-419c-9943-bcb64515e3e8"
        },
        "item": {
          "id": "968d4ab6-fd09-4751-9987-6e354a675295",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56e0585a-d741-4f65-841b-6d45e0dce09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733c7bd3-a953-430c-b1a9-fd3b18c91849",
        "cursor": {
          "ref": "031da25f-3464-4b18-bd51-0d6c1f497e9a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd1fde2a-487d-4ad3-805a-86a896a38504"
        },
        "item": {
          "id": "733c7bd3-a953-430c-b1a9-fd3b18c91849",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ded6de9-66c1-42ac-a904-659fce00e1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ad0781-e706-43fa-977b-7ebe6a4dfbd2",
        "cursor": {
          "ref": "81c37969-401c-4792-85b4-194e430e8381",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "30e1f610-04c1-47f9-bdcd-43f2ff7fdc83"
        },
        "item": {
          "id": "e9ad0781-e706-43fa-977b-7ebe6a4dfbd2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "baefbc57-6a34-4554-b48b-637595b93049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6cdacd-d3b4-4f18-8b5e-dcb95650c1f6",
        "cursor": {
          "ref": "83f85add-04ef-489a-947e-6d537a3ab5b6",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "37bef0f7-6a82-414a-a69d-94dac1391732"
        },
        "item": {
          "id": "0d6cdacd-d3b4-4f18-8b5e-dcb95650c1f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eff0dfdb-8ceb-4c6b-85d7-117341eaaf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392e6db9-8dbf-401d-9780-ecbf70d690d2",
        "cursor": {
          "ref": "73311c37-e8ee-4d95-90db-d48bad5b06c8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bdacccc2-0982-4941-b3a2-f1f526ab7689"
        },
        "item": {
          "id": "392e6db9-8dbf-401d-9780-ecbf70d690d2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a74955c-6dfd-4bb1-acb8-d3cf2fe91707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e82ec5-0504-4ba2-9146-cbc663797b7c",
        "cursor": {
          "ref": "9b96d495-4770-4a78-86a8-c113e8ea6c79",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd45ba6b-4a68-4241-bff7-5690ca2cfa6b"
        },
        "item": {
          "id": "d4e82ec5-0504-4ba2-9146-cbc663797b7c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d8a87985-dbce-41bc-8241-7774d679c216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385c10f2-509c-4016-b1d2-73f5eec04d66",
        "cursor": {
          "ref": "a659d8f4-5672-46cf-bdda-eba40f5eaa8e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73faafc0-7f45-40ab-a6eb-5c1ce5102cee"
        },
        "item": {
          "id": "385c10f2-509c-4016-b1d2-73f5eec04d66",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "382f6c17-f64f-4129-b1f1-8a4820db6f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b3ca70-809f-43ca-80a6-c2a88f04ea3b",
        "cursor": {
          "ref": "f14cb2b6-a281-4fda-bbdd-b006a346b7fe",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a5d166f3-e1be-4595-981f-99f24be871a1"
        },
        "item": {
          "id": "23b3ca70-809f-43ca-80a6-c2a88f04ea3b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "258af7df-1285-4e79-b871-ccbc15d7a69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ebc276-b580-4a65-bb1f-7bdae8e7d4a4",
        "cursor": {
          "ref": "8754c462-e08f-4662-8a8e-db62f42dc20b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0e59ad73-a645-4411-885a-2e5799a3da88"
        },
        "item": {
          "id": "03ebc276-b580-4a65-bb1f-7bdae8e7d4a4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8f842b3c-62c9-4ff6-b591-e35ff2b163fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa0c93-dd31-43c4-8724-da32cb880b76",
        "cursor": {
          "ref": "8f646e49-e3e1-4029-86f2-5c3b67979a66",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35883391-a71d-4cab-9081-92cc8a5e628a"
        },
        "item": {
          "id": "4bfa0c93-dd31-43c4-8724-da32cb880b76",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e44f713c-108c-4c87-9954-a17e7fe46fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11221ee4-29d2-4b2c-9165-0e72578b2aae",
        "cursor": {
          "ref": "b6ac106a-28ba-477e-929b-e975024bf133",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a774e200-c87d-45d3-94ed-a089bf58369e"
        },
        "item": {
          "id": "11221ee4-29d2-4b2c-9165-0e72578b2aae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8288563c-c36b-41aa-8c57-1155f870119b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f01d5af-3be7-4e44-88b7-decb46d1d4a1",
        "cursor": {
          "ref": "cebc4027-d843-4ff7-bd60-a6c42316e74e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ed5b1a21-f967-4f83-8c99-763f2cf2ca70"
        },
        "item": {
          "id": "8f01d5af-3be7-4e44-88b7-decb46d1d4a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42c7d8f6-5e8f-49fb-a971-2c8799d47af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c38c190-d890-4a5d-bf47-cb3cee041485",
        "cursor": {
          "ref": "8fd0414f-ea60-49f4-9acc-f8d9c2094d71",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab7b08cd-4401-4bf4-b07e-90237a41ad7f"
        },
        "item": {
          "id": "3c38c190-d890-4a5d-bf47-cb3cee041485",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1441da40-7828-45ab-98fa-11c8ace588a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "736fe55e-3f71-48ef-93f6-2a60c1ffc696",
        "cursor": {
          "ref": "efefa7d3-cc33-42b6-bb13-d0a82af71ada",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "37f6b06f-a218-4d97-82d6-c2ef5052f420"
        },
        "item": {
          "id": "736fe55e-3f71-48ef-93f6-2a60c1ffc696",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50d26bd9-cf90-4c67-b60c-081ad3f3d16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f884a-90d9-4a4e-a6c4-6a15c368afec",
        "cursor": {
          "ref": "193fb52b-282b-4d15-bbd5-820c44f859de",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "682edd43-62f9-4c20-8f93-24344ffadb33"
        },
        "item": {
          "id": "500f884a-90d9-4a4e-a6c4-6a15c368afec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d2c7a26e-a7c3-4721-be81-567ea7bb77ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6652eb0e-157f-4038-bac1-ae8af97b68d3",
        "cursor": {
          "ref": "d6c50643-a763-44fc-ae6f-fc6ee1b94bac",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dd6672f4-899f-4ad2-9889-06092d908283"
        },
        "item": {
          "id": "6652eb0e-157f-4038-bac1-ae8af97b68d3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dc836952-57e1-4cc7-bcd0-eba419d73a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6820a0-2f0f-48ae-95a1-57e8876734b0",
        "cursor": {
          "ref": "46443fd7-23ff-433d-86b8-dfa4cd062493",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a54cf2b-775a-4f36-b2a3-5040a0258a5b"
        },
        "item": {
          "id": "da6820a0-2f0f-48ae-95a1-57e8876734b0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dba656ff-2bca-45e3-9e87-029481927530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e49ba8d-702f-4ba9-ab4e-55d7fb146785",
        "cursor": {
          "ref": "3578c1d9-7382-4729-846a-3a7134c9e195",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b2f78f25-5d7a-45e4-a126-7869c9be50ea"
        },
        "item": {
          "id": "5e49ba8d-702f-4ba9-ab4e-55d7fb146785",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "20ef36fe-c42b-4719-9672-e20646ec4f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048d6b6-a218-4d8d-be59-c660c50827a2",
        "cursor": {
          "ref": "b83251a3-768d-4210-81a8-3151f74e035e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b91d325-9d72-478b-a33d-71cfbd8f6f45"
        },
        "item": {
          "id": "1048d6b6-a218-4d8d-be59-c660c50827a2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2ab7f5be-e7c0-450e-8e74-a384e199a252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b0fe34-072d-4ebe-969c-104ad2636b0f",
        "cursor": {
          "ref": "e20e1ad1-40e9-4e76-9564-48715df3cc5f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bedb4670-d7d6-4675-9626-f516aaf97789"
        },
        "item": {
          "id": "53b0fe34-072d-4ebe-969c-104ad2636b0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "736c6077-945e-47b0-808b-a36a2d77db4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf7b4f6-166e-4ce5-88f1-07fb2f9261f9",
        "cursor": {
          "ref": "bc9cdb48-91f2-42ad-ab1a-464d74c96c43",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "60d3c5b1-e702-445f-8521-e4a579bdb043"
        },
        "item": {
          "id": "ccf7b4f6-166e-4ce5-88f1-07fb2f9261f9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bb8a5524-086f-41eb-88e0-db25e805781b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "5c07e955-eb9f-416b-b41c-abcbecc91d7d",
        "cursor": {
          "ref": "f21be123-3943-48f0-a520-79bf4c288bc7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3ff1f740-1e3a-467e-b1b4-5564a40a1fd2"
        },
        "item": {
          "id": "5c07e955-eb9f-416b-b41c-abcbecc91d7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5da4aac6-c579-4e2d-8f74-da830969523f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e48efdd-f84b-49f3-b824-596b966990fc",
        "cursor": {
          "ref": "0c0d4b11-a12d-4cc1-9ca6-5152318f1fb6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c5517a86-aa75-4200-9ffb-1c155e35534a"
        },
        "item": {
          "id": "6e48efdd-f84b-49f3-b824-596b966990fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "066eddde-f1f1-45db-b119-3be25e115712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e937a8-b00e-4202-918a-d329abe27da4",
        "cursor": {
          "ref": "95247e3a-1039-497b-b8f1-d932bab2332b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "86b9cf50-ef08-4cf9-bb32-80a69cef72b6"
        },
        "item": {
          "id": "02e937a8-b00e-4202-918a-d329abe27da4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0931799c-7714-462b-a535-4a7368bdf990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe73590a-9ba1-498d-a343-72136f7577b1",
        "cursor": {
          "ref": "18422acd-d072-4897-98ae-27b184bddd94",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "58a1838f-1e4d-49e8-8dbd-dd8d5af07bf8"
        },
        "item": {
          "id": "fe73590a-9ba1-498d-a343-72136f7577b1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17539000-dc20-4424-892a-af0485017be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93b578d-a599-42fe-b19d-8e91976bb5b2",
        "cursor": {
          "ref": "1bdae77c-9b65-4836-87b8-8fc95eca64ed",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7d523d4c-1e21-4057-ae6e-04ff91bd0952"
        },
        "item": {
          "id": "a93b578d-a599-42fe-b19d-8e91976bb5b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6ce7bfc-db3f-4fab-8e0c-1bd6fa1055fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a75e11c-d17d-43a4-aa07-8a1f90defadc",
        "cursor": {
          "ref": "89be08d6-d149-4d62-8489-d14db8be0652",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "76caab92-e3ea-4dfe-a5b1-bb1bcc9f0209"
        },
        "item": {
          "id": "0a75e11c-d17d-43a4-aa07-8a1f90defadc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2e9f7034-5ef4-4996-9663-78b36bb4d0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7394cb40-0b56-4280-ae92-54bad10922c0",
        "cursor": {
          "ref": "ea349cc1-8467-4188-a806-c1aea6a51ee0",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3ab9dc9c-3fa4-4482-8a6b-71dfd9e76bb0"
        },
        "item": {
          "id": "7394cb40-0b56-4280-ae92-54bad10922c0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6994e76a-91b6-4112-9218-d9560189262b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1d5ccac2-fac4-49a8-8e16-d528936950fb",
        "cursor": {
          "ref": "c99918a1-f047-4f94-a455-dd8b1d7ec727",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b56303e1-fd08-4625-aedc-31796506aadf"
        },
        "item": {
          "id": "1d5ccac2-fac4-49a8-8e16-d528936950fb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b8a3d084-fc3a-461e-ad61-a8b1886b52ee",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "deb6fcae-db51-41d8-b59f-cc03b8c69ca2",
        "cursor": {
          "ref": "251c4224-f998-40cd-a89a-a4235c35bab5",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dcb5d766-cbd1-4f93-96c4-b905bc572957"
        },
        "item": {
          "id": "deb6fcae-db51-41d8-b59f-cc03b8c69ca2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2cfa31f0-04e5-45b6-bfdf-27796d8c7ff4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "ad7a3268-d19a-4235-acc9-8fb086a56a60",
        "cursor": {
          "ref": "d3336986-6975-45d3-b3fc-acf329bcf2a0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6d0b9683-ebfd-4960-9632-714a3cd30aca"
        },
        "item": {
          "id": "ad7a3268-d19a-4235-acc9-8fb086a56a60",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e43b10c1-fc86-47a1-ac7c-7893ec92e856",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "56d78c10-d9e4-4e21-abfb-157792887530",
        "cursor": {
          "ref": "2b2dd07d-5d37-4024-bac8-067441f66280",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d621c6d8-5201-4d67-8da5-e0b2eb0f05ae"
        },
        "item": {
          "id": "56d78c10-d9e4-4e21-abfb-157792887530",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "01d2071d-3483-48f4-844f-8f7f0ba341ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2926b841-5186-4b9c-ba70-fa951a06de25",
        "cursor": {
          "ref": "8a3da10c-8c3c-4faf-8882-1bcd52a52b62",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b16a27b0-b6b5-4b99-a366-d123d2bb1af8"
        },
        "item": {
          "id": "2926b841-5186-4b9c-ba70-fa951a06de25",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6bbba540-9857-4b8e-860d-4c0e06fc3a87",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "bd6a31b8-62b6-436e-a7fb-fb46eb840822",
        "cursor": {
          "ref": "92f99ddd-6010-4c76-bd02-26138f7d11ec",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c9c32def-9ea9-4099-b01a-8f8f15823f69"
        },
        "item": {
          "id": "bd6a31b8-62b6-436e-a7fb-fb46eb840822",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "367dc0c4-8643-46c7-b389-c296cf615aad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8870c511-24fc-4a28-9834-59956276ef78",
        "cursor": {
          "ref": "f39edd1a-a07f-4b7d-83f8-9ccbd9fee09d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cc6fd589-7102-4e71-b756-6af5b3212f0d"
        },
        "item": {
          "id": "8870c511-24fc-4a28-9834-59956276ef78",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5c044d3-fdac-4024-ae91-d2205f4b6853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a238ca2e-2fab-4d34-a247-d14ae65f18f5",
        "cursor": {
          "ref": "1fa92675-3bd0-4732-8934-bce8c19508a7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2028aadd-7406-47ce-ba67-5ed3eaf3a7e8"
        },
        "item": {
          "id": "a238ca2e-2fab-4d34-a247-d14ae65f18f5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "db2fc919-4f40-4774-9cea-b1f1debd3500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e310a5-a887-4bf4-91aa-a7165f681d1a",
        "cursor": {
          "ref": "58045981-5713-44ef-bace-dbcbd4f2da54",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62a881ec-86a7-4b75-84ea-4d573995ba94"
        },
        "item": {
          "id": "b1e310a5-a887-4bf4-91aa-a7165f681d1a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3cb25916-741f-46d8-b3e2-b08814cf99fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742661be-7ec9-4933-9df5-1b28ad5bd412",
        "cursor": {
          "ref": "68c185d3-402f-4832-86f7-f4093463f0dc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e02e1796-f656-44f3-b544-a08baa0233e8"
        },
        "item": {
          "id": "742661be-7ec9-4933-9df5-1b28ad5bd412",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a7178097-8701-48b9-b4fa-718c176124a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d4a621-f823-4c9c-9d00-48199e3dd96d",
        "cursor": {
          "ref": "c31fe959-0bfe-4e0e-a9c8-ceccf49f9130",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3ce56a70-a882-4cc7-b297-a0c138ae55fc"
        },
        "item": {
          "id": "d0d4a621-f823-4c9c-9d00-48199e3dd96d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "922d576d-8938-440a-a8d2-fdcc91ead546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087b543e-b3ee-40d5-8482-d9642de20227",
        "cursor": {
          "ref": "73645823-0db0-49f8-8bcc-607aeff0376c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1d3a2f95-e054-4040-acbd-d6704b3d4507"
        },
        "item": {
          "id": "087b543e-b3ee-40d5-8482-d9642de20227",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f9e680e6-f07e-453e-8e81-c09f5f3337a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237c7776-7a81-4015-b296-d09e5fcb302b",
        "cursor": {
          "ref": "d97c0ca3-2b13-40b7-b26e-40576ab86cf1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f664c472-4288-409f-bc53-b380b29a36f7"
        },
        "item": {
          "id": "237c7776-7a81-4015-b296-d09e5fcb302b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1e55008a-8858-4827-9013-285437e08a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dae1b0d-4b33-489c-b285-f0f52f642710",
        "cursor": {
          "ref": "8a055523-1a19-4c0d-a930-61fb07abd0b4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a63f391c-2f28-458b-a21d-c6b43a51ef3c"
        },
        "item": {
          "id": "5dae1b0d-4b33-489c-b285-f0f52f642710",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1dbbc4cf-7c62-4810-b009-9d8418a91875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d5c578-f878-4b57-96dc-24075d3f89e9",
        "cursor": {
          "ref": "bf14c580-8a62-4a8b-8a35-981aed6cbec7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "434d8fd1-2d03-49c3-80fa-1d28e7804eaa"
        },
        "item": {
          "id": "44d5c578-f878-4b57-96dc-24075d3f89e9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62917ff8-fe82-4cc0-901d-280316d6aacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e35462c-d9d1-4c45-b5ae-94adbcc5067c",
        "cursor": {
          "ref": "dd81c78c-c648-441a-a376-ed2090ab8bba",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1a0e3d7c-3246-4010-abc5-db27ca86bec5"
        },
        "item": {
          "id": "8e35462c-d9d1-4c45-b5ae-94adbcc5067c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2ff56ae6-d913-4c0b-b142-91fc37aa2fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155fca4-ba7e-4e95-884c-771df1fadc43",
        "cursor": {
          "ref": "9da75f42-ec25-43da-9453-b4b3c84cb076",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3101d4df-e9f3-4293-8aac-7edcef50ffd7"
        },
        "item": {
          "id": "c155fca4-ba7e-4e95-884c-771df1fadc43",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b125cee0-80c0-42d4-936e-58d9b70300de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5813061-8066-4e16-8f39-576a8a67e003",
        "cursor": {
          "ref": "0efaaefd-a09b-4c21-a314-7172e979d81b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "53ba9ec9-ffe6-487d-8bbc-a3f4e94884e3"
        },
        "item": {
          "id": "b5813061-8066-4e16-8f39-576a8a67e003",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c598c6db-00b0-463a-8963-ffe8f71714cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90fd80e-7bc0-40f6-895d-4032bd2fbf2e",
        "cursor": {
          "ref": "923fa9fc-f19e-4165-9454-5cbd0a12c18b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "be1521c6-7001-4060-8c89-15d36dec9e40"
        },
        "item": {
          "id": "f90fd80e-7bc0-40f6-895d-4032bd2fbf2e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8865274a-d0a2-4c4b-a376-5f0813b36db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a1a61-bfde-4a63-a2cf-f242282b2aa8",
        "cursor": {
          "ref": "11bee0a2-5097-48a7-85c2-4e859ed0e740",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2df53490-1620-4250-99fb-2e3a8dd3fcef"
        },
        "item": {
          "id": "0f0a1a61-bfde-4a63-a2cf-f242282b2aa8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7642b832-214f-4b60-9e8a-1f46ddd00915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e41721-c501-49e8-a3e1-d39ab8f815cc",
        "cursor": {
          "ref": "9da4f1b8-6f52-47c6-8ed9-e6f9edf4d14e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "50c6b5fe-f5c0-4272-9d9c-6ee24cc73320"
        },
        "item": {
          "id": "d8e41721-c501-49e8-a3e1-d39ab8f815cc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2f9115fd-b1f9-40cc-be7f-17b5ae72c397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb54237-305e-4521-8424-261d1db90df8",
        "cursor": {
          "ref": "1a4a904e-6611-468d-9f34-33458b0c26b8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5e0ba6b9-5a8d-4e9d-8f5b-53854c2f4620"
        },
        "item": {
          "id": "5cb54237-305e-4521-8424-261d1db90df8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5ec3ae71-f924-4df9-aead-bc9111e6dccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95295396-498d-4ce8-9db9-270f0f391dec",
        "cursor": {
          "ref": "ccb1d681-1246-474a-aac2-ffd7c522f841",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1cb0c4aa-ed24-4dae-ab81-51400b0d93db"
        },
        "item": {
          "id": "95295396-498d-4ce8-9db9-270f0f391dec",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ec8d8c9c-b8d3-4d43-a080-7d3af38ae24c",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "bf02e61d-65f9-449f-a646-15d092959cea",
        "cursor": {
          "ref": "9ce2458b-bac5-4de8-8896-e7331da64fb1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "59547279-39d5-48de-8fc6-dd8bb523b51d"
        },
        "item": {
          "id": "bf02e61d-65f9-449f-a646-15d092959cea",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f23317e3-3219-4e0c-a5ad-485ba4d5132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a5022f-07d5-452d-82b8-71975119a1ea",
        "cursor": {
          "ref": "57571229-aa72-479b-8823-1c182612813a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "253d904f-b0cf-44b8-8ba8-7124d47ea6a0"
        },
        "item": {
          "id": "b8a5022f-07d5-452d-82b8-71975119a1ea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a9eb506c-51db-406e-8fc8-5ab5fe21d381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327a7272-64c2-4300-8571-dedc5e433cb7",
        "cursor": {
          "ref": "3fdca429-e50f-4447-8b09-5929d9aaec2c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bf967d71-9112-4640-ad02-e3bd79d03378"
        },
        "item": {
          "id": "327a7272-64c2-4300-8571-dedc5e433cb7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e6c0d544-9149-41fd-8b54-2d1c83aee9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48324cb9-7efa-42f9-99b1-2a282c480f51",
        "cursor": {
          "ref": "b1b0b6c0-6ed4-4057-9707-9a9a1164a7ed",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "551f221e-e1e4-4317-9ddf-8dd8fbe8c9c6"
        },
        "item": {
          "id": "48324cb9-7efa-42f9-99b1-2a282c480f51",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4a669f4e-a19b-4ef0-9eca-ccad4e41aeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d229645c-dbb9-4229-938d-91ac8a3eb305",
        "cursor": {
          "ref": "8497f285-cd75-4ea4-aa4d-aad190160fda",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "84cc2b46-761b-4fba-90f8-5b6860994e14"
        },
        "item": {
          "id": "d229645c-dbb9-4229-938d-91ac8a3eb305",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0840cbe3-54e9-4dc5-82ab-4d0e831a8bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd52eede-1f25-48d9-a9c3-f209feb74664",
        "cursor": {
          "ref": "b55fcd4d-05d9-4305-8477-beb70281bc0b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "613ced04-d9f8-4e81-8a2a-bee3e1189010"
        },
        "item": {
          "id": "cd52eede-1f25-48d9-a9c3-f209feb74664",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3775511c-71cc-4619-98dd-76901b46b694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93051473-54c3-4f65-a17a-331ecbe40393",
        "cursor": {
          "ref": "e9be12f0-62cd-41d7-a1b8-2ffef257c20e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aeb8f5fb-450e-4cea-ad2c-b10907fbf89e"
        },
        "item": {
          "id": "93051473-54c3-4f65-a17a-331ecbe40393",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "44c1b580-6be5-4c53-ad28-70e274a23001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf98c2a-5aca-4723-9c66-e18dfdad5ee9",
        "cursor": {
          "ref": "8f915694-1a4a-4092-8bac-57211cad2df7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "73e2ce58-126b-40db-990e-42f2f6537e75"
        },
        "item": {
          "id": "daf98c2a-5aca-4723-9c66-e18dfdad5ee9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "db2828d0-633f-40d5-a9ca-22b86c9949b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60786d39-8ffb-4bca-9261-5076aea46cb2",
        "cursor": {
          "ref": "e3dd7ce5-7429-4e11-b70a-a3e3ea210649",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0836e1f2-d812-4acd-89fc-803c05a70234"
        },
        "item": {
          "id": "60786d39-8ffb-4bca-9261-5076aea46cb2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7509979c-a355-4aca-bf85-8912d1873794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efefed5-82c6-4ef8-87e0-f1aa6ed300b3",
        "cursor": {
          "ref": "a014cc51-9ce0-49fd-856f-55096a15ce59",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "528f7287-6438-4c51-8eac-e313ff58eb29"
        },
        "item": {
          "id": "8efefed5-82c6-4ef8-87e0-f1aa6ed300b3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f0fef7fa-6213-4ed5-bdb0-118e7b12c37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774f4149-c331-4b34-861c-5b6eab62f0aa",
        "cursor": {
          "ref": "5b9c21e7-4f61-4d62-b46d-0315d515108b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "524d62e6-0e65-4b3c-8d9b-10db925a6ec9"
        },
        "item": {
          "id": "774f4149-c331-4b34-861c-5b6eab62f0aa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e91366df-316e-4f94-9db6-48b2c54a2fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4931b5-cc05-49b2-b409-6356aa989561",
        "cursor": {
          "ref": "87dd6a02-b1d2-4954-88c7-3c575fc54168",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2cb94a43-5724-45e7-97fd-00a32825b44a"
        },
        "item": {
          "id": "fe4931b5-cc05-49b2-b409-6356aa989561",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cbf04cec-ec52-43fa-bd11-ac05c25fbbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c63f66a-323f-41e7-8c7c-744dabfec502",
        "cursor": {
          "ref": "4e0f3d02-a0bf-480f-809f-5587e890ea4c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6c551dc2-28e0-4990-82ec-5522ba9e4e59"
        },
        "item": {
          "id": "1c63f66a-323f-41e7-8c7c-744dabfec502",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b0210e5f-c1b3-490d-9730-280f5d13f65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc98b90f-7385-4587-b6a0-bcbb0dac9c93",
        "cursor": {
          "ref": "74b487f2-1392-4a0a-9a94-e04bd7a62b81",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3977762a-888d-4949-8e4d-97fe859dfb64"
        },
        "item": {
          "id": "fc98b90f-7385-4587-b6a0-bcbb0dac9c93",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "644538cc-b127-433a-a345-86f961e6e0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1200a713-6d23-43ef-8fcb-e7cca9469d5f",
        "cursor": {
          "ref": "0008cd82-d5ea-4a50-9660-4ceabc95cb52",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f623fa70-4a62-4bc3-92d1-acf35a971e21"
        },
        "item": {
          "id": "1200a713-6d23-43ef-8fcb-e7cca9469d5f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e2cc6d88-292a-45ba-8448-e3bb79747407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b270dda-5469-42a7-88da-2e2b6cafc973",
        "cursor": {
          "ref": "bf407ea7-d542-4b3d-93bc-dce5cf50ea0a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "978b0569-5ff3-48b6-8930-b3a0f5b3b721"
        },
        "item": {
          "id": "8b270dda-5469-42a7-88da-2e2b6cafc973",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "572961d3-3fc6-4fef-846f-8c42962c64b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0978bb-823d-4eed-a61f-33c0add1e38a",
        "cursor": {
          "ref": "0aaa4458-793b-449b-8aca-7a05504de981",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d70d5e39-c48e-49f8-af25-ede343d901f2"
        },
        "item": {
          "id": "0d0978bb-823d-4eed-a61f-33c0add1e38a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0098994b-9696-436b-b424-deb51c2e1942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51d77fc-6f7b-402e-b9b3-8f7f3f05c23b",
        "cursor": {
          "ref": "c681bf71-ad4b-466d-940e-75c647664e26",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "36479fc4-4025-45de-9ae5-87e65400f5a1"
        },
        "item": {
          "id": "c51d77fc-6f7b-402e-b9b3-8f7f3f05c23b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "44a5a517-4922-40d1-868c-bb14aa47bd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0bffff-0dda-4ace-bedd-0709d159c3b3",
        "cursor": {
          "ref": "c47441b8-16b0-4edf-b57c-ca426a7c7340",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "28196db3-b6a7-4521-b6df-40f7668404f6"
        },
        "item": {
          "id": "4d0bffff-0dda-4ace-bedd-0709d159c3b3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5031051d-3db2-4297-a434-a3595c51deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c169022f-e7d0-4984-aba3-6ff8f0bd0ea8",
        "cursor": {
          "ref": "b026df84-c712-4ee6-97dc-0a391539a5bc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "caef3abe-5fb1-4bfd-b1b2-72837e1b2a26"
        },
        "item": {
          "id": "c169022f-e7d0-4984-aba3-6ff8f0bd0ea8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3536f14e-def9-49c4-bd5b-a5b2f8dedfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f466d65b-f67b-4dfc-8a1c-495d3109902c",
        "cursor": {
          "ref": "9450bb48-cf6d-4714-8ee2-5d34d2a9bc65",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c7cfbbe9-b959-4441-a110-02a8f303fcb4"
        },
        "item": {
          "id": "f466d65b-f67b-4dfc-8a1c-495d3109902c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "406b7d9f-7e56-4ee2-a1a8-787d68cda2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2fafc7-9cb0-49cc-bc20-9a972103ff51",
        "cursor": {
          "ref": "cb54130e-d205-4bc4-8dda-a8a97e4cf095",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "83da2864-48fd-41e1-876b-745e6a155049"
        },
        "item": {
          "id": "7c2fafc7-9cb0-49cc-bc20-9a972103ff51",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "85271852-ee10-45c3-b019-3a53b59aa5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a6859b-128c-4cd8-881f-dc2f9f592896",
        "cursor": {
          "ref": "7210a342-dda2-43bc-ba56-ff1e6f8ddc9b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "80b573bf-4a8d-492e-ac23-23d891a78f2d"
        },
        "item": {
          "id": "57a6859b-128c-4cd8-881f-dc2f9f592896",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9905e857-12f5-456d-9f3e-f5a5709463fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e077871-fcee-4a94-ad44-c4d4638d0091",
        "cursor": {
          "ref": "2a4bf9c8-fd92-44c4-8048-e9b1ad3a9196",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "67cf43a2-422b-441b-a0ff-4b8d16a3641c"
        },
        "item": {
          "id": "6e077871-fcee-4a94-ad44-c4d4638d0091",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "93fb1028-8b9b-4205-9771-6015854eec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e244585d-546d-4c58-87f6-39042659abdb",
        "cursor": {
          "ref": "46cdc053-ae10-4f2d-85f2-f86aa49900e4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9b6084aa-9f61-4f7e-8a90-077790a277a4"
        },
        "item": {
          "id": "e244585d-546d-4c58-87f6-39042659abdb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "22ee6405-3071-4c5b-81e1-c270f176c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aa1ee0-15b1-4e7d-bcb4-8202a084ad18",
        "cursor": {
          "ref": "b9d5885b-4a03-4ea7-a1fb-ee4e47db9d05",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f3929b13-5697-496b-b37c-f2081da16073"
        },
        "item": {
          "id": "57aa1ee0-15b1-4e7d-bcb4-8202a084ad18",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cbf33224-532f-4de0-a15d-f3264f4a3479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39f989d-4096-45a9-a8b5-8d5add646feb",
        "cursor": {
          "ref": "9b262f63-d446-4933-92ad-f2b45b8ce1f3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fb96becc-2f3d-4148-bd21-42e17141b02d"
        },
        "item": {
          "id": "f39f989d-4096-45a9-a8b5-8d5add646feb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0fb8efbc-aae7-4fe4-b2dd-4863d34b939c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28788d4e-3c26-4148-8767-974999b71056",
        "cursor": {
          "ref": "8523fadf-07ce-4eb1-b433-19741900c184",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a5d51bee-7e17-4e93-bfc4-d603351aee99"
        },
        "item": {
          "id": "28788d4e-3c26-4148-8767-974999b71056",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "76107c9f-17cb-4ee2-8d4c-5cf286ebdf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202acdb8-68e9-4700-aa47-c35f38d67ed0",
        "cursor": {
          "ref": "e780c637-b06b-4e71-819a-677c31fed280",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eaf088ee-dca2-48e9-97ae-08fb41177096"
        },
        "item": {
          "id": "202acdb8-68e9-4700-aa47-c35f38d67ed0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8b73bb52-b0da-4be7-b726-4276d2d32a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4bbcb2-647f-4c60-b38b-e31e0b686839",
        "cursor": {
          "ref": "72c7d0f8-0494-45d3-9a4c-34d79bf09fca",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a4a956ec-d243-40f2-8089-6c6f75985f06"
        },
        "item": {
          "id": "0e4bbcb2-647f-4c60-b38b-e31e0b686839",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6017145b-9b5e-414e-b4da-81ea51efdfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb5f8d2-5ac0-4dab-94b1-de08bd2f88be",
        "cursor": {
          "ref": "ab2f5a9a-d60a-401e-9620-4c1643c0c31f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ef99f9e1-c88f-4f50-bd8a-cae80c9c1048"
        },
        "item": {
          "id": "bbb5f8d2-5ac0-4dab-94b1-de08bd2f88be",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "603e1bc3-5c38-4aa6-8538-33c51859c7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6559e7-5020-40a1-9fcd-73c029edbffb",
        "cursor": {
          "ref": "111087eb-99f7-4e77-94d8-c6f99081e7b2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "65aa4514-c805-481f-b274-20ba88373066"
        },
        "item": {
          "id": "eb6559e7-5020-40a1-9fcd-73c029edbffb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b006284c-9738-497b-9e0a-3d03e63376e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f97740d-18ee-4a28-8981-b4bb603cdcb3",
        "cursor": {
          "ref": "56fe7b01-7864-4a38-ba54-9db1ddc3e5f2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8dcd2aa2-1e6e-49b7-aeec-f7afb22aecda"
        },
        "item": {
          "id": "1f97740d-18ee-4a28-8981-b4bb603cdcb3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bf0720df-774e-444d-9989-cb4b628855c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd4b29-46ae-43ba-abee-674cc95cee6f",
        "cursor": {
          "ref": "67650f50-3404-4894-acb3-72e37dc33be5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5b1cc16b-9bad-4bcd-ae80-260142fc4b0d"
        },
        "item": {
          "id": "e8fd4b29-46ae-43ba-abee-674cc95cee6f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bfae4237-0cad-4dc2-b51b-2405eeeb1091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af587a7-5a04-43f5-8056-81f8b718fcc8",
        "cursor": {
          "ref": "26e46a90-dafa-47d5-8cc1-1a80955cc5ae",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e7f1dcee-c893-4031-bf8c-926a0c349961"
        },
        "item": {
          "id": "3af587a7-5a04-43f5-8056-81f8b718fcc8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "88427afb-90e7-4af7-92c5-eb16012d3db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53081515-6caa-4806-8bcf-a3d72bb292ef",
        "cursor": {
          "ref": "d194475e-3e09-4d1b-bd56-e965ed9f0552",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c4e11460-fe0b-4721-ae12-45034bf7293e"
        },
        "item": {
          "id": "53081515-6caa-4806-8bcf-a3d72bb292ef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c8e8cf98-b0f0-4f45-992f-dcafb36d73da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5139e1a3-0a07-47e3-a4ef-2fabbacab1cc",
        "cursor": {
          "ref": "edf13d6c-8a77-4ed2-8a36-9475af8403e5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1e5753d0-3349-49d3-b890-d1fa666d20fb"
        },
        "item": {
          "id": "5139e1a3-0a07-47e3-a4ef-2fabbacab1cc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "110bf237-acff-4c28-a3f5-a9bdadbcace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f87a18-bad4-47f1-871d-5b93bfda0df1",
        "cursor": {
          "ref": "b64fcc0b-445e-4225-9bca-a505485702a7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "43290a0e-5034-4cdd-a29f-18ca6bb34ab2"
        },
        "item": {
          "id": "18f87a18-bad4-47f1-871d-5b93bfda0df1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c5b57e2b-cbc1-411c-b92b-58f8381f5298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014691a7-c774-43b6-bd67-afb553091820",
        "cursor": {
          "ref": "9b3ac566-4491-4658-a0cd-943d06dba83f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "49cc3b4c-41ef-44cd-8579-67aa1dc96b2c"
        },
        "item": {
          "id": "014691a7-c774-43b6-bd67-afb553091820",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6dffd6e3-9387-4fa1-9dc7-d8ad13ee038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bbdb15-390c-400c-a98b-aa1391e5897e",
        "cursor": {
          "ref": "e4eed17b-8495-49ee-ad5d-9da7ddcfdf58",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7fd7e5c5-7d26-4fe6-a1fb-17caa2fa3e8b"
        },
        "item": {
          "id": "b2bbdb15-390c-400c-a98b-aa1391e5897e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fd4d03d8-91f4-4791-9fee-627dd724b964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4302ed53-d128-40d6-8e8c-61f90c2fad72",
        "cursor": {
          "ref": "417f91ae-5499-4f0b-9832-7bf8fbc56c9c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "45bb4f37-8673-430e-8f3f-a30f8f415db8"
        },
        "item": {
          "id": "4302ed53-d128-40d6-8e8c-61f90c2fad72",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1241b99b-9d46-4bb1-9e7d-713df6561baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac927b-b0f2-4a97-94ef-ff73482ad852",
        "cursor": {
          "ref": "00088e37-800a-4933-9b09-609331330469",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1bab6bc-2d2c-4183-801d-7a7c38516b5b"
        },
        "item": {
          "id": "b2ac927b-b0f2-4a97-94ef-ff73482ad852",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ec785413-dd3a-4e33-a3dd-10ba6967f58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb1f06-cdf3-4bad-a413-8328e111ec8f",
        "cursor": {
          "ref": "8d5fe212-5b41-4b80-91c5-3f8405ba043c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "177bb023-06fc-4580-9c8f-43a5a785e738"
        },
        "item": {
          "id": "2ebb1f06-cdf3-4bad-a413-8328e111ec8f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b5a552c0-cc0a-4d5c-8b2d-dde9090638af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fded89-6bbf-476e-9eeb-e5d015d9a5fb",
        "cursor": {
          "ref": "4de5fafd-513b-4304-84f1-54494f5cbe2b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "32225e39-dce5-4c58-bb5d-76b4e1ad73eb"
        },
        "item": {
          "id": "85fded89-6bbf-476e-9eeb-e5d015d9a5fb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f5050519-02b1-4eb7-92ff-16fd618a93b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85019f1f-e6a8-4cc8-9b15-71bbca9e7d9f",
        "cursor": {
          "ref": "5b95f4dc-1203-44a4-a148-dd3cdc3f803d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "805c4bc6-e021-4fd4-abfb-1766c849326a"
        },
        "item": {
          "id": "85019f1f-e6a8-4cc8-9b15-71bbca9e7d9f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "58eafea0-c0af-4c6d-9106-9c8ef267f15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c59f3f-8683-4d23-896d-8400bc4b4f92",
        "cursor": {
          "ref": "efd8c972-f1ad-48cd-a499-667ed3f8112f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "71d56705-cdb7-4ee8-a3be-ccadc8977d31"
        },
        "item": {
          "id": "95c59f3f-8683-4d23-896d-8400bc4b4f92",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5a1b65c-d04b-4d80-ab76-63f954865714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de81472a-70ff-4e75-99d5-b45aefab6e60",
        "cursor": {
          "ref": "f879509c-a05c-4fed-a835-646f3e0641cd",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "35642db3-4f3d-4040-befa-46fd375db600"
        },
        "item": {
          "id": "de81472a-70ff-4e75-99d5-b45aefab6e60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f1ffaa5-e6e0-476d-a4ed-7d6cedebd38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9af3007-aa3a-4e1f-a5d2-065fbaf5b747",
        "cursor": {
          "ref": "db28c3f7-7e77-4216-b330-9f744c327d8c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c7668263-6e45-479c-bab5-c5bc7731ac36"
        },
        "item": {
          "id": "c9af3007-aa3a-4e1f-a5d2-065fbaf5b747",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9e6d2316-06d9-460f-a223-368fc383ba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25502632-26de-49da-98c2-5aa7593a4b76",
        "cursor": {
          "ref": "dc34ab7d-0285-4646-9a1a-89d086fda697",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cc479cff-183d-48cf-965f-3fb08fcedc89"
        },
        "item": {
          "id": "25502632-26de-49da-98c2-5aa7593a4b76",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cbcea2b4-7754-4f54-aa8a-340d280a6dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd4420f-41e9-4975-9a3c-f8217fc43564",
        "cursor": {
          "ref": "05e34c68-92bd-4f72-824d-9be2e42f395d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1ffb5fde-ea65-4f3f-9aa1-96f58d2f8529"
        },
        "item": {
          "id": "9fd4420f-41e9-4975-9a3c-f8217fc43564",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c5a89b0a-3f7a-4fe4-9416-1c9822783732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68f1d0-1e0d-46c0-ade0-680a3742ee25",
        "cursor": {
          "ref": "4fe03deb-6721-4834-83c0-2aed1f61a931",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51624cb6-ee68-4bc9-89f6-cbce82144587"
        },
        "item": {
          "id": "fa68f1d0-1e0d-46c0-ade0-680a3742ee25",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6db31d11-09a2-4c29-925f-18e695e88e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9f9bea-4e1f-4a3f-b8c0-b09bae3bf592",
        "cursor": {
          "ref": "1cc2f9ad-3f96-438d-ade8-1fa902866b15",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "622a5d35-80ae-42e1-b8dc-f1671e94a395"
        },
        "item": {
          "id": "4f9f9bea-4e1f-4a3f-b8c0-b09bae3bf592",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aef08ab1-a450-49b9-bb5a-e98ea2e0e652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dab3ab-0f46-490c-8eef-f35525689ad4",
        "cursor": {
          "ref": "827049ea-912f-40c0-8da7-8852e9fb73c4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ebf917b-3d55-4d5b-82a2-05ea3d901dd7"
        },
        "item": {
          "id": "b9dab3ab-0f46-490c-8eef-f35525689ad4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4bbfde35-07a7-45ca-a507-c29b094624ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e33890-f3c1-4a2a-9d1b-ec31007de4d5",
        "cursor": {
          "ref": "4feb43e2-cd02-4b80-94ef-7b261a5e0098",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff548196-de80-4c3f-b7ae-006e2f320d39"
        },
        "item": {
          "id": "77e33890-f3c1-4a2a-9d1b-ec31007de4d5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "df6a9e48-7656-49a4-ad1f-a898cf6c2092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b97ba82-2ef4-4f07-ac4b-4739a1d3a988",
        "cursor": {
          "ref": "8b754f25-75f2-4a92-9250-0196fbde527b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a91cd45f-85dc-4e95-9db5-bb84b1f6051d"
        },
        "item": {
          "id": "5b97ba82-2ef4-4f07-ac4b-4739a1d3a988",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f37ab94d-f874-42ac-8544-ae2d995eb5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096fb77a-e5e3-4cfc-96f3-ece45c21c09e",
        "cursor": {
          "ref": "59142081-51c6-4c08-959a-86dc54f6a2da",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "afd5fb0f-5f10-402f-afea-62e34e8fc1fa"
        },
        "item": {
          "id": "096fb77a-e5e3-4cfc-96f3-ece45c21c09e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "626ba1f6-df9d-41e5-bc11-aef984941ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cb88f2-1d7d-403e-94ea-f156ce3cc258",
        "cursor": {
          "ref": "fc68a554-4d3f-413b-b09f-339d0ea37845",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9390926e-ae91-4a19-8e6c-18d948b53372"
        },
        "item": {
          "id": "e1cb88f2-1d7d-403e-94ea-f156ce3cc258",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9a1625bb-05fb-4739-b207-d78c602d3330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77188ca5-e017-4c05-9890-19f06e39c6dc",
        "cursor": {
          "ref": "0a6f4d7a-9a41-4e66-af5d-1868987fc913",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ece2f8fd-a7f5-47be-a917-7a3ad1d60775"
        },
        "item": {
          "id": "77188ca5-e017-4c05-9890-19f06e39c6dc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "35d3e96e-5d35-4790-9f80-16f466585c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6709a2-a22e-4582-be53-041ae9fb3b9f",
        "cursor": {
          "ref": "bbbfc937-fb60-4803-bd1d-4d094852cfce",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ea449c4c-5458-48cb-9f6a-6888b568d9f7"
        },
        "item": {
          "id": "4d6709a2-a22e-4582-be53-041ae9fb3b9f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2218bca9-971a-463c-84ba-5b588bc4e428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1892272c-a10a-4732-b4d3-82b934ad7036",
        "cursor": {
          "ref": "9b11a5ba-59e2-4b9d-a048-e42bfe2e431e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1afc1152-ae74-45e1-9566-ae3ef34ad9ef"
        },
        "item": {
          "id": "1892272c-a10a-4732-b4d3-82b934ad7036",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dc78a9a2-bb0f-4fcd-a609-346bd1aa6a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c03ef6-5a77-4923-bb65-49ef625dbe06",
        "cursor": {
          "ref": "71cd2669-5b53-4422-8eca-4bed981fac77",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "73eeda95-3757-4a8b-8477-3cbb199c20ff"
        },
        "item": {
          "id": "d0c03ef6-5a77-4923-bb65-49ef625dbe06",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1813dcaa-7550-42d4-b848-dd8202370b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9bc040-e413-4883-bde3-ad6182fb1412",
        "cursor": {
          "ref": "657e2785-ce30-444b-bde9-c24e727dbd1f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8648d229-f210-4001-8aa5-071f428a56c9"
        },
        "item": {
          "id": "ac9bc040-e413-4883-bde3-ad6182fb1412",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ce1a9686-4bfa-43b7-81f0-1a3a075ea8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0772bd-8239-4bd3-a74d-ffa58dc01584",
        "cursor": {
          "ref": "195d7042-8bb8-40e0-85df-f8fab3d18b5b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7ce7f2ee-3273-4752-b695-af638db4f92a"
        },
        "item": {
          "id": "bd0772bd-8239-4bd3-a74d-ffa58dc01584",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "56e75d16-e8a6-4d8b-b911-4c21183901c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571b70c3-af57-4216-8162-d9e881290396",
        "cursor": {
          "ref": "805d0a2c-f782-4021-aa58-e253af4de726",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e4b1395d-c742-41c8-98ad-277bfaf71290"
        },
        "item": {
          "id": "571b70c3-af57-4216-8162-d9e881290396",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3086c147-784d-47b9-9f18-317516be25e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311ae209-77e7-4494-8ff0-be10b4780f07",
        "cursor": {
          "ref": "ef35ea35-09e6-4b23-b222-1d08b44bbd10",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c9f84dea-a11e-47e2-8ae3-2ce2fe5f5f7b"
        },
        "item": {
          "id": "311ae209-77e7-4494-8ff0-be10b4780f07",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "afe3a95d-aeb6-4adc-a69d-a014f14d5e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a18cca6-0ff8-4e16-b305-b605ccb1cd2d",
        "cursor": {
          "ref": "e8699e29-0561-4aea-9999-a1c1b3428a0a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e571631d-1039-4b54-a9fa-cc45543e4d65"
        },
        "item": {
          "id": "1a18cca6-0ff8-4e16-b305-b605ccb1cd2d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a739aa1-b159-4411-b1f8-341943d165e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e8f05d-cc35-408c-bc80-b923be6f8506",
        "cursor": {
          "ref": "391e399c-aa3b-4cd3-bce8-c689e08b9584",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "874c6bd0-ae67-454d-a2b6-ed9a6aa625e4"
        },
        "item": {
          "id": "56e8f05d-cc35-408c-bc80-b923be6f8506",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0037d1b3-4f60-4330-9377-e39538655c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34f3b9f-14ae-4a2e-a383-37bf23a48052",
        "cursor": {
          "ref": "4dd866f5-9578-4974-abe3-01395b393f56",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8b965e39-0bc7-4e95-afe8-2dd352eb2f35"
        },
        "item": {
          "id": "c34f3b9f-14ae-4a2e-a383-37bf23a48052",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "47c4a493-2d06-49fc-80b3-b8e99a192fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69803610-ffa5-4131-ade8-f6209313c608",
        "cursor": {
          "ref": "3a92a433-d33e-4e77-806d-7b9251b1a385",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5dbd1a2a-0a17-42de-abff-041366f82189"
        },
        "item": {
          "id": "69803610-ffa5-4131-ade8-f6209313c608",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a21b59d2-c0a6-402e-ac0a-e6ff90141de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f519ffdb-056e-4af7-87b2-42f22b309187",
        "cursor": {
          "ref": "1bae16f2-f04f-4787-ad60-1245c976855a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "335b9cd0-f1a1-46ae-9119-169c6cf8edf5"
        },
        "item": {
          "id": "f519ffdb-056e-4af7-87b2-42f22b309187",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fc6dec93-a2d2-4c8c-9efc-dd5c2774dbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9d5ee1-3e54-4180-9b21-02091f980766",
        "cursor": {
          "ref": "69cdeaf7-78a1-4458-90f8-3b034cb9386d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d24be622-dbee-4695-9a71-e7aa180bc70e"
        },
        "item": {
          "id": "ca9d5ee1-3e54-4180-9b21-02091f980766",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "52db5933-8cfe-4194-9de2-09ebbc71b33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19956357-90f0-4dca-a427-e9d4e9cc5933",
        "cursor": {
          "ref": "47a60aec-78bb-4eeb-ad08-b759d920ec27",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d36babf-7183-4092-9705-9044914143c7"
        },
        "item": {
          "id": "19956357-90f0-4dca-a427-e9d4e9cc5933",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e2cef039-7928-44d6-8be3-d25fedeb5da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208d9a1e-5a4e-4b8b-8f60-21e668e10843",
        "cursor": {
          "ref": "2f971e64-c7ba-4179-8df4-b4b870fdd0e4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "262f735a-e5b8-4408-9d80-f5487f0fbb8e"
        },
        "item": {
          "id": "208d9a1e-5a4e-4b8b-8f60-21e668e10843",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b1e7604-0ddb-4dbe-afe2-33b1f36ba0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c90a4e-daf9-46d6-ab5b-27efc231152e",
        "cursor": {
          "ref": "4c9bd7ca-2b37-48a7-8f77-d5cab735f226",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96abc450-95d5-42a6-94fc-c541b0ae6a1f"
        },
        "item": {
          "id": "c7c90a4e-daf9-46d6-ab5b-27efc231152e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "569f7820-e596-498f-a0c5-e936d314a9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5fb316-208a-4992-a3b2-2ad46c42a4ce",
        "cursor": {
          "ref": "ba71c998-4744-49e0-9a9c-4cd06d19b031",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4d019729-d3ee-4bb0-8120-2b1aeb059483"
        },
        "item": {
          "id": "4f5fb316-208a-4992-a3b2-2ad46c42a4ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "565841f8-782c-4cdd-9c12-89918c455835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac50b0f-1ce4-4202-b075-eacbd5b6f089",
        "cursor": {
          "ref": "3919cf82-d81a-4b45-bc70-003134f7e87b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7deb61b8-7049-439c-a72c-a8f1ede3e367"
        },
        "item": {
          "id": "3ac50b0f-1ce4-4202-b075-eacbd5b6f089",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3425c2b6-670d-434b-800e-9d5eeb2b7251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f99e83f-540e-4c32-892c-3670086b7af9",
        "cursor": {
          "ref": "e7b2724f-d21e-49af-bdc8-26f121824ad1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a44bfd95-d907-4b37-8200-1939cffa93cf"
        },
        "item": {
          "id": "7f99e83f-540e-4c32-892c-3670086b7af9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dc0b69ba-85bf-4763-947b-22b142a436f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76812a0f-48b9-4a65-bf77-9a740474def5",
        "cursor": {
          "ref": "59a73646-13aa-4895-ad7c-9462b69765be",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59ac53f7-69b0-4af0-807a-a2b3eb930ed2"
        },
        "item": {
          "id": "76812a0f-48b9-4a65-bf77-9a740474def5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eec698b0-ba0c-436e-aa8d-94396956e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1ea1e0-8d91-41d3-a73c-38f0fd46c217",
        "cursor": {
          "ref": "876477b6-4e34-42dc-92f3-70ffd21501aa",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71c1e521-d5db-485b-925d-554f188b411a"
        },
        "item": {
          "id": "cd1ea1e0-8d91-41d3-a73c-38f0fd46c217",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "60efc66b-35a5-402d-921b-d97501801815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108ef043-1f3a-487e-adcc-30558c5e5b50",
        "cursor": {
          "ref": "606aaf36-01ad-452a-84c6-81a812d3c52a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "04ba2459-c8b1-405d-a2c2-7a106bf98a20"
        },
        "item": {
          "id": "108ef043-1f3a-487e-adcc-30558c5e5b50",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "31ea479c-8ccd-4678-86d3-4a1874fa7e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c419ef-ad00-47c6-a641-3bbae84d63b2",
        "cursor": {
          "ref": "1a5e99ab-c1a1-4dbb-b8cd-d329175041b1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8e4de965-6924-4ca8-a3f1-2315249f6b5d"
        },
        "item": {
          "id": "b5c419ef-ad00-47c6-a641-3bbae84d63b2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cfa06196-3407-43dd-9cbd-d7f9436ed564",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba09c8-fc0b-4f02-9565-6f4979341c1e",
        "cursor": {
          "ref": "6c5de274-2eb8-4969-8958-bec4305d7d63",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3cdea4f4-c053-4439-bf47-83416a43e153"
        },
        "item": {
          "id": "4aba09c8-fc0b-4f02-9565-6f4979341c1e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9aa27e32-366b-49a2-a34b-35cb3b8e4e7e",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "797729a4-702b-4b1f-ba6f-d7c19b5169ac",
        "cursor": {
          "ref": "21487ea6-4dc5-47a0-92cc-d6170f59eaaf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7a2ee019-63b3-4c51-afb7-397b56e6735f"
        },
        "item": {
          "id": "797729a4-702b-4b1f-ba6f-d7c19b5169ac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "24394efc-7458-4c49-81dd-3333f3edbbc1",
          "status": "OK",
          "code": 200,
          "responseTime": 2860,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9912d56-408c-4abd-b0a9-9c2fc96557ac",
        "cursor": {
          "ref": "e7ff3028-f32a-4d0e-a003-a35d4734cd07",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e8fe853-cc0b-411e-9718-4342c1e92c9f"
        },
        "item": {
          "id": "b9912d56-408c-4abd-b0a9-9c2fc96557ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6ce3323a-3a6f-4a1c-8583-973cdd547ced",
          "status": "OK",
          "code": 200,
          "responseTime": 2085,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc4363c-4037-4567-a481-3be9390a3840",
        "cursor": {
          "ref": "7390f2e1-583f-401f-9bea-c443aad1c1c9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "870b88cb-c806-46cf-92ff-a8e52b9e7324"
        },
        "item": {
          "id": "5dc4363c-4037-4567-a481-3be9390a3840",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0e416f91-8754-436d-9c71-ce7ec5133904",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc4363c-4037-4567-a481-3be9390a3840",
        "cursor": {
          "ref": "7390f2e1-583f-401f-9bea-c443aad1c1c9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "870b88cb-c806-46cf-92ff-a8e52b9e7324"
        },
        "item": {
          "id": "5dc4363c-4037-4567-a481-3be9390a3840",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0e416f91-8754-436d-9c71-ce7ec5133904",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817d3779-6f8d-4470-bbfd-912a00faaa8e",
        "cursor": {
          "ref": "f0c95b59-5ceb-4791-b447-2c5c2f237ee6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8ebb9199-91ed-42b1-9431-56a70ef1841f"
        },
        "item": {
          "id": "817d3779-6f8d-4470-bbfd-912a00faaa8e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2c40379b-5cac-44d0-8212-112c0d466869",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed551187-e5c9-4cbd-bca2-35944d9c9908",
        "cursor": {
          "ref": "2eb19346-924c-4c97-9380-a3c53da98ec7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fda43136-f7ba-4897-a2b0-238d8bd4b492"
        },
        "item": {
          "id": "ed551187-e5c9-4cbd-bca2-35944d9c9908",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87a8821d-363c-416c-9e50-92f52a98733c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}