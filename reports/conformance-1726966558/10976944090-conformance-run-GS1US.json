{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4473ca3e-3448-455d-9dc9-a6a00afaa7a7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ef1868a0-e6b8-4ffe-a28c-052c380bb313",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2e0e7ac-6b1d-4eb7-bc70-519d604fee6c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36a5c2b3-dd83-4223-a0b8-377ad9fcdaba"
                }
              }
            ]
          },
          {
            "id": "caab4c22-9269-4771-b2e2-f7b892d198b8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6837af45-9ed5-4eef-928f-eb923f3a7c89",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "10011b85-ef35-4d43-b1b8-6d6125221680"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "46b4d4c7-e311-4420-9170-097d334cf655",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a5738366-de02-4b17-a3d6-b81d83168f37",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb2883fb-8e08-4ce9-8740-bb73b6ad8f8e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed92e4b-8c18-4c60-b54e-8ee5f500e6f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27e29dc4-0108-495a-839e-d8b523a8d66f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f307ec2-d6c8-4540-a884-04e70c068edb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8dcdef15-71d2-40f2-96b3-aee774cb886e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a5d031a-0759-4639-8b96-ca054373f4a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa6e1be4-54e7-45f6-9a1e-e1e12093c21b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48cf8b59-28ea-4336-ae86-1dcdc53cbcfc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5c2a8054-9013-439e-a148-2be9f25f5127"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fdfba13-2d31-4462-b056-5a2554da711a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57ec9f86-79b0-4987-9ec4-bc1bf39fbb9b"
            }
          }
        ]
      },
      {
        "id": "24b58900-48dc-426f-9a24-a53f01309990",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aed34966-c59d-4f8f-8005-ecc21f0cc5b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6c3b0b5-2708-4219-9aa2-e76ba89e98a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ffc2c893-4269-4dc4-9a46-6de6a17400c7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d66f116-bcdb-4694-8eeb-5896ef405781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "133dd052-59a6-4215-9218-091de2cc2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e27325-836b-40ed-ab53-652a33ea46cc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1ef10f-7074-4f19-83c5-2d3a5035bc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4295f330-00a4-4451-b8d7-5b1f6a653f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e98547-02c8-4c2c-b243-8d4674aab7c7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc25398-8197-4592-8d78-c21d3e115db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e058c270-dc41-4c71-a15f-22fab461052d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c2cda6d-b4f1-417f-b9d4-7844ebdcf2d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20611a11-6f7b-4996-8e54-e94e40d344a0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8625770a-d1f6-40a1-bc59-628d7e90f3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50bb37ea-2bc7-4803-84ac-4b2b88e9393b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256619b3-7a1f-4357-a7c6-0b55bcbd7167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6b5e70-4c80-4eea-906b-755cd813ff2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "75c97843-dc1a-403c-8e92-aa0908014a69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7dd926ad-a571-4038-8621-b00401df5b71",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4bc7d4f-1624-4984-a4c2-6558f82ba88c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "766caede-abb7-4b5b-88d3-a2e702d6fc1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a0024ed-27bc-4d95-b1a6-7d745a5516f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a3f95397-7be0-4b4c-872a-157ab6b19a76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcbda8ce-22ab-4578-a735-2f7b4b6f852b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b4c6376-6e1c-42d5-9d82-5d74e8c862c5"
            }
          }
        ]
      },
      {
        "id": "ad1782ce-0f91-4b3c-8c0c-4c68e93e46b0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1a252522-e1b9-46c8-9c72-f38ce47223ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19e47e4c-820a-4c31-84e4-e0f2a98fb28d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fd8e8ef2-8727-4b4b-9517-304ea8b12d25",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879bcd74-7858-4148-9a34-2b0a1bddd5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ce9e95-33a4-4fc1-a19a-8f272f010abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b062ff1-1ea4-4581-86c3-413d849b3bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "392435c3-bbbd-4671-b369-7503620797d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88181978-1073-4cdf-b66a-d166120a6219",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac31e833-fbc3-491b-a6ef-1ffd07c52e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55f7d23-3b6a-409a-b6d4-279450ad0398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b34012-0470-4642-b810-e45291771227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "624e9f76-f942-4daf-82bf-92242d538376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e198573a-94c2-4d03-9fc0-91bf5177543e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2295f84e-5ae2-4850-aab1-cc87e01ebbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfd203e-f2e8-4c88-a447-59586ea1de83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a83bc41-e858-4f75-995e-f36efda64218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6db7e28e-b3df-4eaf-8fb0-383fdd88ac2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e0ffb9-b5c5-4c50-b198-1606a617f0e3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19f9894-892a-4d0e-a129-61de30946c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f088f5d-4922-416c-9a05-fd3706d5f63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647dd5e3-bb56-4af4-902a-23a77791585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "130e7272-b78d-40f3-82e2-b57f0fdb7075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b88cea-47b0-4049-bfa5-4da0b7d4a70f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f60c66-edd4-4d80-a9b6-5524bc06b95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c3f9c2-dfc0-4a84-9ef6-e1e00ab51459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb6461-35a6-4f70-b83e-e2be324155aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a431f16-1045-44df-af0f-228a6354ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8215b5d6-903e-49ef-83b9-bf5dedc18a9a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4622d68-4d2f-4665-aa84-9dd758610998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf4f4e8-6fcc-4072-bf37-72fd178632df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d15863-b95e-4377-8d97-405a9d2828f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f316af-4893-469d-940f-925e4170c728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2412c1e-8bfb-44f2-9a6f-5f6569c93884",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5141aeb6-c60f-4783-ac7f-e1b44bc9eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad949435-f2b7-4c4c-90f2-e31e012e62a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd832c1-8d7a-4c25-8d05-33f9016704b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36eef322-a412-4552-88be-e4279c12ebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95035524-7f40-49f3-a854-23cc1fd40138",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d3a807-49a1-4512-aadb-0a64f39ba25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623ddadf-9b4c-45c9-87e4-5a841259cfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa914c4-5dfa-4d93-b6e5-7f66e85e345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1329447-3085-403e-b1d6-7d97485e69c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e30391-df3f-4e69-b207-30f534ed7f63",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce16a597-a6b7-40ac-9c5e-3d3ce7d4b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d889e6ce-7286-44e2-bf5f-db9dc07d9c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe99bf6-85f3-48ea-a811-639eb4f4e2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fa3cb95-fa50-43cc-bbeb-83ec2011dda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2195ca0-4481-4907-a4d2-fe2c14e9063d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8cb872-c712-44e7-8db9-b7d9ce7a1ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d5ef6b-394d-48c8-944a-4dbe00002514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67555398-6783-44a9-9a3c-ab86b85ea650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ada478b9-8f93-4aee-9d1b-ad7896845faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72551f8-ee84-4b0c-938a-241e30ba8614",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e048ee0e-4a2c-4a4a-b14c-c153fe524e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb56582d-5378-4b6b-848b-ef81b89f66e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c9a07-f8c1-4392-af4f-0289d54dca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "463e11c9-f333-49b7-a8ac-465919b17a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade3ccd1-11c6-437c-969f-90c1c9d7026f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e16ac38-04ce-4599-821f-2423a1774e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563f1547-cec0-4c79-8af4-3419371ade8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fe1a06-be98-479a-8425-c0eb53d27621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa518787-6614-469f-83da-5a30355b78ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e56fb62-faf2-4efe-b661-8018a7b443b0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09490dc2-36f3-424f-b30e-044c704ce1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9195a70-f06c-4d45-ac35-5370a671a5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d2f702-0884-4754-9b1e-a3ba11615235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21dd8b3d-278f-4e2a-a013-00dc12fb5afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb9b908-6237-4af1-baf1-2165f5c5f34e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b22ce-d523-4d49-86fe-a05d74e18d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd095c20-7ada-4a34-9a78-2b24c3b5e5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0db53f-80ba-40dc-99c5-3e51dbc8ef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da79408c-1149-4780-827d-b470ce529a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567dd05b-da52-4ecf-b88e-f1888f6a2891",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c14c5f6-5ba7-456d-9031-1fac54b3ddc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10e1a1d-1640-46b3-94b8-aa4df64fbfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efaafd3-4501-4a17-9d52-46bd40f6e8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc9114e-e32c-43bd-8ac6-0962128b5400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714db711-7d81-4f8b-b55a-e1733f7100dc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695eae93-2a6d-4eef-a915-680acdf6b91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26c6bbc-52dd-451a-ab23-dfc7a4cdea91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0554f3-f17d-4bcb-8df4-b8334edadd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ff6bd8a-3586-4cbc-9596-154503d320d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae1d52b-bdc6-47b8-aee8-c88f4f4df303",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44c1247-18b7-4eae-9d0f-7148ac1be77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e91b55-6917-4ffe-8466-683cee2c0ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46ddeaa-1045-4567-a5fc-0b237445b531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "619f6483-8249-497c-9434-23177723942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b26ecb4-0516-41c5-9a31-fa70c4ee15d2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04a6f4c-ff52-4ba7-8f27-bf4eb4390136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87974da0-c58c-4be7-a591-adeb34f04e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5252c7c-8d93-4a62-afaf-a43fae4df867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fe1a86-cd2e-4e65-91cc-fee079560157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d3d2d9-30a9-4099-be28-96af02527a35",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad12f2b4-7646-4d20-9d9e-e7634dc7a49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bd595b-8de3-47e3-b72e-d73918ab21a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509a6f4d-f851-4457-b4c7-7401fb4fb392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4044ab7-aa19-4ca8-8f15-cdb0f61a2d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6688dd70-b4c5-4399-8b4c-a0b132a8bf46",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e30e113-f32d-4eeb-b03e-f2ed4eb11045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f413cfb5-f435-4387-ab2a-2b8e335c0d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e1ad96-f1d1-4370-8d1a-0742f197d0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14ae438-f90c-4165-8ef0-1a7043b060a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d369c5-ca68-4524-8ec1-237a66c3a608",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ec703-de5a-4ba9-a031-bf8da05678ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec36bde-1a5c-4000-9409-e4b421748b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88327985-14de-4b64-bf0d-a9fe6c0438c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0cea31-e6dc-4eab-a6b6-2141549a651b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa4dfbd-207a-4a0e-951a-1fca84acb25c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd65a486-3db2-4957-88b6-9756711aaa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab70d42-6e54-4288-b5e7-9092fd6a21ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895d4db5-da40-47e6-9861-5127cca8cb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2137ee-3538-4c23-8bee-de3298bc4e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d71d40-aad8-4c9f-961b-a1e36357cd25",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672b469d-a569-4e0b-bfd5-c8d9d4e8fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2b2b9b-5dde-4105-b2a4-365961953abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ef44f2-8290-4f84-9b72-bb9d36b8d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb2eb60-83f2-431d-a46a-ddade8bda87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e2cc1c-4a54-4206-a66a-34e65a32041b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d9bba5-998d-4c87-9827-8bc8f69736e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d845eac-cc07-45ca-9ed7-6561ff7aa20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd29f15d-ce99-4704-9f61-b77d7ae2a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f80c6a-ebe1-4d09-82ba-3473e883f168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6043e3cc-fffc-45cd-a6c8-1d548c03fefd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a15794d-3bc1-44c9-8ceb-5b1fe2d6692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a01d6a4-d35e-4b5c-8fee-81abc94f6480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76349dd9-99e3-4de5-b658-a82770da21bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aba1a18-ff90-42a2-b6ee-447d9e3334ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b16c4a-4c71-430a-9165-c527f5b1132f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8b949d-8b2e-46c2-893d-696e616c7af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3376a3-7810-4d12-884d-83247150a08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e261901-4516-4d32-a539-32aa3b42bad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88d3f25-050e-4502-a3a7-dae7d4cdf029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b30913-ad5f-4a70-b4b6-07db4856a42d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afde0356-9334-47f0-b095-0a858f62b40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bc4ebc-f4e8-47cc-be6c-ef285d68a810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f6ee48-4a61-4a4e-9de8-7daeb3daa1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4977cc86-2deb-4b20-8a2c-271ecfa7ab7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a26b046-8666-4954-9e52-04c85bdc2ba8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b3f5c5-1921-4d29-aa0f-508715b70c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbeec70b-1da2-4e08-884e-3f421590591c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0781ca-bcb3-4cfb-a3b3-de3253ad8d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40446b9c-6d33-461d-87b4-b7d86739d8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af2615e-ead7-430d-9db4-d3425367bc33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc399c6-562f-40ad-902b-07930d37c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0551d029-f2a6-4410-a894-ebdb7892b9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c30e5-8d01-47bf-a9f7-0878dae6e529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5750c53e-abb0-440e-8b67-818094c6ee43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb36ab75-23e1-495a-bfba-d4194735ff85",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fd4350-dd8a-4ba3-b4a9-0fe00a7bd0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce5af92-4d61-4672-a0c7-7cb3ca73c51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1268a5-8a5c-4c4e-8a51-fa43fbac5a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6565805-4853-44fa-8a9a-7fad8c26bf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f83a84a-74f2-408c-8652-b0a2c6d008b8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4d436b-44ac-401d-876b-5a730eda524b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698bfb90-b11e-45dd-baa9-079e8bdee05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b06688-037d-4215-a2c0-900f69b5566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a867ecb1-8ee0-478b-8c3b-f1bd32100a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6dc5a2-4fb6-4661-973c-d72f4c5c9972",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97d120e-46f4-4cfe-a271-f2519c52ca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7181e9-c195-4ec4-8afd-77c0a9c36b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63c8a80-47e3-4e42-9931-de0e7d6d9657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d3dae5-0907-466f-8b4b-03337cb494ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa2eb2d-3b28-4280-abd4-441e13bf6097",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c8340d-598c-4580-bb21-3f3ce2817365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f384f528-a622-4a22-9a0b-00241bfe6324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591f6b4-657f-4df0-8107-6aca827189b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "630b6956-82bf-426b-9e26-f9f678d7151e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6ec587-09f8-4eeb-a41b-365718965fc8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc29f62c-b43a-4b56-ab34-12c20aba8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bc557f-fd72-4f23-aa42-65aeddc2af83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5410cd6-f276-41e5-8ca6-4d18c1511d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47d1ae2-31b5-4d5f-abeb-b8172392e0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a36c3c0-8a29-4ac9-9c7d-496ac769c3d0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce4792f-9b4c-4ba5-affb-7999591a6958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e03a6f-8b7e-4b45-b3f1-9385e7cb1a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aa5c6b-ee0d-4031-b528-bc6b2a205796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "550ec4e4-4b29-4e57-a94c-aa6fe939039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08429c-931a-4af0-ad9c-f04f5d27e73b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d644940-f945-4274-818c-5675a0b09c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27db42d5-79a0-4444-8b10-4f9ea6087c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2331eee-2c73-43f6-a338-a3d9fe481921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1be58b7b-56a4-4bfa-b8b5-327c1fedd7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f100bfa7-61a7-4fc9-baa7-5939336bfaa9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa5c3f-55ba-4e52-9c95-b813e6491c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3de23e-99d3-4c7c-b233-969136ef944f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c98316-ab56-4e15-86be-097cef171419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9117612e-8adc-4482-9d3d-6079186b105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2579f749-e2cb-4c06-827a-64c3f1d49989",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ec9c07-6cd8-443c-b18c-579ed8605bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9dc76-68ad-43bb-b34b-0a148bbc48cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797c7ce6-f983-4f51-b99a-aaf45a7c3a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cef94985-0311-4faa-b2de-9ee68be5bfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ba86f6-2e39-43c8-acef-6cb6e85010c9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eac062-c2ca-4c53-9bd0-451506c88f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2948855-31a2-401c-9622-580b2f82365f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a063c-1eae-43ce-ada8-31c078b391a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "533bae61-36b8-4b64-9577-0ab34ab83808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c472c357-67fe-489b-ab44-379c8ce9e8fb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3282f078-1a29-4037-8e42-f1f2e8a6cb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e248616a-5388-4087-a424-562c61ebef20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf32407-9820-4c30-bff7-88c4f6b69957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ab80dd-2086-43ba-a2f3-b52034765e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d143e21-52cc-4395-a50c-d411d3f52235",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eff8626-d0cd-4e5a-9208-be2391f654d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50ffbfa-eeeb-4b99-b584-7296e27bba66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbb96e0-9e80-49c8-ba48-cc6f455aa806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53158b6-e9b6-4329-8a7d-61aebe76a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267fc508-c61b-4643-9a09-1ec1705843f8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9f97b7-e9da-42af-ba32-562fdb34bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c2e62d-d14e-4885-afc7-519240f7fd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cd8538-b915-4d9f-b8ab-609461e4f789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ed896d-3c4c-4520-b4cc-7f8973fea5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf6fe88-c1d1-4193-9988-42ace80ea863",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0574937b-9b62-4193-b94f-a5a44647694b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da024075-cad2-400f-84a1-f180842dd8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0270dd9f-4385-403d-9feb-6bb9f0451feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d66e91a6-6bdb-4abd-8c45-6ba57f33bb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451749ca-a03e-4b01-9de3-b73d3bd3cb18",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679868ca-93d3-4dd9-9171-edf87d23fc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23c6ab4-2cb5-416b-bdf4-f46b8edbc8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab40781f-18a8-40a4-9360-b80c3e5b7e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9e3696-92fc-4ad3-a3e7-872028ed6188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a2736-236a-4570-b31a-5ca3c11f0081",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2375a123-e8a3-40d9-9197-a53419b486aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b867778-5d14-4f0d-8776-6ffa6a2e0bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c67233-52bd-4942-90a8-8d4142153190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a140bfab-7400-4de4-82fe-a591e8019905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e810d0-8d3f-4f92-a52e-d4eda1fdffc5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e7c48b-9eaa-4abc-8888-709c4d5dffc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b75765-5cfa-489c-99bb-729f0e33bd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c55bef1-9440-4bb5-9ca8-fb9dfedb0926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a4c31d-d5af-4441-b541-5ad8395b20fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373cdd0b-3f13-434a-b32f-779e2e24c23c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c478f554-69d0-4cf3-a128-a284c28fe60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93145f75-3ebe-4ef8-902b-ae9feb3bc087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0149131f-6905-4460-a770-49f1a659a4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "668c109d-341e-47ac-a0ae-5c0e734c5360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a042dd-f38b-40fa-8bc4-219ba187aad9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb1fed-f2cb-4cf8-b515-c7fd0eb1b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a6b663-5c50-4da7-869d-42f1ecb8e2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb012e36-6ec6-4060-88e0-9c80d4fa5429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b95516-771d-499f-902e-3d4370e4c9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f8eb16-9625-44e2-b86e-e65cbad57774",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0d430f-a835-412c-b9df-7583dbcffc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb851b39-1164-43b3-95f3-e7d125bd841a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747a5095-9daa-4bf8-8ca8-01501431730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f48811e0-c63e-4230-83b3-6917be3ca22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2edaa2-c8af-44e1-ac34-41c7d4363f76",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be70a87e-b4a9-4a1a-ba9e-8bf9c308a15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23590f44-21ef-4a0d-8d6f-89db8fa18e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152da654-8e83-41c4-8266-802c5282dc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f945334c-d43c-4635-ae86-9d7a1dd9522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4350a694-f8d3-4868-95ce-335166ab7df0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca37613d-34f8-4aa8-ab95-8b741f7095ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31a498-fee4-4cb7-bb16-4147735ba9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad9a344-ac14-4a88-91dd-338b0bf084d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3232dc-1341-461c-96bb-358078029b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d8ad3b-92e6-4355-bb5f-58c0584426d1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b6069-ecf7-4bd7-b783-1e1cd8576e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d93fba-7226-431f-899b-636732d3c499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ae0aae-27af-467d-af32-3d5399964952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "789e2a1a-f44f-449a-b624-a477155bdcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4450717d-6665-40ad-96fa-8100631efce3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35248b31-f40c-4e6e-9b3d-5ea29912f0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39434c22-afea-4c4b-a1a0-3d2144f5adfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281e72a2-2ed0-41de-a773-2ac04476a8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2c7300-456f-4b75-9a0a-6348f7717521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f78f9c3-959e-43e0-a481-6d8d19a0907f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3e14c5-74aa-4c9b-a3a2-2563a292f13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9629a0e2-490e-4a2a-b760-f71ed1ed44e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc28f78-ec65-4e56-8a7c-82f4762dc8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e648b8b4-2e6b-4c78-9801-e75984ee0f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7e5e28-7916-4d11-8f92-e446060dc996",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6651aec-05cc-432b-9827-65a2b9e577d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bb0890-1469-48a4-aaa2-b9594e1f1040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d174c572-d500-4148-ad5c-4ff1b5930dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "310bec3f-524a-4f7a-8550-87af35ab73f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0536e6f3-5aaf-4692-92bb-540ff4e011b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484876d4-3ba0-4052-a633-40c9db04270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ac7d61-1334-4700-ac24-bce9de2bfe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbcd469-2a09-47fd-8cf1-ad1ba37dedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "798986f4-2cc4-4e21-950f-41ae4528ecbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb7de7-da11-47e4-b945-1c8d09a44327",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c355816c-ea85-4276-95dc-7917edb3cc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1833dff-6759-4a40-a0b5-61902e3aadcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7b6644-25ad-4ee9-9c96-e9805432f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a87cbbc9-0097-4776-9ab4-df94464af56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f12644-a89e-4cee-83f4-611d5d228a51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e861216-f1df-4b84-bfa0-a69aec5f615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8894d0-1e9a-461e-bb90-043e0a48dcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672e4587-556f-40be-a7b2-321628a61178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f19374e3-e69c-4176-a895-b0ee7fce24ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb284ef-64b7-4b3b-8ffc-b1d537c8d8c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba313bc-fe85-44f2-ab5b-032524076518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a757d4d5-4fe0-403d-b156-57ee445c3be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec0dab2-b939-4231-84a1-e3c380b81183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a1192f-5040-4130-88b8-4b85fa4d3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d385ceb3-7eb2-43af-b337-000739e41933",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb977b49-8f1e-4027-a817-dd49aeed66b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5758fe8f-94d4-4187-ae60-b28d46175f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cc95eb-2481-42ea-a1ba-2a8778628c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e33c2f9-df8c-4291-ac9c-b2d94456a6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e7576d-c089-45da-bd8c-0ae4b26570b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f89af9-042b-406e-ba4a-f10b0f13ca24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a933b77e-a0a6-4ceb-9f47-7f3db66dd6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60934eba-6bc3-4715-a6c6-31fac6856b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "868a0ebb-fd01-4121-8949-97cbe7ed2ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d5b6b8-ca3e-424f-b757-a86fbec39a4f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1429763-8a80-43da-9fd1-aa8b62a4a264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19838922-7faf-444b-be4a-c72dfc25f1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68590a84-9c06-4f1c-8924-8045a9276ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb2bf3e-0432-4f1c-b9ea-c5d1d2e6566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad729a2-e403-4963-abf8-1f0da57b0e68",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e25f8c-47bd-4012-9141-854cf0d8dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bc9a9a-988e-42cc-94fd-341c2ccee6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60925850-1082-418b-9453-e3671534cc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5393fb03-a8bf-497e-8d49-fa64ed1d1bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c96103f-11df-4a63-914a-4354be3844a3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b88e9-455f-4f15-8d0e-5da6ed08788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c12d8b-21e0-4d14-ba44-257832ea3581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce10b1-83ee-4c56-b846-07c5450d4f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb84ef3-7dfe-4636-896d-fdcf2c41d7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cd87a7-8930-4385-955e-8fa4cf5c0c5e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a18294e-5cd6-4c1b-983c-ff4f3e772be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3d0f19-2f7e-4f59-9691-3acf1054603a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257e9634-f94c-43cd-a856-689db1b310e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55a9424-2c78-45da-8c6b-50a7147f205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a269c22d-00fc-49d7-8e61-1ff3537ddadb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1474f5b-c347-4324-b96d-11b67f589550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7d86b2-0bdb-46d9-a863-e9514bdb8dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f41be1-59a7-4678-8664-836c86debb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ce19cf-80e7-4ab9-90eb-d619943291c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c58eca4-b559-4d98-87ce-85267aa2e932",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1ee3bc-b55d-4d53-b541-59269b7efcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a4150c-8fe6-4faa-b56f-765d299f9152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf62025e-3098-43e9-89f7-19db3aa990bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfd4138-9422-4b89-8279-04c2344176fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0efbc9-b35a-4d49-9dc1-16d1a7cbfee0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a784cb-61c9-4360-9dc8-4e4171475617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb5090e-3612-4c93-b89e-5a5870ca58f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4595db7a-a270-41c4-a7b8-86fcccb92bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "726f4d42-5003-43ac-82b8-3d5319196732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b407b8cf-f5df-453e-b8f4-719c55bb83e2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901db77-0ad0-41f7-ade3-72730a240a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09cabbe-b846-4e27-ae7f-90fd6f1dd1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2be01a9-a284-4e44-9473-b269fb9b8891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca80aeb4-c0fa-4881-bc57-1ecc8375e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d90b17-d0d5-443e-a9a7-dee029c2c53a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051e19ad-df0f-457a-a4b4-c3a38b676622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d8b2ab-3284-45df-834b-3cee3bd26567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baea7d02-a331-4665-9707-95fe2fcd423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3002f767-2ae5-4764-930d-a96de7061a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f07b99d-17f1-49fc-b6b1-29fd3538f944",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7380a62-3aad-4808-97ff-2ddee9af90d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36fd65e-2100-47bf-840b-2765e564c359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740753ca-a416-48c5-b2e8-a18a9aa77acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f10e71-3e97-40fe-82de-7b77ee5e8de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535a2062-bb43-415a-bec6-be327c231f29",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f58aef-bfde-4965-b2f6-1a33e3b56eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9957a93-56f8-411b-aaf4-b4e84bfd2a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ee3245-24e8-4fd3-ad25-d678b34bbe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "541112ea-9f5c-40a0-8cbe-2d4eb5f6af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd18877-3816-46af-bff7-72d97bc4bf0c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58391b2-45c9-42d0-9753-62fec2e9af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c15e58-ac2a-4433-b9a4-a56f56d452f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da40180e-eefb-4f69-a9f2-b5910c227cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b950aa2-0bcc-4a4f-86bd-c25849336357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87083d4-2303-4709-b0cd-6261db4af2b7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce3d4ad-d4f2-4b18-bf8c-77dec8cdda55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf542b2-9c88-4769-9be9-5c6287854bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3b5a1f-099e-4edc-bb33-e7accde14d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6de2ac16-44db-463a-9f24-b7f87321c2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b166d4-217a-4b50-9d65-9d1611030977",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09403f3-ff09-410e-a98b-d9cf6d354f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62248890-bdfc-47ce-8dbd-a0ad740a1ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d5199c-d336-4cac-b8cf-bb324cc6df89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71437cc6-7b1e-4eed-924c-322f73d5746e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc1e6fd-1ebc-46e8-b1c9-57ba75e7f520",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6202d7-bf4c-46fb-b988-82e81efa97a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d56ef99-845b-4bb7-bb2d-84fb856fcd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2661ed5-18f2-484f-b7e4-94441cd8f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9244cda4-bd81-4650-b46d-d18c62a41a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba965b1-ce20-4297-a84a-2cddd9263c5f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc13440f-d65b-4de6-a409-19004f52a514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029201c3-87db-4627-b451-d8768ed5e84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d345f99b-5043-4ce2-a4b5-e0d903f4f60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4045fef9-328d-4259-ad81-12f64a10f729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c87b1f-5506-4a2d-9a53-77d017cb22f8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34309c27-a59c-4108-ba81-5e57e011f5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d67bdd-2b7a-423e-9af5-6d3177c9fec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59cba81-7021-4887-99df-282f723bd771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26883867-f644-4f71-b42e-033e015ab8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52054dfc-8a65-489a-be6a-a0f25b490ff0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e8629d-c913-44b9-8a6b-f9e111147495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa447f0-d26c-4afe-971f-6052b3a7d3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab08bd03-3c0d-48f9-bdec-ffac37980984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c98d58b-1aac-43cb-a78f-e41ea8959dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276652d1-6eea-493d-9025-be0746167cfe",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e824ce70-d734-4497-9b3e-c6f9ced0bde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70fccbb-32f4-4750-a314-9b73fd41164f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58020577-7443-4e54-a119-83e3ab3127a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10efe5cd-a298-43d9-9c3b-0d9844d4f8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53f3b4e-4266-499b-be6b-854793ec459f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a33513a-a21f-4a63-9324-cc22c31fb845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9e477c-6a71-4cee-b703-4d5ba9704d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c368b2c5-3846-4224-bbbb-d6ee0c3f8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82850c1e-7a19-401b-bccb-ae8631089792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50007401-98a5-4904-9f12-1263a388d0bd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005b9ba3-593a-4650-a597-b97f33c2e118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0093b1f-05c7-4f11-9490-675c39a15f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1c6546-52ab-4936-a845-948a3d5b19b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae514f9-873e-4e59-8ddd-6f1782fa233f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af4eda0-4d56-4df1-9de6-ec97ff4634ee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deefa2c6-e806-4668-823d-9fd643c22bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aaf2bd-3510-40ce-beb2-ca18aace628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7488c077-f479-4e0d-9458-0b80e21d7d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3597299-fabc-43cb-b108-5a75a2362449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3386887-12ec-4e2a-8adb-360dcf373035",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4006495f-b4e1-4667-81af-ede5a33abd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0be920-f3e1-4b58-ace9-aa62e12a4dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76997e67-f815-4131-8c91-74687f6a249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f00c1417-a2c1-486a-9a86-0b60f3e3cc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57b572-4c4f-4e76-8ac2-fb6686a4c2fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777120c-2d22-4a92-8607-56a7a14593d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc60e10-6eea-42c0-8549-411a725b37ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deed59b8-9ede-4e6e-97f1-89aea7ab6955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "672d53e0-bb96-4fd6-9777-f243adee53c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4230f4-a09e-4455-a555-df66b8c95d5d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89be86d6-0c65-42d1-8a4c-62e4c98c1642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44cc8a4-f373-4e64-9780-abaf34e0f3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78318ae-a413-414c-8d36-4bbd883de859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7e7663-39ee-4306-8515-144b1c8c9864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20933ab-9018-4ea8-8c85-7abe4b34ac8d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b30b8-8104-4919-978a-8a916d16a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77530c94-3079-45a1-9e9e-4314dfa85d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec269c-fb89-4306-9c0f-d4e99697d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20d8297c-9ca9-4d8c-865a-e18407ef40fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfcb137-dfe8-4f9d-81df-6a8d1b6efaff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e163fb-449c-4ada-adbf-32804278000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e81d23-0f07-4cde-8283-6b12e35f42a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7384303d-4350-488e-a384-269c14436a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e123aa80-7160-492e-b0df-4c6c60077366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25b8f96-b65d-4eb3-9711-3d3b43fe5c4e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea79c38-4be8-4c65-a00f-b641738e74f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8b7f0f-393e-4a46-9953-195333e29745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a9085d-4d2b-4290-8c10-0d6d8fbc38d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db62f5b5-79da-44e9-9aea-6a8548fb6fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaa1b82-5463-4ed1-a615-87cc92b44652",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a8dd27-5a1b-4fd2-93c7-dce69b7fbbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2155d9e1-9e24-4952-a8cc-f5b247a6145e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ae8783-f3c7-40eb-abff-9d88f33a8372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0b273c-fe78-493e-9928-04c0f99f74e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd62cbd9-0b02-4e49-bd2b-4bfda269dae6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355314e2-5372-4231-9c37-e3779d3a1df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b5dc68-c7e4-4332-bf7d-49375358711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d947a13e-8426-4acb-bec5-fbab12eaabde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7f8764-de84-4372-952b-41b68c992645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c608e82e-4d34-4c81-a772-d595a983127a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99794aab-6299-4786-b018-b51fa37c6332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be3aa5c3-b44b-47c9-a8cf-f8a4dbb8a32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0566f141-8587-4944-8465-8f95c0ffa0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a73760-c29b-4519-b813-f37aa4f89599"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fe7df7d-d205-4d02-9ee2-f7b035340f68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e92a7ff1-b364-4c6f-ba63-4ac175806781",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774bd89d-976d-4c1b-9305-5c1ee611e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c81a714-55bd-40f3-ba7a-cdb285b89c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c55ec3-c0e6-4de1-8261-db6181451210",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf845961-b0fa-489e-b79e-bc19dc3e919c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "883a829a-e3f5-47f9-a9c6-8b96845fc8ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2455e409-64a4-47fd-9622-203f9fa88b6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e69e6236-e654-4b07-8c57-6570e9ae494a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8deeed10-414f-4dc2-a7c8-744f1672f488"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07cf3b5f-1cf1-4f3d-9207-3e17d3b0bf27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2343b63-fc78-46f5-b38b-78a3b33af5f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d78ff95a-a257-4711-846e-a86b405be497",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b56f654-f82a-429f-af4f-401467b71c86"
                }
              }
            ]
          },
          {
            "id": "f779a6e0-97bd-48e6-b51c-ebde950bcfc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cbbf535-9e17-4b92-bd05-4354a7470079",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "05fb797c-a145-435d-8426-367aee44b32f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4ba443-21d0-4972-96d7-80bc283bd926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "552eb5b2-4951-49e4-aedd-1e2cebdd03d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82a16e1-dc72-47ba-bff9-106b69c64c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75b7bb3-7278-469e-929f-161ec9330f65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f72a9ac8-66b5-4895-accd-a6a3c345a8c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b88acc7e-e1f5-4a4d-8130-18551973e90c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7fb0af3-e1aa-48de-972c-25eef9caf672"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd82b460-01eb-4170-8baa-92951499bf20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8eaba2e-1cd1-432c-b06f-1aebae17b32c"
                    }
                  }
                ]
              },
              {
                "id": "f2bf8f65-8183-4676-8d2d-93ef414a93f9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebcd8f2e-5bbe-4748-af08-69d26b6c863a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9304699a-91cd-4dbf-b3ce-972376ce76db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f48cca20-90b4-4dbc-abb0-ab2bcdb0f4a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a4abfd9-5a1b-40d0-8e42-f9913179c325"
                    }
                  }
                ]
              },
              {
                "id": "354ff45e-b65e-4121-bcc6-e423df5c3359",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d9f6f2-3093-4173-8ce5-36f1fc5e437d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f801ccae-c089-4951-bedd-db5edd40b8ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cea8ba65-8adf-4e62-9bab-2b685c1360c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7153d119-7b8c-4756-aa71-677f9a282127"
                    }
                  }
                ]
              },
              {
                "id": "b44e7072-a9be-4a16-9faf-00c8bda4ea2c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efc5a8f5-4b0a-4e8f-8a49-113406ede57f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67cca3d5-3c1b-4fdc-bf5c-f7acdd81abc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3bb61bc-f737-4d06-834e-263b51f1860d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7d6a8e7f-0dea-4ea4-84b2-f1d314f8d4e7"
                    }
                  }
                ]
              },
              {
                "id": "daf0462c-ecc6-4d44-8acd-2a51abd4fe9c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1f1c380-71b9-40b2-a863-886d86f33863",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a13945d-8e81-4990-98d3-5563ff9e041c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c850c2f4-21a0-4c0c-9725-294c52be1b09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "09f19aab-9406-4bb2-bec5-3877f486271f"
                    }
                  }
                ]
              },
              {
                "id": "ee4b13a9-6457-4806-8c40-b87d538b1c14",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b56ae3c-b3f6-4e95-b201-1feda7f76daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cff8748a-ea74-49ef-bb2d-fcac40f9f422"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6330b130-d73f-4af2-add1-9c084fbf9cd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bda04eed-f636-4b42-94e3-b4c56c71a031"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9baf2b30-a44d-4b73-8ea6-091519209a5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f5fe3f5-88e3-4e38-93fe-246490556b33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e5889df4-5943-4c54-a6bc-f40ae5f58b23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d664da4f-b953-45dc-b4ce-4682064b5b67"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3728fd2d-a892-4510-a3aa-4011472d4a57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0dde30de-1611-4f16-b52c-e0e4f5bac84a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76f37074-b71a-478f-8265-5ee54befb74d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2085ae9c-eca3-4c8e-b137-022b43b6f35e"
            }
          }
        ]
      },
      {
        "id": "e2d10d75-1f7a-45b3-8fa8-16525a8a28f8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3647b931-719f-4df5-bc7f-924f8c040169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86ceb866-1651-45bc-a691-28ac638e1c78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e357a41c-fdad-441d-b966-a65f592ca8d6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc06d308-fb56-444c-aff5-f60f4dfbb1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc7f4c-e980-4839-95d1-322fc30e0eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ae405-7d94-4737-a196-e950b4888cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "37abf01a-7ceb-4f7a-a168-0ca63a40a886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d646ce-7352-4002-8be4-2c70f0d6e218",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78775bab-5d14-438d-b42e-75862c2fc244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8161bed4-c069-494d-a38e-120baf27f844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041e6d9f-500e-4d6b-ba41-8ea09a1c9a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e77769f-76e6-4136-9f54-a3e58e39c14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04566a1e-a9fe-4186-823d-4f83680e1ca9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502d3396-e241-4852-8f63-f0c627213100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea179cc2-e3a6-4f07-ae3c-9495f1e8b923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2117f3-0a1a-4357-8e37-579101349752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bf5395-4733-4e44-8961-d508638f35ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f9fed8-2072-4b3e-a2ca-bb18072dad37",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39c75cb-84b1-4651-a229-4f8d24f8ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c844c990-ea15-446a-8636-4a83710d5d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f28beb-7bbd-4fbd-8f8c-351f77d4a598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25fa9e03-2edb-41bb-b847-c06e0d1c53b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadc260f-008f-448c-8c4c-faaf92434fcd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50444521-45ad-4af9-a501-ccdbf8354b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dacae4-64a2-4993-be9f-6133241ac64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0245e78b-834b-4685-9c00-a7c31cca9ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8455151-41fd-4df1-9783-700e0be443fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1501d4e9-2e33-466f-bd17-824f32ba502d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44061c3d-3e8d-4cd2-b133-393a1b47b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedfab3c-6da2-4320-93a2-ef28054139da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5f76e9-9029-4e9e-b972-dbfb6a5fddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59a9f752-b93d-4a4f-a750-d0c0a18ee630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5991c683-76e2-4bba-b7e6-5c2f62a7a0a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d408e775-cbbf-4f23-9b3a-ad373d2e02cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6566aad7-5c78-4a0e-9d64-723d494cd40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2186f4-4d47-4de2-9cb9-0f8f246c80b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a75d9f-c122-49ae-8734-510e529e77e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638a7644-9776-4448-a0d5-4f2633ddc2b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e8c658-c16a-4e2a-8415-6f0e25815b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4d03fc-b371-4a55-baf5-5f1fa05c4d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062973c1-95d3-4928-ac3d-867779f8b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd16d80-036f-4c0b-802f-d7c23ac20662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deb9248-4e5d-4778-80d6-08e1c92b4a23",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73214e6-bd21-4ef8-9156-d5fc608910ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac9d3b5-7649-4857-a05e-c469ac612ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03429ea-d4b3-4e54-bdb8-0e644fc6d486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdc2ae3-70a6-4d38-9e0f-31a2c9f97332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e19c138-7782-4063-aaa5-7fa98169ac95",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865f260d-0768-4485-8b46-67ed17f569a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47128a98-42c0-4730-bbbc-c1c20c0f6a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e08c0f-4b8c-4b7a-885d-1f3aa5f7923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbc6e4e-8563-4e64-a249-f70d1952115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8116e02e-1c72-481c-a010-f6a10ea7806a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2363cb6f-ca62-4958-a41d-11fc82fe0e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407811dc-e97b-4be9-b46d-d2cf46805b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a324179c-2c34-4f72-8fae-8e65bf550714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "239f8324-052a-47fa-877e-61a5d328dcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0110e62e-f5e1-4684-820c-cd5579f224af",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53712d96-9d90-4af2-a3ae-d777e4bdf6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14d943f-d8b6-4983-96c6-b577ad1e4dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd214435-a40f-4a1b-bf25-3a12c90b24be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57a23aff-9a90-4aef-a56e-4e8c18679012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246eaeb3-2f00-4fb0-bc15-9f62c2b6fb2d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64ea4eb-21fd-4f8d-8135-341d4bdd8dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc42555-b2bc-40ae-8173-d8132a51c6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02284de7-4ac1-4e7e-8d5a-92229119f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddadf81-646c-44d4-a5f8-8b94a882f38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac10a0a-4c27-4d46-8124-002249c624f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8414ddb9-f5f3-4740-9273-90385cf87692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf830b4-81c4-40ac-b3b6-909af47133b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c24fc0a-db96-4ad7-951d-542bf5151338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce8ac01-ba0c-4bf1-a155-986122f5ace3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf6420f-d938-456d-88de-23d15d609e86",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fa0be1-b456-43e3-92a1-c0290717c7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c787c9-cf4b-4fe9-8b5b-f22bbcf7a744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2322f-f4e4-466d-a2a3-a9b24e3d1642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbcbeed-461c-4048-9b39-7e0f47372006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc2c01f-f10b-4ac6-bd1f-5e24543efe80",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca89ef7-9ff8-444e-be95-4eeacfdecb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3e1d28-6417-4187-8b82-c1f3cc2b2a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949ece1b-68c8-4dfe-96d2-9ad181b9c2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b858cc-a7ae-44c1-8ead-d6301c48046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c73d9e-e39f-4672-ad86-7fc2669aa35b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aef11d5-3f06-4f31-9412-fb45aacd6ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1786a157-4661-48f6-b8af-76f28c46b008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e98f164-fe9a-484a-a302-c2796577c72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "250b02ea-9877-4686-a419-28e62ccca007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d736fdd7-bf3f-4f4e-bfa0-7ad5318ab763",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eda51c6-047d-49e7-95b4-eaac6f16811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e9bcd8-79e7-47fa-b909-ba0c36db94eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beba7c48-c9a7-42ad-9221-72ed592f996b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d724920-37ca-42fc-9598-59510ef87aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd28251-38ea-47e9-a9f2-421c9342ca39",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902d9ffa-96b9-4421-9308-729e6976c686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fb75d3-40e3-4082-a30a-b43868effa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711960a8-0595-48b8-93e2-60dc2a513aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dce7bc-dd88-47c1-a94c-c9ae276da959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a67bd20-1b44-4651-9f74-871f396af767",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca43fe36-e991-462b-ab58-f7616edc8d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e024a49-67d6-4ef9-8e68-89e4d0330fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708e145b-1fd0-46b0-9cd6-26eacb296bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e85de8-55d8-40d4-a268-1071cd563bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc7fcdd-e15f-4c32-9cb9-dd53ef7c42c0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d193d6-b82d-43a6-b185-6789ddbe46ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aa53ca-6ca4-4124-a4e5-4bad2e711abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c5da1b-bb05-4fc9-94a7-11235808ccb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94b2e40-d212-4e63-a966-c9aa80851512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d6e155-8bbf-423e-a9d3-e943c67bb50a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe55fc9-dc85-4eec-84d5-cc0be7265591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce938de8-c6b7-4f31-a451-caf4ec6ba3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a78ebc-dc3a-423d-a997-61ea66db345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c440af-a5e4-439b-be80-bf33a5f32af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae1273b-ef28-4b43-9d42-d3634ba29ed2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7457fa3-56e1-4621-bf0a-d1177e08e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e51f589-f14e-41a0-b975-d87801170964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d676f6b9-7407-46c9-892b-ff5ec9a31a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a742bbb3-a7cf-4d00-8e01-cdcf7e06fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b81d5a-f7f4-4090-8bbe-d8bdb93c49f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae103090-e66f-4074-a5e8-1b394abaa9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefd01fb-1852-4f41-a594-e7cdf4cb6d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a392c166-fbb6-471b-bd48-cd306f80f327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b102ad53-b78d-48ca-89cc-b8df2c18dee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e28ac78-eff3-45aa-87ec-e421aede0d18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e770d4d-6578-45aa-8a19-4dbc35fc9bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e325794a-1047-490b-b904-87a17af06792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8496a1-57a8-465e-96cc-44d8c61afa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d26723b-5dae-409e-ac62-c71a42d962bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3907de21-90b9-4ff4-88f4-766a19cf0879",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2562ee93-5ecf-4db0-8c40-bab4d702d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e71caf-c005-4c16-a885-708feac49586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f015266-a9a0-4631-bf5f-8670eb7d6bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8aacd7-8014-4dc6-9fc4-ddcd6ab631b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b48ffa-54c5-457c-b3af-79798d0d9d7c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859b233b-6b16-4a2b-bcde-23262b0e305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef70568-7869-47bf-8797-7f55fa968791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a7e480-f7aa-4a51-aba6-2b6f57fe9959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "274dcec4-58fe-452e-9391-514c37908c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eace3d9-eb4e-4996-91f3-9f38ed5f4e1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a0b3e-ce88-4216-b22f-6cf0b393025e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4dec0f-7cbd-48b4-a0c8-119460592769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db16193-8b11-4067-b38a-690ae0abc663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faff852e-0e80-424b-9c93-836e612471e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d7401d-8478-4300-92a7-9f483253f011",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee6d15b-46ec-4553-9c6e-206d9045f772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854d2eeb-a6cf-4597-9c4a-bb4959c42f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8fdc5-2d41-4ba0-a0a4-370efbab15cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049ce9f3-1902-4e63-ab29-0b07ea77c8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828759e3-705a-41dc-baf5-271e8c0aca30",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd68289d-9f92-4a6a-b94f-11498892d8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db22e45-c6fd-492f-802a-0ab2b2cc1b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a2616-986c-4e9d-8bb8-4c3edc059903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a39f58-5563-4913-bcda-3e4aaaf5d6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f228ad0b-8256-40a3-a7a2-1e1d431188b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8ed421-0438-45a1-883a-1284d8d0686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4098e749-2994-4a27-be85-3c7e7ece3f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5b7000-30ff-498e-a5bc-5466b4b5c9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5fdaa1-fa4c-4740-b9f1-6c14fde37406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76970d4-b7f2-4347-8066-6a05c79d5258",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c09d07d-1929-4021-be58-df15f4df5313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53595598-56f9-4970-ab0a-3c0af5586d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5d03f6-be85-4b09-90ee-e96337e2c799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eeec51e-d472-4133-833b-e852f4b6500d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeb7638-9815-4936-b704-b46abf24accc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db38dea-795a-4ad6-a55b-159c337b08f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42236882-52cd-4619-94ee-a262468bbd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55a0c57-480c-4fe1-9c1b-869b9a4f9845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79aac519-2419-4734-877f-61a156920260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d266d9c6-2bd3-4d52-a187-6d3659cd3de1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a286db3e-10b5-4b74-891a-d1315b1832be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1b2bfe-0973-4466-a403-6d9273665ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016e8d2f-dc19-4a98-9a13-51c40e14e112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee964c1-00fa-4503-a7c2-cead3d03f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b5cb9a-5bb5-4282-aeee-8411747823f4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ee6247-8897-4c47-bbcf-aa1b662a9327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ff89da-399c-4f34-9199-f9d321ce96f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be70ba12-a900-4f1d-a30f-1210b0ead51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45092b83-30d3-4288-b1a4-9f05d20bd50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23000da0-419a-4426-9021-16d43c14362c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebd1355-d26c-4baf-89d5-d39885edf200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10a8d58-bc35-4f53-b5b6-69e16bce5224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d76636-5b49-4cf1-bcba-523d8a20fa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "974a9901-bf4c-4fed-86e8-4f2e94e8f3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed0cd5-3fed-4955-940a-0bf26ead4774",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c8bb7d-4471-4143-80b7-98ed334eae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11386ce-329f-4b2f-8d65-3128c8ad16f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b18ac8f-3357-4da0-9a6f-f06f5a356066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e687efc-bcd8-4ee1-b5ae-ddeb94c147f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "632e1766-fdd8-4883-ba2c-87fab0045543",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cf52955-a55c-4214-b9cf-2fe25bba47b2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39680292-c3fd-4423-9f17-e286d7437f6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3147f548-db23-43a7-9629-6a0afb5cb973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42c1103-c2b2-4a00-85ce-908f9f9604ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "946dffa2-831c-478a-bfd7-df65aadfd697"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a26d27c7-5e08-4ef7-99ea-10f9d8035e67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57adabbe-7b14-4b41-9077-c848a6f313e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ee732bd-fba2-429d-8807-ea0e0c256b30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb4849d-d7ce-4fa1-8660-90f32d14e18d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d12f4ab3-5e8a-4bda-9e5b-fe24c9315be9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f301c142-fef5-4b72-8bd0-5f884082d673"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e5caf3d-073c-477b-8b53-9b8373d1c7d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efccbe3e-8347-4b20-92c2-e1169b4883b9"
            }
          }
        ]
      },
      {
        "id": "2be968f5-e21c-4d51-96b6-36a7d2eb6aed",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ef2de470-baaf-42ff-ae25-c43736d63572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c5a2e5c-fdb8-4a57-8020-019280f04589",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6206f208-f009-44dd-ab20-9b4193e5b88b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85afe84b-7f2e-483e-9f6d-874b2b4b43a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f793a0-624b-46c8-be7d-8f50d5be2343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7e9b87-8445-43fb-af4d-ed8d060719e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682ff547-e05b-41b0-8b6f-d284d457f07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74abe765-1daa-4614-aa3a-0483aeea2565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1ebbec-ddc7-4493-821b-f2b36d2ff0f4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cb7106-177d-4a55-8645-77cbaaa25a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7c5a92-eedd-41a5-aaa1-7c1de4fc71cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5100745d-17f9-45ce-8668-6979592567e5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f16f1b-1c17-4620-a967-4e2e7100f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b4a376-96c1-41cf-9895-5217dd17ebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424d2af0-8429-49cc-8ff2-f08e4796a874",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d55473-4696-4e39-a2b5-104d2409b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28301103-891b-4898-8025-b6d7d8678dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62380c70-f62a-4224-8afe-addb79e12c9c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaed341-ee13-4a8d-b523-6b1814dc46d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ae0c37-b0f3-4638-9452-1284727f3110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12b6176-55d6-4c30-a08d-8d21de88ab6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6d1f0-9f4b-4988-ad34-7adb3b3f770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530534f7-8b13-4032-b662-dbc5ade19c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea73e20-5947-47a1-8bb0-62553f97701e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9d03f1-ded1-49f1-a0ab-5a3a4807eb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e259f4f-d1f8-4eac-962c-c3f84e160a60",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2801cfc6-b347-4484-a23e-61b03e386180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a774e8a-b1d0-433d-ac2e-ab942f523365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1624a9-15ce-401e-bae5-9437c0ee7686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34e9b7a-8e4f-44bd-8edf-f4d0dc135e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd37b27-396f-441d-94f6-b05e4a32565c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35d0ac6-78d1-4256-8681-ab0bc9e98d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522610fe-02a8-4556-8ee4-b0529a88f32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92439fd-b4a7-4d55-b3aa-cfcf2893372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c237bf4d-27c1-496a-a926-614d9dcc578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7073456-dc05-4179-a2cf-9a917baccd8e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0525f2d-5bc1-4cde-865b-c760c9250be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48dfc99e-283a-45dc-9cf8-9b7ba5f61a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135febda-d259-4047-91f5-87e53d472efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e4a0b4-4bc3-4797-9a06-a1679a132002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6abce2-a50d-43a3-a530-bf1bafaaabdb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac04147-1393-4316-aa1f-4fab7cec6f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad58e5f-e617-4436-8358-dd013892da56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174af658-6356-4137-b418-d24d28ee6efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17f8868-6b04-4f2e-88f9-0bdd7a7ec3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456237f9-135a-4572-9ac2-161623ca221b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade0aadc-e085-4b3e-b465-d76cf6468ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0fccb8-56b1-4aa5-a89b-8db4b2413c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07150ebf-579b-40bd-8a34-3de9bf70e7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e43ed7f-b793-421e-a959-80d59e791949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6070d4-ac27-47a1-8a07-6649f50a505e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c2af83-1024-48ef-ad09-3c3b4c6cf052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cdc905a-ac37-4d30-b4f4-4b920d13a0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf90b3-3a0b-47cf-bf5c-73014d0408c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a48db17-dfda-4faf-93be-5ace59d8f110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9a0202-0c27-4bab-ad37-fb1bff124ac7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1910b56c-7f39-42d7-820b-7250b8312fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c5888b-174a-473b-8090-8f037410f120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1ada0a-c94e-4171-b57a-83c108cbfacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28006611-caad-4454-aeb7-fc977d10f81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3534009-648d-45f0-b7a4-9994dde97c20",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d18ad-69ca-4e27-9a84-bd216c9a7434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc417f82-1c03-47bf-9aed-225c3b5b4595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1170ba-b866-4014-b89d-8f4a7a26bd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4750e854-7964-4961-89ca-f34279d32cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df12d739-8d4c-485d-9623-2e9d5148924a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92209b1e-1ac0-4a6f-a7b7-2dbd55747705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8d3a99-757b-4265-a5fe-be40ed219cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ffb629-ec89-405e-8478-d33ea1bd98bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf515ae-2e88-4ae3-8ff6-0fffa90165b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2120f1ec-7ba3-4b85-bd77-2d7e9637e185",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17af167c-64ad-4d11-8a31-240af0a94238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6007c81-f5ec-43ce-aee5-692d8b63c49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98200d02-fdb7-49f3-8712-d96fe8e4177e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fc1712-a453-4fab-b672-3ec9e9f5fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b3ac4f-2d01-468e-8210-9ad113be4362",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10233dbd-1ea5-4b28-9eaa-a73d4aeba284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498d8234-13d0-4898-9f26-b00d4e7e9ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34489a6f-0b5a-400d-bce9-cf1f827be1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faac3f84-b979-496e-a39b-f9cbeea9c5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65080189-ab75-41f0-b22f-4e17ac048894",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fb8eb0-74a5-4790-bb5f-6db3831ceeb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2468b4c0-79cb-443b-8b29-c688bf672f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddee0567-6dd4-45e4-9eb3-2bbf28f576ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62e91bb-c813-4259-b046-cfafc75d85d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5989018b-df60-4a53-be3c-5d806236aaf5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0559191b-8e38-4981-87dc-34f78cc63ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dae4546-2e13-4695-b7aa-ef443ae3f322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd40871-12ac-41b9-984d-d322ac0295c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab3dce3-4117-4903-8498-b303f25c4705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2212e6-d0d4-4c06-82d1-d207cf3e32da",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1d7f93-0b44-44d1-9510-08f6ff99a815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6020f5-7e64-40c0-b4f3-24cf83537a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf51376d-6530-4b0b-8737-9acdab4bea31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea5e463-bd9d-4a81-b6c7-05826a5c783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d229ef4-0dce-401c-b6cf-4a33a419a509",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea553a0-9f89-4efb-92b9-d14da0827add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbf4c81-1718-438d-b2fa-54b39195b64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52b818-8c90-4b92-98f1-6ceeedbad024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1695f3f-fd55-4f61-ab7d-6aed7f73ad37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f6d8de-d739-4456-a3e8-8b07c2e8c61c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3230c1-e544-4244-b060-fb38ed6a3705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b00278-137c-4117-ab34-11d8a404c610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9bb1ad-8e26-463f-8987-eadc4badeab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a833f11b-c223-40f4-86d9-c60d733ef85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50799a73-ff7f-47d8-af12-91c93dd45fd9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4672f9f-de34-47f2-ad5a-6f361c864166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbfbf790-f38e-4543-87e8-889077775445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0430a5ff-fd70-4fac-8884-d0fc1d27832e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65425ff4-bef9-45b0-bb64-dd6c92950fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3529a856-4696-4bb8-9925-cebe07b0cc5c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6aadbb-19cc-4609-b511-30277a4a60a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b437c10a-82a5-4ec7-a6e5-590cfff763ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc5b749-f005-4e39-a2f8-045e5328d2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e129b756-112f-45fb-b7f3-6061a8a68138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eacbc1-98c3-4cd7-bcc7-88f7295f19a8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fc842c-2e5b-41b8-a6b3-57d9c1ae0df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f355495c-1438-49b2-98ac-2a57fefae141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d9154b-54d3-4fb4-ab80-4e95d073c71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a93c65f-6021-422c-87b9-153b3f909b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854378e6-bcf1-454b-8ba1-f9f59fff3fe7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c9a748-d8e1-40e7-94f2-019d52a54eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9703b3d-80f2-49cc-bf52-52f70bc9c360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d504379e-5013-45f1-919c-fe1a4668798a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bc83cc-9826-4aad-beee-d6969e470f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db1e6af-e98c-491c-9b30-ab66407d42a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0715f122-f1ec-401c-abe0-2c927125d4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695794e9-be59-4517-ab57-30315c5b3723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1565b33-980d-4c3b-8e92-52a6a6a6c77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadd4c27-5676-48b1-80f2-69ff200f7814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9225e94-3d6d-4450-8f75-014525c1f5ab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef6db15-f59a-4b7b-bf5e-70dd444bd478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a3d389-afe0-4b93-9894-42623ad474fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3aaa7c-68dc-46a0-9a72-24fc872b1a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f822e31-2262-4aba-bd4e-85634cdc3fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa848610-a975-4478-b44b-462860e1fae9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35897f32-3e79-49e5-9b9c-cc600c3b3006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88a667c-0ee9-426e-9ae3-b3894125b733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a678fa67-a9ea-4677-8842-f9a628d5b71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511dbd1e-ad1f-400c-84f6-97ec9c4c223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f421730-57dd-4f8a-bc8f-ab828fc0dc12",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95359b67-36b3-4fc6-a0df-965a246bcb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17b6631-e22d-441a-86d8-5133b9059266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b611515-8d67-4185-9429-218d68532258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7fdbe5-fc94-448a-bab7-3ba00f76e2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd536e3e-5d1f-48e0-a831-ebd84c6656ba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68740b51-f85b-4e00-a3ad-60a998ef25de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df8b14b-eeaf-4080-bc3c-fca051c2457e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5125aee-8493-484e-80d8-67c705044827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c82b7d6-8ef7-430d-a032-517bcfbee592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee461827-c1b4-40d0-a86a-047fcf82b662",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b642232-8aa9-4bbd-9e8f-eccec3c8e294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d73079-68bd-4b70-ae69-c50dd66d3094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ab0a96-df96-4a36-ab42-4969fede8060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9153c6-e82a-4dbc-9d7f-c4fc807fd44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a5547-892d-430f-a5c2-688aec985883",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b65757-7bd1-49f3-8a93-7c7d5336a84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c75ae50-9ada-4f72-b361-24515880a283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694efea-9f9a-4150-8d00-da9742633fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4228a86-d454-4ae6-8388-f50e49e44457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ae2e3-95b2-4c18-8fc2-6a647ae2972d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f9db4a-d6c2-44f1-bbd4-b321fea3d68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d917d6-25a9-4237-93bf-5d4132f29293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd359d3-9e12-4a70-a2e5-a8104498fbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8034e977-c45e-4c63-9356-3f74e2bb63bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239d5e20-7f6e-440d-83b5-1b35239e0dbb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef553473-b759-4902-b721-1f427c99bc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b09ba2e-df7a-4e06-95ab-e6721d81471a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a1c9d4-d955-4a73-a734-dc8186d46592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb0af2d-f64a-4100-bff5-b7187c008c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adbe1a2-5761-4afa-9211-9dd722da7b1a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8fc562-456e-47ce-ac93-6de5135239e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf56f38-2526-46a5-882b-0b783f1b0b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7c73ce-3a12-457c-a629-77757322f04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826f7891-b00a-4f97-99a7-1cfccbd208a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2606c5f-3312-4805-a1ed-9169935cd896",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0fbc94-43a3-4f09-bf4c-497bead2ded2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3d9614-7bba-45eb-abc1-16023352d445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33bb390-2c93-4c3d-8294-07d353a278d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385a6f18-600c-41c3-af36-57debb280926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f7231-b50f-4698-8722-78b9caf6279e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7366b240-7bbe-418e-a58f-121052801087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1790bc-c2c5-4fec-8c29-7a706424d52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92694f1-3be4-4e99-82ac-cbc9c87178fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc34bb3-db46-4153-b4fa-6e3d696b5b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93509ffd-7bae-4f9a-b8fc-09c25e5f4aec",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eabde29-31ec-4864-89e2-657ef24279ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a6c4ac-5e89-4378-a60a-91683f06f79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eae46f-a51a-4aaf-bff8-6d98ded658d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c08184d-3e76-4fd4-b641-224f3321fe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a68e5d7-6a0a-4a93-b78e-360cba97b265",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b60e21-a475-41e3-8a9b-fe8ba2b05300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20ebeb0-8334-47e3-9f0b-e21dc35a5bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af49560-5087-41df-915e-188353155d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a4dd54-f184-4bad-a0a5-63bfd6f11591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1f4fd4-3a5a-41a1-a147-6aaec26c38d5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9120153b-8d70-40a7-9919-b9e668fe56e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c5aa08-0a14-40d8-a373-f4a9a3623f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2918a5ea-9d2f-45ab-bae6-179aa472ec3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2349a8-17b3-4562-bc9d-2743455c4dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abe7678-e5ab-4866-aa4a-c1048421bd08",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd06e16-29b0-4cc8-8c01-6ce5baa534de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93871444-d4ae-46b7-81e5-99b14ff6b50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006bdc18-c481-47f5-b96b-9d3f9de93597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae506e73-082d-4a36-a558-d64138ca0790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74e9e5e-d235-4f60-9a28-bebcc66d8096",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ff544a-e16b-4ad6-b90a-588f35c9ada7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d70c74-ebdd-4661-8d28-4fe57f209c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01bb748-30c0-4d0d-a946-0097a2491380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a6aa94-a491-4960-9245-5ae06ffc3def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc71953-2ed5-4dbb-9e94-add11c494800",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4ca298-2ecd-4d39-b359-d20e5aa6705c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00117ee0-8891-4591-82fa-634edd9dd731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0166789-33f3-41db-9e8b-f770b7235dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab7e328-4be9-4889-bf82-6c2c16af6fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061dbc4-e0f2-48e2-a338-28eda296030b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d05be2a-c975-4672-a405-c4e09df3c097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6092d5-4049-45d6-9f1f-a37dbead0635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc8aaf-40c2-44ad-b157-88b27002d2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854bad0f-deb5-4a3d-9a7b-6072b1e8a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a80da0-6e09-4d78-89ad-c54afe458131",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7912a6-77fd-457a-bd28-c0410e3ba0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd590b0-f5f5-4112-8d02-b7a43de99273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd99ec8b-7fba-4c1b-affa-68f5153bbe22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1ab7cb-385e-48b6-b51b-d8a9d47f49d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df3f82f-4755-45d4-a131-173638d451bb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0046f757-d3ab-4726-8c97-993562e2a5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3461cc44-2b4e-4b8f-8101-ddc3926f9c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d0c54f-6951-4b49-8303-c360f37fd73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f18ba1-8eb2-4b8e-87e3-f973de4bf596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b394a8-020f-4afc-b8ac-5957fe91ad4a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12ff7cd-3724-4ff7-ac91-b4c719e37c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6e10da-a9fa-4ec7-809c-e7286f0a5418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f004abdd-d565-4cbe-acfb-fdbe4c8415d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d66941-f4bc-4037-ae51-52e442a4627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3d5e33-f029-47e9-bfd7-2f2e10d28d01",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613a2212-01ed-4553-9cab-9265e1df5f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4c76a8-4a4c-43d0-84cb-5e11960fc3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600aeabb-5d10-48a5-936e-ee4779c4b10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc153be4-7984-4e3b-949b-a8b1c40da536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd0470c-8fc4-4269-a764-6cc4bdec7034",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca4e32a-f8f4-43f4-a48a-59796e5a7f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9a7f8c-3ee5-4199-b54e-95d9da2c97de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9eab5b-f268-4d95-b45d-72fa3a0c4744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3f530d-165f-43ce-b7a5-cf2851c7b7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ff7e37-3820-45f5-91bb-08c6b9639876",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a093223-a0c5-43a6-a0b0-64d7f03a5b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42963059-e974-42f1-af7c-f7619116941b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9839e0-ccc8-4b48-ae76-b0e17f8f617e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903f54f3-5a32-4c59-968c-89035157e07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8503a041-9d4a-461d-8480-35f19c5f4806",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f2119-f4cc-4c8b-a71b-51d455dba224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c7de7c-9456-4260-a3ca-3c4169a7efd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3435319-49c3-48cd-ac42-b57d5a263925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc39fa75-d7ce-437f-bbee-8ebbf1a92a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779cb76a-de71-47a3-882e-f5b04be8db6e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7e5fd9-1c4f-4aec-81f4-1c2a4f60334e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024fd4fd-451f-46ae-a588-2d236e988e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442d7e91-4273-425f-a75e-736c7ca438e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b464e794-9127-4995-a5ed-c37eece1c7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3ff055-5860-4063-a215-194b7b78db2a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aac02f-b99b-44c6-8bc8-93fbde5e05d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2369242-7a03-473f-b766-f8c82fb430bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb9dafe-5c66-4007-86e5-162aa2d247cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0937ab-48b0-4e57-bb8b-73a2c880db3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bbdbe9-7f7d-4703-b0cc-a4cef5650706",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8278fe-6e15-4d4a-80c2-f54bcca02bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfe7983-eb78-4f58-8178-2909340e5670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd60c13-339f-4aba-932f-c272e917e523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12de24b-6e00-430e-9b63-5981077fc953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db4d23d-d3f2-4059-ab0a-ad7b280d35aa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d00709-5aeb-4a3a-9d24-fb4912957703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da15d25-2d4b-4c3f-9829-0301c01ef402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6accedc4-d6e2-4a6a-bebc-997d9b45723e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eebd75-fbad-44f6-94f9-c665fc9e36ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd5bf47-f8c3-4b96-a275-684cd4ae7e1e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f8ed70-bf9c-41df-8d83-7b3256181be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e13e993-d6ae-4d97-b227-e44533bd8e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f3b6e8-addd-491c-a31a-c88fdf556077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f322e6-09e7-439b-b194-253745eb4a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5bee2-c415-47f4-92ab-a5e56148d66a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cdea86-f422-4afe-95e0-04057158a089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a130a3da-4f9b-43c3-b180-ceda30e82d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff255926-3ec8-4248-b072-f4fcf9051361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0677de-24db-402e-b253-ef03fc11b4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d9aee4-76d7-4294-9454-bab4bec870e8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf5e5de-8ac8-4632-b293-0143e67ddaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c3b786-2535-430f-978a-13bee9f6f9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342a29cc-19dd-4731-8bed-0df401934280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba332d6-2466-4689-a3eb-f5ab5c899dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10158ae1-c8c8-40d5-ac0e-7e7f537069ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c33070-6722-4c94-ab70-6a1d9080a21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c1d3b1-38e4-40da-85c2-cafd9d3c3fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08563c9d-d35b-4259-afdb-5e18bf33f4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57fac8c-ef95-42e3-91db-0255894932e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c669b8-4cd5-4240-9545-c235df287a75",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d239256b-c302-4016-a355-85b7f2dc7eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3676a1-9548-4d3e-9333-4d50f72cebb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661e51f9-6807-49cf-829c-4e0d6a8a0525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2822a440-6dac-4dd3-abb9-454615b4de6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d8ff80-88f1-46df-8cb4-984d254595c3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaed941-0375-4a3c-9616-c7bacb01f470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5b33de-970c-43a7-a5c8-1909fee1b818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff7da4c-9b81-41ee-8941-f780d9929419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9491431a-8601-4f2f-9284-44c14e3a8af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9d33b3-4cf5-4175-82e2-d51e58359230",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b385c42-7e51-4a8f-83b4-00f2622b616a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15602a42-cedb-4e60-a88a-cc5b22bd9b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871173eb-1dcd-4c07-bc2a-32f3211236d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18849bd-9aa2-4d40-9ef4-6a3e9be981ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe56fcc3-116e-4e9e-bbfc-8b588665fa69",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48b37d5-2034-4072-a6e7-adad9f1747f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59053ba-c622-4c8c-97b0-e395e3eb0e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49514288-7689-4368-aac8-488c95231ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1e97cb-da96-4eb9-96c7-9580c4876603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aebef1-e7b2-4f7f-a149-71d23eb3ff71",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a3a5cb-6980-492b-94a5-3c86c43df49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d02ad1d-7976-41bc-bebd-d9146f1da7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37718ab9-0b53-45cf-8f54-fd022735c1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d59647-3529-41b5-aa43-51e121e26d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbcba3a-fe0b-436d-bef5-24510dc953a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c1abce-a43f-40b9-b80d-9ac734fa4c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066606c5-e802-4b4a-a68f-c816c62ec21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2b13fa-c53e-4e4d-b6ce-1f184ab45277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095c1358-634f-4432-ac41-a243527824d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31f04ec-60d7-42ef-a1d3-9eb2e8bc86b6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d28818d-57c0-4990-ac47-6a38690b16fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e900ca-78d3-4452-950e-882992a407d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7f9a97-fceb-483f-a3c7-fb1831cb1947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34eaf628-22ea-4c28-9097-0e7fbbbb19c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d424fce-7a0b-4005-a8ab-bc2e054eff3c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bdc3f8-374f-44fd-a3e1-10efb8989f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5f4809-71b4-4c33-8d66-51dc5ea01104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7f1f41-753c-4f3b-93a8-7a5421650531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0653b0-29d3-421a-b912-0c201eefaa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2badb844-629c-4890-9e49-4d8d5113a048",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de11d0a8-5fac-48cf-abcb-4dd6eca44181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527786d8-a5b9-4d8f-b2d0-5b89d14d8254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b77daf3-5875-411e-a7c3-375c9e10c5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24fa08f-fe5f-4cad-bbb5-849bbbe96eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5a3e2e-991c-4039-89b3-263e0c9afbdb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73550661-6147-4019-8e72-2662f0c4d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11790e4c-bd38-4e76-93c8-4b48d6b686fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e6148-bb97-40cf-868e-7543c6c72f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa6c3b0-0d43-4fe7-beda-7ad45e42458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b370124c-bfcb-423b-a0bd-18c7e80d13e5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332558e8-3cc8-458e-b4c7-fef80bcf5bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad2125b-5814-4245-ab88-408d652c82f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3c09eb-b800-4e69-82c3-148dfbfe42ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad526e70-d5f9-4fc5-b40d-d52cc47570d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7cb845-103d-4ef0-9064-c442b63271ff",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1693bf-b3eb-4fd4-9a9c-675ecf919e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ab005f-fb7b-4321-bf62-33782d74cbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ad900d-3964-497f-b47a-b54d859bf9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f003312-ac85-479f-9c0e-9dedefd16a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bf42c7-fcbd-42c9-99b5-fc078fc43a31",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f021842d-71cf-4baa-a1e2-5d07b2a81141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b26ed2-809e-43cf-9eff-891582abf06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88efb967-2a1c-4e27-a181-8f5ad538d3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5d6eb1-f053-42c7-b68c-0ec0995e9703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3161b6-73ad-45cf-8927-c3925bc1a7d6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce990727-4c08-4e9d-995d-a0510b218656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8f3c0a-3fb4-4ca7-b836-92d7dca50e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dd8686-defe-4197-aea4-13da7fb3ce70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f824f45-75ab-47fa-8337-00e6d121b0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b8c636-d05c-43d0-8e02-b7b2076df3cc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92ec7bc-f7c9-467b-898c-b2beeb2c0b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da55f750-7456-4ba6-81fa-217cb1f9c7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aedf8b-9304-47b7-b688-53b77c31e249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32f5020-9377-4075-b188-afa5c1b601bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecef0d1-ee85-47c5-b34d-796109aba731",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94fd55f-81d1-4fc5-89fd-0b2134b0d4af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc609f8a-7e3f-4dbe-98dd-a9717c1e928f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64910c07-e723-4d55-9109-7915eb7a59b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8ac643-1544-4fe9-853b-1acf280b8c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67c7955-d025-4f9d-a5de-1803dd961736",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2140bab-902d-4b14-abdc-f028d4610daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86518f4b-d885-4929-a6cc-1b6ce646ce3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7338ce36-fa04-4db2-ab65-340b2a23c322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ad2e6b-a207-4160-a0e6-e3e33b863dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccfd5c9-0280-44ed-a6cc-b9127b8a205c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e58f4d4-4707-4cff-8554-db0657db28ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61264f49-358a-40ad-ba7a-b0a151e9d13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767952f0-888e-4b54-9db5-4049f83c7220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c49756-a4fa-4911-b7a3-5a03b0913cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442a36c5-7629-449b-a6c8-9448d1b2932f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dfc0a3-2b44-4d00-ab7d-feb402b2fda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8c61b9-ad16-4757-8ce8-5e3476b94fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6e7e23-0883-4d35-88cc-ffe04b90018c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90ab27f-f429-4cf0-8a23-c7e8093e0961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d70092f-92be-4f54-90fc-10c062ecc1a3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfd3f59-d092-40ec-b9c2-14233bdebff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70c20a3-1d40-4014-86ed-02cf01f0a430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff31c755-a9c0-402b-a536-8b82d7ec17f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c698f6-52da-4015-b22f-0c4cc7ec1626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf08978-9817-43a0-948d-40b3af003c35",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7fe754-eed8-4a56-a815-3ef9123c69bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c6498b-abd4-47ab-9a12-eed8e42db016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43c6088-7de0-483c-a6d0-881d79dd00c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92eee32b-fe2c-4bb5-a6dd-617296fe94d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90547f03-18ce-4bbb-85b1-72fbbccb9d95",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a4d40d-8763-42f4-ac20-ed16cc6ab79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affc2d85-435e-45c5-b111-f054b1014427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a9b23c-376e-4951-89a5-7768d197e297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb465c64-b3ab-487f-890d-585f7fd5ea0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a92f12-7e7a-4969-b317-9a9e304cd0ce",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff826e8-0a3c-4733-8017-f990a8a17ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5309a434-4311-4cc0-80ba-01be288be132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341171ab-210f-48c2-8dc6-05a2081d4bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1ea54d-59d3-426d-8970-d751eb245d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93ce956-b628-40eb-9421-53213f86db06",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dafb83-0825-48d9-a436-757ee8d36190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e11b8ab-41ec-4e61-bae1-e41397ad8ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0fd411-0365-47c7-9d62-aba7db32a962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9382baf7-11c2-4e5b-a398-0cd840dde7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d097b5c-cc01-4621-9471-3d2cb13d4aa1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0167dc13-5ad2-4e33-a2c0-d64cc5c97950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3baba7b7-5254-40b3-ab22-3af47272068b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a7d0a7-7da5-4020-adcf-6e5acb003bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53b4f39-e1ab-4e42-93a2-a9d42368f838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de55078-798b-4a58-b604-d627b69387ee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d928d-4c28-4e49-9ab5-f1aba6bdf0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b6f375-2ba6-41a2-81e3-dff70192bae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ac4a06-91dc-497f-af43-b0d27808d42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea4f59d-7cf0-4a49-9ec0-9042f1e1839f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e304951-fc2c-4d43-841b-c43950af7453",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbdb52e-7e69-48ba-a1e8-008e5fd2946b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892bda3c-d8aa-4549-9688-0a6f82888508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b17475-71e3-4226-9989-412754d97e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3ee385-dfa1-45ee-8d6d-a281a3a1ef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a9e84-c338-4cf4-a8e8-1d4b311d19ff",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942799d0-dac2-450c-b87a-10af188608ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276c502d-481a-49f0-910a-bce1f9b37a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d90d3fc-042f-4d82-822e-af02dad1e8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091f5836-a257-4fd8-80ec-8f3f39ca8caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d64b46-1ee0-4c64-b00d-4e6ed6299426",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9f249c-f1f3-4b05-ae3a-c2bf47c46196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8699a00-0139-474b-9cc0-23caed522548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba9b10a-be16-4dee-bdb2-4b0e705c79cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04a4f49-1341-44ce-855f-c322ea8f40fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b43854-9fe3-4dff-a1b3-13277f976bbb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00787ecb-1b00-4c0a-a65f-2f642bdf21b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83510929-59ea-4fef-bfd7-45a595c431ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52798eb-bc1e-4b83-94da-45d9795262ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76218440-d556-42ed-ac00-4fde546ef194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b577a805-e3a6-4e89-b847-360bc01ab1ed",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c32a098-916a-4e52-a28c-ead4163dbd0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9102462-9fc6-481e-9557-24cc20cc0c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5497fd1-f623-4cc6-a890-6583f280e31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dd9d5a-fc60-4d49-84cc-5566ca6c4d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3979881c-6195-4c32-8f9a-90a2b2031867",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca07f31c-39db-4d10-b501-45b5884adbbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798b7f94-7fca-4546-a424-843488f9a0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b0b1e5-8b75-4e86-9cc2-6bd1c5d08c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3863353-985d-43d2-8c41-1562b2d1f236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3bce8b-a3b3-493a-b938-924eb01671f4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cf75ff-f5bc-4308-b66c-f4b6ead6dc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f10bf0-5ce3-4f58-a6e3-2cb00b89ba80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfa5570-2f91-47cf-8ba1-e8efd847feb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa93c198-0294-4f5f-8b62-a653a94820e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82455e16-31f8-4701-89f5-82f6da29bf81",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5022b94-b2fc-426f-8b7f-39258cd6a23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2758a86-ce20-4f18-921e-a9df948a8cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a208d8c-3d3d-4596-af7a-b67a5dddc7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dd4cd6-b204-4552-86f6-b9ed147d1598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d173c4e0-a7b1-4b18-9373-41faa8e2ab97",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f81b0b-2fc5-4e61-9090-bb3b83252c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe9c7b2-27be-4f3d-9c4d-bc36a40028ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d76188-3334-41f9-981b-4d3b4169e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e93ccf-fcb7-4660-8ea6-5ee71455e380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd97071-fce5-45d0-8a86-c089d2073f0f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6905f151-1490-488a-8f95-9b355cdcd148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65819e7e-9fa4-4ada-8f76-3d05938b0d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f25d39-e9cc-4701-b8ff-a57b1bccb3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e8780c-1bdd-4eaa-9133-18a8bba1415b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "294927df-7242-4f32-b831-c7a47659046a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3bacb45-c67b-44a9-9602-b7072e024c28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26e6ab46-87a4-4c6c-b654-f0c8cbafe9cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbf42a33-b9c8-4aad-8c23-07253ef32854"
                    }
                  }
                ]
              },
              {
                "id": "2e1e94be-0129-4a80-997a-a9cd314e055d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1d4804f-81e3-4c0a-a2d8-ab8858aae500",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f247b9-32cf-4a1b-b504-d488245ccc49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "83025b20-a61f-4862-bf8b-314677950314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90ff648-45db-415b-a96c-198d801959c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51540097-37db-4e9b-9d49-425bd6a6ecbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b5a43df-6b0a-4f0a-a2b9-a539a30f4b68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c54b96ee-7174-4ee6-a373-18654d5c26fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fbc617f-5111-4fa2-a94d-5790c3eb3916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df9292dc-938a-4871-9456-16c2d23c241d"
                    }
                  }
                ]
              },
              {
                "id": "c15da186-241d-4f43-a152-4a8d6c524c9b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23461971-c69a-4ff0-b647-94997a2b329e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acec19a-3640-4d85-9db4-7c6f52661fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "227ab096-7a7b-463a-b345-52d8c8714179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3c6c3f-0171-4472-9ee9-4ad619e64b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09771672-7d60-4614-b976-953e2231d09c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "088f7453-ef85-4e6e-a1fa-3ad451889aa5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e67c4af3-203b-4cef-9811-2982700b648f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5783791-aa77-4f8e-a89d-ab684566be01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "368906d5-96b8-42f7-84db-0b277522350a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ced442c-b8c2-4c14-b1b9-b9dcaeca5d59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "202ae157-2699-4817-943a-d29528ed435f"
                    }
                  }
                ]
              },
              {
                "id": "44e1bf59-577f-4463-abf1-13aacbc53f5d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0643b273-12eb-4b44-abeb-57f9b04e9de9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3b8e8d15-5615-4177-b1e0-098dfffc39e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38b98447-6434-4872-8780-ee3fc0ecc377",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "086c53ef-8ab4-4562-b55e-6f797f07f9ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d2ba46a-a20c-4118-82b7-04ad00a8f984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2a05a05c-5eb6-466a-b04d-f46476e0e298"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6b33584-662c-4d1c-a8fa-9236c42e3d76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cee1feb6-e62a-40ee-bf58-7243e9365c35"
            }
          }
        ]
      },
      {
        "id": "f36f05ca-7475-4770-86e9-ebef5624bba2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "895c4ce4-6a46-431e-a507-578c54740cca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db0f22e0-af22-4864-b04e-a7b214a9d043",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f26c091-792d-41a3-9e43-71c56070c891",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae67a2a2-816a-4f4e-9fc8-ca79b540f1b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "87e552cd-c8cf-42a2-9b69-c6519de89077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddda2df-8380-4423-8271-98869b21aa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5068d6ac-6a79-4aac-a74b-c6789aec96a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd8ab52e-2a0c-4da9-9e42-eb1aacf2a11e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fd86c68-1d30-4cc4-8e06-153fbdbb048d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "250ee90c-d424-4f7a-ad6f-ea4074f9a1c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41a6a60f-be1a-4060-b9f8-329a00a67bcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52e41fb3-7d0f-491e-b6ec-c061f2aeaa53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a9bec54-9189-429c-8f36-bb8a780ae195"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46874f24-e9af-473b-8920-7a9de937609c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e760800-5c39-4ac9-b4a3-15591aec00ab"
            }
          }
        ]
      },
      {
        "id": "0c143faa-8d35-4747-8e98-207fe4825c6e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "22c75bde-cca8-4976-a243-31fcde795381",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d637206-0b80-439c-9065-77e07a56683e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d032639-930a-4dbc-998d-1cdabf80a030",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c119ee10-e44c-45bc-875f-c1f5e285dbff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26e9d876-4bc1-4830-ba60-743864e99197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2782ea75-e8ec-4e38-a0ed-55596816d0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f1de3a-743d-4fc0-be3e-49ffceca1303"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59e2a4e4-ac64-457a-ad39-90bc50f1334b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8c9122e-54ea-4b76-8c49-cf9c1831391f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffc677f2-1e5f-40ba-a936-d5b4a5b027ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d78569a6-b23d-4141-a2e2-c2138cec7de9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c3a7e5-efbf-4485-9ad4-f9e8da4c5cea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cc8dbac-9a35-4038-a4a4-a500b243048c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3294f70-99b3-4c25-b0c7-e68d12d7aecb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d09c365f-4216-4ce6-8c5e-18c9eb5dc3c4"
            }
          }
        ]
      },
      {
        "id": "b3e601d3-406a-417a-bdd8-243b3309962f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bd6f9492-dde9-4fc6-98ff-367e57175ce3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3737498d-ef66-4095-9ac2-2a7b96345011",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3a794f7-d7e7-4f01-a3c5-b044852779e1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6c0b7f-7e6a-45b2-bba8-045d7ac32145",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bedf6dcf-e30c-44ac-b69f-3d13170ca8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5cdd3f-2231-4476-9fd6-bb7a0fe34b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9786a245-5c42-4a34-a3ed-fe0fa26ae66e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a22fe68-2f9d-465d-848a-593dc6be6d90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdfb1327-3ff0-4fa4-ab6a-777a484ec729"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81a1177e-f7c1-4cc7-90f1-e9402647d0d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20fa2c91-3535-4f54-b0db-ad4b61ae0eff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bcda4b7-1f8f-48a8-b846-71aa2cd10d5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9e19d2b-e43f-40f9-adb5-824de382b01c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14117b65-ce7c-41a4-941b-73ba2652219b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a0965b4-7692-4b79-8d36-dd236e241b10"
            }
          }
        ]
      },
      {
        "id": "3a139cb6-6afb-4375-bcdf-d012aeec721b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5af25239-0a33-46fb-89ff-5ba70fd83bec",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a359a5-db7a-4385-9955-a24781c848fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "12651a91-e9b0-475b-a25b-e7d266e4aad7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e37522a-9dd0-451f-9df0-c51f7ba7a09f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d86deaaf-161b-415c-95da-de77071d5a82",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 161.3412698412698,
      "responseMin": 7,
      "responseMax": 8127,
      "responseSd": 645.2549104097634,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726966189107,
      "completed": 1726966237958
    },
    "executions": [
      {
        "id": "ef1868a0-e6b8-4ffe-a28c-052c380bb313",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32ea005d-0cf9-4657-ba04-3f1ebbec82df",
          "httpRequestId": "51ecb652-0a1c-4775-81f9-9853d31ef643"
        },
        "item": {
          "id": "ef1868a0-e6b8-4ffe-a28c-052c380bb313",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fa050237-44fc-461e-9b76-cffdf8e137ed",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "caab4c22-9269-4771-b2e2-f7b892d198b8",
        "cursor": {
          "ref": "d3b0e20b-1f44-4777-8ff7-061014bd36d4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3dd71101-b420-49f8-9104-4a4de1811b70"
        },
        "item": {
          "id": "caab4c22-9269-4771-b2e2-f7b892d198b8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0c16ec92-3b69-4717-b474-57f6bb70c36f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "cb2883fb-8e08-4ce9-8740-bb73b6ad8f8e",
        "cursor": {
          "ref": "2cc50b2d-9d5f-424c-9012-0c80625cdb28",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8b0e3687-e26d-4d97-b7c9-420d1f05d742"
        },
        "item": {
          "id": "cb2883fb-8e08-4ce9-8740-bb73b6ad8f8e",
          "name": "did_json"
        },
        "response": {
          "id": "0938c286-7991-47a6-9207-c93ee07c8a29",
          "status": "OK",
          "code": 200,
          "responseTime": 423,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc2c893-4269-4dc4-9a46-6de6a17400c7",
        "cursor": {
          "ref": "15731511-9c84-4355-8e0f-e0f160a6191c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64695795-2a25-4a43-8735-d1b85c186ac6"
        },
        "item": {
          "id": "ffc2c893-4269-4dc4-9a46-6de6a17400c7",
          "name": "did:invalid"
        },
        "response": {
          "id": "b45e8012-dfee-4dcc-bbcc-d3c38e7b99aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 304,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc2c893-4269-4dc4-9a46-6de6a17400c7",
        "cursor": {
          "ref": "15731511-9c84-4355-8e0f-e0f160a6191c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64695795-2a25-4a43-8735-d1b85c186ac6"
        },
        "item": {
          "id": "ffc2c893-4269-4dc4-9a46-6de6a17400c7",
          "name": "did:invalid"
        },
        "response": {
          "id": "b45e8012-dfee-4dcc-bbcc-d3c38e7b99aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 304,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e27325-836b-40ed-ab53-652a33ea46cc",
        "cursor": {
          "ref": "6954764e-bbb1-4e01-8157-20063eb870e1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9db27c66-b295-4613-986f-8104c0637e8c"
        },
        "item": {
          "id": "c4e27325-836b-40ed-ab53-652a33ea46cc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "96f8eb73-7af1-41ab-abff-8a4f7d53a3a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e98547-02c8-4c2c-b243-8d4674aab7c7",
        "cursor": {
          "ref": "9ffce4c0-29f5-47af-846a-adb326c4eee5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "65f9206f-303a-4bed-be23-89f3344d92b5"
        },
        "item": {
          "id": "33e98547-02c8-4c2c-b243-8d4674aab7c7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b445feab-6d36-4aba-a3a4-a43bfa2d953a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20611a11-6f7b-4996-8e54-e94e40d344a0",
        "cursor": {
          "ref": "23f6f9ba-16d6-4186-b2c5-117bcf53ecd7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9d5cc086-0c13-482b-ab91-fd4d92f39cdc"
        },
        "item": {
          "id": "20611a11-6f7b-4996-8e54-e94e40d344a0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9eed792a-bd45-4210-b376-30de00b75d01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd926ad-a571-4038-8621-b00401df5b71",
        "cursor": {
          "ref": "a2153484-793e-464b-9a68-54811bc048db",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "85266870-52fe-4a7a-b16c-c28a92c1c490"
        },
        "item": {
          "id": "7dd926ad-a571-4038-8621-b00401df5b71",
          "name": "identifiers"
        },
        "response": {
          "id": "4545390f-6c8c-4f06-a984-0688981f8907",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8e8ef2-8727-4b4b-9517-304ea8b12d25",
        "cursor": {
          "ref": "417b773f-e3ee-49c9-b74e-cfb833947c8d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "acb9be94-dbce-4cfd-ac99-9622adbe2721"
        },
        "item": {
          "id": "fd8e8ef2-8727-4b4b-9517-304ea8b12d25",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3adbeec1-8c1e-455e-ac85-e7e5e39c1185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88181978-1073-4cdf-b66a-d166120a6219",
        "cursor": {
          "ref": "652adede-f6ba-4f0c-a310-008396ea6c52",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e0166e07-79f4-4648-81e4-9e7a63d1476f"
        },
        "item": {
          "id": "88181978-1073-4cdf-b66a-d166120a6219",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a3d2b0fb-8ad1-44f0-a429-9e6dbe0e16d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e198573a-94c2-4d03-9fc0-91bf5177543e",
        "cursor": {
          "ref": "ec560c19-d9b4-4f10-ae91-e173b98c2f5f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2f6578b9-8dcf-4351-980c-e48251ddc842"
        },
        "item": {
          "id": "e198573a-94c2-4d03-9fc0-91bf5177543e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6580f2d7-7c9e-46dd-b773-c9b9ad6b2179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e0ffb9-b5c5-4c50-b198-1606a617f0e3",
        "cursor": {
          "ref": "4486287a-014a-4976-9709-466df6df5c46",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3a876682-5b07-44bd-aba5-8c1819e30749"
        },
        "item": {
          "id": "a1e0ffb9-b5c5-4c50-b198-1606a617f0e3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "51b53865-5c64-44bc-8cde-20efa08b2401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b88cea-47b0-4049-bfa5-4da0b7d4a70f",
        "cursor": {
          "ref": "68cf0f5d-ee13-48a8-b855-e13cccc82829",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "547f844d-f4a3-49a5-b43d-cbe5c02b6693"
        },
        "item": {
          "id": "34b88cea-47b0-4049-bfa5-4da0b7d4a70f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9a11eb2e-5d8f-412b-aa86-189100531b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8215b5d6-903e-49ef-83b9-bf5dedc18a9a",
        "cursor": {
          "ref": "3d60a702-4f04-4bbb-a324-359b31a4b1ce",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "14c6db9e-a03b-47d5-aa83-78c4e6ece6ab"
        },
        "item": {
          "id": "8215b5d6-903e-49ef-83b9-bf5dedc18a9a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fdc8c30a-5639-4f6b-a04b-d8029924be9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2412c1e-8bfb-44f2-9a6f-5f6569c93884",
        "cursor": {
          "ref": "1853ff7a-3a8f-4177-b655-510c853ec874",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0fe25bd8-f6d2-4542-9720-0f7b9dd8b941"
        },
        "item": {
          "id": "a2412c1e-8bfb-44f2-9a6f-5f6569c93884",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8133ce5c-d228-4491-ad53-aa71b68e5f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95035524-7f40-49f3-a854-23cc1fd40138",
        "cursor": {
          "ref": "0e9abce4-f80c-4173-8737-e615d2492be8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cb063594-ef7b-4131-9e1e-7f0a91999c7b"
        },
        "item": {
          "id": "95035524-7f40-49f3-a854-23cc1fd40138",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f1d3ef62-9ab6-4161-bf37-8836e555c703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e30391-df3f-4e69-b207-30f534ed7f63",
        "cursor": {
          "ref": "f167a4a2-a677-417a-bf85-fa0fa320741b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35fb680a-1f26-49bd-9405-8c3173ece253"
        },
        "item": {
          "id": "b2e30391-df3f-4e69-b207-30f534ed7f63",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "76985f10-c225-47a8-afe5-5c6b1912a208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2195ca0-4481-4907-a4d2-fe2c14e9063d",
        "cursor": {
          "ref": "e4d9b811-9d92-4159-bdcc-2b45b3bc136c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9028a554-5b52-4c88-9b39-a6bcc115cc18"
        },
        "item": {
          "id": "d2195ca0-4481-4907-a4d2-fe2c14e9063d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8afaf85b-3012-42a3-a9c1-b67d92671e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72551f8-ee84-4b0c-938a-241e30ba8614",
        "cursor": {
          "ref": "7dc47576-8f01-4564-87c1-ad0349fb160f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "46b66ce0-ba22-49a8-926d-55d9c76352bb"
        },
        "item": {
          "id": "f72551f8-ee84-4b0c-938a-241e30ba8614",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ef5d8c17-63f8-4f91-be60-3411d31fcf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade3ccd1-11c6-437c-969f-90c1c9d7026f",
        "cursor": {
          "ref": "d3a1eeba-b488-429e-babe-106520ce3981",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a36c0e1-e2ec-46ff-b28b-32b104b5550c"
        },
        "item": {
          "id": "ade3ccd1-11c6-437c-969f-90c1c9d7026f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b2b5e776-d017-42aa-b5a9-7cf7ab314b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e56fb62-faf2-4efe-b661-8018a7b443b0",
        "cursor": {
          "ref": "a349ee2f-9811-4f08-9820-5cb970a0ee85",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1db79277-58b3-48a1-af08-413ed571863d"
        },
        "item": {
          "id": "6e56fb62-faf2-4efe-b661-8018a7b443b0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "743068b4-bd22-493f-891c-ee805103fd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb9b908-6237-4af1-baf1-2165f5c5f34e",
        "cursor": {
          "ref": "5cd6dca4-b144-4ebe-aabb-57cb617d06d8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "758726b4-63b9-4018-837f-f746e12a799a"
        },
        "item": {
          "id": "4fb9b908-6237-4af1-baf1-2165f5c5f34e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "61deb3e2-936e-40b9-97db-867b282add4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567dd05b-da52-4ecf-b88e-f1888f6a2891",
        "cursor": {
          "ref": "58b6d084-f3f7-4744-83da-09eb89b37f69",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "62ce978e-7d05-4d83-97e5-33a8c03a3258"
        },
        "item": {
          "id": "567dd05b-da52-4ecf-b88e-f1888f6a2891",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "31aada2a-042f-4a84-b9dd-edc82f3cdf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714db711-7d81-4f8b-b55a-e1733f7100dc",
        "cursor": {
          "ref": "62849ac3-1aa8-4791-acc2-c7b37fb46e08",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4c694f4f-d995-403f-bac0-174eb97210ec"
        },
        "item": {
          "id": "714db711-7d81-4f8b-b55a-e1733f7100dc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bdc3eeac-7383-47e0-82f3-97dce509acf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae1d52b-bdc6-47b8-aee8-c88f4f4df303",
        "cursor": {
          "ref": "f87d0adb-9b7f-4e49-8871-824aad39e9c9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c0a59e0b-c34b-4245-8818-c320bbe619bf"
        },
        "item": {
          "id": "8ae1d52b-bdc6-47b8-aee8-c88f4f4df303",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ea8680e9-c834-43b4-bb64-71f198156c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b26ecb4-0516-41c5-9a31-fa70c4ee15d2",
        "cursor": {
          "ref": "52bce659-e741-41b4-a446-b7e92aacfdaf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e91ae862-ef31-4bed-b577-573581423b72"
        },
        "item": {
          "id": "4b26ecb4-0516-41c5-9a31-fa70c4ee15d2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ba5ac65e-d1ba-4f18-b83f-2bedf0dcccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d3d2d9-30a9-4099-be28-96af02527a35",
        "cursor": {
          "ref": "ae221143-05c8-4869-a27d-b2086dfc8cfc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5339d7a1-994a-405b-a6f5-9e6d8f5fe028"
        },
        "item": {
          "id": "c3d3d2d9-30a9-4099-be28-96af02527a35",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "53191e5b-30cc-4127-a700-8cbaa51161f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6688dd70-b4c5-4399-8b4c-a0b132a8bf46",
        "cursor": {
          "ref": "e40d8919-8c07-40d0-977b-c91b82920940",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1620d81a-a609-44fa-8455-8645bc2b7220"
        },
        "item": {
          "id": "6688dd70-b4c5-4399-8b4c-a0b132a8bf46",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f367fb6c-2f63-4d35-90d0-405052009ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d369c5-ca68-4524-8ec1-237a66c3a608",
        "cursor": {
          "ref": "889467df-3d6e-4f87-b459-0c37682858c1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "026c6732-5634-41ff-831e-2a7ae86aede4"
        },
        "item": {
          "id": "54d369c5-ca68-4524-8ec1-237a66c3a608",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6ef221f5-d1b6-4267-9eac-c8fd2b0647ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa4dfbd-207a-4a0e-951a-1fca84acb25c",
        "cursor": {
          "ref": "7eba5a92-e8c1-4497-91d5-a5959cc98981",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2ef65661-1d56-49e6-b8ee-f06a8281f7ec"
        },
        "item": {
          "id": "0fa4dfbd-207a-4a0e-951a-1fca84acb25c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6d9bb31c-3151-43a2-a07d-515b12ea38ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d71d40-aad8-4c9f-961b-a1e36357cd25",
        "cursor": {
          "ref": "2d59f9b6-a1e6-4400-a9a2-dca429e9ff9d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d07ce62-ee95-43b0-b7e6-b35d3e9c8803"
        },
        "item": {
          "id": "56d71d40-aad8-4c9f-961b-a1e36357cd25",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "af011dc9-e7db-4193-b7e4-0923bd0f9bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e2cc1c-4a54-4206-a66a-34e65a32041b",
        "cursor": {
          "ref": "f6db5e5a-cdbe-4d73-9443-6a5077a5d0ff",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "73c04cbc-01e2-452e-9f54-876864ab12da"
        },
        "item": {
          "id": "66e2cc1c-4a54-4206-a66a-34e65a32041b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8686c959-ff32-477b-81b0-8e43d53c2ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6043e3cc-fffc-45cd-a6c8-1d548c03fefd",
        "cursor": {
          "ref": "7efc2572-3b04-4e51-9029-406f58fa6ca9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4f4b70f3-3e2d-4bd0-9129-525df43b89f9"
        },
        "item": {
          "id": "6043e3cc-fffc-45cd-a6c8-1d548c03fefd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e60f3fc1-a1db-4e32-bf5e-8a7e38c3e82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b16c4a-4c71-430a-9165-c527f5b1132f",
        "cursor": {
          "ref": "1a3f5c4e-a489-4d0f-ba77-d0b07622aa16",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b53f100-0316-497d-976a-3e4366cafa66"
        },
        "item": {
          "id": "f5b16c4a-4c71-430a-9165-c527f5b1132f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "591892b8-016e-4f0d-84f4-2d43957d2fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b30913-ad5f-4a70-b4b6-07db4856a42d",
        "cursor": {
          "ref": "1ca1cc2d-f21d-4a99-8de3-e40b9d975a67",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "934e1ef3-5121-4730-90d4-9b521fafa873"
        },
        "item": {
          "id": "e2b30913-ad5f-4a70-b4b6-07db4856a42d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "95d79def-6fc9-4e3a-ad9e-2a06b4a3349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a26b046-8666-4954-9e52-04c85bdc2ba8",
        "cursor": {
          "ref": "84d81248-d0b2-4c6c-a9e0-e4dd8cb403c3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f83959b5-64cb-4339-bc86-fe6c037ab085"
        },
        "item": {
          "id": "4a26b046-8666-4954-9e52-04c85bdc2ba8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cbfc9e2c-5833-417d-867a-c1a9ee593661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af2615e-ead7-430d-9db4-d3425367bc33",
        "cursor": {
          "ref": "606ee8f9-2f90-4ad5-bd6b-05a9e3d82657",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a5a23d14-ddd3-4a59-812e-1f25b98cda1f"
        },
        "item": {
          "id": "0af2615e-ead7-430d-9db4-d3425367bc33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0240cff9-dc66-4820-acf0-41b86bb0ce6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb36ab75-23e1-495a-bfba-d4194735ff85",
        "cursor": {
          "ref": "12bcb456-9887-4c08-9fbd-a0f65de53911",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9fa05dd7-3b4f-4a57-9e7e-c2a2bbbbc24a"
        },
        "item": {
          "id": "eb36ab75-23e1-495a-bfba-d4194735ff85",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f046a7e8-68d2-403f-b3b8-20310b16dd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f83a84a-74f2-408c-8652-b0a2c6d008b8",
        "cursor": {
          "ref": "420c3f20-bbd8-4ab9-938b-b46d348f779b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ff68f92-1c24-46d1-bc4e-e04c540f7076"
        },
        "item": {
          "id": "5f83a84a-74f2-408c-8652-b0a2c6d008b8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8567af30-09b6-45ae-8e3b-4febca7ff9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6dc5a2-4fb6-4661-973c-d72f4c5c9972",
        "cursor": {
          "ref": "2839595c-212a-4ad8-a973-716b1b5a37b0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "352f015a-dd6f-4b06-852f-75db2e36dc66"
        },
        "item": {
          "id": "fb6dc5a2-4fb6-4661-973c-d72f4c5c9972",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8fb7a587-6153-478b-b3d1-f08df55d2d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa2eb2d-3b28-4280-abd4-441e13bf6097",
        "cursor": {
          "ref": "037c5260-50c8-4ef7-95b2-780342fc08c8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "11399d74-0e95-42cf-99a8-19e9cc9b3fc8"
        },
        "item": {
          "id": "2fa2eb2d-3b28-4280-abd4-441e13bf6097",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4336280e-fcd3-4455-9d1e-76dc9098a92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6ec587-09f8-4eeb-a41b-365718965fc8",
        "cursor": {
          "ref": "a2ad318e-e424-4334-8b65-5339f5b75989",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33a639a1-ff6f-4686-88d7-330f839ab544"
        },
        "item": {
          "id": "4b6ec587-09f8-4eeb-a41b-365718965fc8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2563c759-495b-4968-b6da-92ce01c54dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a36c3c0-8a29-4ac9-9c7d-496ac769c3d0",
        "cursor": {
          "ref": "5c9918a4-d5d6-48c8-a210-97aedc2dff0d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "64c29d95-40f5-4c52-b688-7cd76960af6b"
        },
        "item": {
          "id": "9a36c3c0-8a29-4ac9-9c7d-496ac769c3d0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fbc87a37-e7a0-4dd6-8a40-379c28a3b40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08429c-931a-4af0-ad9c-f04f5d27e73b",
        "cursor": {
          "ref": "d51d0f6f-4a25-465e-84e4-200c5ecd3af6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5cae47bf-48b9-4a5b-a2f7-7f3a2ff6601b"
        },
        "item": {
          "id": "4a08429c-931a-4af0-ad9c-f04f5d27e73b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "daee4add-4fd5-47ce-8c39-63ba7fc6648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f100bfa7-61a7-4fc9-baa7-5939336bfaa9",
        "cursor": {
          "ref": "e3eee06f-a7f3-46c7-a472-71c855c7fa59",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c5b2a8f4-15fa-42b3-8f33-0ab585439f5c"
        },
        "item": {
          "id": "f100bfa7-61a7-4fc9-baa7-5939336bfaa9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9b97a09a-4a75-460c-aa9e-66f7d51a2e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2579f749-e2cb-4c06-827a-64c3f1d49989",
        "cursor": {
          "ref": "96722e95-6507-4198-9a20-d300b8243cb6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ed66ecd7-42e6-447d-abc1-a3ad7727365d"
        },
        "item": {
          "id": "2579f749-e2cb-4c06-827a-64c3f1d49989",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c0a1f2f0-e3f3-4ba5-84f3-de6f2c2d5a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ba86f6-2e39-43c8-acef-6cb6e85010c9",
        "cursor": {
          "ref": "1cb88c0c-012f-4d36-bc0f-b87b0c078328",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "175ad4ca-4372-4111-be69-0f0bf7c15fcc"
        },
        "item": {
          "id": "a7ba86f6-2e39-43c8-acef-6cb6e85010c9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3fb2f368-53d6-4f4b-909a-e7c544a8ddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c472c357-67fe-489b-ab44-379c8ce9e8fb",
        "cursor": {
          "ref": "5d45f74b-342f-4633-8e74-c70c3fbde83c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d2c33cf6-a994-488e-bdbb-b35cb38f97d4"
        },
        "item": {
          "id": "c472c357-67fe-489b-ab44-379c8ce9e8fb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "81393cb3-2ec4-4070-bbf0-6c7c01877717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d143e21-52cc-4395-a50c-d411d3f52235",
        "cursor": {
          "ref": "bcb2c501-7034-413a-ba86-8e9b294759ea",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f4179c64-dd5c-4448-ac78-c23da06e6183"
        },
        "item": {
          "id": "4d143e21-52cc-4395-a50c-d411d3f52235",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0b79eef6-23d6-4356-8709-d4a5e1087a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267fc508-c61b-4643-9a09-1ec1705843f8",
        "cursor": {
          "ref": "bca1f483-877a-4d8a-a3e1-ebcc9a74fc45",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "69b370ab-c1da-4ae9-8e97-55eb8e4e6023"
        },
        "item": {
          "id": "267fc508-c61b-4643-9a09-1ec1705843f8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6edf8f14-c40e-49fa-b8d1-ba6768bca634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf6fe88-c1d1-4193-9988-42ace80ea863",
        "cursor": {
          "ref": "6e46c67f-ef27-42ec-81a7-7bb86f852c83",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f867b37a-aee4-410d-9f2a-dbba129778c5"
        },
        "item": {
          "id": "5bf6fe88-c1d1-4193-9988-42ace80ea863",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "118c9055-6cbc-4a4d-8324-4d0b9d252dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451749ca-a03e-4b01-9de3-b73d3bd3cb18",
        "cursor": {
          "ref": "9f2fdb50-3275-4cfa-8314-9456246c805a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "00ce4260-fb92-4af8-83d2-18fe68f9b185"
        },
        "item": {
          "id": "451749ca-a03e-4b01-9de3-b73d3bd3cb18",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dfe3615e-51bc-4800-93b5-d778ddaf71f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a2736-236a-4570-b31a-5ca3c11f0081",
        "cursor": {
          "ref": "14d46f1a-9227-42ac-b3bd-30a2de828362",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b824a694-2773-4152-b706-4ebb20f4bed5"
        },
        "item": {
          "id": "de0a2736-236a-4570-b31a-5ca3c11f0081",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a5085ac9-e321-4045-804e-ca4745ef3f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e810d0-8d3f-4f92-a52e-d4eda1fdffc5",
        "cursor": {
          "ref": "d4c2d465-e30c-46a5-a8b5-941e513bb251",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "edbbce95-0886-46d9-bce2-f681c1dbfb50"
        },
        "item": {
          "id": "56e810d0-8d3f-4f92-a52e-d4eda1fdffc5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4320d271-4f61-48c2-be63-f0422e490756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373cdd0b-3f13-434a-b32f-779e2e24c23c",
        "cursor": {
          "ref": "ae5b8217-a545-47d8-bd92-dec5edc65cbf",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c23e3341-da35-4cad-9e68-7f15fde627da"
        },
        "item": {
          "id": "373cdd0b-3f13-434a-b32f-779e2e24c23c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f3bd0f31-fefd-491f-b51e-06cbcef16a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a042dd-f38b-40fa-8bc4-219ba187aad9",
        "cursor": {
          "ref": "d1c2df93-7cde-4e1c-8eb0-4231d140b834",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f5f118e2-06d5-4684-bcbe-57f3a9d9f2f9"
        },
        "item": {
          "id": "77a042dd-f38b-40fa-8bc4-219ba187aad9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0842eb9-2b36-458d-9f06-576bd5799975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f8eb16-9625-44e2-b86e-e65cbad57774",
        "cursor": {
          "ref": "4afff1a5-e688-4d7e-b773-424e3d23c576",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7b35a032-f8e7-4338-a3b1-f1c93edab6f7"
        },
        "item": {
          "id": "a5f8eb16-9625-44e2-b86e-e65cbad57774",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e076b7e7-bdaf-4c70-a56a-39dbc5af8dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2edaa2-c8af-44e1-ac34-41c7d4363f76",
        "cursor": {
          "ref": "add6066b-7b95-49d2-96e2-729032bcf8a2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5923f933-83ca-4e92-bb3d-856e93784a40"
        },
        "item": {
          "id": "3d2edaa2-c8af-44e1-ac34-41c7d4363f76",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f5ec223-2099-4258-a8ec-2186c61f3ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4350a694-f8d3-4868-95ce-335166ab7df0",
        "cursor": {
          "ref": "401e12af-751e-40ee-bdf3-25a1ae1a3297",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a61ea427-4863-4edc-abf5-9f92f5848cd4"
        },
        "item": {
          "id": "4350a694-f8d3-4868-95ce-335166ab7df0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a6d70d35-2463-4fd4-9481-d273c33c89c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d8ad3b-92e6-4355-bb5f-58c0584426d1",
        "cursor": {
          "ref": "cdbb7a7d-c1c9-4360-b094-f8ebd91fa683",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ca5a1660-bba1-4eb7-b8dd-87af801ea67c"
        },
        "item": {
          "id": "d1d8ad3b-92e6-4355-bb5f-58c0584426d1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eecc4b5e-431a-42ce-bef0-0019f687e931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4450717d-6665-40ad-96fa-8100631efce3",
        "cursor": {
          "ref": "0679da09-51a0-4748-a6f5-686104664b36",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef9d8360-ac6b-402c-a06c-ace0cb2a18fa"
        },
        "item": {
          "id": "4450717d-6665-40ad-96fa-8100631efce3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "74ca54a4-3da7-4954-8a05-c419db4333c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f78f9c3-959e-43e0-a481-6d8d19a0907f",
        "cursor": {
          "ref": "10718182-c130-4318-beb9-8087e7dfe222",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9a663a5d-756e-478c-88a4-bb589d25b7bc"
        },
        "item": {
          "id": "5f78f9c3-959e-43e0-a481-6d8d19a0907f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d34c93ec-e147-462c-a311-0059e418cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7e5e28-7916-4d11-8f92-e446060dc996",
        "cursor": {
          "ref": "3c29b6ee-c3e0-4642-b439-731cb56beefe",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3c3b9fb0-798f-42cf-800c-6d05e7c023ca"
        },
        "item": {
          "id": "fc7e5e28-7916-4d11-8f92-e446060dc996",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "455466c0-d718-46a3-b406-d467fed41591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0536e6f3-5aaf-4692-92bb-540ff4e011b5",
        "cursor": {
          "ref": "98ad30e6-b701-4a30-8cd4-ca954c9938cc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81d7323c-30e0-45b0-abbc-38a5f3a9fba7"
        },
        "item": {
          "id": "0536e6f3-5aaf-4692-92bb-540ff4e011b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c17838be-2ef9-47b6-806a-48863bf1581d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb7de7-da11-47e4-b945-1c8d09a44327",
        "cursor": {
          "ref": "d088a84a-cfca-445c-bcec-d121dcebba54",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ebf6a3f9-ff31-4692-9f46-77b27e02e73d"
        },
        "item": {
          "id": "b7bb7de7-da11-47e4-b945-1c8d09a44327",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fa811221-894f-4f52-a79d-5af7ae3c45d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f12644-a89e-4cee-83f4-611d5d228a51",
        "cursor": {
          "ref": "8c67570b-403c-48d0-8ed2-6f3a4eea8dd6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e32b5879-3bfa-40d7-b338-8a8e9f80a49e"
        },
        "item": {
          "id": "17f12644-a89e-4cee-83f4-611d5d228a51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f08eba0e-8c6a-423a-9605-b9d6760666e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb284ef-64b7-4b3b-8ffc-b1d537c8d8c3",
        "cursor": {
          "ref": "0094ac16-6238-4684-a16e-6052b01047c7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "919c7e32-b234-4a11-b938-b2c6033d09d7"
        },
        "item": {
          "id": "feb284ef-64b7-4b3b-8ffc-b1d537c8d8c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "77f4d97a-f50d-47ca-b539-33135e3b8a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d385ceb3-7eb2-43af-b337-000739e41933",
        "cursor": {
          "ref": "744f2d94-0a79-4dc7-8e1a-b5ffff6946f8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a86f1118-1d80-4298-ba0a-be6275055aa9"
        },
        "item": {
          "id": "d385ceb3-7eb2-43af-b337-000739e41933",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f51e908b-1908-4180-b86d-37b53faaa1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e7576d-c089-45da-bd8c-0ae4b26570b0",
        "cursor": {
          "ref": "76eb12dc-c6a0-4f6d-9d06-336a191fce77",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "13912e43-5931-452d-8034-8699de2522d6"
        },
        "item": {
          "id": "32e7576d-c089-45da-bd8c-0ae4b26570b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "420223ba-c7ae-44a2-96ba-6926ed0cdb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d5b6b8-ca3e-424f-b757-a86fbec39a4f",
        "cursor": {
          "ref": "5245786b-114d-4fb0-9681-63513f6be991",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a603ade0-6839-4910-bc05-28c62f09ca50"
        },
        "item": {
          "id": "06d5b6b8-ca3e-424f-b757-a86fbec39a4f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7381dd0a-420f-4fb5-8a44-cc43f901b8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad729a2-e403-4963-abf8-1f0da57b0e68",
        "cursor": {
          "ref": "cc1230de-c1b7-4d89-8b11-c842e39c8f88",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "47665f87-07d3-4456-ad7e-f5d542af4315"
        },
        "item": {
          "id": "9ad729a2-e403-4963-abf8-1f0da57b0e68",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e7cfe039-23a2-42b1-8bbc-af3d9d3252e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c96103f-11df-4a63-914a-4354be3844a3",
        "cursor": {
          "ref": "5d1d91e3-72a9-4736-83c2-89d49a458a3d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "830ac857-829f-4ba2-b0f8-7a7d7d7073cb"
        },
        "item": {
          "id": "7c96103f-11df-4a63-914a-4354be3844a3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f20fba19-2694-434d-8c43-b4d8f8fdc642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cd87a7-8930-4385-955e-8fa4cf5c0c5e",
        "cursor": {
          "ref": "0e56d3d8-84ab-4692-8bb9-b81f6411d413",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d9dba44c-3f17-4452-a225-223d70b6c673"
        },
        "item": {
          "id": "c7cd87a7-8930-4385-955e-8fa4cf5c0c5e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d3cb3504-f3ca-4ef0-b0ce-351b35084a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a269c22d-00fc-49d7-8e61-1ff3537ddadb",
        "cursor": {
          "ref": "2bff68aa-3613-402c-a5cb-7f948213d4b6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "75556e50-9119-49f2-ad17-2ec125e8a253"
        },
        "item": {
          "id": "a269c22d-00fc-49d7-8e61-1ff3537ddadb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1860b5ad-295a-4a95-a44e-6f4bce5c85db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c58eca4-b559-4d98-87ce-85267aa2e932",
        "cursor": {
          "ref": "e8972157-c03a-468d-8100-1c07db37c571",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "22583e02-f80a-48e6-ae9e-06dbe712ec85"
        },
        "item": {
          "id": "2c58eca4-b559-4d98-87ce-85267aa2e932",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e401f37f-7623-4cc5-b1c4-f5a64ecc7d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0efbc9-b35a-4d49-9dc1-16d1a7cbfee0",
        "cursor": {
          "ref": "0bb6bd16-458d-4474-a691-164e8cf9b9a0",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0f3f6bc1-eabc-4973-9dd6-046297b9c63e"
        },
        "item": {
          "id": "3c0efbc9-b35a-4d49-9dc1-16d1a7cbfee0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0f4d239c-4288-41b7-b369-7c2177110781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b407b8cf-f5df-453e-b8f4-719c55bb83e2",
        "cursor": {
          "ref": "7690d61d-d9dc-413e-a2c2-72a60a909f87",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7fedd826-8c4b-4878-a62f-53a70cfa553d"
        },
        "item": {
          "id": "b407b8cf-f5df-453e-b8f4-719c55bb83e2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "280b74af-b31d-476d-8711-dcd21beffbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d90b17-d0d5-443e-a9a7-dee029c2c53a",
        "cursor": {
          "ref": "a3d66410-0680-4d9f-a8b2-d719d9d7dbba",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e4e2ca1-8050-4142-b9bc-383b55a12dfd"
        },
        "item": {
          "id": "18d90b17-d0d5-443e-a9a7-dee029c2c53a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0dea6c3a-3f6b-4d70-9234-2e6c035613c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f07b99d-17f1-49fc-b6b1-29fd3538f944",
        "cursor": {
          "ref": "e8e32c0a-fda7-4451-8ca8-f7ea6300ed3b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d04a13bf-0f8e-4572-98ea-7c4e3fa2484c"
        },
        "item": {
          "id": "7f07b99d-17f1-49fc-b6b1-29fd3538f944",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "198e954d-d972-40a4-b4bf-33731dee8956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535a2062-bb43-415a-bec6-be327c231f29",
        "cursor": {
          "ref": "c69f200e-eb8c-4f0d-86a3-27e0f46a8f16",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b2be7f1-bfc1-409d-8783-238cfccd09bc"
        },
        "item": {
          "id": "535a2062-bb43-415a-bec6-be327c231f29",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "733b7056-9061-4bc0-8865-1f2f7f822f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd18877-3816-46af-bff7-72d97bc4bf0c",
        "cursor": {
          "ref": "5e827d86-f46b-4380-bb05-83b3ea26025f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdfe1376-fa7b-4b90-bfff-1f76cf92354e"
        },
        "item": {
          "id": "2cd18877-3816-46af-bff7-72d97bc4bf0c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d28155e-32ac-41d9-9620-143f9eee01d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87083d4-2303-4709-b0cd-6261db4af2b7",
        "cursor": {
          "ref": "cfe7050b-2a59-443f-9f32-5effc1c80eb2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "923c2c2e-e472-4350-955d-88a0da2414ca"
        },
        "item": {
          "id": "f87083d4-2303-4709-b0cd-6261db4af2b7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fe9823f5-3dd3-4883-93eb-ed490f3567c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b166d4-217a-4b50-9d65-9d1611030977",
        "cursor": {
          "ref": "dc56da95-9ad7-4465-91c1-334494f6b684",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9c45ed43-a2a2-4962-a180-f51682d08d44"
        },
        "item": {
          "id": "f5b166d4-217a-4b50-9d65-9d1611030977",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3c0648e1-e9a5-4053-8b45-60498cbdad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc1e6fd-1ebc-46e8-b1c9-57ba75e7f520",
        "cursor": {
          "ref": "16a4d56d-0bdd-41ff-819a-50b4c3692921",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69d20c5f-d606-41cc-b7f0-543911c5c58b"
        },
        "item": {
          "id": "6bc1e6fd-1ebc-46e8-b1c9-57ba75e7f520",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3f29e22c-2f57-446d-84b7-c3d834e10f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba965b1-ce20-4297-a84a-2cddd9263c5f",
        "cursor": {
          "ref": "87669eeb-57fa-4532-855f-6fe485ec20ac",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c9f3bd10-d1bc-4161-8cbd-46a38d6173ff"
        },
        "item": {
          "id": "8ba965b1-ce20-4297-a84a-2cddd9263c5f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0cdc2ed4-e901-4a2f-8af7-1803c77689ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c87b1f-5506-4a2d-9a53-77d017cb22f8",
        "cursor": {
          "ref": "19b92a27-0f46-411a-b3ab-4fcdc8d0c139",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b6df3500-46d8-4e55-9e9c-66b10aed49f3"
        },
        "item": {
          "id": "52c87b1f-5506-4a2d-9a53-77d017cb22f8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a882b53-82c6-4315-aad4-49182c24fa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52054dfc-8a65-489a-be6a-a0f25b490ff0",
        "cursor": {
          "ref": "fec953f6-0a2c-4132-91ad-b7f1e782dcac",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e1a537d2-b010-401a-8d4d-7b559db4755e"
        },
        "item": {
          "id": "52054dfc-8a65-489a-be6a-a0f25b490ff0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "40b6411a-3fab-4bf4-a50e-f61a7da6a7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276652d1-6eea-493d-9025-be0746167cfe",
        "cursor": {
          "ref": "37302d11-a664-4574-87af-01e2a1c329bd",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3cd76f43-be0c-4444-80de-b24f4b114ad0"
        },
        "item": {
          "id": "276652d1-6eea-493d-9025-be0746167cfe",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46c5732f-6ece-4725-973e-5b2ef7f4ee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53f3b4e-4266-499b-be6b-854793ec459f",
        "cursor": {
          "ref": "32274601-b35f-4d2f-b6ac-f6006245d370",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c30a6b4e-36af-491a-a006-f63760c78e52"
        },
        "item": {
          "id": "f53f3b4e-4266-499b-be6b-854793ec459f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9b75d64b-31e4-40ac-b459-dfab234d46e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50007401-98a5-4904-9f12-1263a388d0bd",
        "cursor": {
          "ref": "1016ee1c-ef0f-48c5-9a96-d11797fd7ae2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f8d58bd0-6f49-44a0-88b8-8a00f8d0dd43"
        },
        "item": {
          "id": "50007401-98a5-4904-9f12-1263a388d0bd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "46137e5c-e63c-4a3f-9b90-4bcb2ecd9175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af4eda0-4d56-4df1-9de6-ec97ff4634ee",
        "cursor": {
          "ref": "f3d3f645-c7de-4aa1-8326-cb8510a1942b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d3328651-6804-4983-b62d-1fc71b38c4c5"
        },
        "item": {
          "id": "8af4eda0-4d56-4df1-9de6-ec97ff4634ee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f82c10dd-d245-4a3d-adf4-f1adf7f40ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3386887-12ec-4e2a-8adb-360dcf373035",
        "cursor": {
          "ref": "1cc5aa75-e3a7-4de4-af5a-cdf817deaa45",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0f4ce192-8b07-44d1-8500-2c9135a8fadc"
        },
        "item": {
          "id": "b3386887-12ec-4e2a-8adb-360dcf373035",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a8e3a5e0-32e0-459f-82de-d7c3fc602a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57b572-4c4f-4e76-8ac2-fb6686a4c2fc",
        "cursor": {
          "ref": "50f6b2d5-9204-4a64-8e58-2dd78285e2c7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d43ab2a-e569-4232-970b-eff0afc69a8d"
        },
        "item": {
          "id": "7d57b572-4c4f-4e76-8ac2-fb6686a4c2fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a58c1a95-a7e6-4679-9b00-5f7541c41922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4230f4-a09e-4455-a555-df66b8c95d5d",
        "cursor": {
          "ref": "94bf2626-8eec-47e1-8a24-a2deb1a344ce",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f1d7c71b-0690-4939-80a2-4fa3695a6b82"
        },
        "item": {
          "id": "fd4230f4-a09e-4455-a555-df66b8c95d5d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "efb29776-92a0-4b58-bcf8-c54854f203d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20933ab-9018-4ea8-8c85-7abe4b34ac8d",
        "cursor": {
          "ref": "d7ea9eaa-c66f-433e-b16c-3f3b3ba7e4ca",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "39e3c4dc-7240-4fde-bfab-3375e0b66250"
        },
        "item": {
          "id": "f20933ab-9018-4ea8-8c85-7abe4b34ac8d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "36591f96-40ac-4006-a9f4-1d1d043e02b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfcb137-dfe8-4f9d-81df-6a8d1b6efaff",
        "cursor": {
          "ref": "cf68fd2a-6a53-4b57-89f1-66812f665d91",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "40098beb-c8dc-4a51-aeda-4eb2e15972ed"
        },
        "item": {
          "id": "5cfcb137-dfe8-4f9d-81df-6a8d1b6efaff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3328e252-0381-4e24-8bce-f3b78283dcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25b8f96-b65d-4eb3-9711-3d3b43fe5c4e",
        "cursor": {
          "ref": "ac4ae27e-4967-4179-b86f-6f13a62a5cb7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a076906f-1860-4995-be90-b299383b85de"
        },
        "item": {
          "id": "b25b8f96-b65d-4eb3-9711-3d3b43fe5c4e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "14277ec1-258f-49fe-bc58-4389057cd71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaa1b82-5463-4ed1-a615-87cc92b44652",
        "cursor": {
          "ref": "13814b1d-9c94-4b11-8ba5-46b55cb5655e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9873df87-b262-43a2-ac26-5b5a75c308e6"
        },
        "item": {
          "id": "caaa1b82-5463-4ed1-a615-87cc92b44652",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4eec8041-b149-4c16-866e-764e5746d970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd62cbd9-0b02-4e49-bd2b-4bfda269dae6",
        "cursor": {
          "ref": "e6093d1d-83b1-4925-b449-ce25ee7595a3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f6e781d4-e86b-4f9c-b5ac-6018b8dd16a4"
        },
        "item": {
          "id": "cd62cbd9-0b02-4e49-bd2b-4bfda269dae6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c5f0724d-c905-4e20-a902-c63ef42e6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c608e82e-4d34-4c81-a772-d595a983127a",
        "cursor": {
          "ref": "54ae3e09-a070-407d-ba1b-d98e01787b23",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b1b1c966-1a24-4d8c-897b-6c79efa7c92b"
        },
        "item": {
          "id": "c608e82e-4d34-4c81-a772-d595a983127a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "592b0d30-a05f-402a-8d0b-24359aeafaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92a7ff1-b364-4c6f-ba63-4ac175806781",
        "cursor": {
          "ref": "9706d7cf-94fd-49db-99ea-f9c0cdfa9389",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "40b12d3f-fb57-4d28-8773-319ec5028f09"
        },
        "item": {
          "id": "e92a7ff1-b364-4c6f-ba63-4ac175806781",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a9f78dbf-4397-434c-9b61-9c12390068ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fb797c-a145-435d-8426-367aee44b32f",
        "cursor": {
          "ref": "25db4a27-13ce-4cfa-a6ca-be79ba0ea104",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e77a9e29-f403-4a1a-b0c4-bcbb521b52d3"
        },
        "item": {
          "id": "05fb797c-a145-435d-8426-367aee44b32f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "948d200d-03cf-4f3b-8a0c-ba4bd853b6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f72a9ac8-66b5-4895-accd-a6a3c345a8c8",
        "cursor": {
          "ref": "c563576b-aca0-49fd-ba24-41a869504bb3",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "99e427c8-9fea-4996-b56f-f0b440135862"
        },
        "item": {
          "id": "f72a9ac8-66b5-4895-accd-a6a3c345a8c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "19276315-f1c9-49a7-a0cd-fcc0172d5ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f2bf8f65-8183-4676-8d2d-93ef414a93f9",
        "cursor": {
          "ref": "28bccf72-3c2d-45b9-a731-6142a6cdc593",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9ebec3b9-4391-42c7-8a01-85cd9e1cca32"
        },
        "item": {
          "id": "f2bf8f65-8183-4676-8d2d-93ef414a93f9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c8292788-ce07-4b2d-86aa-7f08753c234e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "354ff45e-b65e-4121-bcc6-e423df5c3359",
        "cursor": {
          "ref": "898d8cf5-c450-4a5b-93d9-c1b6e7c6ce52",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d4e06e16-a5a2-4019-923e-e60602ffe897"
        },
        "item": {
          "id": "354ff45e-b65e-4121-bcc6-e423df5c3359",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17d6d098-8694-4b4a-999d-5647ae9b1dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b44e7072-a9be-4a16-9faf-00c8bda4ea2c",
        "cursor": {
          "ref": "dc03682b-d9c3-4862-b6c8-fc2e80f78a58",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8086ca0e-4b55-4332-85c5-77321439705c"
        },
        "item": {
          "id": "b44e7072-a9be-4a16-9faf-00c8bda4ea2c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d841c7bd-3b17-4076-806a-4fae6efbcc01",
          "status": "Created",
          "code": 201,
          "responseTime": 8127,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf0462c-ecc6-4d44-8acd-2a51abd4fe9c",
        "cursor": {
          "ref": "3830b0fa-256e-481e-841c-33302de3690e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8ba933d-7fe9-48da-855c-41825aacef89"
        },
        "item": {
          "id": "daf0462c-ecc6-4d44-8acd-2a51abd4fe9c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "29b5b317-fe4d-449c-8105-09507ba7a2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ee4b13a9-6457-4806-8c40-b87d538b1c14",
        "cursor": {
          "ref": "e5d63009-a2db-4223-8c14-01464d7a4155",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bf08b943-64a3-4b80-ad90-897658858649"
        },
        "item": {
          "id": "ee4b13a9-6457-4806-8c40-b87d538b1c14",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a84a4bd8-7301-41e9-96f6-05f034a14546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e357a41c-fdad-441d-b966-a65f592ca8d6",
        "cursor": {
          "ref": "f6bf4eff-f10b-47bb-8502-1f34f4ee1615",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "29a929b5-d32d-44f7-a662-eacf0eafa515"
        },
        "item": {
          "id": "e357a41c-fdad-441d-b966-a65f592ca8d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "40017705-b008-47cf-b625-7c296384e1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d646ce-7352-4002-8be4-2c70f0d6e218",
        "cursor": {
          "ref": "1be7f6c1-e32b-4312-868e-3416febaf578",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cdbc64e5-3df7-46fb-9c06-d5832a29488f"
        },
        "item": {
          "id": "72d646ce-7352-4002-8be4-2c70f0d6e218",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2367e063-f456-4107-aec0-77486676fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04566a1e-a9fe-4186-823d-4f83680e1ca9",
        "cursor": {
          "ref": "2ae78c24-98cb-4573-a0b8-ef4f7d0e06d3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c13052d2-7917-46aa-827d-a90b32163a36"
        },
        "item": {
          "id": "04566a1e-a9fe-4186-823d-4f83680e1ca9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f20db72b-4acc-46e2-a9dd-b79daad06d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f9fed8-2072-4b3e-a2ca-bb18072dad37",
        "cursor": {
          "ref": "209b45be-57a1-4e8a-81ff-7beb0302611f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "03d99bb9-b1ee-48f4-a0bc-9f6a5506f8ba"
        },
        "item": {
          "id": "39f9fed8-2072-4b3e-a2ca-bb18072dad37",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a860b3f1-c62c-4a2e-9f12-9daa4dbad34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadc260f-008f-448c-8c4c-faaf92434fcd",
        "cursor": {
          "ref": "0c31f743-942f-499f-bd03-1a7c3bb96ff8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "204c705e-7539-4d75-b6bf-6bdc3f0d2a7a"
        },
        "item": {
          "id": "aadc260f-008f-448c-8c4c-faaf92434fcd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "837c87a7-9561-4fdd-b1fb-dcba053475cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1501d4e9-2e33-466f-bd17-824f32ba502d",
        "cursor": {
          "ref": "798e78aa-998f-4883-910b-686cde6c1a67",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "74e29fcb-48cc-4c02-bca3-2d051dc70d76"
        },
        "item": {
          "id": "1501d4e9-2e33-466f-bd17-824f32ba502d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2857001f-5e63-40e7-a8bc-4dd36952479f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5991c683-76e2-4bba-b7e6-5c2f62a7a0a8",
        "cursor": {
          "ref": "0b748d6c-8c08-4385-aa00-4fa102b8164b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd98a02b-1d9a-49fe-a47d-1391af822639"
        },
        "item": {
          "id": "5991c683-76e2-4bba-b7e6-5c2f62a7a0a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "37a675c6-fad8-40ff-a1a0-bce45c4677e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638a7644-9776-4448-a0d5-4f2633ddc2b7",
        "cursor": {
          "ref": "4b27dfb1-2ad2-4dfb-90de-23299ced2709",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "116c9351-792e-4b14-80a2-30488f0b05b9"
        },
        "item": {
          "id": "638a7644-9776-4448-a0d5-4f2633ddc2b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "74730b63-ffde-4019-adbd-3b5979822eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deb9248-4e5d-4778-80d6-08e1c92b4a23",
        "cursor": {
          "ref": "4fb0c0f1-6c9c-4d3c-ac68-d6700c3cc6af",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7f379944-9791-472c-9fb4-9b4145f97cf5"
        },
        "item": {
          "id": "5deb9248-4e5d-4778-80d6-08e1c92b4a23",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8c59dea-ae0d-45b9-babe-7fcdfeee3b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e19c138-7782-4063-aaa5-7fa98169ac95",
        "cursor": {
          "ref": "f735408c-ac46-4566-adde-9a65638fcd1f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dc9f4aa3-9a7a-4eba-a04d-fcaeb1af327a"
        },
        "item": {
          "id": "3e19c138-7782-4063-aaa5-7fa98169ac95",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9428cf2c-d799-47be-8545-cfc71aaf75ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8116e02e-1c72-481c-a010-f6a10ea7806a",
        "cursor": {
          "ref": "82c48ea9-2d27-4343-9635-3db2547c8f14",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "88c1e8ed-abb5-4e96-a5a0-c63b1a763540"
        },
        "item": {
          "id": "8116e02e-1c72-481c-a010-f6a10ea7806a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83a05724-a66e-4a09-a4fc-1bee1dd934fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0110e62e-f5e1-4684-820c-cd5579f224af",
        "cursor": {
          "ref": "b29645c4-a8d2-452e-83ff-df334cef3e41",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "954e707b-3aa5-40fd-8999-51cfb81f3d48"
        },
        "item": {
          "id": "0110e62e-f5e1-4684-820c-cd5579f224af",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b70d9bbe-6c4e-44ef-b020-da681578b61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246eaeb3-2f00-4fb0-bc15-9f62c2b6fb2d",
        "cursor": {
          "ref": "65e36221-5d56-4a80-abe7-b0e5310e3eb7",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6af4b180-fee2-4f2b-92ac-af9d8b44ba9c"
        },
        "item": {
          "id": "246eaeb3-2f00-4fb0-bc15-9f62c2b6fb2d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d32feb7-dbcc-4c32-bb12-201a83d67700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac10a0a-4c27-4d46-8124-002249c624f8",
        "cursor": {
          "ref": "35d22144-ed41-4b88-8b2a-b011a7607ae8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0d3c4317-ea64-4944-a272-0f47afd1d77a"
        },
        "item": {
          "id": "7ac10a0a-4c27-4d46-8124-002249c624f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ffcefc83-add1-48c9-b55a-1456a2a4258b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf6420f-d938-456d-88de-23d15d609e86",
        "cursor": {
          "ref": "ab750ccb-4531-4d33-84da-1ee56eb7e366",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "88d18a35-7b15-41a4-a21d-eb5881b9f27d"
        },
        "item": {
          "id": "ebf6420f-d938-456d-88de-23d15d609e86",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b9f690d-a7ca-4371-8b4d-9440539b1440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc2c01f-f10b-4ac6-bd1f-5e24543efe80",
        "cursor": {
          "ref": "ff321087-924f-4a0e-8808-204b78549de2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "38787881-ce7a-4a2e-8235-ff84c792e48b"
        },
        "item": {
          "id": "9cc2c01f-f10b-4ac6-bd1f-5e24543efe80",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "adc63dab-1af1-463d-8b51-da1cf97931b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c73d9e-e39f-4672-ad86-7fc2669aa35b",
        "cursor": {
          "ref": "caafbd32-1a62-4d34-9c8f-7b0e4c29e4f1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "63d23a4b-fdcd-4b1c-863c-db4ecb20e146"
        },
        "item": {
          "id": "29c73d9e-e39f-4672-ad86-7fc2669aa35b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7c3b4072-565b-4813-8427-3590c58f803e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d736fdd7-bf3f-4f4e-bfa0-7ad5318ab763",
        "cursor": {
          "ref": "240c89d6-f4cd-454f-937c-295670791fe7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7342b2d3-51b5-444b-b8a7-12f82de51cbd"
        },
        "item": {
          "id": "d736fdd7-bf3f-4f4e-bfa0-7ad5318ab763",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8dfc3f50-2ef5-40d9-af63-e38189eaa587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd28251-38ea-47e9-a9f2-421c9342ca39",
        "cursor": {
          "ref": "4c6ba1d7-7180-40de-876e-493655a99bbe",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f0399562-6adf-42f8-8c30-36e493252e37"
        },
        "item": {
          "id": "3bd28251-38ea-47e9-a9f2-421c9342ca39",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "677644a6-0c29-4be9-91d4-87fff66593f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a67bd20-1b44-4651-9f74-871f396af767",
        "cursor": {
          "ref": "b6b088a1-1d1e-4355-996f-8b9f5e44edb9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "248759f0-fc81-4d57-b04c-b60a17b7d3c9"
        },
        "item": {
          "id": "6a67bd20-1b44-4651-9f74-871f396af767",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "00bcd433-a32f-44f7-99a5-bf77628e3d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc7fcdd-e15f-4c32-9cb9-dd53ef7c42c0",
        "cursor": {
          "ref": "c932bd7c-5207-466d-bc36-779e611b55cb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0f58a3b-2afd-491e-bf2f-24d41643300c"
        },
        "item": {
          "id": "3dc7fcdd-e15f-4c32-9cb9-dd53ef7c42c0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2e1314f-34f4-40f1-b169-b343c909b713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d6e155-8bbf-423e-a9d3-e943c67bb50a",
        "cursor": {
          "ref": "d1fa4750-9653-49d1-b9d6-7470f7057a5b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1210d889-ea8d-4eb1-ac07-cad35401e861"
        },
        "item": {
          "id": "74d6e155-8bbf-423e-a9d3-e943c67bb50a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db2f16fc-2bd4-43d8-be6b-159b558179da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae1273b-ef28-4b43-9d42-d3634ba29ed2",
        "cursor": {
          "ref": "5a6ba84e-0a58-4063-b37a-66f78efbf8c8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e53833ed-504b-4d83-8021-376468cad025"
        },
        "item": {
          "id": "fae1273b-ef28-4b43-9d42-d3634ba29ed2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d6302d35-87d3-491a-a465-60fbd42b3f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b81d5a-f7f4-4090-8bbe-d8bdb93c49f2",
        "cursor": {
          "ref": "2aa3ba6b-3c6c-41ad-a6f2-3c98defb54ab",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "67456864-eba6-4945-ac3e-77daa3be47e7"
        },
        "item": {
          "id": "f8b81d5a-f7f4-4090-8bbe-d8bdb93c49f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9fd9b896-ea52-4ac7-ab8d-08501b8ed2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e28ac78-eff3-45aa-87ec-e421aede0d18",
        "cursor": {
          "ref": "ac8c3637-bce6-4e65-8416-2e662c2afbff",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5430fb1a-dffd-442e-b183-8e55af0eff38"
        },
        "item": {
          "id": "3e28ac78-eff3-45aa-87ec-e421aede0d18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5c93c8d2-f3fb-4bbf-bd86-a6cdceb22f70",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3907de21-90b9-4ff4-88f4-766a19cf0879",
        "cursor": {
          "ref": "cbc3fa87-644d-4d98-9d98-557ed614eddb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1917b794-9d3f-4992-96ad-ae8ad89c65df"
        },
        "item": {
          "id": "3907de21-90b9-4ff4-88f4-766a19cf0879",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6d32ec8-ab7f-4d7c-838f-e381690d0f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b48ffa-54c5-457c-b3af-79798d0d9d7c",
        "cursor": {
          "ref": "c7717feb-31ae-4c7d-9f26-e32f8abf552b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3e50febe-bfdd-431a-9f7d-54d299e0bf81"
        },
        "item": {
          "id": "f6b48ffa-54c5-457c-b3af-79798d0d9d7c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "584796de-e1f9-4f9e-b926-9027c6724e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eace3d9-eb4e-4996-91f3-9f38ed5f4e1c",
        "cursor": {
          "ref": "b4298a18-263d-4dbc-9566-31567cee26d4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "658d44b9-d95a-4e56-bb68-f2a63206c091"
        },
        "item": {
          "id": "8eace3d9-eb4e-4996-91f3-9f38ed5f4e1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d917f06a-fd25-4694-9bcb-e48a1d206c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d7401d-8478-4300-92a7-9f483253f011",
        "cursor": {
          "ref": "b9c43532-18dc-47bb-a9da-337d6e0fcb3b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e09cc10d-8725-43aa-9e51-047eff832f6a"
        },
        "item": {
          "id": "04d7401d-8478-4300-92a7-9f483253f011",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5894a808-fca6-4ba7-9b88-7c5641172dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828759e3-705a-41dc-baf5-271e8c0aca30",
        "cursor": {
          "ref": "966ae80d-a0f1-457b-a341-59937f4fc0a6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3b305274-38a1-4323-a57c-bc91dfebb021"
        },
        "item": {
          "id": "828759e3-705a-41dc-baf5-271e8c0aca30",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47eaa8b8-04ff-4e97-9b60-74513334edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f228ad0b-8256-40a3-a7a2-1e1d431188b2",
        "cursor": {
          "ref": "f762e433-0607-43c2-aab9-c1967afc16db",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "96c4bcd6-5d87-41f2-9cb3-07a4ddb6728e"
        },
        "item": {
          "id": "f228ad0b-8256-40a3-a7a2-1e1d431188b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "12ad2f0b-be2b-4f9a-937b-0a7adfc99373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76970d4-b7f2-4347-8066-6a05c79d5258",
        "cursor": {
          "ref": "84d05671-4292-446c-b2e3-05aa94deb32c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b9be2a3c-5a6a-4ea2-8a51-058323af08ce"
        },
        "item": {
          "id": "b76970d4-b7f2-4347-8066-6a05c79d5258",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "95eed6f5-eb91-4754-bfb2-cac781c949af",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "adeb7638-9815-4936-b704-b46abf24accc",
        "cursor": {
          "ref": "d9fe9947-3e69-4e20-8cd7-47b0d6302685",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "291f2268-36d8-4bce-816d-f674987c1751"
        },
        "item": {
          "id": "adeb7638-9815-4936-b704-b46abf24accc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ae62ca3b-030f-48b1-b255-9fea1d7129c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "d266d9c6-2bd3-4d52-a187-6d3659cd3de1",
        "cursor": {
          "ref": "79240d41-1e69-46f1-a3be-1e2b3a7ac3e5",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "246efb52-9153-4145-bb2d-1b95233e3e5e"
        },
        "item": {
          "id": "d266d9c6-2bd3-4d52-a187-6d3659cd3de1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7dfdecd7-72d7-4f8a-8ab2-3f119f842e4a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "94b5cb9a-5bb5-4282-aeee-8411747823f4",
        "cursor": {
          "ref": "63b6d6b8-7905-4d07-9716-a47093f401d6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5dd160c2-7a79-496c-aa22-9250d67a1b93"
        },
        "item": {
          "id": "94b5cb9a-5bb5-4282-aeee-8411747823f4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1f875c35-4d3a-4edd-867f-2b8bec730e5c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "23000da0-419a-4426-9021-16d43c14362c",
        "cursor": {
          "ref": "025c56e5-163f-4b8f-91d8-8e9ebf2470e9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a4bc421-e927-4962-8d7f-d7a0df6f3fae"
        },
        "item": {
          "id": "23000da0-419a-4426-9021-16d43c14362c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "88b68264-b3fb-4e44-a7d0-6d88eeff5fcc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1fed0cd5-3fed-4955-940a-0bf26ead4774",
        "cursor": {
          "ref": "ff32dce7-f325-497a-91c1-3db267e965e1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a82c2745-ffaa-4a38-8a61-615690c75440"
        },
        "item": {
          "id": "1fed0cd5-3fed-4955-940a-0bf26ead4774",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "31b9f758-c8fd-4f20-8836-8413350d250d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 169,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5cf52955-a55c-4214-b9cf-2fe25bba47b2",
        "cursor": {
          "ref": "91b8f81f-bc11-4529-916d-74a1ecefd53d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e9d8b31d-d468-4a88-9b30-2dc634c9834e"
        },
        "item": {
          "id": "5cf52955-a55c-4214-b9cf-2fe25bba47b2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c55036f9-851f-4096-a05b-17e0fdf6e0cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6206f208-f009-44dd-ab20-9b4193e5b88b",
        "cursor": {
          "ref": "7a6bbb6b-1c2d-473a-b76c-c8a2f5f3a6c2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c84b76b7-984c-4b76-8c73-f12f11c6bac4"
        },
        "item": {
          "id": "6206f208-f009-44dd-ab20-9b4193e5b88b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6285b7e6-a903-4818-be63-09d42923fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7e9b87-8445-43fb-af4d-ed8d060719e6",
        "cursor": {
          "ref": "955d2c54-14d3-49ae-bca5-0fca0842b565",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f6b5557-a7de-46c7-8dfa-de82719e18b3"
        },
        "item": {
          "id": "8b7e9b87-8445-43fb-af4d-ed8d060719e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "58d4ae1e-fd10-4b34-8338-7b6fff76a930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1ebbec-ddc7-4493-821b-f2b36d2ff0f4",
        "cursor": {
          "ref": "b5b0cca1-2a88-499c-bf15-e42d7b989c9d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "65807631-14ec-45c5-abbb-d17233d1e677"
        },
        "item": {
          "id": "3b1ebbec-ddc7-4493-821b-f2b36d2ff0f4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "97cd2f92-3e5d-47f4-ac7c-6921f796c4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5100745d-17f9-45ce-8668-6979592567e5",
        "cursor": {
          "ref": "6bda386e-7fd6-4496-832f-5d069e525657",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4da3458c-6172-4d22-bb62-14445e42dff7"
        },
        "item": {
          "id": "5100745d-17f9-45ce-8668-6979592567e5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23c12463-6c07-4e92-9e4d-b363b9f09b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424d2af0-8429-49cc-8ff2-f08e4796a874",
        "cursor": {
          "ref": "cbaaa88b-976d-4d11-b2a3-5de3be934dc2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a2aff9b7-ee35-4b4c-94e6-3727f498ea61"
        },
        "item": {
          "id": "424d2af0-8429-49cc-8ff2-f08e4796a874",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6656db62-594a-4543-8b4b-2567506b8ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62380c70-f62a-4224-8afe-addb79e12c9c",
        "cursor": {
          "ref": "dc291a34-55f2-46ca-a839-8c32133a0686",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "50deca6d-cb64-472e-8ee7-36d60969274d"
        },
        "item": {
          "id": "62380c70-f62a-4224-8afe-addb79e12c9c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9d9b2436-958a-4d60-a1dc-4b96b8f063fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12b6176-55d6-4c30-a08d-8d21de88ab6b",
        "cursor": {
          "ref": "16715e58-8674-488d-be19-2d267a094417",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0c912ce0-da75-43c3-80c3-9c79b5c75f0f"
        },
        "item": {
          "id": "c12b6176-55d6-4c30-a08d-8d21de88ab6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2133c0f0-0f96-4752-9ef2-46cbcff65b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e259f4f-d1f8-4eac-962c-c3f84e160a60",
        "cursor": {
          "ref": "224bc48c-8856-4255-ac30-846562d1457a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d9289db-43f5-43c5-a439-3a9f773683d7"
        },
        "item": {
          "id": "4e259f4f-d1f8-4eac-962c-c3f84e160a60",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bec1578d-bd0a-4834-a47b-2c49d30503c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd37b27-396f-441d-94f6-b05e4a32565c",
        "cursor": {
          "ref": "9d08325c-c3aa-4eae-8864-a4d92459fed7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1271fdac-18cb-44f4-8751-fd64a77c671f"
        },
        "item": {
          "id": "fdd37b27-396f-441d-94f6-b05e4a32565c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7d423953-1864-4736-b24e-a8d60a088105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7073456-dc05-4179-a2cf-9a917baccd8e",
        "cursor": {
          "ref": "46af8f42-48fe-44fc-9ab8-c326c2775944",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2652c274-cd43-43b5-a262-66418132ad48"
        },
        "item": {
          "id": "c7073456-dc05-4179-a2cf-9a917baccd8e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "899d516e-2215-441d-a910-f9ea599e2cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6abce2-a50d-43a3-a530-bf1bafaaabdb",
        "cursor": {
          "ref": "06dfb10c-b5dc-4947-95f8-f3bcfedb6c69",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "84d1468c-4faa-4162-8c65-0f540297046d"
        },
        "item": {
          "id": "9b6abce2-a50d-43a3-a530-bf1bafaaabdb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "04190191-77ec-4f34-86a5-0b4728f7e6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456237f9-135a-4572-9ac2-161623ca221b",
        "cursor": {
          "ref": "2db4e72d-3a89-4763-b601-fe924e5cea57",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "390a193b-ae25-4c2e-9ffd-3af9ae9eb269"
        },
        "item": {
          "id": "456237f9-135a-4572-9ac2-161623ca221b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "72690391-b9d6-4be5-b26f-9d90e4ddc5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6070d4-ac27-47a1-8a07-6649f50a505e",
        "cursor": {
          "ref": "ded50b3d-8a61-4853-aa8c-856d499e127a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13d87e36-71ac-4812-9a9e-c5e739e52afb"
        },
        "item": {
          "id": "4b6070d4-ac27-47a1-8a07-6649f50a505e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c653122c-1945-4b9a-a6a6-0cc8946a5316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9a0202-0c27-4bab-ad37-fb1bff124ac7",
        "cursor": {
          "ref": "2897639c-7174-4529-ab8f-fb3ba38fcbe9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fab10d79-5930-4844-a45f-10f116d55795"
        },
        "item": {
          "id": "ea9a0202-0c27-4bab-ad37-fb1bff124ac7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8c4132a2-d623-499b-a47d-e08473ce588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3534009-648d-45f0-b7a4-9994dde97c20",
        "cursor": {
          "ref": "60bc79a0-8b50-465e-ad5e-a45b4dc34087",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "62b41198-8b26-479a-a0a8-5ee8bdcf67c7"
        },
        "item": {
          "id": "f3534009-648d-45f0-b7a4-9994dde97c20",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ab0e7124-cb52-47f7-b6b7-8cd19dc51971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df12d739-8d4c-485d-9623-2e9d5148924a",
        "cursor": {
          "ref": "0faa4bf5-279b-4b17-af7e-d104b715d33c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eac78e0f-45d4-496c-b380-abeb65baed68"
        },
        "item": {
          "id": "df12d739-8d4c-485d-9623-2e9d5148924a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b68c6412-9651-400f-b662-ace70a456130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2120f1ec-7ba3-4b85-bd77-2d7e9637e185",
        "cursor": {
          "ref": "a59f2d17-8ed7-4d4c-82d0-bc3c9a294f68",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "68b3c2da-df6a-4b69-ae13-9b1494c58967"
        },
        "item": {
          "id": "2120f1ec-7ba3-4b85-bd77-2d7e9637e185",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8979e80d-a15b-449d-86eb-8133816f07c3",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "f6b3ac4f-2d01-468e-8210-9ad113be4362",
        "cursor": {
          "ref": "f6212214-9fa5-406b-91c7-9a8b433eba99",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "53faac5b-e60f-4e08-873d-6dc3b73c43fe"
        },
        "item": {
          "id": "f6b3ac4f-2d01-468e-8210-9ad113be4362",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6b85592d-bdc1-435e-aa1f-3d6b701d04f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65080189-ab75-41f0-b22f-4e17ac048894",
        "cursor": {
          "ref": "bad43ec5-a636-48ff-bb40-c2c6e19c7a69",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6c73cb92-65e5-4c41-9a3e-af6ef33d3685"
        },
        "item": {
          "id": "65080189-ab75-41f0-b22f-4e17ac048894",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd769e8e-4c28-4daa-8529-ea15d3505c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5989018b-df60-4a53-be3c-5d806236aaf5",
        "cursor": {
          "ref": "92e4b45c-dfea-47cd-82c7-5a2ab746dcf7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "73171422-5627-446f-8392-66703a0add29"
        },
        "item": {
          "id": "5989018b-df60-4a53-be3c-5d806236aaf5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fc9005a8-7c26-498d-9b60-78bb7cf7146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2212e6-d0d4-4c06-82d1-d207cf3e32da",
        "cursor": {
          "ref": "90f80817-1853-4b16-90ba-0c84b777d131",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ebf9fcdb-8407-4bc1-95be-cec16e368aec"
        },
        "item": {
          "id": "de2212e6-d0d4-4c06-82d1-d207cf3e32da",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4c8cac0f-7aad-4a72-b5ae-9f643990e681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d229ef4-0dce-401c-b6cf-4a33a419a509",
        "cursor": {
          "ref": "99f27b55-bcdd-43f1-8b9a-566928bc6750",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a378467a-808d-4389-b07a-b0d140596292"
        },
        "item": {
          "id": "4d229ef4-0dce-401c-b6cf-4a33a419a509",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9d69ce8e-0a20-406a-afd6-b6334ce929b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f6d8de-d739-4456-a3e8-8b07c2e8c61c",
        "cursor": {
          "ref": "d4af77f7-fd0e-4908-b708-670f0872a569",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "48364feb-2e87-4de5-ac23-6aba9e073b6e"
        },
        "item": {
          "id": "d9f6d8de-d739-4456-a3e8-8b07c2e8c61c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "92f84dcb-78bb-45c4-867a-dc81b68f5043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50799a73-ff7f-47d8-af12-91c93dd45fd9",
        "cursor": {
          "ref": "38e3fa9a-3e21-4c48-b071-f7b33cca3965",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a963bbb4-9534-412e-b350-46857d51b4c3"
        },
        "item": {
          "id": "50799a73-ff7f-47d8-af12-91c93dd45fd9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1d9dcb0f-089e-4bc3-a6cc-341d7ac0fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3529a856-4696-4bb8-9925-cebe07b0cc5c",
        "cursor": {
          "ref": "34afcb76-1a50-4246-a612-7e8158c8078c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5484f1a1-92e9-4480-b554-84ce16e3f3e2"
        },
        "item": {
          "id": "3529a856-4696-4bb8-9925-cebe07b0cc5c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a182ba8c-c35b-4f9b-ba65-afc1e0b716f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eacbc1-98c3-4cd7-bcc7-88f7295f19a8",
        "cursor": {
          "ref": "58e6b472-7765-4803-ad2d-7c10d3ad02f4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a38863de-0fb7-43eb-a8f6-466b8db3bb0f"
        },
        "item": {
          "id": "b0eacbc1-98c3-4cd7-bcc7-88f7295f19a8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8e5ab5a9-fcde-4bf0-adb4-656c97ab5cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854378e6-bcf1-454b-8ba1-f9f59fff3fe7",
        "cursor": {
          "ref": "c1c2510f-d22f-414a-8ba7-09b17eb85533",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a924ecde-8322-4739-89f6-17ab975ec5ee"
        },
        "item": {
          "id": "854378e6-bcf1-454b-8ba1-f9f59fff3fe7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b20e224b-1bbb-41f1-8d24-1f17bae6ee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db1e6af-e98c-491c-9b30-ab66407d42a1",
        "cursor": {
          "ref": "13c7e954-b47f-437a-addd-e886a27c2f1b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d23f3e09-7dc9-4f08-88b2-408b656bc72e"
        },
        "item": {
          "id": "6db1e6af-e98c-491c-9b30-ab66407d42a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f8f246b5-d851-424c-a1eb-3fd4f6d62255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9225e94-3d6d-4450-8f75-014525c1f5ab",
        "cursor": {
          "ref": "88cd52ec-ae53-4da7-9427-ada8b2e9b819",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "295a5839-6559-4b19-9cd2-2d1748c476ac"
        },
        "item": {
          "id": "b9225e94-3d6d-4450-8f75-014525c1f5ab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1583a395-e47d-436b-b8aa-ae4c6ac3e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa848610-a975-4478-b44b-462860e1fae9",
        "cursor": {
          "ref": "095ec7a1-9b44-4fb7-9bcd-2e6e9a1711a8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6aabce5f-1f8d-46e4-bd34-c3a18c9a68e8"
        },
        "item": {
          "id": "aa848610-a975-4478-b44b-462860e1fae9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c2291c1f-ebaa-4f2d-ae0a-c7d4dd08eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f421730-57dd-4f8a-bc8f-ab828fc0dc12",
        "cursor": {
          "ref": "54584556-8a72-435b-ad17-3e47371b01af",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d32f2d1a-fe8e-4a73-8067-2290b0ca9071"
        },
        "item": {
          "id": "8f421730-57dd-4f8a-bc8f-ab828fc0dc12",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da215f71-310d-405e-8765-e353fb08eacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd536e3e-5d1f-48e0-a831-ebd84c6656ba",
        "cursor": {
          "ref": "860ce656-df17-4c57-9ba0-5c8fe9481cc8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c18303cd-3514-4ea2-8dc5-b5bf2fa4e6d8"
        },
        "item": {
          "id": "fd536e3e-5d1f-48e0-a831-ebd84c6656ba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c4c74462-a38b-4ad7-ab6e-3543fd6851ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee461827-c1b4-40d0-a86a-047fcf82b662",
        "cursor": {
          "ref": "9c975c57-451a-45c4-9e33-d738170efd23",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a8aa85cf-e2f5-48a9-8303-26eb0c7e2ff6"
        },
        "item": {
          "id": "ee461827-c1b4-40d0-a86a-047fcf82b662",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a3404a45-e834-4e8b-b824-9131bb14a6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a5547-892d-430f-a5c2-688aec985883",
        "cursor": {
          "ref": "29df2e88-37e2-41e5-a151-8cb9186089d4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9d54de9-f7ad-4c56-b60c-84da112ad6d4"
        },
        "item": {
          "id": "f58a5547-892d-430f-a5c2-688aec985883",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "87d74aa1-be4b-420f-b035-569c2f8cfabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ae2e3-95b2-4c18-8fc2-6a647ae2972d",
        "cursor": {
          "ref": "acdcd2a2-ebbb-4912-82c1-72e9cd5861b0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ee5b66ea-a890-4aa5-a987-7e289fd8fc95"
        },
        "item": {
          "id": "266ae2e3-95b2-4c18-8fc2-6a647ae2972d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87b32c88-94d8-42de-bcaf-00883bf3caf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239d5e20-7f6e-440d-83b5-1b35239e0dbb",
        "cursor": {
          "ref": "e06fa126-79a0-444d-bcd9-13e524900cfd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a738089c-8494-4ab0-9849-9e72f94e0f20"
        },
        "item": {
          "id": "239d5e20-7f6e-440d-83b5-1b35239e0dbb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e7ab959a-b23c-4373-a95f-bf0bfeb87de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adbe1a2-5761-4afa-9211-9dd722da7b1a",
        "cursor": {
          "ref": "bec72eb7-6a77-4599-984d-82f87152c447",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7dd26613-6f38-4c1d-9ba3-9feaf6b085b4"
        },
        "item": {
          "id": "5adbe1a2-5761-4afa-9211-9dd722da7b1a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "406690d2-8394-4dfa-a44c-57ce943bf095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2606c5f-3312-4805-a1ed-9169935cd896",
        "cursor": {
          "ref": "3f2871f4-c603-45bc-8f10-46d848790441",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8331e92d-0005-47d0-a766-7ce3818334b7"
        },
        "item": {
          "id": "e2606c5f-3312-4805-a1ed-9169935cd896",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fb73778c-cce6-483a-be16-b964ddaf9f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f7231-b50f-4698-8722-78b9caf6279e",
        "cursor": {
          "ref": "823ef03e-bad1-4361-a836-5e12fc27e270",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c50641b6-fb6e-43a2-8f48-d5f6d1df8326"
        },
        "item": {
          "id": "668f7231-b50f-4698-8722-78b9caf6279e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1d7566d1-4959-4427-a158-3374a0d5d625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93509ffd-7bae-4f9a-b8fc-09c25e5f4aec",
        "cursor": {
          "ref": "fa581b11-be69-4f35-a56b-613cbe773be6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cbbb7922-c6fd-4f5c-94c5-beb74d552456"
        },
        "item": {
          "id": "93509ffd-7bae-4f9a-b8fc-09c25e5f4aec",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bf8e83f6-7871-4a61-bc45-20ca91b2ec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a68e5d7-6a0a-4a93-b78e-360cba97b265",
        "cursor": {
          "ref": "59d998b2-fb61-4808-a846-0e7f3d7d7ff2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a132ba11-8c76-4241-932e-a1e599940a3d"
        },
        "item": {
          "id": "5a68e5d7-6a0a-4a93-b78e-360cba97b265",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa919817-5b25-4e0b-ba82-bc502c81ab5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1f4fd4-3a5a-41a1-a147-6aaec26c38d5",
        "cursor": {
          "ref": "beb8fc01-d3f8-455a-81c0-cc0481233a1d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cc437a73-b257-4090-a2d9-ca22846c11fb"
        },
        "item": {
          "id": "8e1f4fd4-3a5a-41a1-a147-6aaec26c38d5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bdd668d1-cb3f-4ce3-b56d-05343c4199fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abe7678-e5ab-4866-aa4a-c1048421bd08",
        "cursor": {
          "ref": "f9d0f8a8-3ffc-44a4-a3c1-befbba6ae92c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "23e5bd9d-3da3-4b90-bd29-df1d1ed24544"
        },
        "item": {
          "id": "1abe7678-e5ab-4866-aa4a-c1048421bd08",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be951361-9c7b-4ef8-b078-d88ed9d5834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74e9e5e-d235-4f60-9a28-bebcc66d8096",
        "cursor": {
          "ref": "c2e8bab4-e04f-46b5-9565-0e247320e110",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2e183c16-319c-4ee4-b03a-67553cd17818"
        },
        "item": {
          "id": "e74e9e5e-d235-4f60-9a28-bebcc66d8096",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "41666800-dcfd-4940-8f23-7e05239566dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc71953-2ed5-4dbb-9e94-add11c494800",
        "cursor": {
          "ref": "12e8b604-dd0f-4f83-9d29-1ff984cc9f2a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "444a69d0-2223-4d0a-8112-6811870d807f"
        },
        "item": {
          "id": "5dc71953-2ed5-4dbb-9e94-add11c494800",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2d9c248f-e6fa-420d-bbc7-6d6772b889dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061dbc4-e0f2-48e2-a338-28eda296030b",
        "cursor": {
          "ref": "c422a321-246c-4fe8-a4d2-492228ab4877",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7aacf6ba-0b1f-4df8-86bf-70fa5864e3a3"
        },
        "item": {
          "id": "b061dbc4-e0f2-48e2-a338-28eda296030b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87b4b639-dd8b-4083-99a0-1b531a73e7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a80da0-6e09-4d78-89ad-c54afe458131",
        "cursor": {
          "ref": "16982e61-b340-40ea-b2c8-3f72e70bab4e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b0de56d8-b209-416c-ba7a-712565f2dcac"
        },
        "item": {
          "id": "68a80da0-6e09-4d78-89ad-c54afe458131",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ceef3179-213e-4b35-959b-b7a53a89ef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df3f82f-4755-45d4-a131-173638d451bb",
        "cursor": {
          "ref": "aec82b67-1e66-42ee-884c-ae0b5922e859",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f7c9b907-70a8-4921-83b4-d9e65b9ddc13"
        },
        "item": {
          "id": "4df3f82f-4755-45d4-a131-173638d451bb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eafb9a42-3964-4a84-af58-b6adaec84ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b394a8-020f-4afc-b8ac-5957fe91ad4a",
        "cursor": {
          "ref": "95d9826b-7b26-4a7a-9235-732dd76ce328",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "959ee57d-d7f2-4d1e-90bb-b27c85b655d3"
        },
        "item": {
          "id": "40b394a8-020f-4afc-b8ac-5957fe91ad4a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2aff24ee-7a60-4902-9454-193faad8d57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3d5e33-f029-47e9-bfd7-2f2e10d28d01",
        "cursor": {
          "ref": "64a71a41-0e3d-4b87-8a2e-62845660eb93",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f4f3ce50-6a53-4189-b651-9c96c577b2a5"
        },
        "item": {
          "id": "6a3d5e33-f029-47e9-bfd7-2f2e10d28d01",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c3c4f994-a414-4e45-9f39-ea9ffab30188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd0470c-8fc4-4269-a764-6cc4bdec7034",
        "cursor": {
          "ref": "348d4ab0-64ba-43a7-a597-03a8d3541f96",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "40d19d2d-a97c-4807-a3f0-9d40812512ad"
        },
        "item": {
          "id": "2cd0470c-8fc4-4269-a764-6cc4bdec7034",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8d0356e9-826f-4d96-af49-b28d780a9867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ff7e37-3820-45f5-91bb-08c6b9639876",
        "cursor": {
          "ref": "03053eb6-a308-4643-859c-12e3f9189620",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c4839f6b-2398-4b61-b63c-ef20bb2e3570"
        },
        "item": {
          "id": "a1ff7e37-3820-45f5-91bb-08c6b9639876",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d1f91373-755e-45e8-9aca-a0a3f2585afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8503a041-9d4a-461d-8480-35f19c5f4806",
        "cursor": {
          "ref": "e666d8a3-0db1-4067-9e60-bbceb2b273b3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5eca6342-1c20-4546-a9d0-c1412cc0ba35"
        },
        "item": {
          "id": "8503a041-9d4a-461d-8480-35f19c5f4806",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac543a84-110a-479c-85a0-60fdd56297a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779cb76a-de71-47a3-882e-f5b04be8db6e",
        "cursor": {
          "ref": "c7ff0e01-932f-43ce-afd9-51f2a7bed0c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "33ab2a92-d826-4b36-a15d-93d4bd696122"
        },
        "item": {
          "id": "779cb76a-de71-47a3-882e-f5b04be8db6e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "83cb2d45-3f13-4f93-9ff5-24163aa9e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3ff055-5860-4063-a215-194b7b78db2a",
        "cursor": {
          "ref": "efe9b489-d35f-4621-9013-f8ec29acc04e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3b4ce461-d43f-4e35-8a48-dfcdecb53e32"
        },
        "item": {
          "id": "ab3ff055-5860-4063-a215-194b7b78db2a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "97c8bde3-d4e1-44c7-a65e-341efdb808ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bbdbe9-7f7d-4703-b0cc-a4cef5650706",
        "cursor": {
          "ref": "174a461c-1c59-44aa-af8b-daea85ff87fa",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5b3a54e9-1af2-4350-a0d0-bf9f4f8b6663"
        },
        "item": {
          "id": "98bbdbe9-7f7d-4703-b0cc-a4cef5650706",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a6d46e2a-0ade-40ba-87c0-64931a7fb89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db4d23d-d3f2-4059-ab0a-ad7b280d35aa",
        "cursor": {
          "ref": "48851b9d-2da1-44bf-8306-376b97908c04",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1b4f9c7f-f326-4b69-995f-a115abae21eb"
        },
        "item": {
          "id": "4db4d23d-d3f2-4059-ab0a-ad7b280d35aa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a7449c12-6454-4bf5-a8e4-201d3a690cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd5bf47-f8c3-4b96-a275-684cd4ae7e1e",
        "cursor": {
          "ref": "02daca05-521d-423f-b911-a1881c86f06f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a4add8a-0e77-4045-9bb5-5302a9f4ab35"
        },
        "item": {
          "id": "6cd5bf47-f8c3-4b96-a275-684cd4ae7e1e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0b807e0e-983f-4f4b-a422-dcf59ff95160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5bee2-c415-47f4-92ab-a5e56148d66a",
        "cursor": {
          "ref": "7b9c5605-1f8d-4c1e-a244-bbba0196f06e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9c0e2c55-3640-4ea0-8e92-36d6da5bd982"
        },
        "item": {
          "id": "19d5bee2-c415-47f4-92ab-a5e56148d66a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "55c237df-c621-4ca2-9f3d-2aa4dda7d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d9aee4-76d7-4294-9454-bab4bec870e8",
        "cursor": {
          "ref": "c2141230-1018-4a55-8041-961cb4ef68ab",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "02ff19a7-aff6-4f52-a811-2648cb13c766"
        },
        "item": {
          "id": "27d9aee4-76d7-4294-9454-bab4bec870e8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "430d3d76-d27b-4f41-851d-897e1910ebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10158ae1-c8c8-40d5-ac0e-7e7f537069ee",
        "cursor": {
          "ref": "79f469ec-e240-4870-9e6b-b816ed0e150f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "77bbc1fa-a202-4b8b-b636-0706f9fd82ba"
        },
        "item": {
          "id": "10158ae1-c8c8-40d5-ac0e-7e7f537069ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "acb88e07-1634-4309-ac3b-51cb49657ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c669b8-4cd5-4240-9545-c235df287a75",
        "cursor": {
          "ref": "7851abd0-f1bd-4393-8c72-f558ea55b2f8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1d6648f7-9468-4988-8d21-264813bdb7f0"
        },
        "item": {
          "id": "a3c669b8-4cd5-4240-9545-c235df287a75",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d05ea9b6-b559-4fc8-a89b-33ce34ea83ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d8ff80-88f1-46df-8cb4-984d254595c3",
        "cursor": {
          "ref": "843a9cff-af21-42bc-81d7-39c91980c496",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61929f61-15e6-4237-9071-65bbecb5c2b6"
        },
        "item": {
          "id": "81d8ff80-88f1-46df-8cb4-984d254595c3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1b0d7065-a8b9-4cf6-9e49-0c70e5e8e797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9d33b3-4cf5-4175-82e2-d51e58359230",
        "cursor": {
          "ref": "c05f1337-ae4a-4d2f-bad1-915671d5716c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "257e7feb-b4a5-4394-ad6b-ddd71bc48806"
        },
        "item": {
          "id": "5a9d33b3-4cf5-4175-82e2-d51e58359230",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "de5fc231-9257-4b2c-a818-581042628e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe56fcc3-116e-4e9e-bbfc-8b588665fa69",
        "cursor": {
          "ref": "a23d7fd9-6188-43b0-97fd-6e84faece479",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a95ebfbd-fcb1-498d-a71c-92d79d1c7eb0"
        },
        "item": {
          "id": "fe56fcc3-116e-4e9e-bbfc-8b588665fa69",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1c7b9a3b-9915-4494-aa8e-7f12d901b88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aebef1-e7b2-4f7f-a149-71d23eb3ff71",
        "cursor": {
          "ref": "bfae306c-9427-4eff-bc87-12d105f09c2e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dacf624b-bca6-4eda-924e-f6ceaacd5d00"
        },
        "item": {
          "id": "07aebef1-e7b2-4f7f-a149-71d23eb3ff71",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "973b8e84-bf56-40e0-aea9-e0824341129f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbcba3a-fe0b-436d-bef5-24510dc953a9",
        "cursor": {
          "ref": "40577be6-5f7a-4cae-9f7c-130c72eb491f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "228a758e-6ccf-48f4-91ca-61d8c8c3775c"
        },
        "item": {
          "id": "0fbcba3a-fe0b-436d-bef5-24510dc953a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "88ae82ad-d7c6-4f58-9b3e-938993e15a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31f04ec-60d7-42ef-a1d3-9eb2e8bc86b6",
        "cursor": {
          "ref": "76bac69c-173a-4099-b5f2-ff428357a832",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9a8f424c-887a-4594-a3c1-7c50b36d3b82"
        },
        "item": {
          "id": "e31f04ec-60d7-42ef-a1d3-9eb2e8bc86b6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e4f182b6-bd09-4547-b012-a9d5b728e70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d424fce-7a0b-4005-a8ab-bc2e054eff3c",
        "cursor": {
          "ref": "9ef99041-9472-4950-9d28-e07a96377c11",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "24f915b7-40b0-4dcc-809a-3a49f65b6941"
        },
        "item": {
          "id": "6d424fce-7a0b-4005-a8ab-bc2e054eff3c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "55e21cf5-fcc2-4eed-b1ce-c76cfd39a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2badb844-629c-4890-9e49-4d8d5113a048",
        "cursor": {
          "ref": "906fc9a9-778b-4512-b28f-4d78f22de81b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "66278abe-1cda-45d5-ac01-86049d8f1f2a"
        },
        "item": {
          "id": "2badb844-629c-4890-9e49-4d8d5113a048",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "75a860aa-cc36-47b5-a741-69148a9ef368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5a3e2e-991c-4039-89b3-263e0c9afbdb",
        "cursor": {
          "ref": "fda0a885-fdb3-416c-a930-784cf85370e6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f4605110-4b44-409e-86e0-a61c1ccce74d"
        },
        "item": {
          "id": "6a5a3e2e-991c-4039-89b3-263e0c9afbdb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f9f77975-990c-4d9a-90c7-7938b7fa636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b370124c-bfcb-423b-a0bd-18c7e80d13e5",
        "cursor": {
          "ref": "b4226d83-162b-45ec-aaeb-89526fb02791",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "646dfd29-fdfb-4d91-9acd-6a42aec1655f"
        },
        "item": {
          "id": "b370124c-bfcb-423b-a0bd-18c7e80d13e5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4650280d-effa-46fc-9457-168ea194115b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7cb845-103d-4ef0-9064-c442b63271ff",
        "cursor": {
          "ref": "9646d45d-8b8c-4f06-a632-153f0e14c543",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ad91767d-eb25-45ed-8bd2-785a14278e35"
        },
        "item": {
          "id": "1f7cb845-103d-4ef0-9064-c442b63271ff",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "26701ea6-2353-4423-9991-d6e28eb5c977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bf42c7-fcbd-42c9-99b5-fc078fc43a31",
        "cursor": {
          "ref": "fcbbdd67-c90a-4e31-a75a-06d19d34ec2c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e7dd8b09-33d3-4305-bcc3-32f286a82162"
        },
        "item": {
          "id": "15bf42c7-fcbd-42c9-99b5-fc078fc43a31",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ba2bf79b-1224-482a-a382-60097b20b250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3161b6-73ad-45cf-8927-c3925bc1a7d6",
        "cursor": {
          "ref": "e170093b-cf1c-41d0-a84e-9ce24740d551",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "933e2af0-0bff-494f-9cf3-ed9ce1e14360"
        },
        "item": {
          "id": "de3161b6-73ad-45cf-8927-c3925bc1a7d6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "437d34f7-f488-473a-9656-66e57dc08c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b8c636-d05c-43d0-8e02-b7b2076df3cc",
        "cursor": {
          "ref": "14a56e90-bc3f-46cc-8899-850d0c232b46",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e55249c-7fce-4eaf-827f-3a96d785cfdf"
        },
        "item": {
          "id": "c4b8c636-d05c-43d0-8e02-b7b2076df3cc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "59bf5c3d-63c9-41c0-ad3e-a458e3b0da49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecef0d1-ee85-47c5-b34d-796109aba731",
        "cursor": {
          "ref": "a1d481bb-731b-4201-866d-599ecf18a504",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "25dd52aa-690e-461a-96c6-2bc8147cc92b"
        },
        "item": {
          "id": "1ecef0d1-ee85-47c5-b34d-796109aba731",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5b0f819c-a6b0-4d0e-bec9-3904c62852de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67c7955-d025-4f9d-a5de-1803dd961736",
        "cursor": {
          "ref": "ed0ae925-702e-41e9-89ce-f7a9ead6e4d5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9827b96e-7402-4dd9-837d-e3db2792a9b4"
        },
        "item": {
          "id": "d67c7955-d025-4f9d-a5de-1803dd961736",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "25819c62-337c-4886-9eb0-63aab8012fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccfd5c9-0280-44ed-a6cc-b9127b8a205c",
        "cursor": {
          "ref": "298a5519-7e80-4b28-a378-5922addfb0dd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23308191-c8fa-4105-8876-c269e6679d98"
        },
        "item": {
          "id": "fccfd5c9-0280-44ed-a6cc-b9127b8a205c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "de37bbf2-0e47-4441-8a23-8240fcc27540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442a36c5-7629-449b-a6c8-9448d1b2932f",
        "cursor": {
          "ref": "9efc186b-7829-4ab4-8220-d5aa2e1921b7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6b70b6a4-64b6-4171-b2c9-d40d45976f8b"
        },
        "item": {
          "id": "442a36c5-7629-449b-a6c8-9448d1b2932f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "54007fb2-acf0-4e05-bc04-6360bc5abca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d70092f-92be-4f54-90fc-10c062ecc1a3",
        "cursor": {
          "ref": "128f7ca1-9f4d-4b9f-8560-6b929cd421a7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "668da702-08d5-4ea9-accf-fd6ed4d33592"
        },
        "item": {
          "id": "9d70092f-92be-4f54-90fc-10c062ecc1a3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "19f6d0b6-a1b3-410d-afa1-66b44de9c79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf08978-9817-43a0-948d-40b3af003c35",
        "cursor": {
          "ref": "5b8b0003-42b1-4b79-acaf-b446d240fb1f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f187e985-315a-47e3-a7a4-aaccfdd998db"
        },
        "item": {
          "id": "acf08978-9817-43a0-948d-40b3af003c35",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "114e56f7-5b5e-4d01-a29a-f3f6dc0d57fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90547f03-18ce-4bbb-85b1-72fbbccb9d95",
        "cursor": {
          "ref": "cfbc08ab-b616-4607-9e4b-855c9d1ce748",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e14f419e-77b6-461f-99ad-a4a4b5f49f3f"
        },
        "item": {
          "id": "90547f03-18ce-4bbb-85b1-72fbbccb9d95",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30295e48-0489-4d2e-b0a9-13475c3b7352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a92f12-7e7a-4969-b317-9a9e304cd0ce",
        "cursor": {
          "ref": "370f5af7-a54d-453f-b471-1e8469db05fe",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2deeca5-5604-4dde-9354-96767f102e8d"
        },
        "item": {
          "id": "94a92f12-7e7a-4969-b317-9a9e304cd0ce",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d45dc067-47d6-4c79-9b32-144d1910868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93ce956-b628-40eb-9421-53213f86db06",
        "cursor": {
          "ref": "a0b67cac-d9c1-442c-ba9a-7e21f7a63406",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "73558e03-282c-4aac-8400-f22bdbfe4149"
        },
        "item": {
          "id": "c93ce956-b628-40eb-9421-53213f86db06",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe9b76dc-bce8-4d07-a0ec-9f2fcbadc070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d097b5c-cc01-4621-9471-3d2cb13d4aa1",
        "cursor": {
          "ref": "529a1205-8fcf-439d-b194-7b3cbe860faf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "51f75e27-7d9a-4aaa-86a7-0ef1c2981c58"
        },
        "item": {
          "id": "6d097b5c-cc01-4621-9471-3d2cb13d4aa1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "321603b5-51cf-4f3c-adda-1e26490a71a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de55078-798b-4a58-b604-d627b69387ee",
        "cursor": {
          "ref": "7bb27418-2360-4d62-87c2-13b41e77fba3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c4cae9dc-0fea-4b18-8231-fd36a19465a4"
        },
        "item": {
          "id": "4de55078-798b-4a58-b604-d627b69387ee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cbbc78c1-be34-4adc-9b2b-7cf5dc87accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e304951-fc2c-4d43-841b-c43950af7453",
        "cursor": {
          "ref": "f8e58530-67b3-4bda-af93-69bf9ba9598c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1d86263b-6e6a-4d3e-b27e-6ecfb887f034"
        },
        "item": {
          "id": "1e304951-fc2c-4d43-841b-c43950af7453",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "447a020b-24cb-4e4d-b7a1-d46c1a790e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592a9e84-c338-4cf4-a8e8-1d4b311d19ff",
        "cursor": {
          "ref": "a88c7dd9-e67e-4293-baac-ee60faa01742",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "86f9091b-ab64-4137-ae49-d1ba9f5fa254"
        },
        "item": {
          "id": "592a9e84-c338-4cf4-a8e8-1d4b311d19ff",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "81f1b0d6-8013-4419-baac-9bab40ddb430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d64b46-1ee0-4c64-b00d-4e6ed6299426",
        "cursor": {
          "ref": "2b39ecc0-f5f7-4431-8569-942d88f8cbdd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8603a4ff-dd44-4dc1-95c4-ff85cc1642ea"
        },
        "item": {
          "id": "07d64b46-1ee0-4c64-b00d-4e6ed6299426",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85f7d0f4-365a-4986-98e8-e215d92a4a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b43854-9fe3-4dff-a1b3-13277f976bbb",
        "cursor": {
          "ref": "2f335a32-e6c1-4b25-b80a-4c9b402f0153",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "35141bdd-ea54-416e-a92c-acc76afd6cff"
        },
        "item": {
          "id": "21b43854-9fe3-4dff-a1b3-13277f976bbb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8d152c80-f7ff-4766-af69-c301877bd5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b577a805-e3a6-4e89-b847-360bc01ab1ed",
        "cursor": {
          "ref": "690ef897-7336-4ac9-b897-fd180da92db4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e940252b-a6a1-4fc3-980d-ee2462d5deea"
        },
        "item": {
          "id": "b577a805-e3a6-4e89-b847-360bc01ab1ed",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b8356bf2-4add-4e2b-a0d0-f08a9e86a2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3979881c-6195-4c32-8f9a-90a2b2031867",
        "cursor": {
          "ref": "63e7d880-aafc-4f45-a871-9a0ba20be573",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "69caa667-cb98-472c-bacb-1524653e133d"
        },
        "item": {
          "id": "3979881c-6195-4c32-8f9a-90a2b2031867",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6fa49f1d-fed5-4668-8c59-64efdd4d450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3bce8b-a3b3-493a-b938-924eb01671f4",
        "cursor": {
          "ref": "3ae54021-cb2c-423f-9121-80840ea02ebe",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "93151d3f-0b4e-43b9-964f-cbdcae4d90e9"
        },
        "item": {
          "id": "6b3bce8b-a3b3-493a-b938-924eb01671f4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1e0b1805-f0c1-405a-a898-cbf5cf9d38c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82455e16-31f8-4701-89f5-82f6da29bf81",
        "cursor": {
          "ref": "bce688c6-764f-4cf8-9dc7-81bcee179a4a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "62d71296-56e0-4486-b76f-8c3963e93fd8"
        },
        "item": {
          "id": "82455e16-31f8-4701-89f5-82f6da29bf81",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8d79f328-cf23-452e-81c5-54109c7d84d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d173c4e0-a7b1-4b18-9373-41faa8e2ab97",
        "cursor": {
          "ref": "a7357310-9f78-4f14-9dab-be3b34e019e4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c406ec0d-28f2-4ab7-879e-8cc0fce1e3fd"
        },
        "item": {
          "id": "d173c4e0-a7b1-4b18-9373-41faa8e2ab97",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cc29c338-5bea-499a-b024-ec87cf27e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd97071-fce5-45d0-8a86-c089d2073f0f",
        "cursor": {
          "ref": "e04f7900-3e6f-4ec1-86d4-0e13f84e8420",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d7d8cdae-5425-460a-a3a8-b4218101ab74"
        },
        "item": {
          "id": "6cd97071-fce5-45d0-8a86-c089d2073f0f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5fd79d18-adf8-4faf-89a2-e8cb519b99d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d4804f-81e3-4c0a-a2d8-ab8858aae500",
        "cursor": {
          "ref": "2b24f175-d03c-4a60-a817-0d07c8585091",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6365d829-2062-45b0-85d4-911abc1dd072"
        },
        "item": {
          "id": "c1d4804f-81e3-4c0a-a2d8-ab8858aae500",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9d64ce27-dc7e-464f-b5c9-f396c3a291e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23461971-c69a-4ff0-b647-94997a2b329e",
        "cursor": {
          "ref": "038d9554-5628-4d1c-91fe-46e27eae7dee",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a3691b3e-27f5-481a-9cf0-5746e1ebec61"
        },
        "item": {
          "id": "23461971-c69a-4ff0-b647-94997a2b329e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e48a3c6f-11d9-4ebd-9579-08080de4c430",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c4af3-203b-4cef-9811-2982700b648f",
        "cursor": {
          "ref": "8a28a36e-0f41-4c38-9480-025e2151010e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "19dbc89d-df97-4531-a1ef-79b341e34aa6"
        },
        "item": {
          "id": "e67c4af3-203b-4cef-9811-2982700b648f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f99b17c4-8a83-4986-8310-8a132408ca5f",
          "status": "OK",
          "code": 200,
          "responseTime": 4885,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e1bf59-577f-4463-abf1-13aacbc53f5d",
        "cursor": {
          "ref": "af13edfe-f1d1-437b-90a0-3a6b54efc130",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dec5113f-b3e7-4d8f-a7f6-d5b8d689bdb5"
        },
        "item": {
          "id": "44e1bf59-577f-4463-abf1-13aacbc53f5d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "484da9af-1d06-4e1c-8a6d-51537b369bea",
          "status": "OK",
          "code": 200,
          "responseTime": 3518,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f26c091-792d-41a3-9e43-71c56070c891",
        "cursor": {
          "ref": "14355289-9900-46b0-ad58-278e5ce08590",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b1f319c3-e5e6-4ac9-8491-359fadf5b8a2"
        },
        "item": {
          "id": "3f26c091-792d-41a3-9e43-71c56070c891",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d82f0b11-78e5-4644-ae64-056dbe6201d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f26c091-792d-41a3-9e43-71c56070c891",
        "cursor": {
          "ref": "14355289-9900-46b0-ad58-278e5ce08590",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b1f319c3-e5e6-4ac9-8491-359fadf5b8a2"
        },
        "item": {
          "id": "3f26c091-792d-41a3-9e43-71c56070c891",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d82f0b11-78e5-4644-ae64-056dbe6201d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d032639-930a-4dbc-998d-1cdabf80a030",
        "cursor": {
          "ref": "0fea8781-3f85-42dc-bcd8-e86a2cd6b3a5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc5138b4-c432-4df5-a828-58500606c1b3"
        },
        "item": {
          "id": "0d032639-930a-4dbc-998d-1cdabf80a030",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bed4f557-44a6-4e6c-99f2-1cb9d270fd66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a794f7-d7e7-4f01-a3c5-b044852779e1",
        "cursor": {
          "ref": "83e77333-4c1d-4d90-9c92-a40ba456979b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a8bd2c0-1cb5-4732-97b3-7852767163c1"
        },
        "item": {
          "id": "b3a794f7-d7e7-4f01-a3c5-b044852779e1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2bd807ed-36be-41dc-9e76-f5258fdad3d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}